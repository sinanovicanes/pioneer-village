/**
 * TASK_ENTER_COVER
 *
 * @param {number} ped
 * @return {void}
 */
global.TaskEnterCover = function (ped) {
  return _in(0x4972a022, 0xae6dafa1, ped);
};

/**
 * TASK_EXIT_COVER
 *
 * @param {number} ped
 * @return {void}
 */
global.TaskExitCover = function (ped) {
  return _in(0x2bc4a6d9, 0x2d140112, ped);
};

/**
 * _0x140B3CB1D424A945
 * weaponHash can also be -1
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @return {void}
 */
global.N_0x140B3CB1D424A945 = function (ped, weaponHash) {
  return _in(0x140b3cb1, 0xd424a945, ped, _ch(weaponHash));
};

/**
 * _0x3C7A9C2C953128FE
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x3C7A9C2C953128FE = function (ped) {
  return _in(0x3c7a9c2c, 0x953128fe, ped);
};

/**
 * _0x53E4D0C079CA6855
 *
 * @param {number} handle
 * @return {number}
 */
global.N_0x53E4D0C079CA6855 = function (handle) {
  return _in(0x53e4d0c0, 0x79ca6855, handle, _r, _ri);
};

/**
 * _0x64340DC208D671D5
 * coverLayer: see levels_0/levels/rdr3/coverlayers
 *
 * @param {string | number} coverLayer
 * @return {void}
 */
global.N_0x64340DC208D671D5 = function (coverLayer) {
  return _in(0x64340dc2, 0x08d671d5, _ts(coverLayer));
};

/**
 * _0x733077295AB51304
 * args: f_0 = Volume Handle, f_2 = integer (-1, 32 used in R* Scripts)
 *
 * @param {DataView} args
 * @return {void}
 */
global.N_0x733077295AB51304 = function (args) {
  return _in(0x73307729, 0x5ab51304, args);
};

/**
 * _0x7A1FDCF35EAA140F
 * coverLayer: see levels_0/levels/rdr3/coverlayers
 *
 * @param {string | number} coverLayer
 * @return {void}
 */
global.N_0x7A1FDCF35EAA140F = function (coverLayer) {
  return _in(0x7a1fdcf3, 0x5eaa140f, _ts(coverLayer));
};

/**
 * _0x957D7E750216D74B
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0x957D7E750216D74B = function (ped) {
  return _in(0x957d7e75, 0x0216d74b, ped, _r, _ri);
};

/**
 * _0xEBA51A294C73292E
 *
 * @param {DataView} args
 * @return {void}
 */
global.N_0xEBA51A294C73292E = function (args) {
  return _in(0xeba51a29, 0x4c73292e, args);
};

/**
 * _ADD_SCRIPTED_COVER_POINT
 *
 * @param {DataView} data
 * @return {number}
 */
global.AddScriptedCoverPoint = function (data) {
  return _in(0x975bd635, 0x1648935f, data, _r, _ri);
};

/**
 * _ARE_LOAD_COVER_ANIMS_LOADED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.AreLoadCoverAnimsLoaded = function (ped) {
  return _in(0x8cbe916c, 0xfc64ad5c, ped, _r);
};

/**
 * _DOES_COVER_POINT_EXIST
 *
 * @param {number} handle
 * @return {boolean}
 */
global.DoesCoverPointExist = function (handle) {
  return _in(0xc276fe69, 0xdda22bad, handle, _r);
};

/**
 * _GET_COVER_POINT_STATE_FROM_PED
 * 1 = In cover while crouched
 * 2 = In cover while standing
 * 3 = Not in cover
 *
 * @param {number} ped
 * @return {number}
 */
global.GetCoverPointStateFromPed = function (ped) {
  return _in(0x5f5b1b7e, 0x8e8f94c6, ped, _r, _ri);
};

/**
 * _REQUEST_FLINCH_COVER_ANIM
 * Makes ped flinch (if in cover) like they have been shot at
 *
 * @param {number} ped
 * @return {void}
 */
global.RequestFlinchCoverAnim = function (ped) {
  return _in(0x2a31d13c, 0x5f021d0d, ped);
};

/**
 * _STOP_RUNNING_COVER_ANIMS
 * Stops running cover anims and releases them
 * _STOP_RENDERING_* - _STOP_SCRIPTED*
 *
 * @param {number} ped
 * @return {void}
 */
global.StopRunningCoverAnims = function (ped) {
  return _in(0x1a7a802b, 0x2301edc0, ped);
};

/**
 * _TASK_AI_SEEK_COVER_TO_COVER_POINT
 *
 * @param {DataView} args
 * @return {void}
 */
global.TaskAiSeekCoverToCoverPoint = function (args) {
  return _in(0x89783fdd, 0xf079c88d, args);
};

/**
 * GET_TRANSPORT_CONFIG_FLAG
 * flagId: see SET_TRANSPORT_CONFIG_FLAG
 *
 * @param {number} transportEntity
 * @param {number} flagId
 * @param {boolean} p2
 * @return {boolean}
 */
global.GetTransportConfigFlag = function (transportEntity, flagId, p2) {
  return _in(0xf382c92c, 0xcc1ccdbc, transportEntity, flagId, p2, _r);
};

/**
 * IS_PED_ENTERING_TRANSPORT
 *
 * @param {number} ped
 * @param {number} transportEntity
 * @param {boolean} p2
 * @return {boolean}
 */
global.IsPedEnteringTransport = function (ped, transportEntity, p2) {
  return _in(0x619e6398, 0x0bfc0096, ped, transportEntity, p2, _r);
};

/**
 * IS_PED_EXITING_TRANSPORT
 *
 * @param {number} ped
 * @param {number} transportEntity
 * @return {boolean}
 */
global.IsPedExitingTransport = function (ped, transportEntity) {
  return _in(0x660639bc, 0x60157048, ped, transportEntity, _r);
};

/**
 * SET_PED_OFF_TRANSPORT_SEAT
 *
 * @param {number} ped
 * @param {number} flags
 * @return {void}
 */
global.SetPedOffTransportSeat = function (ped, flags) {
  return _in(0x8886d83a, 0x430537fd, ped, flags);
};

/**
 * SET_PED_ON_TRANSPORT_SEAT
 * seat: see CREATE_PED_INSIDE_VEHICLE
 *
 * @param {number} ped
 * @param {number} transportEntity
 * @param {number} seat
 * @param {number} flags
 * @return {void}
 */
global.SetPedOnTransportSeat = function (ped, transportEntity, seat, flags) {
  return _in(0xe588b5a8, 0xa005cb5e, ped, transportEntity, seat, flags);
};

/**
 * SET_TRANSPORT_ACCESSIBLE_SEAT_FLAGS
 *
 * @param {number} transportEntity
 * @param {number} flags
 * @return {void}
 */
global.SetTransportAccessibleSeatFlags = function (transportEntity, flags) {
  return _in(0xdd0660c9, 0x97de94fd, transportEntity, flags);
};

/**
 * SET_TRANSPORT_CONFIG_FLAG
 * flagId:
 * enum eTransportConfigFlags
 * {
 *   TCF_NotConsideredForEntryByLocalPlayer,
 *   TCF_0xB78D6624,
 *   TCF_0xA9700425,
 *   TCF_0x8D7E4641,
 *   TCF_0xF24BAA1F,
 *   TCF_0x63B77935,
 *   TCF_NotConsideredForEntryByAllPlayers,
 *   TCF_0xD17A2AFD,
 *   TCF_0xD4E4FDD5,
 *   TCF_0x8227C929,
 *   TCF_0x812C1070,
 *   TCF_0x0E1AB26F,
 *   TCF_0xBF4EC863,
 *   TCF_0x75660C36,
 *   TCF_0xA2539E20,
 *   TCF_0x9162C633,
 *   TCF_DisableHonorModifiers,
 *   TCF_0xF9E71CB6,
 *   TCF_0x933ECD3F,
 *   TCF_0x18513A34
 * };
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/TRANSPORT_CONFIG_FLAGS
 *
 * @param {number} transportEntity
 * @param {number} flagId
 * @param {boolean} value
 * @return {void}
 */
global.SetTransportConfigFlag = function (transportEntity, flagId, value) {
  return _in(0xba881821, 0x2633500a, transportEntity, flagId, value);
};

/**
 * TASK_ENTER_TRANSPORT
 *
 * @param {DataView} args
 * @return {void}
 */
global.TaskEnterTransport = function (args) {
  return _in(0xaee3add0, 0x8829cb6f, args);
};

/**
 * TASK_EXIT_TRANSPORT
 *
 * @param {DataView} args
 * @return {void}
 */
global.TaskExitTransport = function (args) {
  return _in(0xc273a5b8, 0x488f7838, args);
};

/**
 * _0x4248AB2EEB3C75AD
 * _SET_TRANSPORT_*
 *
 * @param {number} transportEntity
 * @param {number} ped
 * @param {boolean} p2
 * @return {void}
 */
global.N_0x4248AB2EEB3C75AD = function (transportEntity, ped, p2) {
  return _in(0x4248ab2e, 0xeb3c75ad, transportEntity, ped, p2);
};

/**
 * _0x4B6C9A43F7D9109B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x4B6C9A43F7D9109B = function (p0, p1) {
  return _in(0x4b6c9a43, 0xf7d9109b, p0, p1);
};

/**
 * _0x5639FBEA922788DA
 * _CLEAR_A*
 *
 * @param {number} transportEntity
 * @return {void}
 */
global.N_0x5639FBEA922788DA = function (transportEntity) {
  return _in(0x5639fbea, 0x922788da, transportEntity);
};

/**
 * _0x8C8371EDFAF014A0
 * _SET_TRANSPORT_*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x8C8371EDFAF014A0 = function (ped, p1) {
  return _in(0x8c8371ed, 0xfaf014a0, ped, _fv(p1));
};

/**
 * _0xF8C20282B237E3F7
 * _SET_TRANSPORT_*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xF8C20282B237E3F7 = function (ped) {
  return _in(0xf8c20282, 0xb237e3f7, ped);
};

/**
 * _GET_PED_IN_TRANSPORT_SEAT
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * @param {number} transportEntity
 * @param {number} seatIndex
 * @return {number}
 */
global.GetPedInTransportSeat = function (transportEntity, seatIndex) {
  return _in(0xffec4b0a, 0x1a3ed515, transportEntity, seatIndex, _r, _ri);
};

/**
 * _GET_TRANSPORT_USAGE_FLAGS
 * See _SET_TRANSPORT_USAGE_FLAGS
 *
 * @param {number} transportEntity
 * @return {[any, number]}
 */
global.GetTransportUsageFlags = function (transportEntity) {
  return _in(0xe195c5a8, 0x2156321d, transportEntity, _i, _r);
};

/**
 * _IS_PED_ON_TRANSPORT_ENTITY
 * Checks if ped is placed on target transportEntity
 *
 * @param {number} ped
 * @param {number} transportEntity
 * @return {boolean}
 */
global.IsPedOnTransportEntity = function (ped, transportEntity) {
  return _in(0x159ef5b6, 0xedce00e8, ped, transportEntity, _r);
};

/**
 * _IS_PED_ON_TRANSPORT_SEAT
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsPedOnTransportSeat = function (ped, p1) {
  return _in(0xdc44f405, 0xa6b98d03, ped, p1, _r);
};

/**
 * _IS_TRANSPORT_SEAT_FREE
 * Called together with IS_VEHICLE_SEAT_FREE
 *
 * @param {number} transportEntity
 * @param {number} seatIndex
 * @return {boolean}
 */
global.IsTransportSeatFree = function (transportEntity, seatIndex) {
  return _in(0x43ff27fc, 0x1829c202, transportEntity, seatIndex, _r);
};

/**
 * _IS_TRANSPORT_SEAT_OCCUPIED
 *
 * @param {number} transportEntity
 * @param {number} seatIndex
 * @return {boolean}
 */
global.IsTransportSeatOccupied = function (transportEntity, seatIndex) {
  return _in(0x2e2e0602, 0x3d07631e, transportEntity, seatIndex, _r);
};

/**
 * _SET_AI_CAN_USE_TRANSPORT
 *
 * @param {number} transportEntity
 * @param {boolean} state
 * @return {void}
 */
global.SetAiCanUseTransport = function (transportEntity, state) {
  return _in(0x67f7ceac, 0x2391e114, transportEntity, state);
};

/**
 * _SET_PED_USE_TRANSPORT_SEAT_PREFERENCE
 *
 * @param {number} ped
 * @param {number} transportEntity
 * @param {number} preferenceSlot
 * @param {number} p3
 * @param {number} seatIndex
 * @return {void}
 */
global.SetPedUseTransportSeatPreference = function (ped, transportEntity, preferenceSlot, p3, seatIndex) {
  return _in(0xb7079f4c, 0x72896756, ped, transportEntity, preferenceSlot, p3, seatIndex);
};

/**
 * _SET_TRANSPORT_PRIORITY_SEAT
 *
 * @param {number} transportEntity
 * @param {number} seatIndex
 * @return {void}
 */
global.SetTransportPrioritySeat = function (transportEntity, seatIndex) {
  return _in(0x13f13822, 0x5c202f66, transportEntity, seatIndex);
};

/**
 * _SET_TRANSPORT_USAGE_FLAGS
 * enum eTransportUsageFlags
 * {
 *   TUF_INVALID = 0,
 *   TUF_ALLOW_DRIVER_ME = (1 << 0),
 *   TUF_ALLOW_DRIVER_GANG = (1 << 1),
 *   TUF_ALLOW_DRIVER_CREW = (1 << 2),
 *   TUF_ALLOW_DRIVER_FRIENDS = (1 << 3),
 *   TUF_ALLOW_DRIVER_ANYONE = (1 << 4),
 *   TUF_ALLOW_PASSENGER_ME = (1 << 5),
 *   TUF_ALLOW_PASSENGER_GANG = (1 << 6),
 *   TUF_ALLOW_PASSENGER_CREW = (1 << 7),
 *   TUF_ALLOW_PASSENGER_FRIENDS = (1 << 8),
 *   TUF_ALLOW_PASSENGER_ANYONE = (1 << 9),
 *   TUF_ALLOW_ACCESS_AI = (1 << 10)
 * };
 *
 * @param {number} transportEntity
 * @param {number} flags
 * @return {void}
 */
global.SetTransportUsageFlags = function (transportEntity, flags) {
  return _in(0xe2487779, 0x957fe897, transportEntity, flags);
};

/**
 * ABORT_ANIM_SCENE
 *
 * @param {number} animScene
 * @param {boolean} p1
 * @return {void}
 */
global.AbortAnimScene = function (animScene, p1) {
  return _in(0x718cf132, 0x8d20c2b3, animScene, p1);
};

/**
 * ATTACH_ANIM_SCENE_TO_ENTITY
 *
 * @param {number} animScene
 * @param {number} entity
 * @param {number} p2
 * @return {void}
 */
global.AttachAnimSceneToEntity = function (animScene, entity, p2) {
  return _in(0xdc418495, 0xdba327a1, animScene, entity, p2);
};

/**
 * ATTACH_ANIM_SCENE_TO_ENTITY_PRESERVING_LOCATION
 *
 * @param {number} animScene
 * @param {number} entity
 * @param {number} p2
 * @return {void}
 */
global.AttachAnimSceneToEntityPreservingLocation = function (animScene, entity, p2) {
  return _in(0x1c0b105c, 0x3f30b88d, animScene, entity, p2);
};

/**
 * BLOCK_ANIM_SCENE_FADING_NEXT_FRAME
 *
 * @param {boolean} p0
 * @param {boolean} p1
 * @return {void}
 */
global.BlockAnimSceneFadingNextFrame = function (p0, p1) {
  return _in(0x1b70811d, 0x3bf75db9, p0, p1);
};

/**
 * CHECK_OWNERSHIP_OF_ANIM_SCENE
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.CheckOwnershipOfAnimScene = function (animScene) {
  return _in(0x661b8683, 0x611b9b97, animScene, _r);
};

/**
 * COULD_ANIM_SCENE_ENTITY_REACH_EXIT_NEXT_FRAME
 *
 * @param {number} animScene
 * @param {string | number} entityName
 * @param {any} p2
 * @param {any} p3
 * @return {boolean}
 */
global.CouldAnimSceneEntityReachExitNextFrame = function (animScene, entityName, p2, p3) {
  return _in(0x73616e64, 0x696c616e, animScene, _ts(entityName), p2, p3, _r);
};

/**
 * DETACH_ANIM_SCENE
 *
 * @param {number} animScene
 * @return {void}
 */
global.DetachAnimScene = function (animScene) {
  return _in(0x6843a1aa, 0x3a336dff, animScene);
};

/**
 * DETACH_ANIM_SCENE_PRESERVING_LOCATION
 *
 * @param {number} animScene
 * @return {void}
 */
global.DetachAnimScenePreservingLocation = function (animScene) {
  return _in(0xa2507c49, 0x48c83d2e, animScene);
};

/**
 * DOES_ANIM_SCENE_EXIST
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.DoesAnimSceneExist = function (animScene) {
  return _in(0x25557e32, 0x4489393c, animScene, _r);
};

/**
 * FADE_ANIM_SCENE_AUDIO_IN
 *
 * @param {number} animScene
 * @param {number} p1
 * @return {void}
 */
global.FadeAnimSceneAudioIn = function (animScene, p1) {
  return _in(0xa41351ea, 0x2a18a0ad, animScene, _fv(p1));
};

/**
 * FADE_ANIM_SCENE_AUDIO_OUT
 *
 * @param {number} animScene
 * @param {number} p1
 * @return {void}
 */
global.FadeAnimSceneAudioOut = function (animScene, p1) {
  return _in(0x323e3ad7, 0x72ba5d57, animScene, _fv(p1));
};

/**
 * GET_ANIM_SCENE_BOOL
 *
 * @param {number} animScene
 * @param {string | number} name
 * @return {boolean}
 */
global.GetAnimSceneBool = function (animScene, name) {
  return _in(0x07a6f644, 0x7eca9b64, animScene, _ts(name), _r);
};

/**
 * GET_ANIM_SCENE_CURRENT_ACTIVE_CAMERA_COUNT
 *
 * @param {number} animScene
 * @return {number}
 */
global.GetAnimSceneCurrentActiveCameraCount = function (animScene) {
  return _in(0x4822a65d, 0x5af64e69, animScene, _r, _ri);
};

/**
 * GET_ANIM_SCENE_ENTITY_LOCATION_DATA
 *
 * @param {number} animScene
 * @param {string | number} entityName
 * @param {boolean} p3
 * @param {string | number} playbackListName
 * @param {number} p5
 * @return {[boolean, Vector3]}
 */
global.GetAnimSceneEntityLocationData = function (animScene, entityName, p3, playbackListName, p5) {
  return _in(0x8398438d, 0x8f14f56d, animScene, _ts(entityName), _v, p3, _ts(playbackListName), p5, _r);
};

/**
 * GET_ANIM_SCENE_FLOAT
 *
 * @param {number} animScene
 * @param {string | number} name
 * @return {number}
 */
global.GetAnimSceneFloat = function (animScene, name) {
  return _in(0xcc24cb07, 0xf60b496e, animScene, _ts(name), _r, _rf);
};

/**
 * GET_ANIM_SCENE_INT
 *
 * @param {number} animScene
 * @param {string | number} name
 * @return {number}
 */
global.GetAnimSceneInt = function (animScene, name) {
  return _in(0x2b727748, 0x4cc095fd, animScene, _ts(name), _r, _ri);
};

/**
 * GET_ANIM_SCENE_ORIGIN
 *
 * @param {number} animScene
 * @param {number} order
 * @return {[Vector3, Vector3]}
 */
global.GetAnimSceneOrigin = function (animScene, order) {
  return _in(0xadf1d53f, 0x3b1fe0a7, animScene, _v, _v, order);
};

/**
 * GET_ANIM_SCENE_PHASE
 *
 * @param {number} animScene
 * @return {number}
 */
global.GetAnimScenePhase = function (animScene) {
  return _in(0x3fbc3f51, 0xbf12dfbf, animScene, _r, _rf);
};

/**
 * HAS_ANIM_SCENE_EXITED
 *
 * @param {number} animScene
 * @param {boolean} p1
 * @return {boolean}
 */
global.HasAnimSceneExited = function (animScene, p1) {
  return _in(0xf94692eb, 0x9dc15d74, animScene, p1, _r);
};

/**
 * HAS_ENTITY_EXITED_ANIM_SCENE
 *
 * @param {number} animScene
 * @param {string | number} entityName
 * @return {boolean}
 */
global.HasEntityExitedAnimScene = function (animScene, entityName) {
  return _in(0xb89fcff1, 0x9dafff28, animScene, _ts(entityName), _r);
};

/**
 * IS_ANIM_SCENE_EXITING_THIS_FRAME
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.IsAnimSceneExitingThisFrame = function (animScene) {
  return _in(0xcdc5512a, 0x407cf08d, animScene, _r);
};

/**
 * IS_ANIM_SCENE_FINISHED
 *
 * @param {number} animScene
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsAnimSceneFinished = function (animScene, p1) {
  return _in(0xd8254cb2, 0xc586412b, animScene, p1, _r);
};

/**
 * IS_ANIM_SCENE_IN_SECTION
 *
 * @param {number} animScene
 * @param {string | number} sectionName
 * @param {boolean} p2
 * @return {boolean}
 */
global.IsAnimSceneInSection = function (animScene, sectionName, p2) {
  return _in(0x8d81e782, 0x4b7753f7, animScene, _ts(sectionName), p2, _r);
};

/**
 * IS_ANIM_SCENE_LOADED
 *
 * @param {number} animScene
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {boolean}
 */
global.IsAnimSceneLoaded = function (animScene, p1, p2) {
  return _in(0x477122b8, 0xd05e7968, animScene, p1, p2, _r);
};

/**
 * IS_ANIM_SCENE_METADATA_LOADED
 *
 * @param {number} animScene
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsAnimSceneMetadataLoaded = function (animScene, p1) {
  return _in(0x95531a4a, 0x20cce7bc, animScene, p1, _r);
};

/**
 * IS_ANIM_SCENE_RUNNING
 *
 * @param {number} animScene
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsAnimSceneRunning = function (animScene, p1) {
  return _in(0xcbfc7725, 0xde6ce2e0, animScene, p1, _r);
};

/**
 * IS_ENTITY_EXITING_ANIM_SCENE_THIS_FRAME
 *
 * @param {number} animScene
 * @param {string | number} entityName
 * @return {boolean}
 */
global.IsEntityExitingAnimSceneThisFrame = function (animScene, entityName) {
  return _in(0x005e6f28, 0xdd7ed58d, animScene, _ts(entityName), _r);
};

/**
 * IS_ENTITY_PLAYING_ANIM_SCENE
 *
 * @param {number} entity
 * @param {number} animScene
 * @return {boolean}
 */
global.IsEntityPlayingAnimScene = function (entity, animScene) {
  return _in(0x3ab6c7b0, 0xbb0df4b1, entity, animScene, _r);
};

/**
 * LOAD_ANIM_SCENE
 *
 * @param {number} animScene
 * @return {void}
 */
global.LoadAnimScene = function (animScene) {
  return _in(0xaf068580, 0x194d9dc7, animScene);
};

/**
 * REMOVE_ANIM_SCENE_ENTITY
 *
 * @param {number} animScene
 * @param {string | number} entityName
 * @param {number} entity
 * @return {void}
 */
global.RemoveAnimSceneEntity = function (animScene, entityName, entity) {
  return _in(0x2bf96692, 0xc67f3e53, animScene, _ts(entityName), entity);
};

/**
 * REQUEST_ANIM_SCENE_PLAY_LIST
 *
 * @param {number} animScene
 * @param {string | number} playlistName
 * @return {boolean}
 */
global.RequestAnimScenePlayList = function (animScene, playlistName) {
  return _in(0xdf7b5144, 0xe25cd3fe, animScene, _ts(playlistName), _r);
};

/**
 * RESET_ANIM_SCENE
 *
 * @param {number} animScene
 * @param {string | number} playbackListName
 * @return {void}
 */
global.ResetAnimScene = function (animScene, playbackListName) {
  return _in(0x8fdf221f, 0x13537936, animScene, _ts(playbackListName));
};

/**
 * RESUME_ANIM_SCENE_FROM_LAST_CHECKPOINT
 *
 * @param {number} animScene
 * @return {void}
 */
global.ResumeAnimSceneFromLastCheckpoint = function (animScene) {
  return _in(0x8e1ba705, 0xf63c1925, animScene);
};

/**
 * SET_ANIM_SCENE_BOOL
 *
 * @param {number} animScene
 * @param {string | number} name
 * @param {boolean} value
 * @param {boolean} p3
 * @return {void}
 */
global.SetAnimSceneBool = function (animScene, name, value, p3) {
  return _in(0x519e96c2, 0xc68b404b, animScene, _ts(name), value, p3);
};

/**
 * SET_ANIM_SCENE_ENTITY
 *
 * @param {number} animScene
 * @param {string | number} entityName
 * @param {number} entity
 * @param {number} flags
 * @return {void}
 */
global.SetAnimSceneEntity = function (animScene, entityName, entity, flags) {
  return _in(0x8b720ad4, 0x51ca2ab3, animScene, _ts(entityName), entity, flags);
};

/**
 * SET_ANIM_SCENE_FLOAT
 *
 * @param {number} animScene
 * @param {string | number} name
 * @param {number} value
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {void}
 */
global.SetAnimSceneFloat = function (animScene, name, value, p3, p4) {
  return _in(0x6bc5104e, 0x68cbefe8, animScene, _ts(name), _fv(value), p3, p4);
};

/**
 * SET_ANIM_SCENE_INT
 *
 * @param {number} animScene
 * @param {string | number} name
 * @param {number} value
 * @param {boolean} p3
 * @return {void}
 */
global.SetAnimSceneInt = function (animScene, name, value, p3) {
  return _in(0x3a379d21, 0x66cf5b92, animScene, _ts(name), value, p3);
};

/**
 * SET_ANIM_SCENE_ORIGIN
 *
 * @param {number} animScene
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} order
 * @return {void}
 */
global.SetAnimSceneOrigin = function (animScene, posX, posY, posZ, rotX, rotY, rotZ, order) {
  return _in(0x020894bf, 0x17a02ef2, animScene, _fv(posX), _fv(posY), _fv(posZ), _fv(rotX), _fv(rotY), _fv(rotZ), order);
};

/**
 * SET_ANIM_SCENE_PAUSED
 *
 * @param {number} animScene
 * @param {boolean} toggle
 * @return {void}
 */
global.SetAnimScenePaused = function (animScene, toggle) {
  return _in(0xd6824b7d, 0x24dc0ce0, animScene, toggle);
};

/**
 * SET_ANIM_SCENE_PLAYBACK_LIST
 *
 * @param {number} animScene
 * @param {string | number} playbackListName
 * @return {void}
 */
global.SetAnimScenePlaybackList = function (animScene, playbackListName) {
  return _in(0xab5e7cab, 0x074d6b84, animScene, _ts(playbackListName));
};

/**
 * SET_ANIM_SCENE_PLAY_LIST
 *
 * @param {number} animScene
 * @param {string | number} playlistName
 * @param {boolean} p2
 * @return {void}
 */
global.SetAnimScenePlayList = function (animScene, playlistName, p2) {
  return _in(0x15598cfb, 0x25f3dc7e, animScene, _ts(playlistName), p2);
};

/**
 * SET_ANIM_SCENE_RATE
 *
 * @param {number} animScene
 * @param {number} rate
 * @return {void}
 */
global.SetAnimSceneRate = function (animScene, rate) {
  return _in(0x75820b80, 0x1cff262a, animScene, _fv(rate));
};

/**
 * START_ANIM_SCENE
 *
 * @param {number} animScene
 * @return {void}
 */
global.StartAnimScene = function (animScene) {
  return _in(0xf4d94af7, 0x61768700, animScene);
};

/**
 * TAKE_OWNERSHIP_OF_ANIM_SCENE
 *
 * @param {number} animScene
 * @return {void}
 */
global.TakeOwnershipOfAnimScene = function (animScene) {
  return _in(0xf7a4c571, 0xe572d237, animScene);
};

/**
 * TRIGGER_ANIM_SCENE_SKIP
 *
 * @param {number} animScene
 * @return {void}
 */
global.TriggerAnimSceneSkip = function (animScene) {
  return _in(0x4b85b3cf, 0x9197aedf, animScene);
};

/**
 * WAS_ANIM_SCENE_SKIPPED
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.WasAnimSceneSkipped = function (animScene) {
  return _in(0xef324e95, 0x50a394d5, animScene, _r);
};

/**
 * _0x1407F5115FB9583E
 * Used in SP R* Scripts only
 * Params: p1 = 2B-LowHonor, 2A-HighHonor
 *
 * @param {number} animScene
 * @param {string | number} p1
 * @return {boolean}
 */
global.N_0x1407F5115FB9583E = function (animScene, p1) {
  return _in(0x1407f511, 0x5fb9583e, animScene, _ts(p1), _r);
};

/**
 * _0x1AD896BF43619551
 * Used in braithwaites2 SP R* Scripts only
 * _A*
 *

 * @return {void}
 */
global.N_0x1AD896BF43619551 = function () {
  return _in(0x1ad896bf, 0x43619551);
};

/**
 * _0x1C5D33A4293E6DDE
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_P*
 *
 * @param {number} animScene
 * @param {string | number} phaseName
 * @return {boolean}
 */
global.N_0x1C5D33A4293E6DDE = function (animScene, phaseName) {
  return _in(0x1c5d33a4, 0x293e6dde, animScene, _ts(phaseName), _r);
};

/**
 * _0x2DB524750DC41ED4
 * Used in SP R* Scripts only
 * _IS_PED_* - _IS_SC*
 *

 * @return {boolean}
 */
global.N_0x2DB524750DC41ED4 = function () {
  return _in(0x2db52475, 0x0dc41ed4, _r);
};

/**
 * _0x3641FCD53E59B335
 * p2: MINIGAME_GET_SECONDARY_VOICE_STRING
 * _SET_*
 *
 * @param {number} mgmHandle
 * @param {number} ped
 * @param {string | number} secondaryVoiceString
 * @return {void}
 */
global.N_0x3641FCD53E59B335 = function (mgmHandle, ped, secondaryVoiceString) {
  return _in(0x3641fcd5, 0x3e59b335, mgmHandle, ped, _ts(secondaryVoiceString));
};

/**
 * _0x3B393716C3FD8237
 * Used in SP R* Scripts only
 * _IS_*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x3B393716C3FD8237 = function (ped) {
  return _in(0x3b393716, 0xc3fd8237, ped, _r);
};

/**
 * _0x4B85B3CF91972222
 * Used in Script Function CUTSCENE_MANAGE_SKIP
 * _CHECK_* (?)
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.N_0x4B85B3CF91972222 = function (animScene) {
  return _in(0x4b85b3cf, 0x91972222, animScene, _r);
};

/**
 * _0x5D7BFDA2290B4E39
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_R* - _IS_ANIM_SCENE_S*
 *
 * @param {string | number} p0
 * @return {boolean}
 */
global.N_0x5D7BFDA2290B4E39 = function (p0) {
  return _in(0x5d7bfda2, 0x290b4e39, _ts(p0), _r);
};

/**
 * _0x61B2AAEF645DDAF0
 * Only used in tg_p R* Script
 * Returns true when mgm event success
 * _PREPARE_* - _REGISTER_*
 *
 * @param {number} mgmEventHandle
 * @param {string | number} p1
 * @param {number} seatId
 * @param {number} p3
 * @param {boolean} p4
 * @return {boolean}
 */
global.N_0x61B2AAEF645DDAF0 = function (mgmEventHandle, p1, seatId, p3, p4) {
  return _in(0x61b2aaef, 0x645ddaf0, mgmEventHandle, _ts(p1), seatId, p3, p4, _r);
};

/**
 * _0x73616E64696C132E
 * Used in SP R* Scripts only
 * _CO* - _CR*
 *
 * @param {number} animScene
 * @param {boolean} p1
 * @return {boolean}
 */
global.N_0x73616E64696C132E = function (animScene, p1) {
  return _in(0x73616e64, 0x696c132e, animScene, p1, _r);
};

/**
 * _0x9AAE3C1148A09BCA
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_*
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.N_0x9AAE3C1148A09BCA = function (animScene) {
  return _in(0x9aae3c11, 0x48a09bca, animScene, _r);
};

/**
 * _0xA96619FE85159ED2
 * Used in SP R* Scripts only
 * _WAS_ANIM_SCENE_*
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.N_0xA96619FE85159ED2 = function (animScene) {
  return _in(0xa96619fe, 0x85159ed2, animScene, _r);
};

/**
 * _0xAE6DE22DE0ED4554
 * _UNLOAD_* - _WAS_ANIM_SCENE_*
 *
 * @param {number} mgmHandle
 * @param {number} ped
 * @return {void}
 */
global.N_0xAE6DE22DE0ED4554 = function (mgmHandle, ped) {
  return _in(0xae6de22d, 0xe0ed4554, mgmHandle, ped);
};

/**
 * _0xB1A196BAFE650402
 * _PREPARE_* - _REGISTER_*
 *
 * @param {number} mgmHandle
 * @param {number} ped
 * @return {void}
 */
global.N_0xB1A196BAFE650402 = function (mgmHandle, ped) {
  return _in(0xb1a196ba, 0xfe650402, mgmHandle, ped);
};

/**
 * _0xC1193521E3B9FADD
 * Used in SP R* Scripts only
 * _RESUME_* - _SET_A*
 *
 * @param {number} entity
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xC1193521E3B9FADD = function (entity, p1) {
  return _in(0xc1193521, 0xe3b9fadd, entity, p1);
};

/**
 * _0xCDCD7B2D49AEE73A
 * Used in SP R* Scripts only
 * _SET_P*
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0xCDCD7B2D49AEE73A = function (p0) {
  return _in(0xcdcd7b2d, 0x49aee73a, p0);
};

/**
 * _0xD70C7A30412F8FA0
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_*
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.N_0xD70C7A30412F8FA0 = function (animScene) {
  return _in(0xd70c7a30, 0x412f8fa0, animScene, _r);
};

/**
 * _0xE12D7B4B959644CD
 * Used in SP R* Scripts only
 * _SET_B* - _SET_C*
 *

 * @return {void}
 */
global.N_0xE12D7B4B959644CD = function () {
  return _in(0xe12d7b4b, 0x959644cd);
};

/**
 * _0xEA41D44A8D42057B
 * Used in SP R* Scripts only
 * _PAUSE_* - _PLAY_*
 *

 * @return {boolean}
 */
global.N_0xEA41D44A8D42057B = function () {
  return _in(0xea41d44a, 0x8d42057b, _r);
};

/**
 * _CLEAR_ANIM_SCENE_WAS_SKIPPED
 *
 * @param {number} animScene
 * @return {void}
 */
global.ClearAnimSceneWasSkipped = function (animScene) {
  return _in(0x8a8208ae, 0x92bf87a5, animScene);
};

/**
 * _CLEAR_BREAKOUT_ARCHETYPE
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearBreakoutArchetype = function (ped) {
  return _in(0xbc781d24, 0xaa11f179, ped);
};

/**
 * _CREATE_ANIM_SCENE
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimSceneFlag
 *
 * @param {string | number} animDict
 * @param {number} flags
 * @param {string | number} playbackListName
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {number}
 */
global.CreateAnimScene = function (animDict, flags, playbackListName, p3, p4) {
  return _in(0x1fca98e3, 0x3c1437b3, _ts(animDict), flags, _ts(playbackListName), p3, p4, _r, _ri);
};

/**
 * _CREATE_MGM_SYSTEM
 * Returns mgmHandle
 *
 * @param {string | number} mgmFilename
 * @return {number}
 */
global.CreateMgmSystem = function (mgmFilename) {
  return _in(0xa1300de0, 0x3e5d1973, _ts(mgmFilename), _r, _ri);
};

/**
 * _DELETE_ANIM_SCENE
 *
 * @param {number} animScene
 * @return {void}
 */
global.DeleteAnimScene = function (animScene) {
  return _in(0x84eedb2c, 0x6e650000, animScene);
};

/**
 * _DELETE_MGM_SYSTEM
 *
 * @param {number} mgmHandle
 * @return {void}
 */
global.DeleteMgmSystem = function (mgmHandle) {
  return _in(0x53cb3970, 0xba02e3cc, mgmHandle);
};

/**
 * _DOES_ANIM_SCENE_OWNERSHIP_OF_ENTITY_EXIST
 *
 * @param {number} animScene
 * @param {string | number} entityName
 * @return {boolean}
 */
global.DoesAnimSceneOwnershipOfEntityExist = function (animScene, entityName) {
  return _in(0x9d1eca93, 0x37be9fc3, animScene, _ts(entityName), _r);
};

/**
 * _DOES_ANIM_SCENE_PLAY_LIST_EXIST
 *
 * @param {number} animScene
 * @param {string | number} playbackListName
 * @return {boolean}
 */
global.DoesAnimScenePlayListExist = function (animScene, playbackListName) {
  return _in(0xa9016536, 0x015de29d, animScene, _ts(playbackListName), _r);
};

/**
 * _DOES_ENTITY_WITH_ID_EXIST_IN_ANIM_SCENE
 *
 * @param {number} animScene
 * @param {string | number} entityId
 * @return {boolean}
 */
global.DoesEntityWithIdExistInAnimScene = function (animScene, entityId) {
  return _in(0x6f1f0b17, 0x109309da, animScene, _ts(entityId), _r);
};

/**
 * _GET_ANIM_SCENE_DICT
 *
 * @param {number} animScene
 * @return {number}
 */
global.GetAnimSceneDict = function (animScene) {
  return _in(0xae5ada4f, 0xe3e21adc, animScene, _r, _ri);
};

/**
 * _GET_ANIM_SCENE_DURATION
 *
 * @param {number} animScene
 * @return {number}
 */
global.GetAnimSceneDuration = function (animScene) {
  return _in(0x49f1d143, 0xade32656, animScene, _r, _rf);
};

/**
 * _GET_ANIM_SCENE_OBJECT
 *
 * @param {number} animScene
 * @param {string | number} name
 * @param {boolean} isNetwork
 * @return {number}
 */
global.GetAnimSceneObject = function (animScene, name, isNetwork) {
  return _in(0xfb567468, 0x7a1b2814, animScene, _ts(name), isNetwork, _r, _ri);
};

/**
 * _GET_ANIM_SCENE_PED
 *
 * @param {number} animScene
 * @param {string | number} name
 * @param {boolean} isNetwork
 * @return {number}
 */
global.GetAnimScenePed = function (animScene, name, isNetwork) {
  return _in(0xe5822422, 0x197bbba3, animScene, _ts(name), isNetwork, _r, _ri);
};

/**
 * _GET_ANIM_SCENE_PLAYBACK_LIST_PHASE_AUDIO_LOAD_STRESS
 *
 * @param {number} animScene
 * @param {string | number} phaseName
 * @return {number}
 */
global.GetAnimScenePlaybackListPhaseAudioLoadStress = function (animScene, phaseName) {
  return _in(0x9e036d52, 0x04ffbbc8, animScene, _ts(phaseName), _r, _ri);
};

/**
 * _GET_ANIM_SCENE_RATE
 *
 * @param {number} animScene
 * @return {number}
 */
global.GetAnimSceneRate = function (animScene) {
  return _in(0x43c21623, 0xe42b821b, animScene, _r, _rf);
};

/**
 * _GET_ANIM_SCENE_TIME
 *
 * @param {number} animScene
 * @return {number}
 */
global.GetAnimSceneTime = function (animScene) {
  return _in(0x61be7d61, 0x86260002, animScene, _r, _rf);
};

/**
 * _GET_ANIM_SCENE_VEHICLE
 *
 * @param {number} animScene
 * @param {string | number} name
 * @param {boolean} isNetwork
 * @return {number}
 */
global.GetAnimSceneVehicle = function (animScene, name, isNetwork) {
  return _in(0x430ee0a1, 0x9bc5a287, animScene, _ts(name), isNetwork, _r, _ri);
};

/**
 * _HAS_ENTITY_ENTERED_ANIM_SCENE
 * _HAS_L* (?)
 *
 * @param {number} animScene
 * @param {string | number} entityName
 * @return {boolean}
 */
global.HasEntityEnteredAnimScene = function (animScene, entityName) {
  return _in(0x337f1cc8, 0xee895601, animScene, _ts(entityName), _r);
};

/**
 * _IS_ANIM_SCENE_ABORTED
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.IsAnimSceneAborted = function (animScene) {
  return _in(0x34a0671b, 0xe613d3d0, animScene, _r);
};

/**
 * _IS_ANIM_SCENE_LOADING
 *
 * @param {number} animScene
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsAnimSceneLoading = function (animScene, p1) {
  return _in(0x59606519, 0xff9d3ec2, animScene, p1, _r);
};

/**
 * _IS_ANIM_SCENE_METADATA_ASSET_IN_RANGE_LOADING
 *
 * @param {number} animScene
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsAnimSceneMetadataAssetInRangeLoading = function (animScene, p1) {
  return _in(0xf8d1d2da, 0xb6007eef, animScene, p1, _r);
};

/**
 * _IS_ANIM_SCENE_PAUSED
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.IsAnimScenePaused = function (animScene) {
  return _in(0x4b403879, 0x6f0d6566, animScene, _r);
};

/**
 * _IS_ANIM_SCENE_PLAYBACK_LIST_PHASE_ACTIVE
 *
 * @param {number} animScene
 * @param {string | number} phaseName
 * @return {boolean}
 */
global.IsAnimScenePlaybackListPhaseActive = function (animScene, phaseName) {
  return _in(0x1f0e4010, 0x31e20146, animScene, _ts(phaseName), _r);
};

/**
 * _IS_ANIM_SCENE_PLAYBACK_LIST_PHASE_LOADED
 *
 * @param {number} animScene
 * @param {string | number} phaseName
 * @return {boolean}
 */
global.IsAnimScenePlaybackListPhaseLoaded = function (animScene, phaseName) {
  return _in(0x23e33cb9, 0xf4a3f547, animScene, _ts(phaseName), _r);
};

/**
 * _IS_ANIM_SCENE_PLAYBACK_LIST_PHASE_LOADING
 *
 * @param {number} animScene
 * @param {string | number} phaseName
 * @return {boolean}
 */
global.IsAnimScenePlaybackListPhaseLoading = function (animScene, phaseName) {
  return _in(0x0df57f86, 0xfe71dbe5, animScene, _ts(phaseName), _r);
};

/**
 * _IS_ANIM_SCENE_SKIPPABLE
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.IsAnimSceneSkippable = function (animScene) {
  return _in(0x4cdffe31, 0x89ebdbd0, animScene, _r);
};

/**
 * _IS_MGM_SYSTEM_LOADED
 * MGM stands for MiniGameMoments.
 *
 * @param {string | number} mgmFilename
 * @return {boolean}
 */
global.IsMgmSystemLoaded = function (mgmFilename) {
  return _in(0xfdfc1479, 0x9373283f, _ts(mgmFilename), _r);
};

/**
 * _LOAD_MGM_ASSETS
 * Used to request MiniGameMoments Assets.
 * 
 * mgmFilename's:
 * Poker
 * PokerArthur
 * PokerArthurCamp
 * PokerJohn
 * PokerJohnCamp
 *
 * @param {string | number} mgmFilename
 * @return {boolean}
 */
global.LoadMgmAssets = function (mgmFilename) {
  return _in(0xb727a847, 0x862cb00a, _ts(mgmFilename), _r);
};

/**
 * _PAUSE_SCRIPT_THREADS
 * Pauses all script threads except the one that called it.
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.PauseScriptThreads = function (toggle) {
  return _in(0x37c12578, 0x49def24a, toggle);
};

/**
 * _RELEASE_ANIM_SCENE_PLAY_LIST
 *
 * @param {number} animScene
 * @param {string | number} playlistName
 * @return {boolean}
 */
global.ReleaseAnimScenePlayList = function (animScene, playlistName) {
  return _in(0xae6ada8f, 0xe7e84acc, animScene, _ts(playlistName), _r);
};

/**
 * _REQUEST_PHOTO_MODE_DEFREEZE
 *

 * @return {void}
 */
global.RequestPhotoModeDefreeze = function () {
  return _in(0x41afa5f2, 0x28b0b6b0);
};

/**
 * _REQUEST_PHOTO_MODE_FREEZE
 *

 * @return {void}
 */
global.RequestPhotoModeFreeze = function () {
  return _in(0x7c709c01, 0xd43d94cd);
};

/**
 * _SET_BREAKOUT_ARCHETYPE
 *
 * @param {number} ped
 * @param {string | number} archetype
 * @return {void}
 */
global.SetBreakoutArchetype = function (ped, archetype) {
  return _in(0x99b2a2e3, 0x655deaf1, ped, _ts(archetype));
};

/**
 * _SET_MGM_EVENT
 *
 * @param {number} mgmEventHandle
 * @param {string | number} p1
 * @param {any} seatId
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.SetMgmEvent = function (mgmEventHandle, p1, seatId, p3, p4) {
  return _in(0x07706c4c, 0xc9c6cc9e, mgmEventHandle, _ts(p1), seatId, p3, _fv(p4));
};

/**
 * ADD_ATTRIBUTE_POINTS
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @param {number} p2
 * @return {void}
 */
global.AddAttributePoints = function (ped, attributeIndex, p2) {
  return _in(0x75415ee0, 0xcb583760, ped, attributeIndex, p2);
};

/**
 * DISABLE_ATTRIBUTE_OVERPOWER
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @return {void}
 */
global.DisableAttributeOverpower = function (ped, attributeIndex) {
  return _in(0xf8dac3d8, 0x5636c241, ped, attributeIndex);
};

/**
 * ENABLE_ATTRIBUTE_OVERPOWER
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * 
 * Old name: _SET_ATTRIBUTE_OVERPOWER_VALUE
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @param {number} value
 * @param {boolean} makeSound
 * @return {void}
 */
global.EnableAttributeOverpower = function (ped, attributeIndex, value, makeSound) {
  return _in(0xf6a7c08d, 0xf2e28b28, ped, attributeIndex, _fv(value), makeSound);
};

/**
 * GET_ATTRIBUTE_BASE_RANK
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @return {number}
 */
global.GetAttributeBaseRank = function (ped, attributeIndex) {
  return _in(0x147149f2, 0xe909323c, ped, attributeIndex, _r, _ri);
};

/**
 * GET_ATTRIBUTE_BONUS_RANK
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} coreIndex
 * @return {number}
 */
global.GetAttributeBonusRank = function (ped, coreIndex) {
  return _in(0x0efa71f4, 0xb4330e04, ped, coreIndex, _r, _ri);
};

/**
 * GET_ATTRIBUTE_POINTS
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @return {number}
 */
global.GetAttributePoints = function (ped, attributeIndex) {
  return _in(0x219da04b, 0xaa9cb065, ped, attributeIndex, _r, _ri);
};

/**
 * GET_ATTRIBUTE_RANK
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @return {number}
 */
global.GetAttributeRank = function (ped, attributeIndex) {
  return _in(0xa4c8e23e, 0x29040de0, ped, attributeIndex, _r, _ri);
};

/**
 * GET_DEFAULT_ATTRIBUTE_POINTS_NEEDED_FOR_RANK
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} modelHash
 * @param {number} attributeIndex
 * @param {number} rank
 * @return {number}
 */
global.GetDefaultAttributePointsNeededForRank = function (modelHash, attributeIndex, rank) {
  return _in(0x94a7f191, 0xdb49a44d, _ch(modelHash), attributeIndex, rank, _r, _ri);
};

/**
 * GET_DEFAULT_ATTRIBUTE_RANK
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @return {number}
 */
global.GetDefaultAttributeRank = function (ped, attributeIndex) {
  return _in(0x958dd43d, 0x41f89a47, ped, attributeIndex, _r, _ri);
};

/**
 * GET_DEFAULT_MAX_ATTRIBUTE_RANK
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @return {number}
 */
global.GetDefaultMaxAttributeRank = function (ped, attributeIndex) {
  return _in(0x7c059c55, 0xad940cb4, ped, attributeIndex, _r, _ri);
};

/**
 * GET_MAX_ATTRIBUTE_POINTS
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @return {number}
 */
global.GetMaxAttributePoints = function (ped, attributeIndex) {
  return _in(0x223bf310, 0xf854871c, ped, attributeIndex, _r, _ri);
};

/**
 * GET_MAX_ATTRIBUTE_RANK
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @return {number}
 */
global.GetMaxAttributeRank = function (ped, attributeIndex) {
  return _in(0x704674a0, 0x535a471d, ped, attributeIndex, _r, _ri);
};

/**
 * SET_ATTRIBUTE_BASE_RANK
 * attributeIndex:
 * enum ePedAttribute
 * {
 *   PA_HEALTH,
 *   PA_STAMINA,
 *   PA_SPECIALABILITY,
 *   PA_COURAGE,
 *   PA_AGILITY,
 *   PA_SPEED,
 *   PA_ACCELERATION,
 *   PA_BONDING,
 *   SA_HUNGER,
 *   SA_FATIGUED,
 *   SA_INEBRIATED,
 *   SA_POISONED,
 *   SA_BODYHEAT,
 *   SA_BODYWEIGHT,
 *   SA_OVERFED,
 *   SA_SICKNESS,
 *   SA_DIRTINESS,
 *   SA_DIRTINESSHAT,
 *   MTR_STRENGTH,
 *   MTR_GRIT,
 *   MTR_INSTINCT,
 *   PA_UNRULINESS,
 *   SA_DIRTINESSSKIN
 * };
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @param {number} newValue
 * @return {void}
 */
global.SetAttributeBaseRank = function (ped, attributeIndex, newValue) {
  return _in(0x5da12e02, 0x5d47d4e5, ped, attributeIndex, newValue);
};

/**
 * SET_ATTRIBUTE_BONUS_RANK
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @param {number} newValue
 * @return {void}
 */
global.SetAttributeBonusRank = function (ped, attributeIndex, newValue) {
  return _in(0x920f9488, 0xbd115efb, ped, attributeIndex, newValue);
};

/**
 * SET_ATTRIBUTE_POINTS
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @param {number} p2
 * @return {void}
 */
global.SetAttributePoints = function (ped, attributeIndex, p2) {
  return _in(0x09a59688, 0xc26d88df, ped, attributeIndex, p2);
};

/**
 * STOP_ITEM_PREVIEW
 *

 * @return {void}
 */
global.StopItemPreview = function () {
  return _in(0xd962f857, 0x9d702db5);
};

/**
 * _ENABLE_ATTRIBUTE_CORE_OVERPOWER
 * coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
 * 
 * Previously incorrectly named ENABLE_ATTRIBUTE_OVERPOWER
 *
 * @param {number} ped
 * @param {number} coreIndex
 * @param {number} value
 * @param {boolean} makeSound
 * @return {void}
 */
global.EnableAttributeCoreOverpower = function (ped, coreIndex, value, makeSound) {
  return _in(0x4af5a4c7, 0xb9157d14, ped, coreIndex, _fv(value), makeSound);
};

/**
 * _GET_ATTRIBUTE_CORE_OVERPOWER_SECONDS_LEFT
 *
 * @param {number} ped
 * @param {number} coreIndex
 * @return {number}
 */
global.GetAttributeCoreOverpowerSecondsLeft = function (ped, coreIndex) {
  return _in(0xb429f588, 0x03d285b1, ped, coreIndex, _r, _rf);
};

/**
 * _GET_ATTRIBUTE_CORE_VALUE
 * Gets the ped's core value on a scale of 0 to 100.
 * coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
 *
 * @param {number} ped
 * @param {number} coreIndex
 * @return {number}
 */
global.GetAttributeCoreValue = function (ped, coreIndex) {
  return _in(0x36731ac0, 0x41289bb1, ped, coreIndex, _r, _ri);
};

/**
 * _GET_ATTRIBUTE_OVERPOWER_SECONDS_LEFT
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @return {number}
 */
global.GetAttributeOverpowerSecondsLeft = function (ped, attributeIndex) {
  return _in(0x4c9f7821, 0x80712742, ped, attributeIndex, _r, _rf);
};

/**
 * _IS_ATTRIBUTE_CORE_OVERPOWERED
 *
 * @param {number} ped
 * @param {number} coreIndex
 * @return {boolean}
 */
global.IsAttributeCoreOverpowered = function (ped, coreIndex) {
  return _in(0x200373a8, 0xdf081f22, ped, coreIndex, _r);
};

/**
 * _IS_ATTRIBUTE_OVERPOWERED
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @return {boolean}
 */
global.IsAttributeOverpowered = function (ped, attributeIndex) {
  return _in(0x103c2f88, 0x5abeb00b, ped, attributeIndex, _r);
};

/**
 * _SET_ATTRIBUTE_CORE_VALUE
 * coreIndex:
 * enum eAttributeCore
 * {
 *   ATTRIBUTE_CORE_HEALTH,
 *   ATTRIBUTE_CORE_STAMINA,
 *   ATTRIBUTE_CORE_DEADEYE
 * };
 *
 * @param {number} ped
 * @param {number} coreIndex
 * @param {number} value
 * @return {void}
 */
global.SetAttributeCoreValue = function (ped, coreIndex, value) {
  return _in(0xc6258f41, 0xd86676e0, ped, coreIndex, value);
};

/**
 * _SET_STATUS_EFFECT_CORE_ICON
 * Displays status effects on core icons (includes warnings).
 * 
 * enum eUiRpgStatusEffect
 * {
 *   STATUS_NONE,
 *   STATUS_COLD,
 *   STATUS_HOT,
 *   STATUS_OVERFED,
 *   STATUS_DIRTY,
 *   STATUS_SNAKE_VENOM,
 *   STATUS_ARROW_WOUNDED,
 *   STATUS_ARROW_DRAINED,
 *   STATUS_ARROW_DISORIENTED,
 *   STATUS_ARROW_TRACKED,
 *   STATUS_ARROW_CONFUSION,
 *   STATUS_UNDERWEIGHT,
 *   STATUS_OVERWEIGHT,
 *   STATUS_SICK_1,
 *   STATUS_SICK_2,
 *   STATUS_PREDATOR_INVULNERABLE
 * };
 *
 * @param {number} statusEffectType
 * @return {void}
 */
global.SetStatusEffectCoreIcon = function (statusEffectType) {
  return _in(0xa4d3a1c0, 0x08f250df, statusEffectType);
};

/**
 * _SET_STATUS_EFFECT_PERIODIC_ICON
 * Starts core periodic icon.
 * statusEffectType: see 0xA4D3A1C008F250DF
 *
 * @param {number} statusEffectType
 * @return {void}
 */
global.SetStatusEffectPeriodicIcon = function (statusEffectType) {
  return _in(0xfb6e1119, 0x08502871, statusEffectType);
};

/**
 * _START_ITEM_PREVIEW
 * Params: p1 is related to satchel_category
 *
 * @param {any} p0
 * @param {number} p1
 * @return {void}
 */
global.StartItemPreview = function (p0, p1) {
  return _in(0x7e2c766a, 0xdb2c5f1a, p0, p1);
};

/**
 * _STOP_STATUS_EFFECT_PERIODIC_ICON
 * Stops periodic icon.
 * statusEffectType: see 0xA4D3A1C008F250DF
 *
 * @param {number} statusEffectType
 * @return {void}
 */
global.StopStatusEffectPeriodicIcon = function (statusEffectType) {
  return _in(0x3fc4c027, 0xfd0936f4, statusEffectType);
};

/**
 * ADD_ENTITY_TO_AUDIO_MIX_GROUP
 *
 * @param {number} entity
 * @param {string | number} groupName
 * @param {number} p2
 * @return {void}
 */
global.AddEntityToAudioMixGroup = function (entity, groupName, p2) {
  return _in(0x153973ab, 0x99fe8980, entity, _ts(groupName), _fv(p2));
};

/**
 * ADD_PED_TO_CONVERSATION
 *
 * @param {string | number} convoRoot
 * @param {number} ped
 * @param {string | number} characterName
 * @return {void}
 */
global.AddPedToConversation = function (convoRoot, ped, characterName) {
  return _in(0x95d9f4bc, 0x443956e7, _ts(convoRoot), ped, _ts(characterName));
};

/**
 * AUDIO_IS_MUSIC_PLAYING
 * Old name: AUDIO_IS_SCRIPTED_MUSIC_PLAYING
 *

 * @return {boolean}
 */
global.AudioIsMusicPlaying = function () {
  return _in(0x845ffc3a, 0x4feefa3e, _r);
};

/**
 * AUDIO_TRIGGER_EXPLOSION
 *
 * @param {string | number} name
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.AudioTriggerExplosion = function (name, x, y, z) {
  return _in(0x374f0e71, 0x6bfcde82, _ts(name), _fv(x), _fv(y), _fv(z));
};

/**
 * CANCEL_MUSIC_EVENT
 *
 * @param {string | number} eventName
 * @return {boolean}
 */
global.CancelMusicEvent = function (eventName) {
  return _in(0x5b17a902, 0x91133da5, _ts(eventName), _r);
};

/**
 * CLEAR_AMBIENT_ZONE_LIST_STATE
 *
 * @param {string | number} ambientZone
 * @param {boolean} p1
 * @return {void}
 */
global.ClearAmbientZoneListState = function (ambientZone, p1) {
  return _in(0x120c48c6, 0x14909fa4, _ts(ambientZone), p1);
};

/**
 * CLEAR_AMBIENT_ZONE_STATE
 *
 * @param {string | number} zoneName
 * @param {boolean} p1
 * @return {void}
 */
global.ClearAmbientZoneState = function (zoneName, p1) {
  return _in(0x218dd44a, 0xaac964ff, _ts(zoneName), p1);
};

/**
 * CLEAR_CONVERSATION_HISTORY
 *

 * @return {void}
 */
global.ClearConversationHistory = function () {
  return _in(0x33d51f80, 0x1cb16e4f);
};

/**
 * CREATE_NEW_SCRIPTED_CONVERSATION
 *
 * @param {string | number} convoRoot
 * @return {boolean}
 */
global.CreateNewScriptedConversation = function (convoRoot) {
  return _in(0xd2c91a0b, 0x572aae56, _ts(convoRoot), _r);
};

/**
 * DISABLE_PED_PAIN_AUDIO
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.DisablePedPainAudio = function (ped, toggle) {
  return _in(0xa9a41c1e, 0x940fb0e8, ped, toggle);
};

/**
 * DOES_CONTEXT_EXIST_FOR_THIS_PED
 * Checks if the ped can play the speech or has the speech file, last parameter is usually false.
 *
 * @param {number} ped
 * @param {string | number} speechName
 * @param {boolean} unk
 * @return {boolean}
 */
global.DoesContextExistForThisPed = function (ped, speechName, unk) {
  return _in(0x49b99bf3, 0xfda89a7a, ped, _ts(speechName), unk, _r);
};

/**
 * FORCE_PED_PANIC_WALLA
 *

 * @return {void}
 */
global.ForcePedPanicWalla = function () {
  return _in(0x062d5ead, 0x4da2fa6a);
};

/**
 * FORCE_USE_AUDIO_GAME_OBJECT
 * Old name: _FORCE_VEHICLE_ENGINE_AUDIO
 *
 * @param {number} vehicle
 * @param {string | number} audioName
 * @return {void}
 */
global.ForceUseAudioGameObject = function (vehicle, audioName) {
  return _in(0x4f0c4139, 0x26060b38, vehicle, _ts(audioName));
};

/**
 * GET_CURRENT_SCRIPTED_CONVERSATION_LINE
 *
 * @param {string | number} p0
 * @return {number}
 */
global.GetCurrentScriptedConversationLine = function (p0) {
  return _in(0x480357ee, 0x890c295a, _ts(p0), _r, _ri);
};

/**
 * GET_MUSIC_PLAYTIME
 *

 * @return {number}
 */
global.GetMusicPlaytime = function () {
  return _in(0xe7a0d23d, 0xc414507b, _r, _ri);
};

/**
 * GET_SOUND_ID
 *

 * @return {number}
 */
global.GetSoundId = function () {
  return _in(0x430386fe, 0x9bf80b45, _r, _ri);
};

/**
 * IS_AMBIENT_SPEECH_DISABLED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsAmbientSpeechDisabled = function (ped) {
  return _in(0x932c2d09, 0x6a2c3fff, ped, _r);
};

/**
 * IS_AMBIENT_SPEECH_PLAYING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsAmbientSpeechPlaying = function (ped) {
  return _in(0x9072c8b4, 0x9907bfad, ped, _r);
};

/**
 * IS_ANIMAL_VOCALIZATION_PLAYING
 *
 * @param {number} pedHandle
 * @return {boolean}
 */
global.IsAnimalVocalizationPlaying = function (pedHandle) {
  return _in(0xc265df9f, 0xb44a9fbd, pedHandle, _r);
};

/**
 * IS_ANY_SPEECH_PLAYING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsAnySpeechPlaying = function (ped) {
  return _in(0x72907235, 0x5fa39ec9, ped, _r);
};

/**
 * IS_AUDIO_SCENE_ACTIVE
 *
 * @param {string | number} scene
 * @return {boolean}
 */
global.IsAudioSceneActive = function (scene) {
  return _in(0xb65b6055, 0x6e2a9225, _ts(scene), _r);
};

/**
 * IS_HORN_ACTIVE
 * Checks whether the horn of a vehicle is currently played.
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsHornActive = function (vehicle) {
  return _in(0x9d6bfc12, 0xb05c6121, vehicle, _r);
};

/**
 * IS_PED_IN_CURRENT_CONVERSATION
 *
 * @param {string | number} p0
 * @param {number} ped
 * @param {any} p2
 * @return {boolean}
 */
global.IsPedInCurrentConversation = function (p0, ped, p2) {
  return _in(0x049e937f, 0x18f4020c, _ts(p0), ped, p2, _r);
};

/**
 * IS_SCRIPTED_CONVERSATION_LOADED
 *
 * @param {string | number} convoRoot
 * @return {boolean}
 */
global.IsScriptedConversationLoaded = function (convoRoot) {
  return _in(0xdf0d54be, 0x7a776737, _ts(convoRoot), _r);
};

/**
 * IS_SCRIPTED_CONVERSATION_PLAYING
 *
 * @param {string | number} p0
 * @return {boolean}
 */
global.IsScriptedConversationPlaying = function (p0) {
  return _in(0x1ecc7679, 0x2f661cf5, _ts(p0), _r);
};

/**
 * IS_SCRIPTED_SPEECH_PLAYING
 *
 * @param {any} p0
 * @return {boolean}
 */
global.IsScriptedSpeechPlaying = function (p0) {
  return _in(0xcc9aa18d, 0xcc7084f4, p0, _r);
};

/**
 * IS_STREAM_PLAYING
 *
 * @param {number} streamId
 * @return {boolean}
 */
global.IsStreamPlaying = function (streamId) {
  return _in(0xd11fa52e, 0xb849d978, streamId, _r);
};

/**
 * LOAD_STREAM
 *
 * @param {string | number} streamName
 * @param {string | number} soundSet
 * @return {boolean}
 */
global.LoadStream = function (streamName, soundSet) {
  return _in(0x1f1f9571, 0x54ec51df, _ts(streamName), _ts(soundSet), _r);
};

/**
 * PAUSE_SCRIPTED_CONVERSATION
 *
 * @param {string | number} p0
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {void}
 */
global.PauseScriptedConversation = function (p0, p1, p2, p3, p4) {
  return _in(0x8530ad77, 0x6cd72b12, _ts(p0), p1, p2, p3, p4);
};

/**
 * PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE
 * Old name: _PLAY_AMBIENT_SPEECH_AT_COORDS
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {DataView} params
 * @return {boolean}
 */
global.PlayAmbientSpeechFromPositionNative = function (x, y, z, params) {
  return _in(0xed640017, 0xed337e45, _fv(x), _fv(y), _fv(z), params, _r);
};

/**
 * PLAY_ANIMAL_VOCALIZATION
 *
 * @param {number} ped
 * @param {string | number} vocalizationName
 * @param {boolean} p2
 * @return {void}
 */
global.PlayAnimalVocalization = function (ped, vocalizationName, p2) {
  return _in(0xee066c70, 0x06c49c0a, ped, _ts(vocalizationName), p2);
};

/**
 * PLAY_END_CREDITS_MUSIC
 *
 * @param {boolean} play
 * @return {void}
 */
global.PlayEndCreditsMusic = function (play) {
  return _in(0xcd536c4d, 0x33dcc900, play);
};

/**
 * PLAY_PAIN
 * Valid pain IDs: 0..12
 *
 * @param {number} ped
 * @param {number} painId
 * @param {number} p2
 * @param {boolean} p3
 * @param {boolean} isNetwork
 * @return {void}
 */
global.PlayPain = function (ped, painId, p2, p3, isNetwork) {
  return _in(0xbc9ae166, 0x038a5cec, ped, painId, _fv(p2), p3, isNetwork);
};

/**
 * PLAY_PED_AMBIENT_SPEECH_NATIVE
 * struct ScriptedSpeechParams
 * {
 *   const char* speechName;
 *   const char* voiceName;
 *   alignas(8) int variation;
 *   alignas(8) Hash speechParamHash;
 *   alignas(8) Ped listenerPed;
 *   alignas(8) BOOL syncOverNetwork;
 *   alignas(8) int v7;
 *   alignas(8) int v8;
 * };
 * 
 * static_assert(sizeof(ScriptedSpeechParams) == 0x40, "incorrect ScriptedSpeechParams size");
 * 
 * 
 * Example:
 * 
 * ScriptedSpeechParams params{"RE_PH_RHD_V3_AGGRO", "0405_U_M_M_RhdSheriff_01", 1, joaat("SPEECH_PARAMS_BEAT_SHOUTED_CLEAR"), 0, true, 1, 1};
 * PLAY_PED_AMBIENT_SPEECH_NATIVE(PLAYER_PED_ID(), (Any*)&params);
 * 
 * Old name: _PLAY_AMBIENT_SPEECH1
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_banks
 *
 * @param {number} speaker
 * @param {DataView} params
 * @return {boolean}
 */
global.PlayPedAmbientSpeechNative = function (speaker, params) {
  return _in(0x8e04fedd, 0x28d42462, speaker, params, _r);
};

/**
 * PLAY_SOUND
 *
 * @param {string | number} audioName
 * @param {string | number} audioRef
 * @param {boolean} p2
 * @param {any} p3
 * @param {boolean} p4
 * @param {any} p5
 * @return {void}
 */
global.PlaySound = function (audioName, audioRef, p2, p3, p4, p5) {
  return _in(0x7ff4944c, 0xc209192d, _ts(audioName), _ts(audioRef), p2, p3, p4, p5);
};

/**
 * PLAY_SOUND_FROM_ENTITY
 *
 * @param {string | number} audioName
 * @param {number} entity
 * @param {string | number} audioRef
 * @param {boolean} isNetwork
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.PlaySoundFromEntity = function (audioName, entity, audioRef, isNetwork, p4, p5) {
  return _in(0x6fb1da3c, 0xa9da7d90, _ts(audioName), entity, _ts(audioRef), isNetwork, p4, p5);
};

/**
 * PLAY_SOUND_FRONTEND
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/frontend_soundsets
 *
 * @param {string | number} audioName
 * @param {string | number} audioRef
 * @param {boolean} p2
 * @param {any} p3
 * @return {void}
 */
global.PlaySoundFrontend = function (audioName, audioRef, p2, p3) {
  return _in(0x67c540aa, 0x08e4a6f5, _ts(audioName), _ts(audioRef), p2, p3);
};

/**
 * PLAY_STREAM_FROM_PED
 *
 * @param {number} ped
 * @param {number} streamId
 * @return {void}
 */
global.PlayStreamFromPed = function (ped, streamId) {
  return _in(0x89049dd6, 0x3c08b5d1, ped, streamId);
};

/**
 * PLAY_STREAM_FROM_POSITION
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} streamId
 * @return {void}
 */
global.PlayStreamFromPosition = function (x, y, z, streamId) {
  return _in(0x21442f41, 0x2e8de56b, _fv(x), _fv(y), _fv(z), streamId);
};

/**
 * PLAY_STREAM_FRONTEND
 *
 * @param {number} streamId
 * @return {void}
 */
global.PlayStreamFrontend = function (streamId) {
  return _in(0x58fce434, 0x88f9f5f4, streamId);
};

/**
 * PRELOAD_SCRIPT_CONVERSATION
 *
 * @param {string | number} convoRoot
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} clone
 * @return {void}
 */
global.PreloadScriptConversation = function (convoRoot, p1, p2, clone) {
  return _in(0x3b3cad61, 0x66916d87, _ts(convoRoot), p1, p2, clone);
};

/**
 * PREPARE_MUSIC_EVENT
 *
 * @param {string | number} eventName
 * @return {boolean}
 */
global.PrepareMusicEvent = function (eventName) {
  return _in(0x1e5185b7, 0x2ef5158a, _ts(eventName), _r);
};

/**
 * PREPARE_SOUND
 *
 * @param {string | number} soundName
 * @param {string | number} soundsetName
 * @param {number} soundId
 * @return {boolean}
 */
global.PrepareSound = function (soundName, soundsetName, soundId) {
  return _in(0xe368e842, 0x2c860ba7, _ts(soundName), _ts(soundsetName), soundId, _r);
};

/**
 * PREPARE_SOUNDSET
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/soundsets
 *
 * @param {string | number} soundsetName
 * @param {boolean} p1
 * @return {boolean}
 */
global.PrepareSoundset = function (soundsetName, p1) {
  return _in(0xd9130842, 0xd7226045, _ts(soundsetName), p1, _r);
};

/**
 * PREPARE_SOUND_WITH_ENTITY
 *
 * @param {string | number} soundName
 * @param {number} entity
 * @param {string | number} soundsetName
 * @param {number} soundId
 * @return {boolean}
 */
global.PrepareSoundWithEntity = function (soundName, entity, soundsetName, soundId) {
  return _in(0x4ad01959, 0x1e94c064, _ts(soundName), entity, _ts(soundsetName), soundId, _r);
};

/**
 * REGISTER_SCRIPT_WITH_AUDIO
 * nullsub, doesn't do anything
 *
 * @param {boolean} p0
 * @return {void}
 */
global.RegisterScriptWithAudio = function (p0) {
  return _in(0xc6ed9d50, 0x92438d91, p0);
};

/**
 * RELEASE_NAMED_SCRIPT_AUDIO_BANK
 *
 * @param {string | number} audioBank
 * @return {void}
 */
global.ReleaseNamedScriptAudioBank = function (audioBank) {
  return _in(0x77ed1706, 0x67f50170, _ts(audioBank));
};

/**
 * RELEASE_SCRIPT_AUDIO_BANK
 *

 * @return {void}
 */
global.ReleaseScriptAudioBank = function () {
  return _in(0x7a2d8ad0, 0xa9eb9c3f);
};

/**
 * RELEASE_SOUND_ID
 *
 * @param {number} soundId
 * @return {void}
 */
global.ReleaseSoundId = function (soundId) {
  return _in(0x353fc880, 0x830b88fa, soundId);
};

/**
 * REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP
 *
 * @param {number} entity
 * @param {number} p1
 * @return {void}
 */
global.RemoveEntityFromAudioMixGroup = function (entity, p1) {
  return _in(0x18eb48cf, 0xc41f2ea0, entity, _fv(p1));
};

/**
 * REMOVE_PORTAL_SETTINGS_OVERRIDE
 *
 * @param {string | number} p0
 * @return {void}
 */
global.RemovePortalSettingsOverride = function (p0) {
  return _in(0xb4bbfd9c, 0xd8b3922b, _ts(p0));
};

/**
 * REQUEST_SCRIPT_AUDIO_BANK
 *
 * @param {string | number} audioBank
 * @return {boolean}
 */
global.RequestScriptAudioBank = function (audioBank) {
  return _in(0x2f844a8b, 0x08d76685, _ts(audioBank), _r);
};

/**
 * RESTART_SCRIPTED_CONVERSATION
 *
 * @param {string | number} p0
 * @return {void}
 */
global.RestartScriptedConversation = function (p0) {
  return _in(0x9aeb285d, 0x1818c9ac, _ts(p0));
};

/**
 * SET_AMBIENT_VOICE_NAME
 *
 * @param {number} ped
 * @param {string | number} name
 * @return {void}
 */
global.SetAmbientVoiceName = function (ped, name) {
  return _in(0x6c8065a3, 0xb780185b, ped, _ts(name));
};

/**
 * SET_AMBIENT_ZONE_LIST_STATE
 *
 * @param {string | number} ambientZone
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.SetAmbientZoneListState = function (ambientZone, p1, p2) {
  return _in(0x9748fa4d, 0xe50cce3e, _ts(ambientZone), p1, p2);
};

/**
 * SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT
 *
 * @param {string | number} ambientZone
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.SetAmbientZoneListStatePersistent = function (ambientZone, p1, p2) {
  return _in(0xf3638dae, 0x8c4045e1, _ts(ambientZone), p1, p2);
};

/**
 * SET_AMBIENT_ZONE_STATE
 *
 * @param {string | number} zoneName
 * @param {boolean} isEnabled
 * @param {boolean} p2
 * @return {void}
 */
global.SetAmbientZoneState = function (zoneName, isEnabled, p2) {
  return _in(0xbda07e59, 0x50085e46, _ts(zoneName), isEnabled, p2);
};

/**
 * SET_AMBIENT_ZONE_STATE_PERSISTENT
 *
 * @param {string | number} ambientZone
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.SetAmbientZoneStatePersistent = function (ambientZone, p1, p2) {
  return _in(0x1d665042, 0x0cec9d3b, _ts(ambientZone), p1, p2);
};

/**
 * SET_ANIMAL_MOOD
 * Not implemented.
 *
 * @param {number} animal
 * @param {number} mood
 * @return {void}
 */
global.SetAnimalMood = function (animal, mood) {
  return _in(0xcc97b292, 0x85b1dc3b, animal, mood);
};

/**
 * SET_AUDIO_FLAG
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_flags
 *
 * @param {string | number} flagName
 * @param {boolean} toggle
 * @return {void}
 */
global.SetAudioFlag = function (flagName, toggle) {
  return _in(0xb9efd5c2, 0x5018725a, _ts(flagName), toggle);
};

/**
 * SET_AUDIO_ONLINE_TRANSITION_STAGE
 *
 * @param {string | number} p0
 * @return {void}
 */
global.SetAudioOnlineTransitionStage = function (p0) {
  return _in(0x9b1fc259, 0x187c97c0, _ts(p0));
};

/**
 * SET_AUDIO_SCENE_VARIABLE
 *
 * @param {string | number} scene
 * @param {string | number} variable
 * @param {number} value
 * @return {void}
 */
global.SetAudioSceneVariable = function (scene, variable, value) {
  return _in(0xef21a9ef, 0x089a2668, _ts(scene), _ts(variable), _fv(value));
};

/**
 * SET_AUDIO_VEHICLE_PRIORITY
 *
 * @param {number} vehicle
 * @param {any} p1
 * @return {void}
 */
global.SetAudioVehiclePriority = function (vehicle, p1) {
  return _in(0xe5564483, 0xe407f914, vehicle, p1);
};

/**
 * SET_GPS_ACTIVE
 * nullsub, doesn't do anything
 *
 * @param {boolean} active
 * @return {void}
 */
global.SetGpsActive = function (active) {
  return _in(0x3bd3f52b, 0xa9b1e4e8, active);
};

/**
 * SET_HORN_ENABLED
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetHornEnabled = function (vehicle, toggle) {
  return _in(0x76d683c1, 0x08594d0e, vehicle, toggle);
};

/**
 * SET_IS_SCRIPTED_SPEECH_DISABLED
 *
 * @param {number} ped
 * @param {boolean} disabled
 * @return {any}
 */
global.SetIsScriptedSpeechDisabled = function (ped, disabled) {
  return _in(0xb2de3aeb, 0xe31150e2, ped, disabled, _r);
};

/**
 * SET_PED_INTERIOR_WALLA_DENSITY
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.SetPedInteriorWallaDensity = function (p0, p1) {
  return _in(0x8bf90783, 0x3be275de, _fv(p0), _fv(p1));
};

/**
 * SET_PED_IS_DRUNK
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedIsDrunk = function (ped, toggle) {
  return _in(0x95d2d383, 0xd5396b8a, ped, toggle);
};

/**
 * SET_PED_WALLA_DENSITY
 * https://en.m.wikipedia.org/wiki/Walla
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.SetPedWallaDensity = function (p0, p1) {
  return _in(0x149aee66, 0xf0cb3a99, _fv(p0), _fv(p1));
};

/**
 * SET_PORTAL_SETTINGS_OVERRIDE
 *
 * @param {string | number} p0
 * @param {string | number} p1
 * @return {void}
 */
global.SetPortalSettingsOverride = function (p0, p1) {
  return _in(0x044dbad7, 0xa7fa2be5, _ts(p0), _ts(p1));
};

/**
 * SET_STATIC_EMITTER_ENABLED
 *
 * @param {string | number} emitterName
 * @param {boolean} toggle
 * @return {void}
 */
global.SetStaticEmitterEnabled = function (emitterName, toggle) {
  return _in(0x399d2d3b, 0x33f1b8eb, _ts(emitterName), toggle);
};

/**
 * SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE
 *
 * @param {string | number} p0
 * @return {void}
 */
global.SkipToNextScriptedConversationLine = function (p0) {
  return _in(0x9663fe6b, 0x7a61eb00, _ts(p0));
};

/**
 * START_AUDIO_SCENE
 *
 * @param {string | number} scene
 * @return {boolean}
 */
global.StartAudioScene = function (scene) {
  return _in(0x013a80fc, 0x08f6e4f2, _ts(scene), _r);
};

/**
 * START_PRELOADED_CONVERSATION
 *
 * @param {string | number} convoRoot
 * @return {void}
 */
global.StartPreloadedConversation = function (convoRoot) {
  return _in(0x23641afe, 0x870af385, _ts(convoRoot));
};

/**
 * START_SCRIPT_CONVERSATION
 *
 * @param {string | number} convoRoot
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} clone
 * @return {void}
 */
global.StartScriptConversation = function (convoRoot, p1, p2, clone) {
  return _in(0x6b17c62c, 0x9635d2dc, _ts(convoRoot), p1, p2, clone);
};

/**
 * STOP_AUDIO_SCENE
 *
 * @param {string | number} scene
 * @return {void}
 */
global.StopAudioScene = function (scene) {
  return _in(0xdfe8422b, 0x3b94e688, _ts(scene));
};

/**
 * STOP_AUDIO_SCENES
 *

 * @return {void}
 */
global.StopAudioScenes = function () {
  return _in(0xbac7fc81, 0xa75ec1a1);
};

/**
 * STOP_CURRENT_PLAYING_AMBIENT_SPEECH
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.StopCurrentPlayingAmbientSpeech = function (ped, p1) {
  return _in(0xb8bec0ca, 0x6f0edb0f, ped, p1);
};

/**
 * STOP_CURRENT_PLAYING_SPEECH
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.StopCurrentPlayingSpeech = function (ped, p1) {
  return _in(0x79d2f0e6, 0x6f81d90d, ped, p1);
};

/**
 * STOP_PED_SPEAKING
 *
 * @param {number} ped
 * @param {boolean} shaking
 * @return {void}
 */
global.StopPedSpeaking = function (ped, shaking) {
  return _in(0x9d64d740, 0x5520e3d3, ped, shaking);
};

/**
 * STOP_SCRIPTED_CONVERSATION
 *
 * @param {string | number} p0
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {number}
 */
global.StopScriptedConversation = function (p0, p1, p2) {
  return _in(0xd79deefb, 0x53455eba, _ts(p0), p1, p2, _r, _ri);
};

/**
 * STOP_STREAM
 *
 * @param {number} streamId
 * @return {void}
 */
global.StopStream = function (streamId) {
  return _in(0xa4718a14, 0x19d18151, streamId);
};

/**
 * TRIGGER_MUSIC_EVENT
 * https://github.com/femga/rdr3_discoveries/blob/master/audio/music_events/music_events.lua
 *
 * @param {string | number} eventName
 * @return {boolean}
 */
global.TriggerMusicEvent = function (eventName) {
  return _in(0x706d57b0, 0xf50da710, _ts(eventName), _r);
};

/**
 * UNREGISTER_SCRIPT_WITH_AUDIO
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.UnregisterScriptWithAudio = function () {
  return _in(0xa8638be2, 0x28d4751a);
};

/**
 * USE_FOOTSTEP_SCRIPT_SWEETENERS
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {number} hash
 * @return {void}
 */
global.UseFootstepScriptSweeteners = function (ped, p1, hash) {
  return _in(0xbf4dc178, 0x4be94dfa, ped, p1, _ch(hash));
};

/**
 * _0x017492B2201E3428
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x017492B2201E3428 = function (p0, p1, p2, p3) {
  return _in(0x017492b2, 0x201e3428, p0, p1, p2, p3);
};

/**
 * _0x018ABE833CA64D2A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x018ABE833CA64D2A = function (p0, p1) {
  return _in(0x018abe83, 0x3ca64d2a, p0, p1);
};

/**
 * _0x06C5DF5EE444BC6B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x06C5DF5EE444BC6B = function (p0, p1, p2, p3, p4) {
  return _in(0x06c5df5e, 0xe444bc6b, p0, p1, p2, p3, p4);
};

/**
 * _0x078F77FD1A43EAB3
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x078F77FD1A43EAB3 = function (p0, p1) {
  return _in(0x078f77fd, 0x1a43eab3, p0, p1);
};

/**
 * _0x0CB3D1919E8D7CBA
 *
 * @param {string | number} convoRoot
 * @return {boolean}
 */
global.N_0x0CB3D1919E8D7CBA = function (convoRoot) {
  return _in(0x0cb3d191, 0x9e8d7cba, _ts(convoRoot), _r);
};

/**
 * _0x0D7FD6A55FD63AEF
 * speechEventType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/naSpeechEventType 
 * p1 is possibly naSpeechAudibility, naSpeechType, or naSpeechEventTypeRequestPriority
 * SKIP_* - START_*
 *
 * @param {number} speechEventType
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0x0D7FD6A55FD63AEF = function (speechEventType, p1, p2) {
  return _in(0x0d7fd6a5, 0x5fd63aef, speechEventType, p1, p2);
};

/**
 * _0x0FAF7171BF613B80
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0FAF7171BF613B80 = function (p0) {
  return _in(0x0faf7171, 0xbf613b80, p0);
};

/**
 * _0x131EC9247E7A2903
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x131EC9247E7A2903 = function (p0) {
  return _in(0x131ec924, 0x7e7a2903, p0, _r);
};

/**
 * _0x138ADB94F8B90616
 *

 * @return {void}
 */
global.N_0x138ADB94F8B90616 = function () {
  return _in(0x138adb94, 0xf8b90616);
};

/**
 * _0x139A4B9DF2D26CBF
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x139A4B9DF2D26CBF = function (p0, p1) {
  return _in(0x139a4b9d, 0xf2d26cbf, p0, p1);
};

/**
 * _0x152ED1B56E8F1F50
 *
 * @param {string | number} p0
 * @param {number} currentScriptedConvoLine
 * @return {number}
 */
global.N_0x152ED1B56E8F1F50 = function (p0, currentScriptedConvoLine) {
  return _in(0x152ed1b5, 0x6e8f1f50, _ts(p0), currentScriptedConvoLine, _r, _ri);
};

/**
 * _0x1E6F9A9FE1A99F36
 *
 * @param {string | number} audSpeechEvent
 * @return {void}
 */
global.N_0x1E6F9A9FE1A99F36 = function (audSpeechEvent) {
  return _in(0x1e6f9a9f, 0xe1a99f36, _ts(audSpeechEvent));
};

/**
 * _0x254B0241E964B450
 *
 * @param {string | number} p0
 * @param {number} currentScriptedConvoLine
 * @return {number}
 */
global.N_0x254B0241E964B450 = function (p0, currentScriptedConvoLine) {
  return _in(0x254b0241, 0xe964b450, _ts(p0), currentScriptedConvoLine, _r, _ri);
};

/**
 * _0x259ACC5B52A2B2D9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x259ACC5B52A2B2D9 = function (p0, p1) {
  return _in(0x259acc5b, 0x52a2b2d9, p0, p1);
};

/**
 * _0x2651DDC0EA269073
 *
 * @param {number} ropeId
 * @param {number} p1
 * @return {void}
 */
global.N_0x2651DDC0EA269073 = function (ropeId, p1) {
  return _in(0x2651ddc0, 0xea269073, ropeId, _fv(p1));
};

/**
 * _0x295859EB18F48D82
 *
 * @param {string | number} p0
 * @return {number}
 */
global.N_0x295859EB18F48D82 = function (p0) {
  return _in(0x295859eb, 0x18f48d82, _ts(p0), _r, _ri);
};

/**
 * _0x2B101AD9F651243A
 *

 * @return {any}
 */
global.N_0x2B101AD9F651243A = function () {
  return _in(0x2b101ad9, 0xf651243a, _r);
};

/**
 * _0x2B9C37C01BF25EDB
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x2B9C37C01BF25EDB = function (p0) {
  return _in(0x2b9c37c0, 0x1bf25edb, p0, _r);
};

/**
 * _0x2FFF4A78384AFFDF
 *
 * @param {number} entity
 * @return {any}
 */
global.N_0x2FFF4A78384AFFDF = function (entity) {
  return _in(0x2fff4a78, 0x384affdf, entity, _r);
};

/**
 * _0x341CDD17EFC2472E
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x341CDD17EFC2472E = function (p0, p1) {
  return _in(0x341cdd17, 0xefc2472e, p0, p1);
};

/**
 * _0x35B8C070E0C16E2F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x35B8C070E0C16E2F = function (p0, p1) {
  return _in(0x35b8c070, 0xe0c16e2f, p0, p1);
};

/**
 * _0x380A2E353AD30917
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x380A2E353AD30917 = function (p0, p1, p2) {
  return _in(0x380a2e35, 0x3ad30917, p0, p1, p2);
};

/**
 * _0x3A00D87B20A2A5E4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3A00D87B20A2A5E4 = function (p0, p1) {
  return _in(0x3a00d87b, 0x20a2a5e4, p0, p1);
};

/**
 * _0x3A3BE6B920525237
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3A3BE6B920525237 = function (p0, p1) {
  return _in(0x3a3be6b9, 0x20525237, p0, p1);
};

/**
 * _0x3D0BBCCF401B5FDB
 *

 * @return {void}
 */
global.N_0x3D0BBCCF401B5FDB = function () {
  return _in(0x3d0bbccf, 0x401b5fdb);
};

/**
 * _0x3E93DDDCBB6111E4
 *
 * @param {string | number} p0
 * @param {number} p1
 * @return {void}
 */
global.N_0x3E93DDDCBB6111E4 = function (p0, p1) {
  return _in(0x3e93dddc, 0xbb6111e4, _ts(p0), _fv(p1));
};

/**
 * _0x3E98AC9D8C56C62C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x3E98AC9D8C56C62C = function (p0) {
  return _in(0x3e98ac9d, 0x8c56c62c, p0);
};

/**
 * _0x40CA665AB9D8D505
 *
 * @param {string | number} convoRoot
 * @param {number} singleLineIndex
 * @return {void}
 */
global.N_0x40CA665AB9D8D505 = function (convoRoot, singleLineIndex) {
  return _in(0x40ca665a, 0xb9d8d505, _ts(convoRoot), singleLineIndex);
};

/**
 * _0x43037ABFE214A851
 *

 * @return {void}
 */
global.N_0x43037ABFE214A851 = function () {
  return _in(0x43037abf, 0xe214a851);
};

/**
 * _0x448F2647DD6F2E27
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x448F2647DD6F2E27 = function (p0, p1, p2, p3, p4) {
  return _in(0x448f2647, 0xdd6f2e27, p0, p1, p2, p3, p4);
};

/**
 * _0x44A5EEF54F62E823
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x44A5EEF54F62E823 = function (p0) {
  return _in(0x44a5eef5, 0x4f62e823, p0, _r);
};

/**
 * _0x4A98E228A936DBCC
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x4A98E228A936DBCC = function (p0) {
  return _in(0x4a98e228, 0xa936dbcc, p0, _r);
};

/**
 * _0x4BE3EC91C01F0FE8
 *

 * @return {void}
 */
global.N_0x4BE3EC91C01F0FE8 = function () {
  return _in(0x4be3ec91, 0xc01f0fe8);
};

/**
 * _0x569ABC36E28DDEAA
 *

 * @return {void}
 */
global.N_0x569ABC36E28DDEAA = function () {
  return _in(0x569abc36, 0xe28ddeaa);
};

/**
 * _0x580D71DFE0088E34
 * _IS_SOUND_RUNNING(?)
 *
 * @param {string | number} audioName
 * @param {string | number} audioRef
 * @return {boolean}
 */
global.N_0x580D71DFE0088E34 = function (audioName, audioRef) {
  return _in(0x580d71df, 0xe0088e34, _ts(audioName), _ts(audioRef), _r);
};

/**
 * _0x5A13586A9447931F
 *
 * @param {boolean} p0
 * @return {boolean}
 */
global.N_0x5A13586A9447931F = function (p0) {
  return _in(0x5a13586a, 0x9447931f, p0, _r);
};

/**
 * _0x5AE0CB5F35F034FD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.N_0x5AE0CB5F35F034FD = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0x5ae0cb5f, 0x35f034fd, p0, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * _0x5BC885EBD75FAA7D
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x5BC885EBD75FAA7D = function (p0, p1) {
  return _in(0x5bc885eb, 0xd75faa7d, p0, p1);
};

/**
 * _0x5E3CCF03995388B5
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x5E3CCF03995388B5 = function (p0, p1, p2, p3) {
  return _in(0x5e3ccf03, 0x995388b5, p0, p1, p2, p3);
};

/**
 * _0x62377977E4F08668
 *
 * @param {number} entity
 * @return {number}
 */
global.N_0x62377977E4F08668 = function (entity) {
  return _in(0x62377977, 0xe4f08668, entity, _r, _ri);
};

/**
 * _0x64B956F4E761DF5C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x64B956F4E761DF5C = function (p0) {
  return _in(0x64b956f4, 0xe761df5c, p0);
};

/**
 * _0x660A8F876DF1D4F8
 * speechEventType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/naSpeechEventType 
 * SKIP_* - START_*
 *
 * @param {number} speechEventType
 * @return {void}
 */
global.N_0x660A8F876DF1D4F8 = function (speechEventType) {
  return _in(0x660a8f87, 0x6df1d4f8, speechEventType);
};

/**
 * _0x6652B0C8F3D414D0
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6652B0C8F3D414D0 = function (p0) {
  return _in(0x6652b0c8, 0xf3d414d0, p0);
};

/**
 * _0x6AB944DF68B512D3
 * _STOP_AUDIO_*
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6AB944DF68B512D3 = function (p0) {
  return _in(0x6ab944df, 0x68b512d3, p0);
};

/**
 * _0x6B7A88A61B41E589
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6B7A88A61B41E589 = function (p0) {
  return _in(0x6b7a88a6, 0x1b41e589, p0);
};

/**
 * _0x6BFFB7C276866996
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x6BFFB7C276866996 = function (p0) {
  return _in(0x6bffb7c2, 0x76866996, p0, _r);
};

/**
 * _0x6DA15746D5CC1A92
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0x6DA15746D5CC1A92 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x6da15746, 0xd5cc1a92, p0, p1, p2, p3, p4, p5);
};

/**
 * _0x72E4D1C4639BC465
 *
 * @param {number} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x72E4D1C4639BC465 = function (p0, p1) {
  return _in(0x72e4d1c4, 0x639bc465, p0, p1, _r);
};

/**
 * _0x7455CD705F7E933E
 * _AUDIO_IS_* - _AUDIO_TRIGGER*
 *

 * @return {void}
 */
global.N_0x7455CD705F7E933E = function () {
  return _in(0x7455cd70, 0x5f7e933e);
};

/**
 * _0x7678FE0455ED1145
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x7678FE0455ED1145 = function (p0, p1, p2) {
  return _in(0x7678fe04, 0x55ed1145, p0, p1, p2, _r);
};

/**
 * _0x79F9C57B8D0DFE90
 * Only used in R* SP Script cv_mus_shared
 *
 * @param {string | number} convoRoot
 * @param {number} animScene
 * @return {boolean}
 */
global.N_0x79F9C57B8D0DFE90 = function (convoRoot, animScene) {
  return _in(0x79f9c57b, 0x8d0dfe90, _ts(convoRoot), animScene, _r);
};

/**
 * _0x7E176C676F8652A9
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x7E176C676F8652A9 = function (p0) {
  return _in(0x7e176c67, 0x6f8652a9, p0);
};

/**
 * _0x821C32C728B24477
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x821C32C728B24477 = function (p0, p1, p2) {
  return _in(0x821c32c7, 0x28b24477, p0, p1, p2);
};

/**
 * _0x839C9F124BE74D94
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x839C9F124BE74D94 = function (p0, p1, p2, p3, p4) {
  return _in(0x839c9f12, 0x4be74d94, p0, p1, p2, p3, p4);
};

/**
 * _0x847748AE5D7B1071
 *
 * @param {boolean} p0
 * @return {boolean}
 */
global.N_0x847748AE5D7B1071 = function (p0) {
  return _in(0x847748ae, 0x5d7b1071, p0, _r);
};

/**
 * _0x864A842B86993851
 * Not implemented.
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x864A842B86993851 = function (ped) {
  return _in(0x864a842b, 0x86993851, ped);
};

/**
 * _0x886657C5B3D8EDE3
 *
 * @param {number} entity
 * @return {any}
 */
global.N_0x886657C5B3D8EDE3 = function (entity) {
  return _in(0x886657c5, 0xb3d8ede3, entity, _r);
};

/**
 * _0x8D29FDF565DED9AE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x8D29FDF565DED9AE = function (p0, p1, p2) {
  return _in(0x8d29fdf5, 0x65ded9ae, p0, p1, p2);
};

/**
 * _0x8E901B65206C2D3E
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x8E901B65206C2D3E = function (ped) {
  return _in(0x8e901b65, 0x206c2d3e, ped);
};

/**
 * _0x935DBD96D4A3DA1F
 *
 * @param {string | number} p0
 * @param {number} currentScriptedConvoLine
 * @return {number}
 */
global.N_0x935DBD96D4A3DA1F = function (p0, currentScriptedConvoLine) {
  return _in(0x935dbd96, 0xd4a3da1f, _ts(p0), currentScriptedConvoLine, _r, _ri);
};

/**
 * _0x9D6DEC9791A4E501
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0x9D6DEC9791A4E501 = function (p0, p1, p2, p3) {
  return _in(0x9d6dec97, 0x91a4e501, p0, p1, p2, p3, _r);
};

/**
 * _0x9EB779765E68C52E
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x9EB779765E68C52E = function (p0, p1) {
  return _in(0x9eb77976, 0x5e68c52e, p0, p1);
};

/**
 * _0xA2323A2EAE32A290
 *
 * @param {number} listeningToPed
 * @param {number} ped
 * @param {string | number} listenerName
 * @return {void}
 */
global.N_0xA2323A2EAE32A290 = function (listeningToPed, ped, listenerName) {
  return _in(0xa2323a2e, 0xae32a290, listeningToPed, ped, _ts(listenerName));
};

/**
 * _0xA2B851605748AD0E
 *

 * @return {void}
 */
global.N_0xA2B851605748AD0E = function () {
  return _in(0xa2b85160, 0x5748ad0e);
};

/**
 * _0xA6847BBA4FCDD13F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA6847BBA4FCDD13F = function (p0, p1) {
  return _in(0xa6847bba, 0x4fcdd13f, p0, p1);
};

/**
 * _0xA6A3A3F96B8B030E
 *

 * @return {any}
 */
global.N_0xA6A3A3F96B8B030E = function () {
  return _in(0xa6a3a3f9, 0x6b8b030e, _r);
};

/**
 * _0xABDB4863D3D72021
 *
 * @param {number} entity
 * @param {any} p1
 * @param {any} p2
 * @param {number} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0xABDB4863D3D72021 = function (entity, p1, p2, p3, p4) {
  return _in(0xabdb4863, 0xd3d72021, entity, p1, p2, _fv(p3), p4);
};

/**
 * _0xB18FEC133C7C6C69
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xB18FEC133C7C6C69 = function (p0) {
  return _in(0xb18fec13, 0x3c7c6c69, p0, _r);
};

/**
 * _0xB93A769B8B726950
 * Used in Script Function NET_CAMP_CLIENT_UPDATE_PED_ROLE_STATE_SHOP: hash exists! Playing hash
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0xB93A769B8B726950 = function (ped, p1) {
  return _in(0xb93a769b, 0x8b726950, ped, _ch(p1));
};

/**
 * _0xBC07CA8FD710E7FD
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xBC07CA8FD710E7FD = function (p0, p1) {
  return _in(0xbc07ca8f, 0xd710e7fd, p0, p1);
};

/**
 * _0xBE28DB99556FF8D9
 * Checks for MOONSHINE_BAND
 *
 * @param {number} entity
 * @return {number}
 */
global.N_0xBE28DB99556FF8D9 = function (entity) {
  return _in(0xbe28db99, 0x556ff8d9, entity, _r, _ri);
};

/**
 * _0xC369E2234E34A0CA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xC369E2234E34A0CA = function (p0, p1) {
  return _in(0xc369e223, 0x4e34a0ca, p0, p1, _r);
};

/**
 * _0xC4CFCE4C656EF480
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xC4CFCE4C656EF480 = function (ped) {
  return _in(0xc4cfce4c, 0x656ef480, ped);
};

/**
 * _0xC68C02DE259C927C
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC68C02DE259C927C = function (p0) {
  return _in(0xc68c02de, 0x259c927c, p0, _r);
};

/**
 * _0xC886CD666ADD42E1
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xC886CD666ADD42E1 = function (p0, p1) {
  return _in(0xc886cd66, 0x6add42e1, p0, p1);
};

/**
 * _0xCBF2BEBB468A34F3
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xCBF2BEBB468A34F3 = function (p0) {
  return _in(0xcbf2bebb, 0x468a34f3, p0);
};

/**
 * _0xCFAD2C8CD1054523
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xCFAD2C8CD1054523 = function (p0, p1, p2, p3) {
  return _in(0xcfad2c8c, 0xd1054523, p0, p1, p2, p3);
};

/**
 * _0xD05A460328560477
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xD05A460328560477 = function (p0) {
  return _in(0xd05a4603, 0x28560477, p0, _r);
};

/**
 * _0xD0730C1FA40348D9
 * _IS_SCRIPTED_CONVERSATION_*
 *
 * @param {string | number} convoRoot
 * @return {boolean}
 */
global.N_0xD0730C1FA40348D9 = function (convoRoot) {
  return _in(0xd0730c1f, 0xa40348d9, _ts(convoRoot), _r);
};

/**
 * _0xD47D47EFBF103FB8
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xD47D47EFBF103FB8 = function (p0, p1) {
  return _in(0xd47d47ef, 0xbf103fb8, p0, p1);
};

/**
 * _0xD733528B6C35647A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xD733528B6C35647A = function (p0, p1) {
  return _in(0xd733528b, 0x6c35647a, p0, p1);
};

/**
 * _0xDAD6CD07CAA4F382
 *

 * @return {void}
 */
global.N_0xDAD6CD07CAA4F382 = function () {
  return _in(0xdad6cd07, 0xcaa4f382);
};

/**
 * _0xDC2F83A0612CA34D
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xDC2F83A0612CA34D = function (p0) {
  return _in(0xdc2f83a0, 0x612ca34d, p0, _r);
};

/**
 * _0xDC93F0948F2C28F4
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xDC93F0948F2C28F4 = function (p0) {
  return _in(0xdc93f094, 0x8f2c28f4, p0);
};

/**
 * _0xDF947FE0D551684E
 *
 * @param {number} ped
 * @param {string | number} p1
 * @return {boolean}
 */
global.N_0xDF947FE0D551684E = function (ped, p1) {
  return _in(0xdf947fe0, 0xd551684e, ped, _ts(p1), _r);
};

/**
 * _0xE600F61F54A444A6
 *

 * @return {any}
 */
global.N_0xE600F61F54A444A6 = function () {
  return _in(0xe600f61f, 0x54a444a6, _r);
};

/**
 * _0xE7E6CB8B713ED190
 *

 * @return {void}
 */
global.N_0xE7E6CB8B713ED190 = function () {
  return _in(0xe7e6cb8b, 0x713ed190);
};

/**
 * _0xE891504B2F0E2DBA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE891504B2F0E2DBA = function (p0, p1) {
  return _in(0xe891504b, 0x2f0e2dba, p0, p1);
};

/**
 * _0xE9694B2D6CB87B06
 *
 * @param {number} entity
 * @param {any} p1
 * @return {void}
 */
global.N_0xE9694B2D6CB87B06 = function (entity, p1) {
  return _in(0xe9694b2d, 0x6cb87b06, entity, p1);
};

/**
 * _0xEA546C31FD45F8CD
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xEA546C31FD45F8CD = function (p0) {
  return _in(0xea546c31, 0xfd45f8cd, p0);
};

/**
 * _0xEB4D592620B8C209
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xEB4D592620B8C209 = function (p0) {
  return _in(0xeb4d5926, 0x20b8c209, p0);
};

/**
 * _0xF092B6030D6FD49C
 * Name: ROPE_SETTINGS_DEFAULT
 *
 * @param {number} ropeId
 * @param {string | number} name
 * @return {void}
 */
global.N_0xF092B6030D6FD49C = function (ropeId, name) {
  return _in(0xf092b603, 0x0d6fd49c, ropeId, _ts(name));
};

/**
 * _0xF0EE69F500952FA5
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xF0EE69F500952FA5 = function (p0) {
  return _in(0xf0ee69f5, 0x00952fa5, p0, _r);
};

/**
 * _0xF232C2C546AC16D0
 *
 * @param {string | number} p0
 * @return {void}
 */
global.N_0xF232C2C546AC16D0 = function (p0) {
  return _in(0xf232c2c5, 0x46ac16d0, _ts(p0));
};

/**
 * _0xF336E9F989B3518F
 *
 * @param {string | number} p0
 * @return {number}
 */
global.N_0xF336E9F989B3518F = function (p0) {
  return _in(0xf336e9f9, 0x89b3518f, _ts(p0), _r, _ri);
};

/**
 * _0xF64034D533CE8AAC
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xF64034D533CE8AAC = function (p0, p1, p2) {
  return _in(0xf64034d5, 0x33ce8aac, p0, p1, p2);
};

/**
 * _0xFCDEC42B1C78B7F8
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xFCDEC42B1C78B7F8 = function (p0, p1) {
  return _in(0xfcdec42b, 0x1c78b7f8, p0, p1);
};

/**
 * _0xFD461D0ABA5559B1
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xFD461D0ABA5559B1 = function (p0, p1) {
  return _in(0xfd461d0a, 0xba5559b1, p0, p1);
};

/**
 * _0xFE5C6177064BD390
 *
 * @param {boolean} p0
 * @return {boolean}
 */
global.N_0xFE5C6177064BD390 = function (p0) {
  return _in(0xfe5c6177, 0x064bd390, p0, _r);
};

/**
 * _0xFFE9C53DEEA3DB0B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} isSrlLoaded
 * @param {any} p6
 * @return {any}
 */
global.N_0xFFE9C53DEEA3DB0B = function (p0, p1, x, y, z, isSrlLoaded, p6) {
  return _in(0xffe9c53d, 0xeea3db0b, p0, p1, _fv(x), _fv(y), _fv(z), isSrlLoaded, p6, _r);
};

/**
 * _BLOCK_SPEECH_CONTEXT
 *
 * @param {string | number} context
 * @param {boolean} block
 * @return {void}
 */
global.BlockSpeechContext = function (context, block) {
  return _in(0x6378a235, 0x374b852f, _ts(context), block);
};

/**
 * _CLEAR_CONVERSATION_HISTORY_FOR_SCRIPTED_CONVERSATION
 *
 * @param {string | number} convoRoot
 * @return {void}
 */
global.ClearConversationHistoryForScriptedConversation = function (convoRoot) {
  return _in(0xef51242e, 0x35242b47, _ts(convoRoot));
};

/**
 * _GET_ENTITY_AUDIO_MIX_GROUP
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityAudioMixGroup = function (entity) {
  return _in(0x8b25a18e, 0x390f75bf, entity, _r, _ri);
};

/**
 * _GET_LOADED_STREAM_ID_FROM_CREATION
 * Creates stream and returns streamId handle to be used with PLAY_STREAM_* natives
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/create_stream
 *
 * @param {string | number} streamName
 * @param {string | number} soundSet
 * @return {number}
 */
global.GetLoadedStreamIdFromCreation = function (streamName, soundSet) {
  return _in(0x0556c784, 0xfa056628, _ts(streamName), _ts(soundSet), _r, _ri);
};

/**
 * _GET_PED_SONG_INDEX_HOST
 *
 * @param {number} ped
 * @return {any}
 */
global.GetPedSongIndexHost = function (ped) {
  return _in(0x2dbbf0c5, 0xe19383ee, ped, _r);
};

/**
 * _HAS_SOUND_AUDIO_NAME_FINISHED
 *
 * @param {string | number} audioName
 * @param {string | number} soundsetName
 * @return {boolean}
 */
global.HasSoundAudioNameFinished = function (audioName, soundsetName) {
  return _in(0x714a0ea7, 0xde1167be, _ts(audioName), _ts(soundsetName), _r);
};

/**
 * _HAS_SOUND_ID_FINISHED
 *
 * @param {number} soundId
 * @return {boolean}
 */
global.HasSoundIdFinished = function (soundId) {
  return _in(0x84848e1c, 0x0fc67dbb, soundId, _r);
};

/**
 * _IS_ANY_CONVERSATION_PLAYING
 *
 * @param {boolean} p0
 * @return {boolean}
 */
global.IsAnyConversationPlaying = function (p0) {
  return _in(0xa2cac9de, 0xf0195e6f, p0, _r);
};

/**
 * _IS_PED_IN_ANY_CONVERSATION
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsPedInAnyConversation = function (ped, p1) {
  return _in(0x54b187f1, 0x11d9c6f8, ped, p1, _r);
};

/**
 * _IS_SCRIPTED_AUDIO_CUSTOM
 * item: FUSE, value returned from 0x2E1CDC1FF3B8473E
 * soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
 *
 * @param {number} item
 * @param {number} soundSet
 * @return {boolean}
 */
global.IsScriptedAudioCustom = function (item, soundSet) {
  return _in(0x6df942c4, 0x179be5ab, _ch(item), _ch(soundSet), _r);
};

/**
 * _IS_SCRIPTED_CONVERSATION_CREATED
 *
 * @param {string | number} convoRoot
 * @return {boolean}
 */
global.IsScriptedConversationCreated = function (convoRoot) {
  return _in(0xd89504d9, 0xd7d5057d, _ts(convoRoot), _r);
};

/**
 * _IS_SCRIPTED_CONVERSION_ONGOING
 *
 * @param {string | number} p0
 * @return {boolean}
 */
global.IsScriptedConversionOngoing = function (p0) {
  return _in(0xf01c570e, 0x0a0a1e67, _ts(p0), _r);
};

/**
 * _PLAY_ANIMAL_VOCALIZATION_PHEROMONE_VIAL_RESPONSE
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.PlayAnimalVocalizationPheromoneVialResponse = function (ped, p1, p2) {
  return _in(0x0e53530d, 0x9b2db01d, ped, _ch(p1), p2);
};

/**
 * _PLAY_SOUND_FROM_ENTITY_WITH_SET
 * Params: p5 seems to be always 0
 *
 * @param {number} soundId
 * @param {string | number} soundName
 * @param {number} entity
 * @param {string | number} soundsetName
 * @param {boolean} p4
 * @param {any} p5
 * @return {void}
 */
global.PlaySoundFromEntityWithSet = function (soundId, soundName, entity, soundsetName, p4, p5) {
  return _in(0xf1c5310f, 0xeaa36b48, soundId, _ts(soundName), entity, _ts(soundsetName), p4, p5);
};

/**
 * _PLAY_SOUND_FROM_ITEM
 * item: value returned from 0x2E1CDC1FF3B8473E
 * soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
 *
 * @param {number} item
 * @param {number} soundSet
 * @param {any} p2
 * @return {void}
 */
global.PlaySoundFromItem = function (item, soundSet, p2) {
  return _in(0xe8eaff7b, 0x41edd291, _ch(item), _ch(soundSet), p2);
};

/**
 * _PLAY_SOUND_FROM_POSITION
 *
 * @param {string | number} audioName
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {string | number} audioRef
 * @param {boolean} isNetwork
 * @param {any} p6
 * @param {boolean} p7
 * @param {any} p8
 * @return {void}
 */
global.PlaySoundFromPosition = function (audioName, x, y, z, audioRef, isNetwork, p6, p7, p8) {
  return _in(0xcce219c9, 0x22737bfa, _ts(audioName), _fv(x), _fv(y), _fv(z), _ts(audioRef), isNetwork, p6, p7, p8);
};

/**
 * _PLAY_SOUND_FROM_POSITION_WITH_ID
 * Starts Audio Loop
 * _PLAY_SOUND_FROM_ENTITY* - _PLAY_SOUND_FRONTEND*
 *
 * @param {number} soundId
 * @param {string | number} soundName
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {string | number} soundsetName
 * @param {boolean} p6
 * @param {number} p7
 * @param {boolean} p8
 * @return {void}
 */
global.PlaySoundFromPositionWithId = function (soundId, soundName, x, y, z, soundsetName, p6, p7, p8) {
  return _in(0xdcf5ba95, 0xbbf0faba, soundId, _ts(soundName), _fv(x), _fv(y), _fv(z), _ts(soundsetName), p6, p7, p8);
};

/**
 * _PLAY_SOUND_FRONTEND_WITH_SOUND_ID
 *
 * @param {number} soundId
 * @param {string | number} name
 * @param {string | number} soundSet
 * @param {boolean} p3
 * @return {void}
 */
global.PlaySoundFrontendWithSoundId = function (soundId, name, soundSet, p3) {
  return _in(0xce5d0ffe, 0x83939af1, soundId, _ts(name), _ts(soundSet), p3);
};

/**
 * _RELEASE_SHARD_SOUNDS
 *
 * @param {string | number} soundName
 * @param {string | number} soundsetName
 * @return {void}
 */
global.ReleaseShardSounds = function (soundName, soundsetName) {
  return _in(0x9d746964, 0xe0cf2c5f, _ts(soundName), _ts(soundsetName));
};

/**
 * _RELEASE_SOUNDSET
 *
 * @param {string | number} soundsetName
 * @return {void}
 */
global.ReleaseSoundset = function (soundsetName) {
  return _in(0x531a78d6, 0xbf27014b, _ts(soundsetName));
};

/**
 * _SET_AMBIENT_ZONE_POSITION
 *
 * @param {string | number} ambientZone
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @return {void}
 */
global.SetAmbientZonePosition = function (ambientZone, x, y, z, heading) {
  return _in(0x3743ce69, 0x48194349, _ts(ambientZone), _fv(x), _fv(y), _fv(z), _fv(heading));
};

/**
 * _SET_AUDIO_SCENESET
 *
 * @param {string | number} audioName
 * @param {string | number} sceneset
 * @return {boolean}
 */
global.SetAudioSceneset = function (audioName, sceneset) {
  return _in(0xac84686c, 0x06184b0d, _ts(audioName), _ts(sceneset), _r);
};

/**
 * _SET_SOUND_RELATIONSHIP_ON_PED
 * p1: Entity.Relationship
 * p2: Player, Enemy, Teammate, Neutral
 *
 * @param {number} ped
 * @param {string | number} p1
 * @param {string | number} p2
 * @return {void}
 */
global.SetSoundRelationshipOnPed = function (ped, p1, p2) {
  return _in(0x2e31aca7, 0x477cf00f, ped, _ts(p1), _ts(p2));
};

/**
 * _SET_VARIABLE_ON_SOUND_WITH_ID
 *
 * @param {number} soundId
 * @param {string | number} variableName
 * @param {number} variableValue
 * @return {void}
 */
global.SetVariableOnSoundWithId = function (soundId, variableName, variableValue) {
  return _in(0x503703ec, 0x1781b7d6, soundId, _ts(variableName), _fv(variableValue));
};

/**
 * _SET_VARIABLE_ON_SOUND_WITH_NAME
 *
 * @param {string | number} variableName
 * @param {number} variableValue
 * @param {string | number} audioName
 * @param {string | number} audioRef
 * @return {void}
 */
global.SetVariableOnSoundWithName = function (variableName, variableValue, audioName, audioRef) {
  return _in(0x9821b68c, 0xd3e05f2b, _ts(variableName), _fv(variableValue), _ts(audioName), _ts(audioRef));
};

/**
 * _SET_VOFX_PED_VOICE
 * Hashes: VOFX_PLAYER_MALE01, VOFX_PLAYER_MALE02, VOFX_PLAYER_MALE03, VOFX_PLAYER_FEMALE01, VOFX_PLAYER_FEMALE02, VOFX_PLAYER_FEMALE03
 *
 * @param {number} ped
 * @param {number} voice
 * @return {void}
 */
global.SetVofxPedVoice = function (ped, voice) {
  return _in(0x2703efb5, 0x83f0949a, ped, _ch(voice));
};

/**
 * _SET_WHISTLE_CONFIG_FOR_PED
 * whistleConfig: Ped.WhistlePitch (0.0 - 1.0), Ped.WhistleClarity (0.0 - 1.0), Ped.WhistleShape (0.0 - 10.0)
 *
 * @param {number} ped
 * @param {string | number} whistleConfig
 * @param {number} value
 * @return {void}
 */
global.SetWhistleConfigForPed = function (ped, whistleConfig, value) {
  return _in(0x9963681a, 0x8bc69bf3, ped, _ts(whistleConfig), _fv(value));
};

/**
 * _START_AUDIO_SCENESET
 *
 * @param {string | number} audioName
 * @param {string | number} sceneset
 * @return {boolean}
 */
global.StartAudioSceneset = function (audioName, sceneset) {
  return _in(0x6339c1ea, 0x3979b5f7, _ts(audioName), _ts(sceneset), _r);
};

/**
 * _STOP_ALL_SCRIPTED_AUDIO_SOUNDS
 *

 * @return {void}
 */
global.StopAllScriptedAudioSounds = function () {
  return _in(0x2e399eaf, 0xbeea74d5);
};

/**
 * _STOP_ALL_SCRIPTED_CONVERSIONS
 *
 * @param {boolean} p0
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.StopAllScriptedConversions = function (p0, p1, p2) {
  return _in(0x36559148, 0xb78853b3, p0, p1, p2);
};

/**
 * _STOP_AUDIO_SCENESET
 *
 * @param {string | number} sceneset
 * @return {void}
 */
global.StopAudioSceneset = function (sceneset) {
  return _in(0x9428447d, 0xed71fc7e, _ts(sceneset));
};

/**
 * _STOP_SOUND_WITH_ID
 *
 * @param {number} soundId
 * @return {void}
 */
global.StopSoundWithId = function (soundId) {
  return _in(0x3210bcb3, 0x6af7621b, soundId);
};

/**
 * _STOP_SOUND_WITH_NAME
 *
 * @param {string | number} audioName
 * @param {string | number} audioRef
 * @return {void}
 */
global.StopSoundWithName = function (audioName, audioRef) {
  return _in(0x0f2a2175, 0x734926d8, _ts(audioName), _ts(audioRef));
};

/**
 * _TRIGGER_MUSIC_EVENT_WITH_HASH
 *
 * @param {number} eventName
 * @return {any}
 */
global.TriggerMusicEventWithHash = function (eventName) {
  return _in(0x05d6195f, 0xb4d428f4, _ch(eventName), _r);
};

/**
 * _UNLOAD_SPEECH_CONTEXT
 * _UNLOAD_[A-C]* - USE_*
 *
 * @param {string | number} speechContext
 * @return {void}
 */
global.UnloadSpeechContext = function (speechContext) {
  return _in(0x87e6302f, 0xc61208cc, _ts(speechContext));
};

/**
 * _UPDATE_SOUND_POSITION
 * Only used in R* SP Scripts
 *
 * @param {number} soundId
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.UpdateSoundPosition = function (soundId, x, y, z) {
  return _in(0x0286617c, 0x8fc50a53, soundId, _fv(x), _fv(y), _fv(z));
};

/**
 * BOUNTY_GET_BOUNTY_ON_PLAYER
 *
 * @param {DataView} gamerHandle
 * @param {DataView} bountyData
 * @return {boolean}
 */
global.BountyGetBountyOnPlayer = function (gamerHandle, bountyData) {
  return _in(0x4ef23e04, 0xa0c8ff51, gamerHandle, bountyData, _r);
};

/**
 * BOUNTY_GET_COOLDOWN_COLLECTION
 *
 * @param {DataView} p0
 * @return {boolean}
 */
global.BountyGetCooldownCollection = function (p0) {
  return _in(0x8faf4d26, 0x2faba99c, p0, _r);
};

/**
 * BOUNTY_GET_LEGENDARY_TARGET
 *
 * @param {any} p0
 * @param {DataView} p1
 * @return {boolean}
 */
global.BountyGetLegendaryTarget = function (p0, p1) {
  return _in(0x85e4d7b2, 0x25a30ed1, p0, p1, _r);
};

/**
 * BOUNTY_GET_WANTED_POSTER_SLOT
 *
 * @param {number} p0
 * @param {number} p1
 * @param {DataView} p2
 * @return {boolean}
 */
global.BountyGetWantedPosterSlot = function (p0, p1, p2) {
  return _in(0xb395a44a, 0x0c7ca615, _ch(p0), _ch(p1), p2, _r);
};

/**
 * BOUNTY_REQUEST_BEGIN_LEGENDARY_MISSION
 *
 * @param {DataView} outRpcGuid
 * @param {number} p1
 * @param {number} p2
 * @return {boolean}
 */
global.BountyRequestBeginLegendaryMission = function (outRpcGuid, p1, p2) {
  return _in(0xfc81d7c7, 0xa151cfaa, outRpcGuid, p1, p2, _r);
};

/**
 * BOUNTY_REQUEST_BEGIN_LEGENDARY_MISSION_FOR_POSSE
 *
 * @param {DataView} outRpcGuid
 * @param {number} p1
 * @param {number} p2
 * @return {boolean}
 */
global.BountyRequestBeginLegendaryMissionForPosse = function (outRpcGuid, p1, p2) {
  return _in(0x48e4e23f, 0x1739e197, outRpcGuid, p1, p2, _r);
};

/**
 * _0x27D3A0E1FE090A43
 * _BOUNTY_IS_* or _BOUNTY_REQUEST_*
 *
 * @param {DataView} p0
 * @return {boolean}
 */
global.N_0x27D3A0E1FE090A43 = function (p0) {
  return _in(0x27d3a0e1, 0xfe090a43, p0, _r);
};

/**
 * _0x81847C2134039BDC
 *
 * @param {DataView} p0
 * @return {boolean}
 */
global.N_0x81847C2134039BDC = function (p0) {
  return _in(0x81847c21, 0x34039bdc, p0, _r);
};

/**
 * _0x86EC5F83867C4B70
 * _BOUNTY_C* or _BOUNTY_GET_*
 *
 * @param {DataView} p0
 * @return {boolean}
 */
global.N_0x86EC5F83867C4B70 = function (p0) {
  return _in(0x86ec5f83, 0x867c4b70, p0, _r);
};

/**
 * _0xD6A67E2FF373D0E3
 * _BOUNTY_GET_*
 *
 * @param {number} p0
 * @return {number}
 */
global.N_0xD6A67E2FF373D0E3 = function (p0) {
  return _in(0xd6a67e2f, 0xf373d0e3, p0, _r, _ri);
};

/**
 * _0xF8BCC5ECA33AC9C1
 * _BOUNTY_GET_*
 *

 * @return {number}
 */
global.N_0xF8BCC5ECA33AC9C1 = function () {
  return _in(0xf8bcc5ec, 0xa33ac9c1, _r, _ri);
};

/**
 * _BOUNTY_CANCEL_LEGENDARY_MISSION
 *

 * @return {void}
 */
global.BountyCancelLegendaryMission = function () {
  return _in(0x2ba1bcc9, 0x9826cda2);
};

/**
 * _BOUNTY_CANCEL_WANTED_POSTER
 *

 * @return {void}
 */
global.BountyCancelWantedPoster = function () {
  return _in(0x6a9df0fc, 0xd0c87ff9);
};

/**
 * _BOUNTY_CLEAR_BEING_BOUNTY_HUNTER
 *

 * @return {void}
 */
global.BountyClearBeingBountyHunter = function () {
  return _in(0xa59d1997, 0xecd99f0a);
};

/**
 * _BOUNTY_CLEAR_BEING_TARGET
 *

 * @return {void}
 */
global.BountyClearBeingTarget = function () {
  return _in(0x932db3c0, 0x5a7465d1);
};

/**
 * _BOUNTY_IS_REQUEST_PENDING
 *
 * @param {DataView} rpcGuid
 * @return {boolean}
 */
global.BountyIsRequestPending = function (rpcGuid) {
  return _in(0x03b61cd5, 0x1097de60, rpcGuid, _r);
};

/**
 * _BOUNTY_REQUEST_BECOME_TARGET_OF_CHARACTER_BOUNTY_HUNT
 *
 * @param {DataView} outRpcGuid
 * @return {boolean}
 */
global.BountyRequestBecomeTargetOfCharacterBountyHunt = function (outRpcGuid) {
  return _in(0xb096547d, 0x61868254, outRpcGuid, _r);
};

/**
 * _BOUNTY_REQUEST_BEGIN_WANTED_POSTER
 *
 * @param {DataView} outRpcGuid
 * @param {number} p1
 * @return {boolean}
 */
global.BountyRequestBeginWantedPoster = function (outRpcGuid, p1) {
  return _in(0xffa13742, 0xe43507e3, outRpcGuid, p1, _r);
};

/**
 * _BOUNTY_REQUEST_BRIBE_JAIL_GUARD
 *
 * @param {DataView} outRpcGuid
 * @param {number} p1
 * @return {boolean}
 */
global.BountyRequestBribeJailGuard = function (outRpcGuid, p1) {
  return _in(0x28717806, 0xd3bdd0d0, outRpcGuid, p1, _r);
};

/**
 * _BOUNTY_REQUEST_CLAIM_CHARACTER_BOUNTY
 *
 * @param {DataView} outRpcGuid
 * @param {number} p1
 * @param {DataView} p2
 * @return {boolean}
 */
global.BountyRequestClaimCharacterBounty = function (outRpcGuid, p1, p2) {
  return _in(0xa9c3b0f7, 0x46375162, outRpcGuid, p1, p2, _r);
};

/**
 * _BOUNTY_REQUEST_COMPLETE_LEGENDARY_MISSION
 *
 * @param {DataView} outRpcGuid
 * @param {DataView} p1
 * @return {boolean}
 */
global.BountyRequestCompleteLegendaryMission = function (outRpcGuid, p1) {
  return _in(0xa7309ac0, 0xdcf6d950, outRpcGuid, p1, _r);
};

/**
 * _BOUNTY_REQUEST_COMPLETE_SPLIT_WANTED_POSTER
 *
 * @param {DataView} outRpcGuid
 * @param {DataView} p1
 * @return {boolean}
 */
global.BountyRequestCompleteSplitWantedPoster = function (outRpcGuid, p1) {
  return _in(0xfbd137bf, 0x0ec50fc9, outRpcGuid, p1, _r);
};

/**
 * _BOUNTY_REQUEST_COMPLETE_WANTED_POSTER
 *
 * @param {DataView} outRpcGuid
 * @param {DataView} p1
 * @return {boolean}
 */
global.BountyRequestCompleteWantedPoster = function (outRpcGuid, p1) {
  return _in(0x727ab6f0, 0x08bb9f29, outRpcGuid, p1, _r);
};

/**
 * _BOUNTY_REQUEST_ESCAPED_CHARACTER_BOUNTY_HUNT
 *
 * @param {DataView} outRpcGuid
 * @return {boolean}
 */
global.BountyRequestEscapedCharacterBountyHunt = function (outRpcGuid) {
  return _in(0x12e981d5, 0x3b07bf48, outRpcGuid, _r);
};

/**
 * _BOUNTY_REQUEST_PAY_OFF_BOUNTY
 *
 * @param {DataView} outRpcGuid
 * @return {boolean}
 */
global.BountyRequestPayOffBounty = function (outRpcGuid) {
  return _in(0x537ce992, 0xbd2d7bcb, outRpcGuid, _r);
};

/**
 * _BOUNTY_REQUEST_PAY_OFF_BOUNTY_EX
 *
 * @param {DataView} outRpcGuid
 * @param {number} p1
 * @param {number} costType
 * @return {boolean}
 */
global.BountyRequestPayOffBountyEx = function (outRpcGuid, p1, costType) {
  return _in(0x587bcec3, 0x1d64f382, outRpcGuid, _ch(p1), _ch(costType), _r);
};

/**
 * _BOUNTY_REQUEST_POSSE_LEADER_CLAIM_CHARACTER_BOUNTY
 *
 * @param {DataView} outRpcGuid
 * @param {number} p1
 * @param {DataView} p2
 * @return {boolean}
 */
global.BountyRequestPosseLeaderClaimCharacterBounty = function (outRpcGuid, p1, p2) {
  return _in(0x5b53ca0e, 0x2ac3ff45, outRpcGuid, p1, p2, _r);
};

/**
 * _BOUNTY_REQUEST_POSSE_LEADER_ESCAPED_CHARACTER_BOUNTY_HUNT
 *
 * @param {DataView} outRpcGuid
 * @return {boolean}
 */
global.BountyRequestPosseLeaderEscapedCharacterBountyHunt = function (outRpcGuid) {
  return _in(0x2d874ba2, 0x0e8e1f20, outRpcGuid, _r);
};

/**
 * _BOUNTY_REQUEST_POSSE_MEMBER_CLAIM_CHARACTER_BOUNTY_SHARE
 *
 * @param {DataView} outRpcGuid
 * @param {DataView} p1
 * @return {boolean}
 */
global.BountyRequestPosseMemberClaimCharacterBountyShare = function (outRpcGuid, p1) {
  return _in(0x22d3a61c, 0xe053270c, outRpcGuid, p1, _r);
};

/**
 * _BOUNTY_REQUEST_POSSE_MEMBER_ESCAPED_CHARACTER_BOUNTY_HUNT
 *
 * @param {DataView} outRpcGuid
 * @return {boolean}
 */
global.BountyRequestPosseMemberEscapedCharacterBountyHunt = function (outRpcGuid) {
  return _in(0x8521c2e2, 0x35558278, outRpcGuid, _r);
};

/**
 * _BOUNTY_REQUEST_SELF_REPORT_CRIME
 * crimeType: see _REPORT_CRIME
 *
 * @param {DataView} outRpcGuid
 * @param {number} crimeType
 * @param {boolean} p2
 * @return {boolean}
 */
global.BountyRequestSelfReportCrime = function (outRpcGuid, crimeType, p2) {
  return _in(0x188b7488, 0x61b5ba17, outRpcGuid, _ch(crimeType), p2, _r);
};

/**
 * _BOUNTY_REQUEST_SELF_REPORT_KILLED_BY_BOUNTY_HUNTER
 *
 * @param {DataView} outRpcGuid
 * @return {boolean}
 */
global.BountyRequestSelfReportKilledByBountyHunter = function (outRpcGuid) {
  return _in(0xb462d69d, 0x406a2602, outRpcGuid, _r);
};

/**
 * _BOUNTY_REQUEST_SERVED_FULL_JAIL_SENTENCE
 *
 * @param {DataView} outRpcGuid
 * @return {boolean}
 */
global.BountyRequestServedFullJailSentence = function (outRpcGuid) {
  return _in(0x3f73aed1, 0x2a5ef0ff, outRpcGuid, _r);
};

/**
 * DISABLE_SCRIPT_BRAIN_SET
 *
 * @param {number} brainSet
 * @return {void}
 */
global.DisableScriptBrainSet = function (brainSet) {
  return _in(0x3f44ea61, 0x3a5b2676, brainSet);
};

/**
 * ENABLE_SCRIPT_BRAIN_SET
 *
 * @param {number} brainSet
 * @return {void}
 */
global.EnableScriptBrainSet = function (brainSet) {
  return _in(0x1cf6e5c6, 0x750eadbd, brainSet);
};

/**
 * REACTIVATE_ALL_OBJECT_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE
 * Called before starting a new thread_monitor script thread in startup_mp/startup_tlg
 * Alternative name _REGISTER_SCRIPT_BRAIN
 * 
 * Old name: _PREPARE_SCRIPT_BRAIN
 *

 * @return {void}
 */
global.ReactivateAllObjectBrainsThatAreWaitingTillOutOfRange = function () {
  return _in(0xa32b0b05, 0xeff75730);
};

/**
 * REACTIVATE_NAMED_OBJECT_BRAINS_WAITING_TILL_OUT_OF_RANGE
 *
 * @param {string | number} scriptName
 * @return {void}
 */
global.ReactivateNamedObjectBrainsWaitingTillOutOfRange = function (scriptName) {
  return _in(0x74c333e3, 0x4df74e8a, _ts(scriptName));
};

/**
 * REGISTER_OBJECT_SCRIPT_BRAIN
 * Registers a script for any object with a specific model hash.
 *
 * @param {string | number} scriptName
 * @param {number} modelHash
 * @param {number} p2
 * @param {number} activationRange
 * @param {number} p4
 * @param {number} p5
 * @return {void}
 */
global.RegisterObjectScriptBrain = function (scriptName, modelHash, p2, activationRange, p4, p5) {
  return _in(0x16af9b4e, 0xeac3b305, _ts(scriptName), _ch(modelHash), p2, _fv(activationRange), p4, p5);
};

/**
 * _0x4AA5EA1EDFB25786
 * Called with flag 0 before 0xA6AC35DB4A7957A8 in net_entity_brain
 * _SET_SCRIPT_BRAIN*
 *
 * @param {number} flag
 * @return {void}
 */
global.N_0x4AA5EA1EDFB25786 = function (flag) {
  return _in(0x4aa5ea1e, 0xdfb25786, flag);
};

/**
 * _0xA6AC35DB4A7957A8
 * Common flags: 250, 99999
 * _SET_SCRIPT_BRAIN*
 *
 * @param {number} flag
 * @return {void}
 */
global.N_0xA6AC35DB4A7957A8 = function (flag) {
  return _in(0xa6ac35db, 0x4a7957a8, flag);
};

/**
 * _GET_SCRIPT_BRAIN_ENTITY
 *

 * @return {number}
 */
global.GetScriptBrainEntity = function () {
  return _in(0x6818d1a1, 0x94e29983, _r, _ri);
};

/**
 * _REMOVE_SCRIPT_BRAIN_ENTITY
 *
 * @param {number} entity
 * @return {void}
 */
global.RemoveScriptBrainEntity = function (entity) {
  return _in(0x38f1e092, 0x24eeca09, entity);
};

/**
 * _START_PRELOADED_SCRIPT_BRAIN
 * Returns threadId
 *
 * @param {number} entity
 * @param {string | number} scriptName
 * @param {number} scriptStackSize
 * @param {boolean} p3
 * @return {number}
 */
global.StartPreloadedScriptBrain = function (entity, scriptName, scriptStackSize, p3) {
  return _in(0x4e4507cc, 0x5e4db869, entity, _ts(scriptName), scriptStackSize, p3, _r, _ri);
};

/**
 * _START_SCRIPT_BRAIN
 * Returns threadId
 *
 * @param {number} entity
 * @param {string | number} scriptName
 * @param {number} p2
 * @param {DataView} p3
 * @param {number} p4
 * @param {boolean} p5
 * @return {number}
 */
global.StartScriptBrain = function (entity, scriptName, p2, p3, p4, p5) {
  return _in(0x6f62fae2, 0x66dcfc81, entity, _ts(scriptName), p2, p3, p4, p5, _r, _ri);
};

/**
 * CEIL
 * Rounds a float value up to the next whole number
 *
 * @param {number} value
 * @return {number}
 */
global.Ceil = function (value) {
  return _in(0x11e019c8, 0xf43acc8a, _fv(value), _r, _ri);
};

/**
 * COS
 *
 * @param {number} value
 * @return {number}
 */
global.Cos = function (value) {
  return _in(0xd0ffb162, 0xf40a139c, _fv(value), _r, _rf);
};

/**
 * FLOOR
 * Rounds a float value down to the next whole number
 *
 * @param {number} value
 * @return {number}
 */
global.Floor = function (value) {
  return _in(0xf34ee736, 0xcf047844, _fv(value), _r, _ri);
};

/**
 * LOG10
 * Old name: _LOG10
 *
 * @param {number} value
 * @return {number}
 */
global.Log10 = function (value) {
  return _in(0xe816e655, 0xde37fe20, _fv(value), _r, _rf);
};

/**
 * POW
 *
 * @param {number} base
 * @param {number} exponent
 * @return {number}
 */
global.Pow = function (base, exponent) {
  return _in(0xe3621cc4, 0x0f31fe2e, _fv(base), _fv(exponent), _r, _rf);
};

/**
 * ROUND
 *
 * @param {number} value
 * @return {number}
 */
global.Round = function (value) {
  return _in(0xf2db717a, 0x73826179, _fv(value), _r, _ri);
};

/**
 * SETTIMERA
 *
 * @param {number} value
 * @return {void}
 */
global.Settimera = function (value) {
  return _in(0xc1b1e9a0, 0x34a63a62, value);
};

/**
 * SETTIMERB
 *
 * @param {number} value
 * @return {void}
 */
global.Settimerb = function (value) {
  return _in(0x5ae11bc3, 0x6633de4e, value);
};

/**
 * SET_THIS_THREAD_PRIORITY
 * THREAD_PRIO_HIGHEST = 0
 * THREAD_PRIO_NORMAL = 1
 * THREAD_PRIO_LOWEST = 2
 * THREAD_PRIO_MANUAL_UPDATE = 100
 *
 * @param {number} priority
 * @return {void}
 */
global.SetThisThreadPriority = function (priority) {
  return _in(0x42b65dee, 0xf2edf2a1, priority);
};

/**
 * SHIFT_LEFT
 *
 * @param {number} value
 * @param {number} bitShift
 * @return {number}
 */
global.ShiftLeft = function (value, bitShift) {
  return _in(0xedd95a39, 0xe5544de8, value, bitShift, _r, _ri);
};

/**
 * SHIFT_RIGHT
 *
 * @param {number} value
 * @param {number} bitShift
 * @return {number}
 */
global.ShiftRight = function (value, bitShift) {
  return _in(0x97ef1e5b, 0xce9dc075, value, bitShift, _r, _ri);
};

/**
 * SIN
 *
 * @param {number} value
 * @return {number}
 */
global.Sin = function (value) {
  return _in(0x0badbfa3, 0xb172435f, _fv(value), _r, _rf);
};

/**
 * SQRT
 *
 * @param {number} value
 * @return {number}
 */
global.Sqrt = function (value) {
  return _in(0x71d93b57, 0xd07f9804, _fv(value), _r, _rf);
};

/**
 * TIMERA
 * Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
 *

 * @return {number}
 */
global.Timera = function () {
  return _in(0x83666f9f, 0xb8febd4b, _r, _ri);
};

/**
 * TIMERB
 *

 * @return {number}
 */
global.Timerb = function () {
  return _in(0xc9d94441, 0x86b5a374, _r, _ri);
};

/**
 * TIMESTEP
 * Gets the current frame time.
 *

 * @return {number}
 */
global.Timestep = function () {
  return _in(0x00000000, 0x50597ee2, _r, _rf);
};

/**
 * TO_FLOAT
 *
 * @param {number} value
 * @return {number}
 */
global.ToFloat = function (value) {
  return _in(0xbbda7924, 0x48db5a89, value, _r, _rf);
};

/**
 * VDIST
 * Calculates distance between vectors.
 * The value returned will be in meters.
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @return {number}
 */
global.Vdist = function (x1, y1, z1, x2, y2, z2) {
  return _in(0x2a488c17, 0x6d52cca5, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _r, _rf);
};

/**
 * VDIST2
 * Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
 * The value returned will be in RAGE units.
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @return {number}
 */
global.Vdist2 = function (x1, y1, z1, x2, y2, z2) {
  return _in(0xb7a62832, 0x0eff8e47, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _r, _rf);
};

/**
 * VMAG
 * Calculates the magnitude of a vector.
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.Vmag = function (x, y, z) {
  return _in(0x652d2eee, 0xf1d3e62c, _fv(x), _fv(y), _fv(z), _r, _rf);
};

/**
 * VMAG2
 * Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.Vmag2 = function (x, y, z) {
  return _in(0xa8ceacb4, 0xf35ae058, _fv(x), _fv(y), _fv(z), _r, _rf);
};

/**
 * WAIT
 *
 * @param {number} ms
 * @return {void}
 */
global.Wait = function (ms) {
  return _in(0x4ede34fb, 0xadd967a6, ms);
};

/**
 * ADD_CAM_SPLINE_NODE
 * p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
 * 
 * p8 big values ~100 will slow down the camera movement before reaching this node
 * 
 * p9 != 0 seems to override the rotation/pitch (bool?)
 *
 * @param {number} camera
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} length
 * @param {number} p8
 * @param {number} p9
 * @return {void}
 */
global.AddCamSplineNode = function (camera, x, y, z, xRot, yRot, zRot, length, p8, p9) {
  return _in(0xf1f57f9d, 0x230f9cd1, camera, _fv(x), _fv(y), _fv(z), _fv(xRot), _fv(yRot), _fv(zRot), length, p8, p9);
};

/**
 * ALLOW_MOTION_BLUR_DECAY
 *
 * @param {number} cam
 * @param {boolean} p1
 * @return {void}
 */
global.AllowMotionBlurDecay = function (cam, p1) {
  return _in(0x42ed56b0, 0x2e05d109, cam, p1);
};

/**
 * ATTACH_CAM_TO_ENTITY
 * Last param determines if its relative to the Entity
 *
 * @param {number} cam
 * @param {number} entity
 * @param {number} xOffset
 * @param {number} yOffset
 * @param {number} zOffset
 * @param {boolean} isRelative
 * @return {void}
 */
global.AttachCamToEntity = function (cam, entity, xOffset, yOffset, zOffset, isRelative) {
  return _in(0xfdc0df7f, 0x6fb0a592, cam, entity, _fv(xOffset), _fv(yOffset), _fv(zOffset), isRelative);
};

/**
 * ATTACH_CAM_TO_PED_BONE
 * boneIndex: https://github.com/femga/rdr3_discoveries/tree/master/boneNames
 *
 * @param {number} cam
 * @param {number} ped
 * @param {number} boneIndex
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} heading
 * @return {void}
 */
global.AttachCamToPedBone = function (cam, ped, boneIndex, x, y, z, heading) {
  return _in(0xdfc1e4a4, 0x4c0324ca, cam, ped, boneIndex, _fv(x), _fv(y), _fv(z), heading);
};

/**
 * CINEMATIC_LOCATION_OVERRIDE_TARGET_ENTITY_THIS_UPDATE
 * Only used in R* Script fm_mission_controller
 *
 * @param {string | number} name
 * @param {number} entity
 * @return {void}
 */
global.CinematicLocationOverrideTargetEntityThisUpdate = function (name, entity) {
  return _in(0x0b0f9144, 0x59731f60, _ts(name), entity);
};

/**
 * CINEMATIC_LOCATION_STOP_SCRIPTED_SHOT_EVENT
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.CinematicLocationStopScriptedShotEvent = function (p0, p1, p2) {
  return _in(0x6d4d25c2, 0x137ff511, p0, p1, p2);
};

/**
 * CINEMATIC_LOCATION_TRIGGER_SCRIPTED_SHOT_EVENT
 *
 * @param {string | number} dictionary
 * @param {string | number} shotName
 * @param {string | number} cameraName
 * @param {any} p3
 * @return {void}
 */
global.CinematicLocationTriggerScriptedShotEvent = function (dictionary, shotName, cameraName, p3) {
  return _in(0x02389579, 0xa53c3276, _ts(dictionary), _ts(shotName), _ts(cameraName), p3);
};

/**
 * CREATE_CAM
 *
 * @param {string | number} camName
 * @param {boolean} p1
 * @return {number}
 */
global.CreateCam = function (camName, p1) {
  return _in(0xe72cdba7, 0xf0a02dd6, _ts(camName), p1, _r, _ri);
};

/**
 * CREATE_CAMERA
 *
 * @param {number} camHash
 * @param {boolean} p1
 * @return {number}
 */
global.CreateCamera = function (camHash, p1) {
  return _in(0x57cdf879, 0xea466c46, _ch(camHash), p1, _r, _ri);
};

/**
 * CREATE_CAMERA_WITH_PARAMS
 *
 * @param {number} camHash
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} fov
 * @param {boolean} p8
 * @param {any} p9
 * @return {number}
 */
global.CreateCameraWithParams = function (camHash, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9) {
  return _in(0x98b99b9f, 0x27e2d60b, _ch(camHash), _fv(posX), _fv(posY), _fv(posZ), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(fov), p8, p9, _r, _ri);
};

/**
 * CREATE_CAM_WITH_PARAMS
 *
 * @param {string | number} camName
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} fov
 * @param {boolean} p8
 * @param {number} p9
 * @return {number}
 */
global.CreateCamWithParams = function (camName, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9) {
  return _in(0x40c23491, 0xce83708e, _ts(camName), _fv(posX), _fv(posY), _fv(posZ), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(fov), p8, p9, _r, _ri);
};

/**
 * DESTROY_ALL_CAMS
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 *
 * @param {boolean} p0
 * @return {void}
 */
global.DestroyAllCams = function (p0) {
  return _in(0x163600d6, 0xe136c9f8, p0);
};

/**
 * DESTROY_CAM
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 *
 * @param {number} cam
 * @param {boolean} p1
 * @return {void}
 */
global.DestroyCam = function (cam, p1) {
  return _in(0x4e67e0b6, 0xd7fd5145, cam, p1);
};

/**
 * DETACH_CAM
 *
 * @param {number} cam
 * @return {void}
 */
global.DetachCam = function (cam) {
  return _in(0x05b41ddb, 0xeb559556, cam);
};

/**
 * DISABLE_CAM_COLLISION_FOR_OBJECT
 *
 * @param {number} entity
 * @return {void}
 */
global.DisableCamCollisionForObject = function (entity) {
  return _in(0x7e3f546a, 0xcfe6c8d9, entity);
};

/**
 * DISABLE_CINEMATIC_BONNET_CAMERA_THIS_UPDATE
 * Old name: _DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME
 *

 * @return {void}
 */
global.DisableCinematicBonnetCameraThisUpdate = function () {
  return _in(0xa5929c2e, 0x57ac90d1);
};

/**
 * DISABLE_FIRST_PERSON_FLASH_EFFECT_THIS_UPDATE
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.DisableFirstPersonFlashEffectThisUpdate = function () {
  return _in(0x77d65669, 0xa05d1a1a);
};

/**
 * DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE
 * Old name: _DISABLE_FIRST_PERSON_CAM_THIS_FRAME
 *

 * @return {void}
 */
global.DisableOnFootFirstPersonViewThisUpdate = function () {
  return _in(0x9c473089, 0xa934c930);
};

/**
 * DOES_CAM_EXIST
 * Returns whether or not the passed camera handle exists.
 *
 * @param {number} cam
 * @return {boolean}
 */
global.DoesCamExist = function (cam) {
  return _in(0x153ad457, 0x764fd704, cam, _r);
};

/**
 * DO_SCREEN_FADE_IN
 * Fades the screen in.
 * 
 * duration: The time the fade should take, in milliseconds.
 *
 * @param {number} duration
 * @return {void}
 */
global.DoScreenFadeIn = function (duration) {
  return _in(0x6a053cf5, 0x96f67df7, duration);
};

/**
 * DO_SCREEN_FADE_OUT
 * Fades the screen out.
 * 
 * duration: The time the fade should take, in milliseconds.
 *
 * @param {number} duration
 * @return {void}
 */
global.DoScreenFadeOut = function (duration) {
  return _in(0x40c719a5, 0xe410b9e4, duration);
};

/**
 * FORCE_CINEMATIC_RENDERING_THIS_UPDATE
 *
 * @param {boolean} p0
 * @return {void}
 */
global.ForceCinematicRenderingThisUpdate = function (p0) {
  return _in(0x702b75dc, 0x9d3ede56, p0);
};

/**
 * GET_CAM_COORD
 *
 * @param {number} cam
 * @return {Vector3}
 */
global.GetCamCoord = function (cam) {
  return _in(0x6b12f11c, 0x2a9f0344, cam, _r, _rv);
};

/**
 * GET_CAM_FOV
 *
 * @param {number} cam
 * @return {number}
 */
global.GetCamFov = function (cam) {
  return _in(0x8101d32a, 0x0a6b0f60, cam, _r, _rf);
};

/**
 * GET_CAM_ROT
 * rotationOrder: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEulerRotationOrder
 *
 * @param {number} cam
 * @param {number} rotationOrder
 * @return {Vector3}
 */
global.GetCamRot = function (cam, rotationOrder) {
  return _in(0x9bf96b57, 0x254e7889, cam, rotationOrder, _r, _rv);
};

/**
 * GET_CAM_SPLINE_PHASE
 * Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
 * 
 * (returns 1.0f when no nodes has been added, reached end of non existing spline)
 *
 * @param {number} cam
 * @return {number}
 */
global.GetCamSplinePhase = function (cam) {
  return _in(0x095edcd2, 0x4d90033a, cam, _r, _rf);
};

/**
 * GET_FINAL_RENDERED_CAM_COORD
 *

 * @return {Vector3}
 */
global.GetFinalRenderedCamCoord = function () {
  return _in(0x5352e025, 0xec2b416f, _r, _rv);
};

/**
 * GET_FINAL_RENDERED_CAM_FOV
 *

 * @return {number}
 */
global.GetFinalRenderedCamFov = function () {
  return _in(0x04af7797, 0x1e508f6a, _r, _rf);
};

/**
 * GET_FINAL_RENDERED_CAM_ROT
 *
 * @param {number} rotationOrder
 * @return {Vector3}
 */
global.GetFinalRenderedCamRot = function (rotationOrder) {
  return _in(0x602685bd, 0x85dd26ca, rotationOrder, _r, _rv);
};

/**
 * GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR
 *

 * @return {number}
 */
global.GetFirstPersonAimCamZoomFactor = function () {
  return _in(0xb4132ca1, 0xb0ee1365, _r, _rf);
};

/**
 * GET_GAMEPLAY_CAM_COORD
 *

 * @return {Vector3}
 */
global.GetGameplayCamCoord = function () {
  return _in(0x59532020, 0x0b98596e, _r, _rv);
};

/**
 * GET_GAMEPLAY_CAM_FOV
 *

 * @return {number}
 */
global.GetGameplayCamFov = function () {
  return _in(0xf6a96e5a, 0xceec6e50, _r, _rf);
};

/**
 * GET_GAMEPLAY_CAM_RELATIVE_HEADING
 *

 * @return {number}
 */
global.GetGameplayCamRelativeHeading = function () {
  return _in(0xc4abf536, 0x048998aa, _r, _rf);
};

/**
 * GET_GAMEPLAY_CAM_RELATIVE_PITCH
 *

 * @return {number}
 */
global.GetGameplayCamRelativePitch = function () {
  return _in(0x99aadebb, 0xa803f827, _r, _rf);
};

/**
 * GET_GAMEPLAY_CAM_ROT
 *
 * @param {number} rotationOrder
 * @return {Vector3}
 */
global.GetGameplayCamRot = function (rotationOrder) {
  return _in(0x0252d2b5, 0x582957a6, rotationOrder, _r, _rv);
};

/**
 * GET_LETTER_BOX_RATIO
 * More info: see HAS_LETTER_BOX
 *

 * @return {number}
 */
global.GetLetterBoxRatio = function () {
  return _in(0xa2b1c7ef, 0x759a63ce, _r, _rf);
};

/**
 * GET_RENDERING_CAM
 *

 * @return {number}
 */
global.GetRenderingCam = function () {
  return _in(0x03a8931e, 0xcc8015d6, _r, _ri);
};

/**
 * HAS_LETTER_BOX
 * More info: https://en.wikipedia.org/wiki/Letterboxing_(filming)
 *

 * @return {boolean}
 */
global.HasLetterBox = function () {
  return _in(0x81dcfd13, 0xcf39920e, _r);
};

/**
 * INVALIDATE_CINEMATIC_VEHICLE_IDLE_MODE
 * Old name: _INVALIDATE_VEHICLE_IDLE_CAM
 *

 * @return {void}
 */
global.InvalidateCinematicVehicleIdleMode = function () {
  return _in(0x634f4a05, 0x62cf19b8);
};

/**
 * IS_AIM_CAM_ACTIVE
 *

 * @return {boolean}
 */
global.IsAimCamActive = function () {
  return _in(0x698f456f, 0xb909e077, _r);
};

/**
 * IS_CAM_ACTIVE
 * Returns whether or not the passed camera handle is active.
 *
 * @param {number} cam
 * @return {boolean}
 */
global.IsCamActive = function (cam) {
  return _in(0x63efcc7e, 0x1810b8e6, cam, _r);
};

/**
 * IS_CAM_INTERPOLATING
 *
 * @param {number} cam
 * @return {boolean}
 */
global.IsCamInterpolating = function (cam) {
  return _in(0x578f8f1c, 0xaa17bd2b, cam, _r);
};

/**
 * IS_CAM_RENDERING
 *
 * @param {number} cam
 * @return {boolean}
 */
global.IsCamRendering = function (cam) {
  return _in(0x4415f8a6, 0xc536d39f, cam, _r);
};

/**
 * IS_CAM_SHAKING
 *
 * @param {number} cam
 * @return {boolean}
 */
global.IsCamShaking = function (cam) {
  return _in(0x2eeb402b, 0xd7320159, cam, _r);
};

/**
 * IS_CINEMATIC_CAM_RENDERING
 *

 * @return {boolean}
 */
global.IsCinematicCamRendering = function () {
  return _in(0xbf7c7807, 0x31aadbf8, _r);
};

/**
 * IS_DEATH_FAIL_CAMERA_RUNNING
 *

 * @return {boolean}
 */
global.IsDeathFailCameraRunning = function () {
  return _in(0x139efb0a, 0x71dd9011, _r);
};

/**
 * IS_FIRST_PERSON_AIM_CAM_ACTIVE
 *

 * @return {boolean}
 */
global.IsFirstPersonAimCamActive = function () {
  return _in(0xf63134c5, 0x4b6ec212, _r);
};

/**
 * IS_FIRST_PERSON_CAMERA_ACTIVE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {boolean}
 */
global.IsFirstPersonCameraActive = function (p0, p1, p2) {
  return _in(0xa24c1d34, 0x1c6e0d53, p0, p1, p2, _r);
};

/**
 * IS_FOLLOW_VEHICLE_CAM_ACTIVE
 *

 * @return {boolean}
 */
global.IsFollowVehicleCamActive = function () {
  return _in(0xa40c2f51, 0xfb589e9a, _r);
};

/**
 * IS_GAMEPLAY_CAM_LOOKING_BEHIND
 *

 * @return {boolean}
 */
global.IsGameplayCamLookingBehind = function () {
  return _in(0x8fe0d24f, 0xfd04d5a2, _r);
};

/**
 * IS_GAMEPLAY_CAM_RENDERING
 *

 * @return {boolean}
 */
global.IsGameplayCamRendering = function () {
  return _in(0x8660ea71, 0x4834e412, _r);
};

/**
 * IS_GAMEPLAY_CAM_SHAKING
 *

 * @return {boolean}
 */
global.IsGameplayCamShaking = function () {
  return _in(0xea4c5f4a, 0xa0a4dbef, _r);
};

/**
 * IS_GAMEPLAY_HINT_ACTIVE
 *

 * @return {boolean}
 */
global.IsGameplayHintActive = function () {
  return _in(0x2e04ab5f, 0xee042d4a, _r);
};

/**
 * IS_INTERPOLATING_FROM_SCRIPT_CAMS
 *

 * @return {boolean}
 */
global.IsInterpolatingFromScriptCams = function () {
  return _in(0x251241ca, 0xec707106, _r);
};

/**
 * IS_INTERPOLATING_TO_SCRIPT_CAMS
 *

 * @return {boolean}
 */
global.IsInterpolatingToScriptCams = function () {
  return _in(0x43ab9d5a, 0x7d415478, _r);
};

/**
 * IS_SCREEN_FADED_IN
 *

 * @return {boolean}
 */
global.IsScreenFadedIn = function () {
  return _in(0x37f9a426, 0xfbcf4af2, _r);
};

/**
 * IS_SCREEN_FADED_OUT
 *

 * @return {boolean}
 */
global.IsScreenFadedOut = function () {
  return _in(0xf5472c80, 0xdf2ff847, _r);
};

/**
 * IS_SCREEN_FADING_IN
 *

 * @return {boolean}
 */
global.IsScreenFadingIn = function () {
  return _in(0x0ceccc63, 0xffa2ef24, _r);
};

/**
 * IS_SCREEN_FADING_OUT
 *

 * @return {boolean}
 */
global.IsScreenFadingOut = function () {
  return _in(0x02f39bef, 0xe7b88d00, _r);
};

/**
 * IS_SPHERE_VISIBLE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {boolean}
 */
global.IsSphereVisible = function (x, y, z, radius) {
  return _in(0x2e941b5f, 0xfa2989c6, _fv(x), _fv(y), _fv(z), _fv(radius), _r);
};

/**
 * PLAY_CAM_ANIM
 *
 * @param {number} cam
 * @param {string | number} animName
 * @param {string | number} animDictionary
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} animFlags
 * @param {number} rotOrder
 * @return {boolean}
 */
global.PlayCamAnim = function (cam, animName, animDictionary, x, y, z, xRot, yRot, zRot, animFlags, rotOrder) {
  return _in(0xa263ddf6, 0x94d563f6, cam, _ts(animName), _ts(animDictionary), _fv(x), _fv(y), _fv(z), _fv(xRot), _fv(yRot), _fv(zRot), animFlags, rotOrder, _r);
};

/**
 * POINT_CAM_AT_COORD
 *
 * @param {number} cam
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.PointCamAtCoord = function (cam, x, y, z) {
  return _in(0x948b3934, 0x1c3a40c2, cam, _fv(x), _fv(y), _fv(z));
};

/**
 * POINT_CAM_AT_ENTITY
 *
 * @param {number} cam
 * @param {number} entity
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {boolean} p5
 * @return {void}
 */
global.PointCamAtEntity = function (cam, entity, p2, p3, p4, p5) {
  return _in(0xfc2867e6, 0x074d3a61, cam, entity, _fv(p2), _fv(p3), _fv(p4), p5);
};

/**
 * RENDER_SCRIPT_CAMS
 * ease - smooth transition between the camera's positions
 * easeTime - Time in milliseconds for the transition to happen
 * 
 * If you have created a script (rendering) camera, and want to go back to the 
 * character (gameplay) camera, call this native with render set to FALSE.
 * Setting ease to TRUE will smooth the transition.
 *
 * @param {boolean} render
 * @param {boolean} ease
 * @param {number} easeTime
 * @param {boolean} p3
 * @param {boolean} p4
 * @param {number} p5
 * @return {void}
 */
global.RenderScriptCams = function (render, ease, easeTime, p3, p4, p5) {
  return _in(0x33281167, 0xe4942e4f, render, ease, easeTime, p3, p4, p5);
};

/**
 * SET_CAM_ACTIVE
 * Set camera as active/inactive.
 *
 * @param {number} cam
 * @param {boolean} active
 * @return {void}
 */
global.SetCamActive = function (cam, active) {
  return _in(0x87295bca, 0x613800c8, cam, active);
};

/**
 * SET_CAM_ACTIVE_WITH_INTERP
 *
 * @param {number} camTo
 * @param {number} camFrom
 * @param {number} duration
 * @param {number} easeLocation
 * @param {number} easeRotation
 * @return {void}
 */
global.SetCamActiveWithInterp = function (camTo, camFrom, duration, easeLocation, easeRotation) {
  return _in(0x8b15ae29, 0x87c1ac8f, camTo, camFrom, duration, easeLocation, easeRotation);
};

/**
 * SET_CAM_AFFECTS_AIMING
 * Allows you to aim and shoot at the direction the camera is facing.
 *
 * @param {number} cam
 * @param {boolean} toggle
 * @return {void}
 */
global.SetCamAffectsAiming = function (cam, toggle) {
  return _in(0x3cb9e8bd, 0xe5e76f33, cam, toggle);
};

/**
 * SET_CAM_CONTROLS_MINI_MAP_HEADING
 *
 * @param {number} cam
 * @param {boolean} p1
 * @return {void}
 */
global.SetCamControlsMiniMapHeading = function (cam, p1) {
  return _in(0x1b8f3ce5, 0xa6001298, cam, p1);
};

/**
 * SET_CAM_COORD
 * Sets the position of the cam.
 *
 * @param {number} cam
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @return {void}
 */
global.SetCamCoord = function (cam, posX, posY, posZ) {
  return _in(0xf9ee7d41, 0x9ee49de6, cam, _fv(posX), _fv(posY), _fv(posZ));
};

/**
 * SET_CAM_FAR_CLIP
 *
 * @param {number} cam
 * @param {number} farClip
 * @return {void}
 */
global.SetCamFarClip = function (cam, farClip) {
  return _in(0x5e32817b, 0xf6302111, cam, _fv(farClip));
};

/**
 * SET_CAM_FOV
 * Sets the field of view of the cam.
 * 
 * Min: 1.0f
 * Max: 130.0f
 *
 * @param {number} cam
 * @param {number} fieldOfView
 * @return {void}
 */
global.SetCamFov = function (cam, fieldOfView) {
  return _in(0x27666e59, 0x88d9d429, cam, _fv(fieldOfView));
};

/**
 * SET_CAM_MOTION_BLUR_STRENGTH
 *
 * @param {number} cam
 * @param {number} strength
 * @return {void}
 */
global.SetCamMotionBlurStrength = function (cam, strength) {
  return _in(0x45fd8913, 0x64181f9e, cam, _fv(strength));
};

/**
 * SET_CAM_NEAR_CLIP
 *
 * @param {number} cam
 * @param {number} nearClip
 * @return {void}
 */
global.SetCamNearClip = function (cam, nearClip) {
  return _in(0xa9240282, 0x72a61364, cam, _fv(nearClip));
};

/**
 * SET_CAM_PARAMS
 *
 * @param {number} cam
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} fieldOfView
 * @param {any} p8
 * @param {number} p9
 * @param {number} p10
 * @param {number} p11
 * @param {any} p12
 * @param {any} p13
 * @return {void}
 */
global.SetCamParams = function (cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, p8, p9, p10, p11, p12, p13) {
  return _in(0xa47bbfff, 0xb83d4d0a, cam, _fv(posX), _fv(posY), _fv(posZ), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(fieldOfView), p8, p9, p10, p11, p12, p13);
};

/**
 * SET_CAM_ROT
 * Sets the rotation of the cam.
 *
 * @param {number} cam
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} rotationOrder
 * @return {void}
 */
global.SetCamRot = function (cam, rotX, rotY, rotZ, rotationOrder) {
  return _in(0x63dfa681, 0x0ad78719, cam, _fv(rotX), _fv(rotY), _fv(rotZ), rotationOrder);
};

/**
 * SET_CAM_SPLINE_DURATION
 *
 * @param {number} cam
 * @param {number} timeDuration
 * @return {void}
 */
global.SetCamSplineDuration = function (cam, timeDuration) {
  return _in(0xff631165, 0x2ca91015, cam, timeDuration);
};

/**
 * SET_CAM_SPLINE_PHASE
 *
 * @param {number} cam
 * @param {number} p1
 * @return {void}
 */
global.SetCamSplinePhase = function (cam, p1) {
  return _in(0xf1898a68, 0xe7c15636, cam, _fv(p1));
};

/**
 * SET_CAM_SPLINE_SMOOTHING_STYLE
 *
 * @param {number} cam
 * @param {number} smoothingStyle
 * @return {void}
 */
global.SetCamSplineSmoothingStyle = function (cam, smoothingStyle) {
  return _in(0x84b36456, 0x18e726b0, cam, smoothingStyle);
};

/**
 * SET_CINEMATIC_BUTTON_ACTIVE
 *
 * @param {boolean} p0
 * @return {void}
 */
global.SetCinematicButtonActive = function (p0) {
  return _in(0xb90411f4, 0x80457a6c, p0);
};

/**
 * SET_CINEMATIC_MODE_ACTIVE
 *
 * @param {boolean} p0
 * @return {void}
 */
global.SetCinematicModeActive = function (p0) {
  return _in(0xce7a90b1, 0x60f75046, p0);
};

/**
 * SET_FIRST_PERSON_AIM_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.SetFirstPersonAimCamRelativeHeadingLimitsThisUpdate = function (p0, p1) {
  return _in(0x05bd5e40, 0x88b30a66, _fv(p0), _fv(p1));
};

/**
 * SET_FIRST_PERSON_AIM_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE
 * Old name: _SET_FIRST_PERSON_CAM_PITCH_RANGE
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.SetFirstPersonAimCamRelativePitchLimitsThisUpdate = function (p0, p1) {
  return _in(0x715b7f5e, 0x8bed32a2, _fv(p0), _fv(p1));
};

/**
 * SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE
 * Forces gameplay cam to specified ped as if you were the ped or spectating it
 *
 * @param {number} ped
 * @return {void}
 */
global.SetGameplayCamFollowPedThisUpdate = function (ped) {
  return _in(0x82e41d6a, 0xde924fca, ped);
};

/**
 * SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE
 * Old name: _DISABLE_CAM_COLLISION_FOR_ENTITY
 *
 * @param {number} entity
 * @return {void}
 */
global.SetGameplayCamIgnoreEntityCollisionThisUpdate = function (entity) {
  return _in(0xd904f75d, 0xbd7ab865, entity);
};

/**
 * SET_GAMEPLAY_CAM_MAX_MOTION_BLUR_STRENGTH_THIS_UPDATE
 *
 * @param {number} p0
 * @return {void}
 */
global.SetGameplayCamMaxMotionBlurStrengthThisUpdate = function (p0) {
  return _in(0x8459b3e6, 0x4257b21d, _fv(p0));
};

/**
 * SET_GAMEPLAY_CAM_RELATIVE_HEADING
 * Sets the camera position relative to heading in float from -360 to +360.
 * 
 * Heading is always 0 in aiming camera.
 *
 * @param {number} heading
 * @param {number} p1
 * @return {void}
 */
global.SetGameplayCamRelativeHeading = function (heading, p1) {
  return _in(0x5d1eb123, 0xeac5d071, _fv(heading), _fv(p1));
};

/**
 * SET_GAMEPLAY_CAM_RELATIVE_PITCH
 * Sets the camera pitch.
 * 
 * Parameters:
 * x = pitches the camera on the x axis.
 * Value2 = always seems to be hex 0x3F800000 (1.000000 float).
 *
 * @param {number} x
 * @param {number} value2
 * @return {void}
 */
global.SetGameplayCamRelativePitch = function (x, value2) {
  return _in(0xfb760af4, 0xf537b8bf, _fv(x), _fv(value2));
};

/**
 * SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE
 * Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake.
 *
 * @param {number} amplitude
 * @return {void}
 */
global.SetGameplayCamShakeAmplitude = function (amplitude) {
  return _in(0x570e35f5, 0xc4a44838, _fv(amplitude));
};

/**
 * SET_GAMEPLAY_COORD_HINT
 * Hash used in finale1.ysc: 1726668277
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} duration
 * @param {number} blendOutDuration
 * @param {number} blendInDuration
 * @param {number} p6
 * @return {void}
 */
global.SetGameplayCoordHint = function (x, y, z, duration, blendOutDuration, blendInDuration, p6) {
  return _in(0xfa33b8c6, 0x9a4a6a0f, _fv(x), _fv(y), _fv(z), duration, blendOutDuration, blendInDuration, _ch(p6));
};

/**
 * SET_GAMEPLAY_ENTITY_HINT
 * p6 & p7 - possibly length or time
 *
 * @param {number} entity
 * @param {number} xOffset
 * @param {number} yOffset
 * @param {number} zOffset
 * @param {boolean} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {any} p8
 * @return {void}
 */
global.SetGameplayEntityHint = function (entity, xOffset, yOffset, zOffset, p4, p5, p6, p7, p8) {
  return _in(0xd1f7f326, 0x40adfd12, entity, _fv(xOffset), _fv(yOffset), _fv(zOffset), p4, p5, p6, p7, p8);
};

/**
 * SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET
 *
 * @param {number} p0
 * @return {void}
 */
global.SetGameplayHintBaseOrbitPitchOffset = function (p0) {
  return _in(0x421192a2, 0xda48fd01, _fv(p0));
};

/**
 * SET_GAMEPLAY_HINT_CAMERA_RELATIVE_SIDE_OFFSET
 * Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETX
 *
 * @param {number} p0
 * @return {void}
 */
global.SetGameplayHintCameraRelativeSideOffset = function (p0) {
  return _in(0xf86b6f93, 0x727c59c9, _fv(p0));
};

/**
 * SET_GAMEPLAY_HINT_CAMERA_RELATIVE_VERTICAL_OFFSET
 * Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETY
 *
 * @param {number} p0
 * @return {void}
 */
global.SetGameplayHintCameraRelativeVerticalOffset = function (p0) {
  return _in(0x29e74f81, 0x9150cc32, _fv(p0));
};

/**
 * SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR
 *
 * @param {number} p0
 * @return {void}
 */
global.SetGameplayHintFollowDistanceScalar = function (p0) {
  return _in(0xdddc5418, 0x1868f81f, _fv(p0));
};

/**
 * SET_GAMEPLAY_HINT_FOV
 *
 * @param {number} fov
 * @return {void}
 */
global.SetGameplayHintFov = function (fov) {
  return _in(0x661e58bc, 0x6f00a49a, _fv(fov));
};

/**
 * SET_GAMEPLAY_OBJECT_HINT
 *
 * @param {any} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {boolean} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.SetGameplayObjectHint = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xc40551d6, 0x5f2bf297, p0, _fv(p1), _fv(p2), _fv(p3), p4, p5, p6, p7);
};

/**
 * SET_GAMEPLAY_PED_HINT
 *
 * @param {number} p0
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {boolean} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.SetGameplayPedHint = function (p0, x1, y1, z1, p4, p5, p6, p7) {
  return _in(0x90fb9516, 0x48851733, p0, _fv(x1), _fv(y1), _fv(z1), p4, p5, p6, p7);
};

/**
 * SET_GAMEPLAY_VEHICLE_HINT
 *
 * @param {any} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {boolean} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.SetGameplayVehicleHint = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xe2b2bb7d, 0xac280515, p0, _fv(p1), _fv(p2), _fv(p3), p4, p5, p6, p7);
};

/**
 * SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE
 * Forces gameplay cam to specified vehicle as if you were in it
 *
 * @param {number} vehicle
 * @param {number} p1
 * @return {void}
 */
global.SetInVehicleCamStateThisUpdate = function (vehicle, p1) {
  return _in(0xfa1d5e8d, 0x1c3ccd67, vehicle, p1);
};

/**
 * SET_SCRIPTED_CAMERA_IS_FIRST_PERSON_THIS_FRAME
 *
 * @param {boolean} p0
 * @return {void}
 */
global.SetScriptedCameraIsFirstPersonThisFrame = function (p0) {
  return _in(0x1dd95a8d, 0x6b24a0c9, p0);
};

/**
 * SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE
 * Old name: _ANIMATE_GAMEPLAY_CAM_ZOOM
 *
 * @param {number} p0
 * @param {number} distance
 * @return {void}
 */
global.SetThirdPersonCamOrbitDistanceLimitsThisUpdate = function (p0, distance) {
  return _in(0x2126c740, 0xa4ac370b, _fv(p0), _fv(distance));
};

/**
 * SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE
 * minimum: Degrees between -180f and 180f.
 * maximum: Degrees between -180f and 180f.
 * 
 * Clamps the gameplay camera's current yaw.
 * 
 * Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
 * 
 * Old name: _CLAMP_GAMEPLAY_CAM_YAW
 *
 * @param {number} minimum
 * @param {number} maximum
 * @return {void}
 */
global.SetThirdPersonCamRelativeHeadingLimitsThisUpdate = function (minimum, maximum) {
  return _in(0x14f39473, 0x18ca8ad2, _fv(minimum), _fv(maximum));
};

/**
 * SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE
 * minimum: Degrees between -90f and 90f.
 * maximum: Degrees between -90f and 90f.
 * 
 * Clamps the gameplay camera's current pitch.
 * 
 * Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
 * 
 * Old name: _CLAMP_GAMEPLAY_CAM_PITCH
 *
 * @param {number} minimum
 * @param {number} maximum
 * @return {void}
 */
global.SetThirdPersonCamRelativePitchLimitsThisUpdate = function (minimum, maximum) {
  return _in(0x326c7aa3, 0x08f3df6a, _fv(minimum), _fv(maximum));
};

/**
 * SET_WIDESCREEN_BORDERS
 *
 * @param {boolean} p0
 * @param {number} p1
 * @return {void}
 */
global.SetWidescreenBorders = function (p0, p1) {
  return _in(0xd7f4d54c, 0xf80afa34, p0, p1);
};

/**
 * SHAKE_CAM
 *
 * @param {number} cam
 * @param {string | number} type
 * @param {number} amplitude
 * @return {void}
 */
global.ShakeCam = function (cam, type, amplitude) {
  return _in(0xf9a7bcf5, 0xd050d4e7, cam, _ts(type), _fv(amplitude));
};

/**
 * SHAKE_GAMEPLAY_CAM
 *
 * @param {string | number} shakeName
 * @param {number} intensity
 * @return {void}
 */
global.ShakeGameplayCam = function (shakeName, intensity) {
  return _in(0xd9b31b46, 0x50520529, _ts(shakeName), _fv(intensity));
};

/**
 * STOP_CAM_POINTING
 *
 * @param {number} cam
 * @return {void}
 */
global.StopCamPointing = function (cam) {
  return _in(0xca1b30a3, 0x357c71f1, cam);
};

/**
 * STOP_CAM_SHAKING
 *
 * @param {number} cam
 * @param {boolean} p1
 * @return {void}
 */
global.StopCamShaking = function (cam, p1) {
  return _in(0xb78cc4b4, 0x706614b0, cam, p1);
};

/**
 * STOP_CODE_GAMEPLAY_HINT
 *
 * @param {boolean} p0
 * @return {void}
 */
global.StopCodeGameplayHint = function (p0) {
  return _in(0x93759a83, 0xd0d844e7, p0);
};

/**
 * STOP_GAMEPLAY_CAM_SHAKING
 *
 * @param {boolean} p0
 * @return {void}
 */
global.StopGameplayCamShaking = function (p0) {
  return _in(0xe0de43d2, 0x90fb65f9, p0);
};

/**
 * STOP_GAMEPLAY_HINT
 *
 * @param {boolean} p0
 * @return {void}
 */
global.StopGameplayHint = function (p0) {
  return _in(0x1bcec33d, 0x54cfca8a, p0);
};

/**
 * STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP
 * This native makes the gameplay camera zoom into first person/third person with a special effect.
 * blendBackSmoothingType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eBlendBackSmoothing
 *
 * @param {boolean} render
 * @param {number} distance
 * @param {number} blendBackSmoothingType
 * @param {boolean} p3
 * @param {boolean} p4
 * @param {boolean} p5
 * @return {void}
 */
global.StopRenderingScriptCamsUsingCatchUp = function (render, distance, blendBackSmoothingType, p3, p4, p5) {
  return _in(0x8c7c7ff7, 0xcf0e5153, render, _fv(distance), blendBackSmoothingType, p3, p4, p5);
};

/**
 * _0x0060B31968E60E41
 * shakeNames in script_rel: CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, POV_DRUNK_SHAKE, DRUNK_SHAKE, MINIGAME_TRAIN_SHAKE
 * _IS_GAMEPLAY_*
 *
 * @param {string | number} shakeName
 * @return {boolean}
 */
global.N_0x0060B31968E60E41 = function (shakeName) {
  return _in(0x0060b319, 0x68e60e41, _ts(shakeName), _r);
};

/**
 * _0x04084490CC302CFB
 *

 * @return {void}
 */
global.N_0x04084490CC302CFB = function () {
  return _in(0x04084490, 0xcc302cfb);
};

/**
 * _0x06557F6D96C86881
 *

 * @return {void}
 */
global.N_0x06557F6D96C86881 = function () {
  return _in(0x06557f6d, 0x96c86881);
};

/**
 * _SET_GAMEPLAY_CAM_PARAMS_THIS_UPDATE
 * Not official name
 * This native allows to move the gameplay cam with the given speed, enableSlide will allow to move the cam to the slideOffset, enableZoom will allow to move the cam to the zoomOffset. 
 * 
 * EXAMPLE:
 * Citizen.InvokeNative(0x066167c63111d8cf,1.0, true, -1.0, true, 2.0)
 *
 * @param {number} camSpeed
 * @param {boolean} enableSlide
 * @param {number} slideOffset
 * @param {boolean} enableZoom
 * @param {number} zoomOffset
 * @return {void}
 */
global.SetGameplayCamParamsThisUpdate = function (camSpeed, enableSlide, slideOffset, enableZoom, zoomOffset) {
  return _in(0x066167c6, 0x3111d8cf, _fv(camSpeed), enableSlide, _fv(slideOffset), enableZoom, _fv(zoomOffset));
};

/**
 * _0x0961B089947BA6D0
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0961B089947BA6D0 = function (p0) {
  return _in(0x0961b089, 0x947ba6d0, p0);
};

/**
 * _0x0F1FFEF5D54AE832
 * NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
 * _DISABLE_*
 *

 * @return {void}
 */
global.N_0x0F1FFEF5D54AE832 = function () {
  return _in(0x0f1ffef5, 0xd54ae832);
};

/**
 * _0x0FF7125F07DEB84F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0FF7125F07DEB84F = function (p0, p1) {
  return _in(0x0ff7125f, 0x07deb84f, p0, p1);
};

/**
 * _0x1204EB53A5FBC63D
 * Used for DUELING_LOCK_CAMERA_CONTROLS_THIS_FRAME: Disabling look/aim controls
 * _IS_SC(REEN_)* (?)
 *

 * @return {boolean}
 */
global.N_0x1204EB53A5FBC63D = function () {
  return _in(0x1204eb53, 0xa5fbc63d, _r);
};

/**
 * _0x14C4A49E36C29E49
 *

 * @return {any}
 */
global.N_0x14C4A49E36C29E49 = function () {
  return _in(0x14c4a49e, 0x36c29e49, _r);
};

/**
 * _0x16E9ABDD34DDD931
 *

 * @return {void}
 */
global.N_0x16E9ABDD34DDD931 = function () {
  return _in(0x16e9abdd, 0x34ddd931);
};

/**
 * _0x1811A02277A9E49D
 *

 * @return {boolean}
 */
global.N_0x1811A02277A9E49D = function () {
  return _in(0x1811a022, 0x77a9e49d, _r);
};

/**
 * _0x18C3DFAC458783BB
 *

 * @return {void}
 */
global.N_0x18C3DFAC458783BB = function () {
  return _in(0x18c3dfac, 0x458783bb);
};

/**
 * _0x190F7DA1AC09A8EF
 *

 * @return {any}
 */
global.N_0x190F7DA1AC09A8EF = function () {
  return _in(0x190f7da1, 0xac09a8ef, _r);
};

/**
 * _0x1D931B7CC0EE3956
 *
 * @param {string | number} dictionary
 * @param {string | number} shotName
 * @param {string | number} cameraName
 * @return {boolean}
 */
global.N_0x1D931B7CC0EE3956 = function (dictionary, shotName, cameraName) {
  return _in(0x1d931b7c, 0xc0ee3956, _ts(dictionary), _ts(shotName), _ts(cameraName), _r);
};

/**
 * _0x1D9F72DD4FD9A9D7
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x1D9F72DD4FD9A9D7 = function (p0) {
  return _in(0x1d9f72dd, 0x4fd9a9d7, p0);
};

/**
 * _0x1F6EBD94680252CE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x1F6EBD94680252CE = function (p0, p1) {
  return _in(0x1f6ebd94, 0x680252ce, p0, p1);
};

/**
 * _0x1FC6C727D30FFDDE
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x1FC6C727D30FFDDE = function (p0) {
  return _in(0x1fc6c727, 0xd30ffdde, p0);
};

/**
 * _0x29E6655DF3590B0D
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x29E6655DF3590B0D = function (p0) {
  return _in(0x29e6655d, 0xf3590b0d, p0);
};

/**
 * _0x2AB7C81B3F70570C
 *

 * @return {any}
 */
global.N_0x2AB7C81B3F70570C = function () {
  return _in(0x2ab7c81b, 0x3f70570c, _r);
};

/**
 * _0x2DD3149DC34A3F4C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x2DD3149DC34A3F4C = function (p0) {
  return _in(0x2dd3149d, 0xc34a3f4c, p0);
};

/**
 * _0x39073DA4EDDBC91D
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x39073DA4EDDBC91D = function (p0) {
  return _in(0x39073da4, 0xeddbc91d, p0);
};

/**
 * _0x3B8E3AD9677CE12B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x3B8E3AD9677CE12B = function (p0, p1, p2) {
  return _in(0x3b8e3ad9, 0x677ce12b, p0, p1, p2);
};

/**
 * _0x3C486E334520579D
 *

 * @return {void}
 */
global.N_0x3C486E334520579D = function () {
  return _in(0x3c486e33, 0x4520579d);
};

/**
 * _0x3C8F74E8FE751614
 *

 * @return {void}
 */
global.N_0x3C8F74E8FE751614 = function () {
  return _in(0x3c8f74e8, 0xfe751614);
};

/**
 * _0x4138EE36BC3DC0A7
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x4138EE36BC3DC0A7 = function (p0, p1) {
  return _in(0x4138ee36, 0xbc3dc0a7, p0, p1, _r);
};

/**
 * _0x41E452A3C580D1A7
 *

 * @return {void}
 */
global.N_0x41E452A3C580D1A7 = function () {
  return _in(0x41e452a3, 0xc580d1a7);
};

/**
 * _0x450769C833D58844
 *

 * @return {any}
 */
global.N_0x450769C833D58844 = function () {
  return _in(0x450769c8, 0x33d58844, _r);
};

/**
 * _0x465F04F68AD38197
 *
 * @param {string | number} dictionary
 * @param {string | number} shotName
 * @param {number} duration
 * @return {any}
 */
global.N_0x465F04F68AD38197 = function (dictionary, shotName, duration) {
  return _in(0x465f04f6, 0x8ad38197, _ts(dictionary), _ts(shotName), duration, _r);
};

/**
 * _0x4D2F46D1B28D90FB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x4D2F46D1B28D90FB = function (p0, p1) {
  return _in(0x4d2f46d1, 0xb28d90fb, p0, p1);
};

/**
 * _0x5060FA977CEA4455
 *

 * @return {any}
 */
global.N_0x5060FA977CEA4455 = function () {
  return _in(0x5060fa97, 0x7cea4455, _r);
};

/**
 * _0x5B637D6F3B67716A
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x5B637D6F3B67716A = function (p0) {
  return _in(0x5b637d6f, 0x3b67716a, p0);
};

/**
 * _0x6072B7420A83A03F
 *

 * @return {any}
 */
global.N_0x6072B7420A83A03F = function () {
  return _in(0x6072b742, 0x0a83a03f, _r);
};

/**
 * _0x632BE8D84846FA56
 * Zooms in the gameplay camera to the next zoom level?
 * USE_* - WAS_*
 *

 * @return {void}
 */
global.N_0x632BE8D84846FA56 = function () {
  return _in(0x632be8d8, 0x4846fa56);
};

/**
 * _0x63E5841A9264D016
 * Maintains the death camera after respawn
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0x63E5841A9264D016 = function (toggle) {
  return _in(0x63e5841a, 0x9264d016, toggle);
};

/**
 * _0x641092322A8852AB
 *

 * @return {void}
 */
global.N_0x641092322A8852AB = function () {
  return _in(0x64109232, 0x2a8852ab);
};

/**
 * _0x6519238858AF5479
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6519238858AF5479 = function (p0) {
  return _in(0x65192388, 0x58af5479, p0);
};

/**
 * _0x6CAB0BA160B168D2
 *

 * @return {void}
 */
global.N_0x6CAB0BA160B168D2 = function () {
  return _in(0x6cab0ba1, 0x60b168d2);
};

/**
 * _0x6DFD37E586D4F44F
 *

 * @return {any}
 */
global.N_0x6DFD37E586D4F44F = function () {
  return _in(0x6dfd37e5, 0x86d4f44f, _r);
};

/**
 * _0x70A6658D476C6187
 *

 * @return {void}
 */
global.N_0x70A6658D476C6187 = function () {
  return _in(0x70a6658d, 0x476c6187);
};

/**
 * _0x718C6ECF5E8CBDD4
 *

 * @return {void}
 */
global.N_0x718C6ECF5E8CBDD4 = function () {
  return _in(0x718c6ecf, 0x5e8cbdd4);
};

/**
 * _0x71D71E08A7ED5BD7
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x71D71E08A7ED5BD7 = function (p0) {
  return _in(0x71d71e08, 0xa7ed5bd7, p0);
};

/**
 * _0x728491FB3DFFEF99
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x728491FB3DFFEF99 = function (p0) {
  return _in(0x728491fb, 0x3dffef99, p0);
};

/**
 * _0x73FF6BE63DC18819
 *

 * @return {any}
 */
global.N_0x73FF6BE63DC18819 = function () {
  return _in(0x73ff6be6, 0x3dc18819, _r);
};

/**
 * _0x796085220ADCC847
 *

 * @return {any}
 */
global.N_0x796085220ADCC847 = function () {
  return _in(0x79608522, 0x0adcc847, _r);
};

/**
 * _0x7CE9DC58E3E4755F
 *

 * @return {any}
 */
global.N_0x7CE9DC58E3E4755F = function () {
  return _in(0x7ce9dc58, 0xe3e4755f, _r);
};

/**
 * _0x7E40A01B11398FCB
 *

 * @return {void}
 */
global.N_0x7E40A01B11398FCB = function () {
  return _in(0x7e40a01b, 0x11398fcb);
};

/**
 * _0x80D7A3E39B120BC4
 *

 * @return {any}
 */
global.N_0x80D7A3E39B120BC4 = function () {
  return _in(0x80d7a3e3, 0x9b120bc4, _r);
};

/**
 * _0x8505E05FC8822843
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x8505E05FC8822843 = function (p0) {
  return _in(0x8505e05f, 0xc8822843, p0);
};

/**
 * _0x88544C0E3291DCAE
 * UPDATE_PLAYER_PLAYING_STATE - Releasing Lasso Hint Cam
 * Return type char in ida
 * _SET_GAMEPLAY_HINT_*
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x88544C0E3291DCAE = function (p0) {
  return _in(0x88544c0e, 0x3291dcae, p0);
};

/**
 * _0x8B1A5FE7E41E52B2
 *

 * @return {any}
 */
global.N_0x8B1A5FE7E41E52B2 = function () {
  return _in(0x8b1a5fe7, 0xe41e52b2, _r);
};

/**
 * _0x8E036B41C37D0E5F
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x8E036B41C37D0E5F = function (p0) {
  return _in(0x8e036b41, 0xc37d0e5f, p0);
};

/**
 * _0x975F6EBB62632FE3
 * _IS_SCRIPTED_S*
 *

 * @return {boolean}
 */
global.N_0x975F6EBB62632FE3 = function () {
  return _in(0x975f6ebb, 0x62632fe3, _r);
};

/**
 * _0x9AC65A36D3C0C189
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9AC65A36D3C0C189 = function (p0) {
  return _in(0x9ac65a36, 0xd3c0c189, p0);
};

/**
 * _0xA54D643D0773EB65
 *
 * @param {string | number} dictionary
 * @param {string | number} shotName
 * @param {number} duration
 * @return {void}
 */
global.N_0xA54D643D0773EB65 = function (dictionary, shotName, duration) {
  return _in(0xa54d643d, 0x0773eb65, _ts(dictionary), _ts(shotName), duration);
};

/**
 * _0xA8BA2E0204D8486F
 * NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
 * _DISABLE_*
 *

 * @return {void}
 */
global.N_0xA8BA2E0204D8486F = function () {
  return _in(0xa8ba2e02, 0x04d8486f);
};

/**
 * _0xAC77757C05DE9E5A
 *
 * @param {string | number} cameraDictionary
 * @return {void}
 */
global.N_0xAC77757C05DE9E5A = function (cameraDictionary) {
  return _in(0xac77757c, 0x05de9e5a, _ts(cameraDictionary));
};

/**
 * _0xB6A80E1E3A5444F1
 *

 * @return {any}
 */
global.N_0xB6A80E1E3A5444F1 = function () {
  return _in(0xb6a80e1e, 0x3a5444f1, _r);
};

/**
 * _0xB85C13E0BF1F2A1C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xB85C13E0BF1F2A1C = function (p0) {
  return _in(0xb85c13e0, 0xbf1f2a1c, p0);
};

/**
 * _0xC205B3C54C6A4E37
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC205B3C54C6A4E37 = function (p0) {
  return _in(0xc205b3c5, 0x4c6a4e37, p0);
};

/**
 * _0xC252C0CC969AF79A
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC252C0CC969AF79A = function (p0) {
  return _in(0xc252c0cc, 0x969af79a, p0);
};

/**
 * _0xC285FD21294A1C49
 *
 * @param {string | number} cameraDictionary
 * @return {boolean}
 */
global.N_0xC285FD21294A1C49 = function (cameraDictionary) {
  return _in(0xc285fd21, 0x294a1c49, _ts(cameraDictionary), _r);
};

/**
 * _0xC3742F1FDF0A6824
 * Camera will be or is running
 *

 * @return {void}
 */
global.N_0xC3742F1FDF0A6824 = function () {
  return _in(0xc3742f1f, 0xdf0a6824);
};

/**
 * _0xC3AEBB276825A359
 *
 * @param {string | number} dictionary
 * @param {string | number} shotName
 * @param {number} duration
 * @return {boolean}
 */
global.N_0xC3AEBB276825A359 = function (dictionary, shotName, duration) {
  return _in(0xc3aebb27, 0x6825a359, _ts(dictionary), _ts(shotName), duration, _r);
};

/**
 * _0xC3E9E5D4F413B773
 * shakeName: REINFORCED_LASSO_STRUGGLE_SHAKE
 * _RES*
 *
 * @param {string | number} shakeName
 * @param {number} intensity
 * @return {void}
 */
global.N_0xC3E9E5D4F413B773 = function (shakeName, intensity) {
  return _in(0xc3e9e5d4, 0xf413b773, _ts(shakeName), _fv(intensity));
};

/**
 * _0xCF69EA05CD9C33C9
 *

 * @return {void}
 */
global.N_0xCF69EA05CD9C33C9 = function () {
  return _in(0xcf69ea05, 0xcd9c33c9);
};

/**
 * _0xDB382FE20C2DA222
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xDB382FE20C2DA222 = function (p0) {
  return _in(0xdb382fe2, 0x0c2da222, p0);
};

/**
 * _0xDC62CD70658E7A02
 *

 * @return {any}
 */
global.N_0xDC62CD70658E7A02 = function () {
  return _in(0xdc62cd70, 0x658e7a02, _r);
};

/**
 * _0xDF7F5BE9150E47E4
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xDF7F5BE9150E47E4 = function (p0) {
  return _in(0xdf7f5be9, 0x150e47e4, p0);
};

/**
 * _0xE28F73212A813E82
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xE28F73212A813E82 = function (p0, p1, p2, p3) {
  return _in(0xe28f7321, 0x2a813e82, p0, p1, p2, p3);
};

/**
 * _0xE2BB2D6A9FE2ECDE
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE2BB2D6A9FE2ECDE = function (p0) {
  return _in(0xe2bb2d6a, 0x9fe2ecde, p0);
};

/**
 * _0xE4B7945EF4F1BFB2
 *
 * @param {number} cam
 * @param {DataView} args
 * @return {void}
 */
global.N_0xE4B7945EF4F1BFB2 = function (cam, args) {
  return _in(0xe4b7945e, 0xf4f1bfb2, cam, args);
};

/**
 * _0xE6F364DE6C2FDEFE
 *

 * @return {void}
 */
global.N_0xE6F364DE6C2FDEFE = function () {
  return _in(0xe6f364de, 0x6c2fdefe);
};

/**
 * _0xEA113BF9B0C0C5D7
 *
 * @param {string | number} dictionary
 * @param {string | number} shotName
 * @param {number} duration
 * @return {any}
 */
global.N_0xEA113BF9B0C0C5D7 = function (dictionary, shotName, duration) {
  return _in(0xea113bf9, 0xb0c0c5d7, _ts(dictionary), _ts(shotName), duration, _r);
};

/**
 * _0xEF9A3132A0AA6B19
 *

 * @return {any}
 */
global.N_0xEF9A3132A0AA6B19 = function () {
  return _in(0xef9a3132, 0xa0aa6b19, _r);
};

/**
 * _0xF1A6FEEDF3776EF9
 *

 * @return {void}
 */
global.N_0xF1A6FEEDF3776EF9 = function () {
  return _in(0xf1a6feed, 0xf3776ef9);
};

/**
 * _0xF48664E9C83825E3
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xF48664E9C83825E3 = function (p0, p1) {
  return _in(0xf48664e9, 0xc83825e3, p0, p1);
};

/**
 * _0xF824530B612FE0CE
 *

 * @return {any}
 */
global.N_0xF824530B612FE0CE = function () {
  return _in(0xf824530b, 0x612fe0ce, _r);
};

/**
 * _0xFC3F638BE2B6BB02
 *

 * @return {void}
 */
global.N_0xFC3F638BE2B6BB02 = function () {
  return _in(0xfc3f638b, 0xe2b6bb02);
};

/**
 * _0xFEB8646818294C75
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xFEB8646818294C75 = function (p0, p1) {
  return _in(0xfeb86468, 0x18294c75, p0, p1);
};

/**
 * _0xFEFDDC6E8FDF8A75
 * _SET_GAMEPLAY_P* - _SET_GAMEPLAY_V*
 *
 * @param {string | number} shakeName
 * @param {number} intensity
 * @return {void}
 */
global.N_0xFEFDDC6E8FDF8A75 = function (shakeName, intensity) {
  return _in(0xfefddc6e, 0x8fdf8a75, _ts(shakeName), _fv(intensity));
};

/**
 * _CAM_CREATE
 *
 * @param {string | number} cameraDictionary
 * @return {void}
 */
global.CamCreate = function (cameraDictionary) {
  return _in(0xb8b207c3, 0x4285e978, _ts(cameraDictionary));
};

/**
 * _CAM_CREATE_2
 *
 * @param {string | number} cameraDictionary
 * @return {void}
 */
global.CamCreate_2 = function (cameraDictionary) {
  return _in(0x7b027917, 0x0961a73f, _ts(cameraDictionary));
};

/**
 * _CAM_DESTROY
 *
 * @param {string | number} cameraDictionary
 * @return {void}
 */
global.CamDestroy = function (cameraDictionary) {
  return _in(0x0a5a4f19, 0x79abb40e, _ts(cameraDictionary));
};

/**
 * _CINEMATIC_LOCATION_SET_LOCATION_AND_ROTATION
 *
 * @param {string | number} name
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @return {void}
 */
global.CinematicLocationSetLocationAndRotation = function (name, x, y, z, rotX, rotY, rotZ) {
  return _in(0x0e94c95e, 0xc3185fa9, _ts(name), _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ));
};

/**
 * _CINEMATIC_LOCATION_TRIGGER_SCRIPTED_SHOT_EVENT_2
 *
 * @param {string | number} dictionary
 * @param {string | number} shotName
 * @param {number} duration
 * @return {void}
 */
global.CinematicLocationTriggerScriptedShotEvent_2 = function (dictionary, shotName, duration) {
  return _in(0xbc016635, 0xd6a73b31, _ts(dictionary), _ts(shotName), duration);
};

/**
 * _CREATE_KILL_CAM
 * Creates Kill Cam for specified Ped Handle
 *
 * @param {number} ped
 * @return {void}
 */
global.CreateKillCam = function (ped) {
  return _in(0x2f994cc2, 0x9caa9d22, ped);
};

/**
 * _DISABLE_CINEMATIC_MODE_THIS_FRAME
 *

 * @return {void}
 */
global.DisableCinematicModeThisFrame = function () {
  return _in(0x8910c24b, 0x7e0046ec);
};

/**
 * _DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE_2
 * Does the same as 0x9C473089A934C930 (DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE)
 *

 * @return {void}
 */
global.DisableOnFootFirstPersonViewThisUpdate_2 = function () {
  return _in(0x05ab44d9, 0x06738426);
};

/**
 * _FORCE_CINEMATIC_DEATH_CAM_ON_PED
 * Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
 * Params: targetPed = death cam focuses on it
 *
 * @param {number} targetPed
 * @return {void}
 */
global.ForceCinematicDeathCamOnPed = function (targetPed) {
  return _in(0xe3639db7, 0x8b3b5400, targetPed);
};

/**
 * _FORCE_FIRST_PERSON_CAM_THIS_FRAME
 * Returns true if first person camera is active in saloon1.ysc
 *

 * @return {boolean}
 */
global.ForceFirstPersonCamThisFrame = function () {
  return _in(0x90da5ba5, 0xc2635416, _r);
};

/**
 * _FORCE_LETTER_BOX_THIS_UPDATE
 *

 * @return {void}
 */
global.ForceLetterBoxThisUpdate = function () {
  return _in(0xc64abc06, 0x76af262b);
};

/**
 * _FORCE_THIRD_PERSON_CAM_FAR_THIS_FRAME
 * Forces camera position to furthest 3rd person
 *

 * @return {void}
 */
global.ForceThirdPersonCamFarThisFrame = function () {
  return _in(0x1cfb749a, 0xd4317bde);
};

/**
 * _FORCE_THIRD_PERSON_CAM_THIS_FRAME
 * Forces camera position to second furthest 3rd person
 *

 * @return {void}
 */
global.ForceThirdPersonCamThisFrame = function () {
  return _in(0x8370d34b, 0xd2e60b73);
};

/**
 * _FREEZE_GAMEPLAY_CAM_THIS_FRAME
 *

 * @return {void}
 */
global.FreezeGameplayCamThisFrame = function () {
  return _in(0x027cab2c, 0x3af27010);
};

/**
 * _GET_PHOTO_MODE_DOF
 *

 * @return {number}
 */
global.GetPhotoModeDof = function () {
  return _in(0x4653a741, 0xd17f2cd0, _r, _rf);
};

/**
 * _GET_PHOTO_MODE_FOCAL_LENGTH
 *

 * @return {number}
 */
global.GetPhotoModeFocalLength = function () {
  return _in(0x2533baff, 0xbe737e54, _r, _rf);
};

/**
 * _GET_PHOTO_MODE_FOCUS_DISTANCE
 *

 * @return {number}
 */
global.GetPhotoModeFocusDistance = function () {
  return _in(0x18fc740f, 0xfdcd7454, _r, _rf);
};

/**
 * _IS_ANIM_SCENE_CAM_ACTIVE
 * Only used in R* Script camera_photomode
 *

 * @return {boolean}
 */
global.IsAnimSceneCamActive = function () {
  return _in(0x20389408, 0xf0e93b9a, _r);
};

/**
 * _IS_CAMERA_AVAILABLE
 *
 * @param {string | number} cameraDictionary
 * @return {boolean}
 */
global.IsCameraAvailable = function (cameraDictionary) {
  return _in(0x927b810e, 0x43e99932, _ts(cameraDictionary), _r);
};

/**
 * _IS_CAM_DATA_DICT_LOADED
 *
 * @param {string | number} cameraDictionary
 * @return {boolean}
 */
global.IsCamDataDictLoaded = function (cameraDictionary) {
  return _in(0xdd0b7c5a, 0xe58f721d, _ts(cameraDictionary), _r);
};

/**
 * _IS_CAM_PHOTOFX_RUNNING
 *

 * @return {boolean}
 */
global.IsCamPhotofxRunning = function () {
  return _in(0xa14d5fe8, 0x2bcb1d9e, _r);
};

/**
 * _IS_CINEMATIC_CAM_LOCATION_LOADED
 *
 * @param {string | number} sLocationDictName
 * @return {boolean}
 */
global.IsCinematicCamLocationLoaded = function (sLocationDictName) {
  return _in(0xaa235e2f, 0x2c09e952, _ts(sLocationDictName), _r);
};

/**
 * _IS_CINEMATIC_CAM_LOCATION_LOADED_2
 * Checks data related to Cinematic Cam Locations, if the check fails, the location is being loaded using 0x1B3C2D961F5FC0E1.
 *
 * @param {string | number} locationDictName
 * @return {boolean}
 */
global.IsCinematicCamLocationLoaded_2 = function (locationDictName) {
  return _in(0x59555037, 0x6b7ea230, _ts(locationDictName), _r);
};

/**
 * _IS_IN_CINEMATIC_MODE
 *

 * @return {boolean}
 */
global.IsInCinematicMode = function () {
  return _in(0x74f1d22e, 0xfa71fab8, _r);
};

/**
 * _IS_IN_FULL_FIRST_PERSON_MODE
 * Returns true if player is in first person
 *

 * @return {boolean}
 */
global.IsInFullFirstPersonMode = function () {
  return _in(0xd1ba6694, 0x0e94c547, _r);
};

/**
 * _LOAD_CAMERA_DATA_DICT
 *
 * @param {string | number} cameraDictionary
 * @return {void}
 */
global.LoadCameraDataDict = function (cameraDictionary) {
  return _in(0x6a4d224f, 0xc7643941, _ts(cameraDictionary));
};

/**
 * _LOAD_CINEMATIC_CAM_LOCATION
 *
 * @param {string | number} locationDictName
 * @return {void}
 */
global.LoadCinematicCamLocation = function (locationDictName) {
  return _in(0x1b3c2d96, 0x1f5fc0e1, _ts(locationDictName));
};

/**
 * _PAUSE_CAMERA_FOCUS
 *
 * @param {number} cam
 * @param {boolean} pause
 * @return {void}
 */
global.PauseCameraFocus = function (cam, pause) {
  return _in(0x9f97e85e, 0xc142255e, cam, pause);
};

/**
 * _REACTIVATE_PED_HEADSHOT_EXECUTE_SLOWCAM
 * Used to enable headshot kill replay when you headshot set ped.
 * Params: p1 seems to be 0 or 1 in R* Scripts
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.ReactivatePedHeadshotExecuteSlowcam = function (ped, p1) {
  return _in(0x986f7a51, 0xee3e1f92, ped, p1);
};

/**
 * _REQUEST_LETTER_BOX_NOW
 * Creates Cinematic Black Bars (at top and bottom)
 * Disable instantly: false/false, Enable instantly: true/true
 *
 * @param {boolean} p0
 * @param {boolean} p1
 * @return {void}
 */
global.RequestLetterBoxNow = function (p0, p1) {
  return _in(0x69d65e89, 0xffd72313, p0, p1);
};

/**
 * _REQUEST_LETTER_BOX_OVERTIME
 *
 * @param {number} p0
 * @param {number} p1
 * @param {boolean} p2
 * @param {number} p3
 * @param {boolean} p4
 * @param {boolean} p5
 * @return {void}
 */
global.RequestLetterBoxOvertime = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xe296208c, 0x273bd7f0, p0, p1, p2, p3, p4, p5);
};

/**
 * _SET_CAM_FOCUS_DISTANCE
 *
 * @param {number} cam
 * @param {number} distance
 * @return {void}
 */
global.SetCamFocusDistance = function (cam, distance) {
  return _in(0x11f32bb6, 0x1b756732, cam, _fv(distance));
};

/**
 * _SET_GAMEPLAY_CAM_INITIAL_HEADING
 *
 * @param {number} camInitialHeading
 * @return {void}
 */
global.SetGameplayCamInitialHeading = function (camInitialHeading) {
  return _in(0x6c1053c4, 0x33a573cf, _fv(camInitialHeading));
};

/**
 * _SET_GAMEPLAY_CAM_INITIAL_PITCH
 *
 * @param {number} camInitialPitch
 * @return {void}
 */
global.SetGameplayCamInitialPitch = function (camInitialPitch) {
  return _in(0x449995ea, 0x846d3fc2, _fv(camInitialPitch));
};

/**
 * _SET_GAMEPLAY_CAM_INITIAL_ZOOM
 * Used in Script Function SHOP_CAMERA_SUPPORT_START_NEW_ORBIT
 *
 * @param {number} camInitialZoom
 * @return {void}
 */
global.SetGameplayCamInitialZoom = function (camInitialZoom) {
  return _in(0xbcda0ba8, 0x762facb9, _fv(camInitialZoom));
};

/**
 * _SET_START_CINEMATIC_DEATH_CAM
 * Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
 * _SET_P* - _SET_S*
 *
 * @param {boolean} p0
 * @return {void}
 */
global.SetStartCinematicDeathCam = function (p0) {
  return _in(0x6e969927, 0xcf632608, p0);
};

/**
 * _START_CAMERA_ORBIT
 * [SHOP_CAMERA_SUPPORT_START_NEW_ORBIT]
 * p0: struct<32> |*256*|
 *
 * @param {DataView} p0
 * @return {void}
 */
global.StartCameraOrbit = function (p0) {
  return _in(0x65b205bf, 0x30c13ddb, p0);
};

/**
 * _STOP_GAMEPLAY_CAM_SHAKING_WITH_NAME
 * script_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE, CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, HAND_SHAKE, MINIGAME_TRAIN_SHAKE
 * script_mp_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE
 * _STOP_GAMEPLAY_CAM* - _STOP_I*
 *
 * @param {string | number} shakeName
 * @param {boolean} p1
 * @return {void}
 */
global.StopGameplayCamShakingWithName = function (shakeName, p1) {
  return _in(0x4285804f, 0xd65d8066, _ts(shakeName), p1);
};

/**
 * _TRIGGER_MISSION_FAILED_CAM
 *

 * @return {void}
 */
global.TriggerMissionFailedCam = function () {
  return _in(0x9a92c06a, 0xcbaf9731);
};

/**
 * _UNLOAD_CAMERA_DATA_DICT
 *
 * @param {string | number} cameraDictionary
 * @return {void}
 */
global.UnloadCameraDataDict = function (cameraDictionary) {
  return _in(0x798be43c, 0x9393632b, _ts(cameraDictionary));
};

/**
 * _UNLOAD_CINEMATIC_CAMERA_LOCATION
 *
 * @param {string | number} dictionaryName
 * @return {void}
 */
global.UnloadCinematicCameraLocation = function (dictionaryName) {
  return _in(0x2412216f, 0xcc7b4e3e, _ts(dictionaryName));
};

/**
 * ADD_TO_CLOCK_TIME
 *
 * @param {number} hours
 * @param {number} minutes
 * @param {number} seconds
 * @return {void}
 */
global.AddToClockTime = function (hours, minutes, seconds) {
  return _in(0xab7c251c, 0x7701d336, hours, minutes, seconds);
};

/**
 * ADVANCE_CLOCK_TIME_TO
 *
 * @param {number} hour
 * @param {number} minute
 * @param {number} second
 * @return {void}
 */
global.AdvanceClockTimeTo = function (hour, minute, second) {
  return _in(0x0184750a, 0xe88d0b1d, hour, minute, second);
};

/**
 * GET_CLOCK_DAY_OF_MONTH
 *

 * @return {number}
 */
global.GetClockDayOfMonth = function () {
  return _in(0xdf2fd796, 0xc54480a5, _r, _ri);
};

/**
 * GET_CLOCK_DAY_OF_WEEK
 * Gets the current day of the week.
 * 
 * 0: Sunday
 * 1: Monday
 * 2: Tuesday
 * 3: Wednesday
 * 4: Thursday
 * 5: Friday
 * 6: Saturday
 *

 * @return {number}
 */
global.GetClockDayOfWeek = function () {
  return _in(0x4dd02d4c, 0x7fb30076, _r, _ri);
};

/**
 * GET_CLOCK_HOURS
 * Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
 *

 * @return {number}
 */
global.GetClockHours = function () {
  return _in(0xc82cf208, 0xc2b19199, _r, _ri);
};

/**
 * GET_CLOCK_MINUTES
 * Gets the current ingame clock minute.
 *

 * @return {number}
 */
global.GetClockMinutes = function () {
  return _in(0x4e162231, 0xb823dbbf, _r, _ri);
};

/**
 * GET_CLOCK_MONTH
 *

 * @return {number}
 */
global.GetClockMonth = function () {
  return _in(0x2d44e8fc, 0x79eab1ac, _r, _ri);
};

/**
 * GET_CLOCK_SECONDS
 * Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in RDR is only 48 minutes in real life.
 *

 * @return {number}
 */
global.GetClockSeconds = function () {
  return _in(0xb6101abe, 0x62b5f080, _r, _ri);
};

/**
 * GET_CLOCK_YEAR
 *

 * @return {number}
 */
global.GetClockYear = function () {
  return _in(0xe136dca2, 0x8c4a48ba, _r, _ri);
};

/**
 * GET_MILLISECONDS_PER_GAME_MINUTE
 *

 * @return {number}
 */
global.GetMillisecondsPerGameMinute = function () {
  return _in(0xe4cb8d12, 0x6501ec52, _r, _ri);
};

/**
 * GET_POSIX_TIME
 *

 * @return {[number, number, number, number, number, number]}
 */
global.GetPosixTime = function () {
  return _in(0x90338ad4, 0xa784e455, _i, _i, _i, _i, _i, _i);
};

/**
 * PAUSE_CLOCK
 *
 * @param {boolean} toggle
 * @param {any} unused
 * @return {void}
 */
global.PauseClock = function (toggle, unused) {
  return _in(0x4d1a590c, 0x92bf377e, toggle, unused);
};

/**
 * SET_CLOCK_DATE
 *
 * @param {number} day
 * @param {number} month
 * @param {number} year
 * @return {void}
 */
global.SetClockDate = function (day, month, year) {
  return _in(0x02ad3092, 0x562941e2, day, month, year);
};

/**
 * SET_CLOCK_TIME
 * SET_CLOCK_TIME(12, 34, 56);
 *
 * @param {number} hour
 * @param {number} minute
 * @param {number} second
 * @return {void}
 */
global.SetClockTime = function (hour, minute, second) {
  return _in(0x3a52c59f, 0xfb2deed8, hour, minute, second);
};

/**
 * _ADD_TIME_TO_DATE_TIME
 *
 * @param {DataView} inDateTime
 * @param {DataView} timeToAdd
 * @param {DataView} outDateTime
 * @return {void}
 */
global.AddTimeToDateTime = function (inDateTime, timeToAdd, outDateTime) {
  return _in(0x28eeace9, 0xb43d9597, inDateTime, timeToAdd, outDateTime);
};

/**
 * _GET_POSIX_TIME_STRUCT
 * Same as GET_POSIX_TIME except that it takes a single pointer to a struct.
 *
 * @param {DataView} outTime
 * @return {void}
 */
global.GetPosixTimeStruct = function (outTime) {
  return _in(0x86a68e84, 0xe5884951, outTime);
};

/**
 * _GET_SECONDS_SINCE_BASE_YEAR
 * Base year is 1898.
 *

 * @return {number}
 */
global.GetSecondsSinceBaseYear = function () {
  return _in(0x78fd8be8, 0x12e436b2, _r, _ri);
};

/**
 * _PAUSE_CLOCK_THIS_FRAME
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.PauseClockThisFrame = function (toggle) {
  return _in(0x568d998a, 0x9ff96774, toggle);
};

/**
 * _SET_MILLISECONDS_PER_GAME_MINUTE
 *
 * @param {number} ms
 * @return {void}
 */
global.SetMillisecondsPerGameMinute = function (ms) {
  return _in(0x04eedb38, 0x48dacf68, ms);
};

/**
 * COLLECTABLE_CATEGORY_SET_HAS_RECEIVED_LIST
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.CollectableCategorySetHasReceivedList = function (p0, p1, p2) {
  return _in(0x0b6d275d, 0x2f242e17, p0, p1, p2);
};

/**
 * COLLECTABLE_GET_CATEGORY_ITEM_SET_BUY_AWARD
 * collectableCategory: ANTIQUE_BOTTLES, BIRD_EGGS, ARROWHEADS, FAMILY_HEIRLOOMS, WILD_FLOWERS, COINS, LOST_JEWELRY_RINGS, LOST_JEWELRY_BRACELETS, LOST_JEWELRY_EARRINGS, LOST_JEWELRY_NECKLACES, TAROT_CARDS_CUPS, TAROT_CARDS_PENTACLES, TAROT_CARDS_SWORDS, TAROT_CARDS_WANDS, FOSSILS_COMMON, FOSSILS_UNCOMMON, FOSSILS_RARE
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @return {number}
 */
global.CollectableGetCategoryItemSetBuyAward = function (collectableCategory, p1) {
  return _in(0xcc644bc1, 0xdd655269, _ch(collectableCategory), _ch(p1), _r, _ri);
};

/**
 * _0x33825A7388A6B9F6
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @return {number}
 */
global.N_0x33825A7388A6B9F6 = function (collectableCategory, p1) {
  return _in(0x33825a73, 0x88a6b9f6, _ch(collectableCategory), p1, _r, _ri);
};

/**
 * _0x3FD91F1A148A0468
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @return {any}
 */
global.N_0x3FD91F1A148A0468 = function (collectableCategory, p1) {
  return _in(0x3fd91f1a, 0x148a0468, _ch(collectableCategory), p1, _r);
};

/**
 * _0x61BEFBA3CE7A3BC8
 * Params: collectableCategory = WEEKLY_COLLECTABLES
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @return {boolean}
 */
global.N_0x61BEFBA3CE7A3BC8 = function (collectableCategory, p1) {
  return _in(0x61befba3, 0xce7a3bc8, _ch(collectableCategory), p1, _r);
};

/**
 * _0x6BAB7ACED1017204
 * Params: collectableCategory = WEEKLY_COLLECTABLES
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @return {boolean}
 */
global.N_0x6BAB7ACED1017204 = function (collectableCategory, p1) {
  return _in(0x6bab7ace, 0xd1017204, _ch(collectableCategory), p1, _r);
};

/**
 * _0x755901C7598B97BC
 * Returns p2 (index?) for 0xB9020EC89C07DF04
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @return {number}
 */
global.N_0x755901C7598B97BC = function (collectableCategory, p1) {
  return _in(0x755901c7, 0x598b97bc, _ch(collectableCategory), p1, _r, _ri);
};

/**
 * _0x775FA1FC87666847
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @return {any}
 */
global.N_0x775FA1FC87666847 = function (collectableCategory, p1) {
  return _in(0x775fa1fc, 0x87666847, _ch(collectableCategory), p1, _r);
};

/**
 * _0x93F2E7B5DB85657B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x93F2E7B5DB85657B = function (p0, p1) {
  return _in(0x93f2e7b5, 0xdb85657b, p0, p1, _r);
};

/**
 * _0x9ADEE485726025D4
 * Params: collectableCategory = WEEKLY_COLLECTABLES
 *
 * @param {number} collectableCategory
 * @return {number}
 */
global.N_0x9ADEE485726025D4 = function (collectableCategory) {
  return _in(0x9adee485, 0x726025d4, _ch(collectableCategory), _r, _ri);
};

/**
 * _0xB9020EC89C07DF04
 * Accepts more hashes than 0xCC644BC1DD655269
 * Such as: CAROLINA_PARAKEETS, DINO_BONES, EGRET_FEATHERS, ...
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @param {number} index
 * @return {any}
 */
global.N_0xB9020EC89C07DF04 = function (collectableCategory, p1, index) {
  return _in(0xb9020ec8, 0x9c07df04, _ch(collectableCategory), p1, index, _r);
};

/**
 * _0xC3CA424E1F12ED0C
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @return {any}
 */
global.N_0xC3CA424E1F12ED0C = function (collectableCategory, p1) {
  return _in(0xc3ca424e, 0x1f12ed0c, _ch(collectableCategory), p1, _r);
};

/**
 * _0xC4AC39719C1BB559
 *
 * @param {number} collectableCategory
 * @param {any} p1
 * @return {any}
 */
global.N_0xC4AC39719C1BB559 = function (collectableCategory, p1) {
  return _in(0xc4ac3971, 0x9c1bb559, _ch(collectableCategory), p1, _r);
};

/**
 * _0xD1806FB3EDED6D11
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @return {any}
 */
global.N_0xD1806FB3EDED6D11 = function (collectableCategory, p1) {
  return _in(0xd1806fb3, 0xeded6d11, _ch(collectableCategory), p1, _r);
};

/**
 * _0xD297F68928A58130
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @return {any}
 */
global.N_0xD297F68928A58130 = function (collectableCategory, p1) {
  return _in(0xd297f689, 0x28a58130, _ch(collectableCategory), p1, _r);
};

/**
 * _0xEC3959E9950BF56B
 *
 * @param {number} p0
 * @return {any}
 */
global.N_0xEC3959E9950BF56B = function (p0) {
  return _in(0xec3959e9, 0x950bf56b, p0, _r);
};

/**
 * _0xFC832B06127D8E99
 *
 * @param {number} collectableCategory
 * @param {number} p1
 * @return {boolean}
 */
global.N_0xFC832B06127D8E99 = function (collectableCategory, p1) {
  return _in(0xfc832b06, 0x127d8e99, _ch(collectableCategory), p1, _r);
};

/**
 * _COLLECTABLE_CATEGORY_GET_NUM_COLLECTABLES
 *
 * @param {number} collectableCategory
 * @param {number} collectableSubcategory
 * @return {number}
 */
global.CollectableCategoryGetNumCollectables = function (collectableCategory, collectableSubcategory) {
  return _in(0x62cab7db, 0x62ead434, _ch(collectableCategory), _ch(collectableSubcategory), _r, _ri);
};

/**
 * _COLLECTABLE_CATEGORY_GET_NUM_FOUND
 *
 * @param {number} collectableCategory
 * @param {number} collectableSubcategory
 * @return {number}
 */
global.CollectableCategoryGetNumFound = function (collectableCategory, collectableSubcategory) {
  return _in(0x5461c821, 0xd00fe15a, _ch(collectableCategory), _ch(collectableSubcategory), _r, _ri);
};

/**
 * _COLLECTABLE_CATEGORY_GET_NUM_TURNED_IN
 *
 * @param {number} collectableCategory
 * @param {number} collectableSubcategory
 * @return {number}
 */
global.CollectableCategoryGetNumTurnedIn = function (collectableCategory, collectableSubcategory) {
  return _in(0x3a65f484, 0x4913a047, _ch(collectableCategory), _ch(collectableSubcategory), _r, _ri);
};

/**
 * _COLLECTABLE_CATEGORY_GET_TOAST_TEXTURE_DICTIONARY
 *
 * @param {number} collectableCategory
 * @param {number} collectableSubcategory
 * @return {number}
 */
global.CollectableCategoryGetToastTextureDictionary = function (collectableCategory, collectableSubcategory) {
  return _in(0x13aaecda, 0x43318bfe, _ch(collectableCategory), _ch(collectableSubcategory), _r, _ri);
};

/**
 * _COLLECTABLE_CATEGORY_GET_TOAST_TEXTURE_NAME
 *
 * @param {number} collectableCategory
 * @param {number} collectableSubcategory
 * @return {number}
 */
global.CollectableCategoryGetToastTextureName = function (collectableCategory, collectableSubcategory) {
  return _in(0xd52d20b0, 0xc76bb26d, _ch(collectableCategory), _ch(collectableSubcategory), _r, _ri);
};

/**
 * _COLLECTABLE_GET_CATEGORY
 * Used in Script Function NET_COLLECTABLES_HANDLE_ITEM_ADDED
 * Returns collectableCategory Hash
 *
 * @param {number} collectableItem
 * @return {number}
 */
global.CollectableGetCategory = function (collectableItem) {
  return _in(0x725d52f2, 0x1a5e9ef6, _ch(collectableItem), _r, _ri);
};

/**
 * _COLLECTABLE_GET_COLLECTABLE_ITEM_HASH
 *
 * @param {number} index
 * @param {number} collectableCategory
 * @param {number} collectableSubcategory
 * @return {number}
 */
global.CollectableGetCollectableItemHash = function (index, collectableCategory, collectableSubcategory) {
  return _in(0x126cbebb, 0xa46693cf, index, _ch(collectableCategory), _ch(collectableSubcategory), _r, _ri);
};

/**
 * _COLLECTABLE_GET_IPL
 *
 * @param {number} collectableItem
 * @return {number}
 */
global.CollectableGetIpl = function (collectableItem) {
  return _in(0x922a79cd, 0x4a033b8b, _ch(collectableItem), _r, _ri);
};

/**
 * _COLLECTABLE_GET_NUM_FOUND
 *
 * @param {number} collectableItem
 * @return {number}
 */
global.CollectableGetNumFound = function (collectableItem) {
  return _in(0xf83d3dda, 0x4d3c8169, _ch(collectableItem), _r, _ri);
};

/**
 * _COLLECTABLE_GET_NUM_TURNED_IN
 *
 * @param {number} collectableItem
 * @return {number}
 */
global.CollectableGetNumTurnedIn = function (collectableItem) {
  return _in(0x9a03f22a, 0xd446eeac, _ch(collectableItem), _r, _ri);
};

/**
 * _COLLECTABLE_GET_PLACEMENT_LOCATION
 *
 * @param {number} collectableItem
 * @return {Vector3}
 */
global.CollectableGetPlacementLocation = function (collectableItem) {
  return _in(0x1f1dd794, 0x908c2bfa, _ch(collectableItem), _r, _rv);
};

/**
 * _COLLECTABLE_GET_SUBCATEGORY
 *
 * @param {number} collectableItem
 * @return {number}
 */
global.CollectableGetSubcategory = function (collectableItem) {
  return _in(0x6052b4de, 0x6657684f, _ch(collectableItem), _r, _ri);
};

/**
 * _COLLECTABLE_INCREMENT_NUM_FOUND
 *
 * @param {number} collectableItem
 * @param {number} amount
 * @return {void}
 */
global.CollectableIncrementNumFound = function (collectableItem, amount) {
  return _in(0x3ea62e56, 0xf386c997, _ch(collectableItem), amount);
};

/**
 * _COLLECTABLE_INCREMENT_NUM_TURNED_IN
 *
 * @param {number} collectableItem
 * @param {number} amount
 * @return {void}
 */
global.CollectableIncrementNumTurnedIn = function (collectableItem, amount) {
  return _in(0x398fab9c, 0x96a81924, _ch(collectableItem), amount);
};

/**
 * _0x0A8FD91EDE7B328A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0A8FD91EDE7B328A = function (p0, p1) {
  return _in(0x0a8fd91e, 0xde7b328a, p0, p1);
};

/**
 * _0x0C6A00DAE896614C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0C6A00DAE896614C = function (p0, p1) {
  return _in(0x0c6a00da, 0xe896614c, p0, p1);
};

/**
 * _0x0DE02DA3C0F66955
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x0DE02DA3C0F66955 = function (ped, p1) {
  return _in(0x0de02da3, 0xc0f66955, ped, _ch(p1));
};

/**
 * _0x2917E634206B9E17
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x2917E634206B9E17 = function (ped, p1) {
  return _in(0x2917e634, 0x206b9e17, ped, p1);
};

/**
 * _0x3CAAD93FA5B9579A
 *
 * @param {number} volume
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0x3CAAD93FA5B9579A = function (volume, p1, p2) {
  return _in(0x3caad93f, 0xa5b9579a, volume, p1, p2);
};

/**
 * _0x61BDA07407754A5C
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x61BDA07407754A5C = function (p0, p1, p2, p3) {
  return _in(0x61bda074, 0x07754a5c, p0, p1, p2, p3);
};

/**
 * _0x722FBE08EF5B87BD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {any}
 */
global.N_0x722FBE08EF5B87BD = function (p0, p1, p2, p3, p4) {
  return _in(0x722fbe08, 0xef5b87bd, p0, p1, p2, p3, p4, _r);
};

/**
 * _0x7274F84B1501B523
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x7274F84B1501B523 = function (p0) {
  return _in(0x7274f84b, 0x1501b523, p0);
};

/**
 * _0x8FB98B719AA0075A
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x8FB98B719AA0075A = function (p0, p1, p2, p3, p4) {
  return _in(0x8fb98b71, 0x9aa0075a, p0, p1, p2, p3, p4);
};

/**
 * _0x991E3346D788F20F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x991E3346D788F20F = function (p0, p1) {
  return _in(0x991e3346, 0xd788f20f, p0, p1);
};

/**
 * _0x9C902084F48D2E6C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9C902084F48D2E6C = function (p0) {
  return _in(0x9c902084, 0xf48d2e6c, p0);
};

/**
 * _0xA079FF7CFB9AC8BD
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA079FF7CFB9AC8BD = function (p0, p1) {
  return _in(0xa079ff7c, 0xfb9ac8bd, p0, p1);
};

/**
 * _0xBF6583E926D13890
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xBF6583E926D13890 = function (p0, p1) {
  return _in(0xbf6583e9, 0x26d13890, p0, p1);
};

/**
 * _0xCE27824B5968B79A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xCE27824B5968B79A = function (p0, p1) {
  return _in(0xce27824b, 0x5968b79a, p0, p1);
};

/**
 * _0xD428C3F92FC3F6F8
 *
 * @param {number} ped
 * @param {string | number} p1
 * @return {void}
 */
global.N_0xD428C3F92FC3F6F8 = function (ped, p1) {
  return _in(0xd428c3f9, 0x2fc3f6f8, ped, _ts(p1));
};

/**
 * _0xD55A871E1CE3481B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xD55A871E1CE3481B = function (p0, p1, p2, p3) {
  return _in(0xd55a871e, 0x1ce3481b, p0, p1, p2, p3);
};

/**
 * _0xD730281E496621FB
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0xD730281E496621FB = function (ped, p1) {
  return _in(0xd730281e, 0x496621fb, ped, _ch(p1));
};

/**
 * _0xD747979C053EFA7A
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xD747979C053EFA7A = function (p0) {
  return _in(0xd747979c, 0x053efa7a, p0);
};

/**
 * _0xF06CBB8CCCA823C0
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xF06CBB8CCCA823C0 = function (p0, p1) {
  return _in(0xf06cbb8c, 0xcca823c0, p0, p1);
};

/**
 * _ACTIVATE_COMPANION_ANALYSIS
 *
 * @param {number} groupId
 * @return {void}
 */
global.ActivateCompanionAnalysis = function (groupId) {
  return _in(0xcbd9ec60, 0x495c728c, groupId);
};

/**
 * _ADD_COMPANION_FLAG
 * Used for Script Function NET_FETCH_CLIENT_ACTIVATE_COMAPNION_ANALYSIS: Hiding! Ped
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.AddCompanionFlag = function (ped, p1) {
  return _in(0xdeb369f6, 0xad168c58, ped, p1);
};

/**
 * _DEACTIVATE_COMPANION_ANALYSIS
 *
 * @param {number} groupId
 * @return {void}
 */
global.DeactivateCompanionAnalysis = function (groupId) {
  return _in(0x72b7f65f, 0x11fc8896, groupId);
};

/**
 * _GET_COMPANION_ACTIVITY
 * enum _0x18F77396
 *
 * @param {number} groupId
 * @return {number}
 */
global.GetCompanionActivity = function (groupId) {
  return _in(0xb7e0590c, 0x86e1711f, groupId, _r, _ri);
};

/**
 * _REMOVE_COMPANION_FLAG
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.RemoveCompanionFlag = function (ped, p1) {
  return _in(0x1740e3de, 0xe0ae4d27, ped, p1);
};

/**
 * _SET_COMPANION_ACTIVITY
 * enum _0x18F77396
 *
 * @param {number} groupId
 * @param {number} activity
 * @return {void}
 */
global.SetCompanionActivity = function (groupId, activity) {
  return _in(0x0f1cd8ca, 0x9e65d5f6, groupId, _ch(activity));
};

/**
 * _0x29C733459A9011EB
 * nullsub, doesn't do anything
 *
 * @param {number} p0
 * @param {string | number} p1
 * @return {void}
 */
global.N_0x29C733459A9011EB = function (p0, p1) {
  return _in(0x29c73345, 0x9a9011eb, _ch(p0), _ts(p1));
};

/**
 * _0x74BCCEB233AD95B2
 * nullsub, doesn't do anything
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.N_0x74BCCEB233AD95B2 = function (p0, p1) {
  return _in(0x74bcceb2, 0x33ad95b2, _ch(p0), _ch(p1));
};

/**
 * _0x7AF1BB4504EA5ED9
 * Hardcoded to return false.
 *

 * @return {boolean}
 */
global.N_0x7AF1BB4504EA5ED9 = function () {
  return _in(0x7af1bb45, 0x04ea5ed9, _r);
};

/**
 * _0xB6FD96420C0126A1
 * nullsub, doesn't do anything
 *
 * @param {number} p0
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xB6FD96420C0126A1 = function (p0, p1) {
  return _in(0xb6fd9642, 0x0c0126a1, _ch(p0), p1);
};

/**
 * _0xCCB4635A071FB62D
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.N_0xCCB4635A071FB62D = function () {
  return _in(0xccb4635a, 0x071fb62d);
};

/**
 * COMPENDIUM_ANIMAL_GET_SAMPLE_INVENTORY_ITEM
 *
 * @param {number} compendiumEntry
 * @return {any}
 */
global.CompendiumAnimalGetSampleInventoryItem = function (compendiumEntry) {
  return _in(0x4e4acae1, 0xc671a9da, compendiumEntry, _r);
};

/**
 * COMPENDIUM_ANIMAL_HAS_SAMPLE
 *
 * @param {number} compendiumEntry
 * @return {boolean}
 */
global.CompendiumAnimalHasSample = function (compendiumEntry) {
  return _in(0x6fc24625, 0xe4fcac27, compendiumEntry, _r);
};

/**
 * COMPENDIUM_ANIMAL_HAS_STAMP
 *
 * @param {number} compendiumEntry
 * @return {boolean}
 */
global.CompendiumAnimalHasStamp = function (compendiumEntry) {
  return _in(0xbcf569fc, 0x32fff456, compendiumEntry, _r);
};

/**
 * COMPENDIUM_ANIMAL_OBSERVED_BY_STAT_NAME
 *
 * @param {number} animalType
 * @param {boolean} disableCompendiumToast
 * @return {void}
 */
global.CompendiumAnimalObservedByStatName = function (animalType, disableCompendiumToast) {
  return _in(0x725d52f2, 0x6a5e9e10, _ch(animalType), disableCompendiumToast);
};

/**
 * COMPENDIUM_ANIMAL_SET_DISCOVERED
 *
 * @param {number} compendiumEntry
 * @return {void}
 */
global.CompendiumAnimalSetDiscovered = function (compendiumEntry) {
  return _in(0x67f35c7c, 0x9f2bdcfe, compendiumEntry);
};

/**
 * COMPENDIUM_FISH_CAUGHT
 *
 * @param {number} ped
 * @param {number} category
 * @return {void}
 */
global.CompendiumFishCaught = function (ped, category) {
  return _in(0x725d52f2, 0x1a5e9e00, ped, _ch(category));
};

/**
 * COMPENDIUM_FISH_GET_LURE_SUITABILITY_BY_STAT_ITEM
 *
 * @param {number} animalType
 * @param {number} baitType
 * @return {number}
 */
global.CompendiumFishGetLureSuitabilityByStatItem = function (animalType, baitType) {
  return _in(0x725d52f2, 0x1a5e9e81, _ch(animalType), _ch(baitType), _r, _ri);
};

/**
 * COMPENDIUM_GANG_AMBUSH_SURVIVED
 *
 * @param {any} p0
 * @return {void}
 */
global.CompendiumGangAmbushSurvived = function (p0) {
  return _in(0x725d52f2, 0x1a5e9e04, p0);
};

/**
 * COMPENDIUM_GANG_BOUNTY_CAPTURED
 *
 * @param {any} p0
 * @return {void}
 */
global.CompendiumGangBountyCaptured = function (p0) {
  return _in(0x725d52f2, 0x1a5e9e06, p0);
};

/**
 * COMPENDIUM_GANG_CAMP_FOUND
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.CompendiumGangCampFound = function (p0, p1) {
  return _in(0x725d52f2, 0x1a5e9e03, p0, p1);
};

/**
 * COMPENDIUM_GANG_ENCOUNTERED
 *
 * @param {any} p0
 * @return {void}
 */
global.CompendiumGangEncountered = function (p0) {
  return _in(0x725d52f2, 0x1a5e9e05, p0);
};

/**
 * COMPENDIUM_GANG_HIDEOUT_FOUND
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.CompendiumGangHideoutFound = function (p0, p1) {
  return _in(0x725d52f2, 0x1a5e9e08, p0, p1);
};

/**
 * COMPENDIUM_GANG_MEMBER_KILLED
 *
 * @param {any} p0
 * @return {void}
 */
global.CompendiumGangMemberKilled = function (p0) {
  return _in(0x725d52f2, 0x1a5e9e07, p0);
};

/**
 * COMPENDIUM_GET_ENTRY_BY_INDEX_IN_SUBCATEGORY
 *
 * @param {number} category
 * @param {number} subcategory
 * @param {number} count
 * @return {number}
 */
global.CompendiumGetEntryByIndexInSubcategory = function (category, subcategory, count) {
  return _in(0x5ceb63b2, 0xe3d9895f, _ch(category), _ch(subcategory), count, _r, _ri);
};

/**
 * COMPENDIUM_GET_ENTRY_BY_PED_INDEX
 *
 * @param {number} category
 * @param {number} ped
 * @return {number}
 */
global.CompendiumGetEntryByPedIndex = function (category, ped) {
  return _in(0x1cfa0219, 0xd8e1cf25, _ch(category), ped, _r, _ri);
};

/**
 * COMPENDIUM_GET_ENTRY_BY_STAT_ITEM
 *
 * @param {number} category
 * @param {number} animalType
 * @return {number}
 */
global.CompendiumGetEntryByStatItem = function (category, animalType) {
  return _in(0x66ec9383, 0x94d76c85, _ch(category), _ch(animalType), _r, _ri);
};

/**
 * COMPENDIUM_GET_MAP_DISCOVERABLE_FROM_STAT_ITEM
 *
 * @param {number} animalStatItem
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.CompendiumGetMapDiscoverableFromStatItem = function (animalStatItem, x, y, z) {
  return _in(0x729d5412, 0x1a5e9e20, _ch(animalStatItem), _fv(x), _fv(y), _fv(z), _r, _ri);
};

/**
 * COMPENDIUM_GET_NUM_ENTRIES_IN_SUBCATEGORY
 *
 * @param {number} category
 * @param {number} subcategory
 * @return {number}
 */
global.CompendiumGetNumEntriesInSubcategory = function (category, subcategory) {
  return _in(0xf58a0c0e, 0x086e8e36, _ch(category), _ch(subcategory), _r, _ri);
};

/**
 * COMPENDIUM_GET_SHORT_DESCRIPTION_FROM_PED
 *
 * @param {number} ped
 * @return {number}
 */
global.CompendiumGetShortDescriptionFromPed = function (ped) {
  return _in(0x6c5e5d48, 0xe48b4c65, ped, _r, _ri);
};

/**
 * COMPENDIUM_GET_STUDY_AWARD_ID
 *
 * @param {number} ped
 * @return {any}
 */
global.CompendiumGetStudyAwardId = function (ped) {
  return _in(0x9f678782, 0x720349e4, ped, _r);
};

/**
 * COMPENDIUM_GET_SUBCATEGORY_PED_IS_IN
 *
 * @param {number} category
 * @param {number} ped
 * @return {number}
 */
global.CompendiumGetSubcategoryPedIsIn = function (category, ped) {
  return _in(0x9b657550, 0xdf55ec96, _ch(category), ped, _r, _ri);
};

/**
 * COMPENDIUM_GET_SUBCATEGORY_SAMPLE_TOAST_DESC_COMPLETE
 *
 * @param {number} category
 * @param {number} subcategory
 * @return {string | number}
 */
global.CompendiumGetSubcategorySampleToastDescComplete = function (category, subcategory) {
  return _in(0x59d4d68c, 0xdb82427c, _ch(category), _ch(subcategory), _r, _s);
};

/**
 * COMPENDIUM_GET_SUBCATEGORY_SAMPLE_TOAST_DESC_PROGRESS
 *
 * @param {number} category
 * @param {number} subcategory
 * @return {string | number}
 */
global.CompendiumGetSubcategorySampleToastDescProgress = function (category, subcategory) {
  return _in(0x82bfb5b3, 0x67957699, _ch(category), _ch(subcategory), _r, _s);
};

/**
 * COMPENDIUM_GET_SUBCATEGORY_SAMPLE_TOAST_TITLE
 *
 * @param {number} category
 * @param {number} subcategory
 * @return {string | number}
 */
global.CompendiumGetSubcategorySampleToastTitle = function (category, subcategory) {
  return _in(0x5e50c67e, 0xb60951e6, _ch(category), _ch(subcategory), _r, _s);
};

/**
 * COMPENDIUM_GET_SUBCATEGORY_TOAST_APP_ID
 *
 * @param {number} category
 * @param {number} subcategory
 * @return {any}
 */
global.CompendiumGetSubcategoryToastAppId = function (category, subcategory) {
  return _in(0x2bf30d9d, 0x4d680112, _ch(category), _ch(subcategory), _r);
};

/**
 * COMPENDIUM_HERB_PICKED
 * herbType: https://alloc8or.re/rdr3/doc/enums/eHerbType.txt
 * Vector3: Player Location
 *
 * @param {number} herbType
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.CompendiumHerbPicked = function (herbType, x, y, z) {
  return _in(0x725d52f2, 0x1a5e9e09, _ch(herbType), _fv(x), _fv(y), _fv(z));
};

/**
 * COMPENDIUM_HORSE_BONDING
 *
 * @param {number} ped
 * @param {number} bondingLevel
 * @return {void}
 */
global.CompendiumHorseBonding = function (ped, bondingLevel) {
  return _in(0x725d52f2, 0x1a5e9e50, ped, bondingLevel);
};

/**
 * COMPENDIUM_HORSE_OBSERVED
 * Only gets called if bSetObserved is true and animalType is matching
 *
 * @param {number} ped
 * @param {boolean} disableCompendiumToast
 * @return {void}
 */
global.CompendiumHorseObserved = function (ped, disableCompendiumToast) {
  return _in(0x725d58f2, 0x125e5e50, ped, disableCompendiumToast);
};

/**
 * COMPENDIUM_HORSE_WILD_BROKEN
 * NET_PLAYER_HORSE_PROCESS_EVENT_HORSE_BREAKING
 *
 * @param {number} ped
 * @return {void}
 */
global.CompendiumHorseWildBroken = function (ped) {
  return _in(0x725852d2, 0x1a2e9e50, ped);
};

/**
 * COMPENDIUM_WAS_ANIMAL_OBSERVED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.CompendiumWasAnimalObserved = function (ped) {
  return _in(0x23b5e9c5, 0x160bc04f, ped, _r);
};

/**
 * _0x725D52F21A5E9E22
 * Only used in R* SP Scripts, category = GANGS
 * _COMPENDIUM_GET_*
 *
 * @param {number} category
 * @return {number}
 */
global.N_0x725D52F21A5E9E22 = function (category) {
  return _in(0x725d52f2, 0x1a5e9e22, _ch(category), _r, _rf);
};

/**
 * _0x729D52461AEA9E22
 * Only used in R* SP Scripts, category = GANGS
 * _COMPENDIUM_GET_NUM_OF_ENTRIES_IN_*
 *
 * @param {number} category
 * @return {number}
 */
global.N_0x729D52461AEA9E22 = function (category) {
  return _in(0x729d5246, 0x1aea9e22, _ch(category), _r, _ri);
};

/**
 * _COMPENDIUM_GET_NUM_OF_ENTRIES_IN_CATEGORY
 *
 * @param {number} category
 * @return {number}
 */
global.CompendiumGetNumOfEntriesInCategory = function (category) {
  return _in(0x729d52f6, 0x1a5a9e22, _ch(category), _r, _ri);
};

/**
 * _COMPENDIUM_GET_SUBCATEGORY_HASH_FROM_ANIMAL_TYPE
 *
 * @param {number} category
 * @param {number} animalType
 * @return {number}
 */
global.CompendiumGetSubcategoryHashFromAnimalType = function (category, animalType) {
  return _in(0xcd278b6b, 0xfbdbdc22, _ch(category), _ch(animalType), _r, _ri);
};

/**
 * _0x0FD3ECF9D0C8655F
 *
 * @param {string | number} p0
 * @return {void}
 */
global.N_0x0FD3ECF9D0C8655F = function (p0) {
  return _in(0x0fd3ecf9, 0xd0c8655f, _ts(p0));
};

/**
 * _0x23CCAB8F40B9CBEE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {boolean}
 */
global.N_0x23CCAB8F40B9CBEE = function (x, y, z) {
  return _in(0x23ccab8f, 0x40b9cbee, _fv(x), _fv(y), _fv(z), _r);
};

/**
 * _0x33C1D63E55FA4284
 *
 * @param {string | number} p0
 * @return {boolean}
 */
global.N_0x33C1D63E55FA4284 = function (p0) {
  return _in(0x33c1d63e, 0x55fa4284, _ts(p0), _r);
};

/**
 * _0x3A66F1963B223F61
 *
 * @param {string | number} p0
 * @return {boolean}
 */
global.N_0x3A66F1963B223F61 = function (p0) {
  return _in(0x3a66f196, 0x3b223f61, _ts(p0), _r);
};

/**
 * _0x4E42CA5BCD45444A
 *

 * @return {void}
 */
global.N_0x4E42CA5BCD45444A = function () {
  return _in(0x4e42ca5b, 0xcd45444a);
};

/**
 * _0x7C680FF55617F82F
 *

 * @return {boolean}
 */
global.N_0x7C680FF55617F82F = function () {
  return _in(0x7c680ff5, 0x5617f82f, _r);
};

/**
 * _0x87F005C969EF1563
 *
 * @param {number} p0
 * @return {boolean}
 */
global.N_0x87F005C969EF1563 = function (p0) {
  return _in(0x87f005c9, 0x69ef1563, _fv(p0), _r);
};

/**
 * _0xA67F0B039D9CD513
 *
 * @param {boolean} p0
 * @return {boolean}
 */
global.N_0xA67F0B039D9CD513 = function (p0) {
  return _in(0xa67f0b03, 0x9d9cd513, p0, _r);
};

/**
 * _0xCA0BAC376C541978
 *
 * @param {string | number} p0
 * @return {void}
 */
global.N_0xCA0BAC376C541978 = function (p0) {
  return _in(0xca0bac37, 0x6c541978, _ts(p0));
};

/**
 * _0xD8E3D22AA4F0E0A5
 *
 * @param {string | number} p0
 * @return {boolean}
 */
global.N_0xD8E3D22AA4F0E0A5 = function (p0) {
  return _in(0xd8e3d22a, 0xa4f0e0a5, _ts(p0), _r);
};

/**
 * _0xDA05310EA94DC8C6
 * unused = true
 *
 * @param {string | number} p0
 * @param {string | number} p1
 * @return {void}
 */
global.N_0xDA05310EA94DC8C6 = function (p0, p1) {
  return _in(0xda05310e, 0xa94dc8c6, _ts(p0), _ts(p1));
};

/**
 * _0xE72E234B30DA7B7A
 *
 * @param {number} p0
 * @return {boolean}
 */
global.N_0xE72E234B30DA7B7A = function (p0) {
  return _in(0xe72e234b, 0x30da7b7a, p0, _r);
};

/**
 * _0xF0D545C1EEAD614A
 *

 * @return {boolean}
 */
global.N_0xF0D545C1EEAD614A = function () {
  return _in(0xf0d545c1, 0xeead614a, _r);
};

/**
 * NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT
 *

 * @return {number}
 */
global.NetworkClanGetLocalMembershipsCount = function () {
  return _in(0x1f471b79, 0xacc90bef, _r, _ri);
};

/**
 * NETWORK_CLAN_GET_MEMBERSHIP_DESC
 *
 * @param {DataView} memberDesc
 * @param {number} p1
 * @return {boolean}
 */
global.NetworkClanGetMembershipDesc = function (memberDesc, p1) {
  return _in(0x48de78af, 0x2c8885b8, memberDesc, p1, _r);
};

/**
 * NETWORK_CLAN_IS_EMBLEM_READY
 *
 * @param {any} p0
 * @param {DataView} p1
 * @return {boolean}
 */
global.NetworkClanIsEmblemReady = function (p0, p1) {
  return _in(0xa134777f, 0xf7f33331, p0, p1, _r);
};

/**
 * NETWORK_CLAN_PLAYER_GET_DESC
 *
 * @param {DataView} clanDesc
 * @param {number} bufferSize
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkClanPlayerGetDesc = function (clanDesc, bufferSize, gamerHandle) {
  return _in(0xeee6eacb, 0xe8874fba, clanDesc, bufferSize, gamerHandle, _r);
};

/**
 * NETWORK_CLAN_PLAYER_IS_ACTIVE
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkClanPlayerIsActive = function (gamerHandle) {
  return _in(0xb124b57f, 0x571d8f18, gamerHandle, _r);
};

/**
 * NETWORK_CLAN_RELEASE_EMBLEM
 *
 * @param {any} p0
 * @return {void}
 */
global.NetworkClanReleaseEmblem = function (p0) {
  return _in(0x113e6e3e, 0x50e286b0, p0);
};

/**
 * NETWORK_CLAN_REQUEST_EMBLEM
 *
 * @param {any} p0
 * @return {boolean}
 */
global.NetworkClanRequestEmblem = function (p0) {
  return _in(0x13518ff1, 0xc6b28938, p0, _r);
};

/**
 * NETWORK_CLAN_SERVICE_IS_VALID
 *

 * @return {boolean}
 */
global.NetworkClanServiceIsValid = function () {
  return _in(0x579cced0, 0x265d4896, _r);
};

/**
 * NETWORK_FIND_GAMERS_IN_CREW
 *
 * @param {number} crewId
 * @return {boolean}
 */
global.NetworkFindGamersInCrew = function (crewId) {
  return _in(0xe532d681, 0x1b3a4d2a, crewId, _r);
};

/**
 * NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR
 *

 * @return {any}
 */
global.NetworkGetPrimaryClanDataClear = function () {
  return _in(0x9aa46bad, 0xad0e27ed, _r);
};

/**
 * NETWORK_GET_PRIMARY_CLAN_DATA_NEW
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @return {boolean}
 */
global.NetworkGetPrimaryClanDataNew = function (p0, p1) {
  return _in(0xc080ff65, 0x8b2e41da, p0, p1, _r);
};

/**
 * NETWORK_GET_PRIMARY_CLAN_DATA_PENDING
 *

 * @return {any}
 */
global.NetworkGetPrimaryClanDataPending = function () {
  return _in(0xb5074db8, 0x04e28ce7, _r);
};

/**
 * NETWORK_GET_PRIMARY_CLAN_DATA_START
 *
 * @param {DataView} p0
 * @param {any} p1
 * @return {boolean}
 */
global.NetworkGetPrimaryClanDataStart = function (p0, p1) {
  return _in(0xce86d819, 0x1b762107, p0, p1, _r);
};

/**
 * NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS
 *

 * @return {any}
 */
global.NetworkGetPrimaryClanDataSuccess = function () {
  return _in(0x5b4f04f1, 0x9376a0ba, _r);
};

/**
 * _0x58D378AF2C8765B7
 *
 * @param {any} p0
 * @return {boolean}
 */
global.N_0x58D378AF2C8765B7 = function (p0) {
  return _in(0x58d378af, 0x2c8765b7, p0, _r);
};

/**
 * _NETWORK_ACCEPT_CLAN_INVITE
 *
 * @param {number} crewInviteIndex
 * @return {boolean}
 */
global.NetworkAcceptClanInvite = function (crewInviteIndex) {
  return _in(0x8e214314, 0x4b8e188d, crewInviteIndex, _r);
};

/**
 * _NETWORK_CLAN_INVITE_PLAYER
 *
 * @param {any} p0
 * @return {boolean}
 */
global.NetworkClanInvitePlayer = function (p0) {
  return _in(0xc685b014, 0xce3d988b, p0, _r);
};

/**
 * _NETWORK_CLAN_SET_ACTIVE
 *
 * @param {any} p0
 * @return {any}
 */
global.NetworkClanSetActive = function (p0) {
  return _in(0xc080ff65, 0x8b2e51da, p0, _r);
};

/**
 * DATABINDING_IS_ENTRY_VALID
 *
 * @param {number} entryId
 * @return {boolean}
 */
global.DatabindingIsEntryValid = function (entryId) {
  return _in(0x1e713079, 0x3aaaab8d, _ch(entryId), _r);
};

/**
 * DATABINDING_READ_INT
 *
 * @param {any} p0
 * @return {number}
 */
global.DatabindingReadInt = function (p0) {
  return _in(0x570784d7, 0x82597512, p0, _r, _ri);
};

/**
 * DATABINDING_WRITE_STRING_FROM_PARENT
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {string | number} p2
 * @return {void}
 */
global.DatabindingWriteStringFromParent = function (p0, p1, p2) {
  return _in(0x4ff713b2, 0xf17a391e, p0, _ts(p1), _ts(p2));
};

/**
 * _0x02B21B6BEEDD83CC
 *
 * @param {number} entryId
 * @param {number} p1
 * @return {any}
 */
global.N_0x02B21B6BEEDD83CC = function (entryId, p1) {
  return _in(0x02b21b6b, 0xeedd83cc, _ch(entryId), p1, _r);
};

/**
 * _0x05AC9E1E02975AFB
 * _DATABINDING_WRITE_DATA_*
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0x05AC9E1E02975AFB = function (p0, p1, p2) {
  return _in(0x05ac9e1e, 0x02975afb, p0, _ts(p1), _fv(p2));
};

/**
 * _0x1919D59E60FD516E
 *
 * @param {any} p0
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0x1919D59E60FD516E = function (p0, p1, p2) {
  return _in(0x1919d59e, 0x60fd516e, p0, p1, p2);
};

/**
 * _0x294AF5323F44B053
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x294AF5323F44B053 = function (p0, p1, p2) {
  return _in(0x294af532, 0x3f44b053, p0, _ts(p1), p2, _r);
};

/**
 * _0x3BF0767CF33FCC88
 *
 * @param {number} entryId
 * @return {void}
 */
global.N_0x3BF0767CF33FCC88 = function (entryId) {
  return _in(0x3bf0767c, 0xf33fcc88, _ch(entryId));
};

/**
 * _0x422179C7F6AD9304
 *
 * @param {any} p0
 * @param {DataView} gamerHandle
 * @return {void}
 */
global.N_0x422179C7F6AD9304 = function (p0, gamerHandle) {
  return _in(0x422179c7, 0xf6ad9304, p0, gamerHandle);
};

/**
 * _0x6318FB3BE37E11B3
 *
 * @param {number} entryId
 * @param {number} index
 * @return {void}
 */
global.N_0x6318FB3BE37E11B3 = function (entryId, index) {
  return _in(0x6318fb3b, 0xe37e11b3, _ch(entryId), index);
};

/**
 * _0x6329C34BEE5BFF4B
 *
 * @param {any} p0
 * @param {number} p1
 * @return {any}
 */
global.N_0x6329C34BEE5BFF4B = function (p0, p1) {
  return _in(0x6329c34b, 0xee5bff4b, p0, _ch(p1), _r);
};

/**
 * _0x7FC60C94C83C5CD7
 *
 * @param {any} p0
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0x7FC60C94C83C5CD7 = function (p0, p1, p2) {
  return _in(0x7fc60c94, 0xc83c5cd7, p0, _ch(p1), p2);
};

/**
 * _0xB138CA787F3DD858
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xB138CA787F3DD858 = function (p0, p1, p2) {
  return _in(0xb138ca78, 0x7f3dd858, p0, _ts(p1), p2);
};

/**
 * _0xBFC83DA249BEFCC9
 * _DATABINDING_WRITE_DATA_*
 *
 * @param {any} p0
 * @param {number} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xBFC83DA249BEFCC9 = function (p0, p1, p2) {
  return _in(0xbfc83da2, 0x49befcc9, p0, _ch(p1), p2);
};

/**
 * _0xC900CEC8A172375B
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0xC900CEC8A172375B = function (p0, p1, p2) {
  return _in(0xc900cec8, 0xa172375b, p0, _ts(p1), p2);
};

/**
 * _0xD48993A61938C64D
 *
 * @param {any} p0
 * @param {string | number} p1
 * @return {any}
 */
global.N_0xD48993A61938C64D = function (p0, p1) {
  return _in(0xd48993a6, 0x1938c64d, p0, _ts(p1), _r);
};

/**
 * _0xD7DB94AB78E8EBE4
 *
 * @param {string | number} p0
 * @param {number} p1
 * @return {any}
 */
global.N_0xD7DB94AB78E8EBE4 = function (p0, p1) {
  return _in(0xd7db94ab, 0x78e8ebe4, _ts(p0), _ch(p1), _r);
};

/**
 * _0xE6AAB897120492D6
 *
 * @param {any} p0
 * @param {string | number} p1
 * @return {any}
 */
global.N_0xE6AAB897120492D6 = function (p0, p1) {
  return _in(0xe6aab897, 0x120492d6, p0, _ts(p1), _r);
};

/**
 * _0xE6AAB897120492D7
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xE6AAB897120492D7 = function (p0, p1, p2) {
  return _in(0xe6aab897, 0x120492d7, p0, _ts(p1), p2);
};

/**
 * _0xF47E33F8D2523825
 *
 * @param {any} p0
 * @param {number} p1
 * @return {any}
 */
global.N_0xF47E33F8D2523825 = function (p0, p1) {
  return _in(0xf47e33f8, 0xd2523825, p0, p1, _r);
};

/**
 * _DATABINDING_ADD_DATA_BOOL
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {boolean} p2
 * @return {any}
 */
global.DatabindingAddDataBool = function (p0, p1, p2) {
  return _in(0x58baa5f6, 0x35da2ff4, p0, _ts(p1), p2, _r);
};

/**
 * _DATABINDING_ADD_DATA_BOOL_BY_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @param {boolean} p2
 * @return {any}
 */
global.DatabindingAddDataBoolByHash = function (p0, p1, p2) {
  return _in(0xbc95d3ae, 0x2eca70d6, p0, _ch(p1), p2, _r);
};

/**
 * _DATABINDING_ADD_DATA_BOOL_FROM_PATH
 *
 * @param {string | number} p0
 * @param {string | number} p1
 * @param {boolean} p2
 * @return {any}
 */
global.DatabindingAddDataBoolFromPath = function (p0, p1, p2) {
  return _in(0x37bb86a7, 0x51148a6a, _ts(p0), _ts(p1), p2, _r);
};

/**
 * _DATABINDING_ADD_DATA_CONTAINER
 * Returns entryId Hash
 *
 * @param {number} entryId
 * @param {string | number} p1
 * @return {number}
 */
global.DatabindingAddDataContainer = function (entryId, p1) {
  return _in(0xeb4f9a35, 0x37eeabcd, _ch(entryId), _ts(p1), _r, _ri);
};

/**
 * _DATABINDING_ADD_DATA_CONTAINER_BY_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @return {any}
 */
global.DatabindingAddDataContainerByHash = function (p0, p1) {
  return _in(0x98bb1434, 0x5bb68257, p0, _ch(p1), _r);
};

/**
 * _DATABINDING_ADD_DATA_CONTAINER_FROM_PATH
 *
 * @param {string | number} p0
 * @param {string | number} p1
 * @return {any}
 */
global.DatabindingAddDataContainerFromPath = function (p0, p1) {
  return _in(0x0c827d17, 0x5f1292f4, _ts(p0), _ts(p1), _r);
};

/**
 * _DATABINDING_ADD_DATA_FLOAT
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {number} p2
 * @return {any}
 */
global.DatabindingAddDataFloat = function (p0, p1, p2) {
  return _in(0x51542282, 0x73adb9a6, p0, _ts(p1), _fv(p2), _r);
};

/**
 * _DATABINDING_ADD_DATA_GANG_ID
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {any} gangId
 * @return {any}
 */
global.DatabindingAddDataGangId = function (p0, p1, gangId) {
  return _in(0x7d0f2014, 0xdb28dd00, p0, _ts(p1), gangId, _r);
};

/**
 * _DATABINDING_ADD_DATA_HASH
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {number} p2
 * @return {any}
 */
global.DatabindingAddDataHash = function (p0, p1, p2) {
  return _in(0x8538f120, 0x5d60eca6, p0, _ts(p1), _ch(p2), _r);
};

/**
 * _DATABINDING_ADD_DATA_HASH_BY_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @param {number} p2
 * @return {any}
 */
global.DatabindingAddDataHashByHash = function (p0, p1, p2) {
  return _in(0x8e173dfb, 0x041993c6, p0, _ch(p1), _ch(p2), _r);
};

/**
 * _DATABINDING_ADD_DATA_INT
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {number} p2
 * @return {any}
 */
global.DatabindingAddDataInt = function (p0, p1, p2) {
  return _in(0x307a3247, 0xc5457bde, p0, _ts(p1), _ch(p2), _r);
};

/**
 * _DATABINDING_ADD_DATA_INT_BY_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @param {number} p2
 * @return {any}
 */
global.DatabindingAddDataIntByHash = function (p0, p1, p2) {
  return _in(0x267f9527, 0xf4350ade, p0, _ch(p1), p2, _r);
};

/**
 * _DATABINDING_ADD_DATA_POSSE_ID
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {any} posseId
 * @return {any}
 */
global.DatabindingAddDataPosseId = function (p0, p1, posseId) {
  return _in(0x7d0f2014, 0xdb28dd01, p0, _ts(p1), posseId, _r);
};

/**
 * _DATABINDING_ADD_DATA_STRING
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {string | number} p2
 * @return {any}
 */
global.DatabindingAddDataString = function (p0, p1, p2) {
  return _in(0x617fca1c, 0x5652bbad, p0, _ts(p1), _ts(p2), _r);
};

/**
 * _DATABINDING_ADD_DATA_STRING_BY_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @param {string | number} p2
 * @return {any}
 */
global.DatabindingAddDataStringByHash = function (p0, p1, p2) {
  return _in(0xead09e76, 0xe22630c3, p0, _ch(p1), _ts(p2), _r);
};

/**
 * _DATABINDING_ADD_DATA_STRING_FROM_PATH
 *
 * @param {string | number} p0
 * @param {string | number} p1
 * @param {string | number} p2
 * @return {any}
 */
global.DatabindingAddDataStringFromPath = function (p0, p1, p2) {
  return _in(0xa381de86, 0xee170c4a, _ts(p0), _ts(p1), _ts(p2), _r);
};

/**
 * _DATABINDING_ADD_HASH_ARRAY
 *
 * @param {any} p0
 * @param {string | number} p1
 * @return {any}
 */
global.DatabindingAddHashArray = function (p0, p1) {
  return _in(0x52f5f082, 0x78ea5d75, p0, _ts(p1), _r);
};

/**
 * _DATABINDING_ADD_STRING_ARRAY
 *
 * @param {any} p0
 * @param {string | number} p1
 * @return {any}
 */
global.DatabindingAddStringArray = function (p0, p1) {
  return _in(0x1b23e062, 0x7bdbfe85, p0, _ts(p1), _r);
};

/**
 * _DATABINDING_ADD_UI_ITEM_LIST
 *
 * @param {any} p0
 * @param {string | number} p1
 * @return {any}
 */
global.DatabindingAddUiItemList = function (p0, p1) {
  return _in(0xfe74fa57, 0xe0ce6824, p0, _ts(p1), _r);
};

/**
 * _DATABINDING_ADD_UI_ITEM_LIST_BY_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @return {any}
 */
global.DatabindingAddUiItemListByHash = function (p0, p1) {
  return _in(0x3c779928, 0x3325181b, p0, _ch(p1), _r);
};

/**
 * _DATABINDING_ADD_UI_ITEM_LIST_FROM_PATH
 *
 * @param {string | number} p0
 * @param {string | number} p1
 * @return {any}
 */
global.DatabindingAddUiItemListFromPath = function (p0, p1) {
  return _in(0xdb5b9a47, 0x4148f699, _ts(p0), _ts(p1), _r);
};

/**
 * _DATABINDING_CLEAR_BINDING_ARRAY
 *
 * @param {number} entryId
 * @return {void}
 */
global.DatabindingClearBindingArray = function (entryId) {
  return _in(0xa1f15c1d, 0x03df802d, _ch(entryId));
};

/**
 * _DATABINDING_GET_ARRAY_COUNT
 *
 * @param {number} entryId
 * @return {any}
 */
global.DatabindingGetArrayCount = function (entryId) {
  return _in(0xd23f5de0, 0x4fe717e2, _ch(entryId), _r);
};

/**
 * _DATABINDING_GET_DATA_CONTAINER_FROM_CHILD_INDEX
 *
 * @param {number} entryId
 * @param {number} p1
 * @return {any}
 */
global.DatabindingGetDataContainerFromChildIndex = function (entryId, p1) {
  return _in(0x0c827d17, 0x5f1292f3, _ch(entryId), p1, _r);
};

/**
 * _DATABINDING_GET_DATA_CONTAINER_FROM_PATH
 *
 * @param {string | number} p0
 * @return {any}
 */
global.DatabindingGetDataContainerFromPath = function (p0) {
  return _in(0x0c827d17, 0x5f1292f2, _ts(p0), _r);
};

/**
 * _DATABINDING_GET_ITEM_CONTEXT_BY_INDEX
 *
 * @param {any} p0
 * @param {number} index
 * @return {any}
 */
global.DatabindingGetItemContextByIndex = function (p0, index) {
  return _in(0xe96d7f9f, 0xefcc105f, p0, index, _r);
};

/**
 * _DATABINDING_INSERT_UI_ITEM_TO_LIST_FROM_CONTEXT_HASH_ALIAS
 *
 * @param {any} p0
 * @param {number} index
 * @param {number} p2
 * @param {any} p3
 * @return {void}
 */
global.DatabindingInsertUiItemToListFromContextHashAlias = function (p0, index, p2, p3) {
  return _in(0xee97a05c, 0x05f16e41, p0, index, _ch(p2), p3);
};

/**
 * _DATABINDING_INSERT_UI_ITEM_TO_LIST_FROM_CONTEXT_STRING_ALIAS
 *
 * @param {any} p0
 * @param {number} index
 * @param {string | number} p2
 * @param {any} p3
 * @return {void}
 */
global.DatabindingInsertUiItemToListFromContextStringAlias = function (p0, index, p2, p3) {
  return _in(0x5859e970, 0x794d92f3, p0, index, _ts(p2), p3);
};

/**
 * _DATABINDING_INSERT_UI_ITEM_TO_LIST_FROM_PATH_STRING_ALIAS
 *
 * @param {any} p0
 * @param {any} p1
 * @param {string | number} p2
 * @param {any} p3
 * @return {void}
 */
global.DatabindingInsertUiItemToListFromPathStringAlias = function (p0, p1, p2, p3) {
  return _in(0x5740774f, 0x608e4fc8, p0, p1, _ts(p2), p3);
};

/**
 * _DATABINDING_READ_DATA_BOOL
 *
 * @param {any} p0
 * @return {any}
 */
global.DatabindingReadDataBool = function (p0) {
  return _in(0x5eefbd4b, 0x6d7cd6eb, p0, _r);
};

/**
 * _DATABINDING_READ_DATA_BOOL_FROM_PARENT
 *
 * @param {any} p0
 * @param {string | number} p1
 * @return {any}
 */
global.DatabindingReadDataBoolFromParent = function (p0, p1) {
  return _in(0xa8ede09f, 0xe07bd77f, p0, _ts(p1), _r);
};

/**
 * _DATABINDING_READ_DATA_BOOL_FROM_PARENT_BY_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @return {any}
 */
global.DatabindingReadDataBoolFromParentByHash = function (p0, p1) {
  return _in(0x4cdc3fdd, 0xfae07eb3, p0, _ch(p1), _r);
};

/**
 * _DATABINDING_READ_DATA_HASH_STRING_FROM_PARENT
 *
 * @param {any} p0
 * @param {string | number} p1
 * @return {any}
 */
global.DatabindingReadDataHashStringFromParent = function (p0, p1) {
  return _in(0x9b535990, 0xb01b62de, p0, _ts(p1), _r);
};

/**
 * _DATABINDING_READ_DATA_HASH_STRING_FROM_PARENT_BY_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @return {any}
 */
global.DatabindingReadDataHashStringFromParentByHash = function (p0, p1) {
  return _in(0x1f43bc25, 0xa119b252, p0, _ch(p1), _r);
};

/**
 * _DATABINDING_READ_DATA_INT_FROM_PARENT
 *
 * @param {any} p0
 * @param {string | number} p1
 * @return {any}
 */
global.DatabindingReadDataIntFromParent = function (p0, p1) {
  return _in(0xffc566a4, 0x801f6b40, p0, _ts(p1), _r);
};

/**
 * _DATABINDING_READ_DATA_INT_FROM_PARENT_BY_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @return {any}
 */
global.DatabindingReadDataIntFromParentByHash = function (p0, p1) {
  return _in(0xb5f668b6, 0x48ec0970, p0, _ch(p1), _r);
};

/**
 * _DATABINDING_READ_DATA_STRING
 *
 * @param {any} p0
 * @return {any}
 */
global.DatabindingReadDataString = function (p0) {
  return _in(0x3d290b5f, 0xfa7c5151, p0, _r);
};

/**
 * _DATABINDING_READ_DATA_STRING_FROM_PARENT
 *
 * @param {any} p0
 * @param {string | number} p1
 * @return {any}
 */
global.DatabindingReadDataStringFromParent = function (p0, p1) {
  return _in(0x6323ad27, 0x7c4a2afb, p0, _ts(p1), _r);
};

/**
 * _DATABINDING_READ_FLOAT
 *
 * @param {number} entryId
 * @return {number}
 */
global.DatabindingReadFloat = function (entryId) {
  return _in(0x5fe444eb, 0x67c70ad4, _ch(entryId), _r, _rf);
};

/**
 * _DATABINDING_READ_HASH
 *
 * @param {number} entryId
 * @return {number}
 */
global.DatabindingReadHash = function (entryId) {
  return _in(0x81d7183e, 0x7a8eca72, _ch(entryId), _r, _ri);
};

/**
 * _DATABINDING_REMOVE_BINDING_ARRAY_ITEM_BY_DATA_CONTEXT_ID
 *
 * @param {any} p0
 * @param {number} entryId
 * @return {void}
 */
global.DatabindingRemoveBindingArrayItemByDataContextId = function (p0, entryId) {
  return _in(0xf68b1726, 0xeaf7b285, p0, _ch(entryId));
};

/**
 * _DATABINDING_REMOVE_DATA_ENTRY
 *
 * @param {number} entryId
 * @return {void}
 */
global.DatabindingRemoveDataEntry = function (entryId) {
  return _in(0x0ae9938d, 0x0541f2da, _ch(entryId));
};

/**
 * _DATABINDING_SET_TEMPLATED_UI_ITEM_HASH_ALIAS
 *
 * @param {any} p0
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.DatabindingSetTemplatedUiItemHashAlias = function (p0, p1, p2) {
  return _in(0x0ae7138d, 0x0541f2de, p0, p1, _ch(p2));
};

/**
 * _DATABINDING_SET_TEMPLATED_UI_ITEM_LIST_SIZE
 *
 * @param {any} p0
 * @param {number} p1
 * @return {void}
 */
global.DatabindingSetTemplatedUiItemListSize = function (p0, p1) {
  return _in(0xfe74fa57, 0xe0ce6825, p0, p1);
};

/**
 * _DATABINDING_WRITE_DATA_BOOL
 *
 * @param {any} p0
 * @param {boolean} p1
 * @return {void}
 */
global.DatabindingWriteDataBool = function (p0, p1) {
  return _in(0xab888b4b, 0x91046770, p0, p1);
};

/**
 * _DATABINDING_WRITE_DATA_BOOL_FROM_PARENT
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.DatabindingWriteDataBoolFromParent = function (p0, p1, p2) {
  return _in(0xbdfe546e, 0x4c2d0e21, p0, _ts(p1), p2);
};

/**
 * _DATABINDING_WRITE_DATA_FLOAT
 *
 * @param {any} p0
 * @param {number} p1
 * @return {void}
 */
global.DatabindingWriteDataFloat = function (p0, p1) {
  return _in(0xdf504bec, 0xeb15da93, p0, _fv(p1));
};

/**
 * _DATABINDING_WRITE_DATA_GANG_ID
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {any} gangId
 * @return {void}
 */
global.DatabindingWriteDataGangId = function (p0, p1, gangId) {
  return _in(0xc7004140, 0x8e16be2d, p0, _ts(p1), gangId);
};

/**
 * _DATABINDING_WRITE_DATA_HASH_STRING
 *
 * @param {any} p0
 * @param {number} p1
 * @return {void}
 */
global.DatabindingWriteDataHashString = function (p0, p1) {
  return _in(0xacdef586, 0xbd71b1fd, p0, _ch(p1));
};

/**
 * _DATABINDING_WRITE_DATA_HASH_STRING_FROM_PARENT
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {number} p2
 * @return {void}
 */
global.DatabindingWriteDataHashStringFromParent = function (p0, p1, p2) {
  return _in(0x0971f04e, 0x1eaa7ae8, p0, _ts(p1), _ch(p2));
};

/**
 * _DATABINDING_WRITE_DATA_HASH_STRING_FROM_PARENT_BY_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @param {any} p2
 * @return {void}
 */
global.DatabindingWriteDataHashStringFromParentByHash = function (p0, p1, p2) {
  return _in(0x20209529, 0x689e0953, p0, _ch(p1), p2);
};

/**
 * _DATABINDING_WRITE_DATA_INT
 *
 * @param {any} p0
 * @param {number} p1
 * @return {void}
 */
global.DatabindingWriteDataInt = function (p0, p1) {
  return _in(0x335c3f6b, 0x3766b8d9, p0, p1);
};

/**
 * _DATABINDING_WRITE_DATA_INT_FROM_PARENT
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {number} p2
 * @return {void}
 */
global.DatabindingWriteDataIntFromParent = function (p0, p1, p2) {
  return _in(0x9efa9823, 0x8ba08fc4, p0, _ts(p1), p2);
};

/**
 * _DATABINDING_WRITE_DATA_INT_FROM_PARENT_BY_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @param {any} p2
 * @return {void}
 */
global.DatabindingWriteDataIntFromParentByHash = function (p0, p1, p2) {
  return _in(0x9d6e10a4, 0x1d6ed6ec, p0, _ch(p1), p2);
};

/**
 * _DATABINDING_WRITE_DATA_POSSE_ID
 *
 * @param {any} p0
 * @param {string | number} p1
 * @param {any} posseId
 * @return {void}
 */
global.DatabindingWriteDataPosseId = function (p0, p1, posseId) {
  return _in(0xc7004140, 0x8e16be2e, p0, _ts(p1), posseId);
};

/**
 * _DATABINDING_WRITE_DATA_SCRIPT_VARIABLES
 *
 * @param {number} p0
 * @param {number} p1
 * @param {any[]} args
 * @return {void}
 */
global.DatabindingWriteDataScriptVariables = function (p0, p1, ...args) {
  return _in(0xab888b4b, 0x91046771, p0, p1, args);
};

/**
 * _DATABINDING_WRITE_DATA_STRING
 *
 * @param {any} p0
 * @param {string | number} p1
 * @return {void}
 */
global.DatabindingWriteDataString = function (p0, p1) {
  return _in(0xe1bd342f, 0x2872aee9, p0, _ts(p1));
};

/**
 * _DATABINDING_WRITE_STRING_FROM_HASH
 *
 * @param {any} p0
 * @param {number} p1
 * @param {string | number} p2
 * @return {void}
 */
global.DatabindingWriteStringFromHash = function (p0, p1, p2) {
  return _in(0xa3bd6ff9, 0x5e713ee5, p0, _ch(p1), _ts(p2));
};

/**
 * _VIRTUAL_COLLECTION_EXISTS
 *
 * @param {any} p0
 * @return {any}
 */
global.VirtualCollectionExists = function (p0) {
  return _in(0x37963b56, 0x755bfb35, p0, _r);
};

/**
 * _VIRTUAL_COLLECTION_ITEM_ADD
 *
 * @param {any} p0
 * @param {number} index
 * @param {number} p2
 * @param {any} p3
 * @return {void}
 */
global.VirtualCollectionItemAdd = function (p0, index, p2, p3) {
  return _in(0x6dcbf187, 0x221cf73d, p0, index, _ch(p2), p3);
};

/**
 * _VIRTUAL_COLLECTION_RESET
 *
 * @param {any} p0
 * @return {void}
 */
global.VirtualCollectionReset = function (p0) {
  return _in(0x09d95666, 0xed2b5f60, p0);
};

/**
 * _VIRTUAL_COLLECTION_SET_INTEREST_INDEX
 *
 * @param {any} p0
 * @param {number} interestIndex
 * @return {void}
 */
global.VirtualCollectionSetInterestIndex = function (p0, interestIndex) {
  return _in(0x49a84475, 0x33308bcf, p0, interestIndex);
};

/**
 * _VIRTUAL_COLLECTION_SET_SIZE
 *
 * @param {any} p0
 * @param {number} size
 * @return {void}
 */
global.VirtualCollectionSetSize = function (p0, size) {
  return _in(0x9dce9b01, 0xa93b58bc, p0, size);
};

/**
 * DATAARRAY_GET_BOOL
 *
 * @param {DataView} arrayData
 * @param {number} arrayIndex
 * @return {boolean}
 */
global.DataarrayGetBool = function (arrayData, arrayIndex) {
  return _in(0xab1231d2, 0xde52f2d3, arrayData, arrayIndex, _r);
};

/**
 * DATAARRAY_GET_COUNT
 *
 * @param {DataView} arrayData
 * @return {number}
 */
global.DataarrayGetCount = function (arrayData) {
  return _in(0x6a885bf6, 0x9239e539, arrayData, _r, _ri);
};

/**
 * DATAARRAY_GET_DICT
 *
 * @param {DataView} arrayData
 * @param {number} arrayIndex
 * @return {any}
 */
global.DataarrayGetDict = function (arrayData, arrayIndex) {
  return _in(0xa0106559, 0x85853485, arrayData, arrayIndex, _r);
};

/**
 * DATAARRAY_GET_FLOAT
 *
 * @param {DataView} arrayData
 * @param {number} arrayIndex
 * @return {number}
 */
global.DataarrayGetFloat = function (arrayData, arrayIndex) {
  return _in(0xa9d003cf, 0x419cb81e, arrayData, arrayIndex, _r, _rf);
};

/**
 * DATAARRAY_GET_INT
 *
 * @param {DataView} arrayData
 * @param {number} arrayIndex
 * @return {number}
 */
global.DataarrayGetInt = function (arrayData, arrayIndex) {
  return _in(0x96dea500, 0xb6ebbe53, arrayData, arrayIndex, _r, _ri);
};

/**
 * DATAARRAY_GET_STRING
 *
 * @param {DataView} arrayData
 * @param {number} arrayIndex
 * @return {string | number}
 */
global.DataarrayGetString = function (arrayData, arrayIndex) {
  return _in(0xb6790a8f, 0xf80f889f, arrayData, arrayIndex, _r, _s);
};

/**
 * DATAARRAY_GET_TYPE
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 *
 * @param {DataView} arrayData
 * @param {number} arrayIndex
 * @return {number}
 */
global.DataarrayGetType = function (arrayData, arrayIndex) {
  return _in(0x151dafe6, 0xb3b9888f, arrayData, arrayIndex, _r, _ri);
};

/**
 * DATAARRAY_GET_VECTOR
 *
 * @param {DataView} arrayData
 * @param {number} arrayIndex
 * @return {Vector3}
 */
global.DataarrayGetVector = function (arrayData, arrayIndex) {
  return _in(0x850da275, 0x0da14e9a, arrayData, arrayIndex, _r, _rv);
};

/**
 * DATADICT_GET_ARRAY
 *
 * @param {DataView} objectData
 * @param {string | number} key
 * @return {any}
 */
global.DatadictGetArray = function (objectData, key) {
  return _in(0x1b5447cf, 0x18544b18, objectData, _ts(key), _r);
};

/**
 * DATADICT_GET_BOOL
 *
 * @param {DataView} objectData
 * @param {string | number} key
 * @return {boolean}
 */
global.DatadictGetBool = function (objectData, key) {
  return _in(0x175e915a, 0x486ee548, objectData, _ts(key), _r);
};

/**
 * DATADICT_GET_DICT
 *
 * @param {DataView} objectData
 * @param {string | number} key
 * @return {any}
 */
global.DatadictGetDict = function (objectData, key) {
  return _in(0x4d7a3013, 0x0f46ac9c, objectData, _ts(key), _r);
};

/**
 * DATADICT_GET_FLOAT
 *
 * @param {DataView} objectData
 * @param {string | number} key
 * @return {number}
 */
global.DatadictGetFloat = function (objectData, key) {
  return _in(0x814643ec, 0xa258adf5, objectData, _ts(key), _r, _rf);
};

/**
 * DATADICT_GET_INT
 *
 * @param {DataView} objectData
 * @param {string | number} key
 * @return {number}
 */
global.DatadictGetInt = function (objectData, key) {
  return _in(0x9d896a3b, 0x87d96e2b, objectData, _ts(key), _r, _ri);
};

/**
 * DATADICT_GET_STRING
 *
 * @param {DataView} objectData
 * @param {string | number} key
 * @return {string | number}
 */
global.DatadictGetString = function (objectData, key) {
  return _in(0xe37b38c0, 0xb4e95dfa, objectData, _ts(key), _r, _s);
};

/**
 * DATADICT_GET_TYPE
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 *
 * @param {DataView} objectData
 * @param {string | number} key
 * @return {number}
 */
global.DatadictGetType = function (objectData, key) {
  return _in(0x92e11e3c, 0xa4c7cdf0, objectData, _ts(key), _r, _ri);
};

/**
 * DATADICT_GET_VECTOR
 *
 * @param {DataView} objectData
 * @param {string | number} key
 * @return {Vector3}
 */
global.DatadictGetVector = function (objectData, key) {
  return _in(0xe459c941, 0x431e0ffa, objectData, _ts(key), _r, _rv);
};

/**
 * DATADICT_IS_ARRAY_VALID
 *
 * @param {DataView} fileDict
 * @return {boolean}
 */
global.DatadictIsArrayValid = function (fileDict) {
  return _in(0xb04b69cf, 0x277d15c0, fileDict, _r);
};

/**
 * DATADICT_IS_DICT_VALID
 *
 * @param {DataView} fileDict
 * @return {boolean}
 */
global.DatadictIsDictValid = function (fileDict) {
  return _in(0x4607d57c, 0x5f7d332a, fileDict, _r);
};

/**
 * DATADICT_SET_INT
 *
 * @param {DataView} objectData
 * @param {string | number} key
 * @param {number} value
 * @return {void}
 */
global.DatadictSetInt = function (objectData, key, value) {
  return _in(0x26fdf5e9, 0x9aa2f3e9, objectData, _ts(key), value);
};

/**
 * DATAFILE_CREATE
 *
 * @param {number} index
 * @return {void}
 */
global.DatafileCreate = function (index) {
  return _in(0x56b7291f, 0xb953dd51, index);
};

/**
 * DATAFILE_DELETE
 *
 * @param {number} index
 * @return {void}
 */
global.DatafileDelete = function (index) {
  return _in(0x9fb90eed, 0xea9f2d5c, index);
};

/**
 * DATAFILE_DELETE_REQUESTED_FILE
 *
 * @param {any} p0
 * @return {boolean}
 */
global.DatafileDeleteRequestedFile = function (p0) {
  return _in(0x604b8ed1, 0xa482f9df, p0, _r);
};

/**
 * DATAFILE_GET_FILE_DICT
 *
 * @param {number} index
 * @return {any}
 */
global.DatafileGetFileDict = function (index) {
  return _in(0xbbd8cf82, 0x3cae557c, index, _r);
};

/**
 * DATAFILE_HAS_LOADED_FILE_DATA
 *
 * @param {any} p0
 * @return {boolean}
 */
global.DatafileHasLoadedFileData = function (p0) {
  return _in(0x17279c82, 0x0464cee0, p0, _r);
};

/**
 * DATAFILE_HAS_VALID_FILE_DATA
 *
 * @param {any} p0
 * @return {boolean}
 */
global.DatafileHasValidFileData = function (p0) {
  return _in(0xe6010038, 0x9e50eade, p0, _r);
};

/**
 * DATAFILE_SELECT_ACTIVE_FILE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {boolean}
 */
global.DatafileSelectActiveFile = function (p0, p1) {
  return _in(0x46102a09, 0x89ad80b5, p0, p1, _r);
};

/**
 * DATAFILE_UGC_SELECT_DATA
 * Reloops value returned by UGC_QUERY_GET_CONTENT_NUM
 *
 * @param {any} ugcRequestId
 * @param {number} index
 * @param {any} p2
 * @return {any}
 */
global.DatafileUgcSelectData = function (ugcRequestId, index, p2) {
  return _in(0x790ec421, 0x078f5c4e, ugcRequestId, index, p2, _r);
};

/**
 * DATAFILE_WATCH_REQUEST_ID
 * Adds the given request ID to the watch list.
 *
 * @param {number} id
 * @return {void}
 */
global.DatafileWatchRequestId = function (id) {
  return _in(0xa5834834, 0xca8fd7fc, id);
};

/**
 * PARSEDDATA_IS_FILE_LOADED
 *
 * @param {number} fileHandle
 * @return {boolean}
 */
global.ParseddataIsFileLoaded = function (fileHandle) {
  return _in(0x603ac35f, 0xd4602c76, fileHandle, _r);
};

/**
 * PARSEDDATA_IS_FILE_VALID
 *
 * @param {number} fileHandle
 * @return {boolean}
 */
global.ParseddataIsFileValid = function (fileHandle) {
  return _in(0x79079694, 0x97ea92f5, fileHandle, _r);
};

/**
 * PARSEDDATA_RQ_FILLOUT_HASH
 * Old name: _DATAFILE_GET_HASH
 *
 * @param {DataView} p1
 * @return {[boolean, number]}
 */
global.ParseddataRqFilloutHash = function (p1) {
  return _in(0xfbff3ff2, 0xf5e80c0b, _i, p1, _r);
};

/**
 * PARSEDDATA_RQ_FILLOUT_NODE
 * Old name: _DATAFILE_GET_DATA_NODE_INDEX
 *
 * @param {DataView} p1
 * @return {[boolean, number]}
 */
global.ParseddataRqFilloutNode = function (p1) {
  return _in(0x83c3ed53, 0x2b6e5d07, _i, p1, _r);
};

/**
 * PARSEDDATA_RQ_FILLOUT_STRING_127
 *
 * @param {DataView} p1
 * @return {[boolean, string]}
 */
global.ParseddataRqFilloutString_127 = function (p1) {
  return _in(0x95132743, 0x5dc5164b, p0, p1, _r);
};

/**
 * UGC2_SET_PLAYER_DATA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.Ugc2SetPlayerData = function (p0, p1, p2, p3) {
  return _in(0xe79c70e7, 0x7e0973c7, p0, p1, p2, p3, _r);
};

/**
 * _0x1C65CC931C0F946F
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x1C65CC931C0F946F = function (p0, p1, p2) {
  return _in(0x1c65cc93, 0x1c0f946f, p0, p1, p2);
};

/**
 * _0x277251C161B4C3F4
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x277251C161B4C3F4 = function (p0, p1, p2) {
  return _in(0x277251c1, 0x61b4c3f4, p0, p1, p2);
};

/**
 * _0x3168BA5D6DECE323
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.N_0x3168BA5D6DECE323 = function () {
  return _in(0x3168ba5d, 0x6dece323);
};

/**
 * _0x4F9E3ED7617123AC
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x4F9E3ED7617123AC = function (p0) {
  return _in(0x4f9e3ed7, 0x617123ac, p0, _r);
};

/**
 * _0x7681B677400C7071
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x7681B677400C7071 = function (p0, p1, p2, p3, p4) {
  return _in(0x7681b677, 0x400c7071, p0, p1, p2, p3, p4);
};

/**
 * _0x9F130129EBC31B34
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x9F130129EBC31B34 = function (p0, p1, p2) {
  return _in(0x9f130129, 0xebc31b34, p0, p1, p2);
};

/**
 * _0xBC0DF006A4952C68
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xBC0DF006A4952C68 = function (p0, p1, p2) {
  return _in(0xbc0df006, 0xa4952c68, p0, p1, p2);
};

/**
 * _0xCA56DD6AB7A39F64
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xCA56DD6AB7A39F64 = function (p0) {
  return _in(0xca56dd6a, 0xb7a39f64, p0, _r);
};

/**
 * _0xE13634BB6BAF0734
 *
 * @param {number} p0
 * @param {number} p1
 * @return {number}
 */
global.N_0xE13634BB6BAF0734 = function (p0, p1) {
  return _in(0xe13634bb, 0x6baf0734, p0, p1, _r, _ri);
};

/**
 * _PARSEDDATA_GET_BOOL
 *
 * @param {DataView} p1
 * @param {number} p2
 * @return {[boolean, boolean]}
 */
global.ParseddataGetBool = function (p1, p2) {
  return _in(0xa63cd20f, 0x19b961ab, /* actually bool */ _i, p1, _ch(p2), _r);
};

/**
 * _PARSEDDATA_GET_ENTRIES
 * Returns false when there are no entries.
 *
 * @param {DataView} p0
 * @return {boolean}
 */
global.ParseddataGetEntries = function (p0) {
  return _in(0xed4413ce, 0xe1bf142c, p0, _r);
};

/**
 * _PARSEDDATA_GET_FILE
 * Opens file.
 *
 * @param {DataView} p0
 * @return {void}
 */
global.ParseddataGetFile = function (p0) {
  return _in(0x91ded5dd, 0x64bb2691, p0);
};

/**
 * _PARSEDDATA_GET_FLOAT
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {number} p2
 * @return {boolean}
 */
global.ParseddataGetFloat = function (p0, p1, p2) {
  return _in(0xb2b42607, 0xf7867576, p0, p1, _ch(p2), _r);
};

/**
 * _PARSEDDATA_GET_INT
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {number} p2
 * @return {boolean}
 */
global.ParseddataGetInt = function (p0, p1, p2) {
  return _in(0x52fc26d2, 0xd2fc2987, p0, p1, _ch(p2), _r);
};

/**
 * _PARSEDDATA_GET_NUM_CHILDREN
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.ParseddataGetNumChildren = function (p0, p1) {
  return _in(0x6beb168d, 0x5195e7ab, p0, p1, _r);
};

/**
 * _PARSEDDATA_GET_SECTION
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {number} section
 * @return {boolean}
 */
global.ParseddataGetSection = function (p0, p1, section) {
  return _in(0x44b3a369, 0x33ac009c, p0, p1, _ch(section), _r);
};

/**
 * _PARSEDDATA_LOAD_FILE_HASH
 * LOAD_PARSEDDATA_FILE_FAILSAFE_HASH
 * Returns parseddata script fileHandle
 *
 * @param {number} p0
 * @return {number}
 */
global.ParseddataLoadFileHash = function (p0) {
  return _in(0xd97d8d90, 0x5f1562f2, _ch(p0), _r, _ri);
};

/**
 * _PARSEDDATA_REGISTER_QUERY
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.ParseddataRegisterQuery = function (p0, p1, p2) {
  return _in(0xae156a74, 0x7c39a741, p0, p1, p2, _r);
};

/**
 * _PARSEDDATA_RQ_FILLOUT_BOOL
 * Old name: _DATAFILE_GET_BOOL
 *
 * @param {DataView} p1
 * @return {[boolean, boolean]}
 */
global.ParseddataRqFilloutBool = function (p1) {
  return _in(0x0d9138f3, 0xf8261df7, /* actually bool */ _i, p1, _r);
};

/**
 * _PARSEDDATA_RQ_FILLOUT_FLOAT
 * Old name: _DATAFILE_GET_FLOAT
 *
 * @param {DataView} p1
 * @return {[boolean, number]}
 */
global.ParseddataRqFilloutFloat = function (p1) {
  return _in(0x7f034fc3, 0xe891b57a, _f, p1, _r);
};

/**
 * _PARSEDDATA_RQ_FILLOUT_INT
 * Old name: _DATAFILE_GET_INT
 *
 * @param {DataView} p1
 * @return {[boolean, number]}
 */
global.ParseddataRqFilloutInt = function (p1) {
  return _in(0xef44acc6, 0x57352a35, _i, p1, _r);
};

/**
 * _PARSEDDATA_RQ_FILLOUT_STRING_63
 * Old name: _DATAFILE_GET_STRING
 *
 * @param {DataView} p1
 * @return {[boolean, string]}
 */
global.ParseddataRqFilloutString_63 = function (p1) {
  return _in(0x08eaf8e9, 0xf2eb7b2e, p0, p1, _r);
};

/**
 * _PARSEDDATA_RQ_FILLOUT_VECTOR
 * Old name: _DATAFILE_GET_VECTOR
 *
 * @param {DataView} p1
 * @return {[boolean, Vector3]}
 */
global.ParseddataRqFilloutVector = function (p1) {
  return _in(0x06fbf89b, 0x12da279c, _v, p1, _r);
};

/**
 * _PARSEDDATA_RQ_GET_NUM_NODES
 *
 * @param {any} p0
 * @return {any}
 */
global.ParseddataRqGetNumNodes = function (p0) {
  return _in(0xdf01b1f7, 0xa886b42d, p0, _r);
};

/**
 * _PARSEDDATA_UNLOAD_FILE
 *
 * @param {number} fileHandle
 * @return {void}
 */
global.ParseddataUnloadFile = function (fileHandle) {
  return _in(0x129567f0, 0xc05f81b9, fileHandle);
};

/**
 * GET_GAME_VERSION_NAME
 * Return example: 1207.69_dev_pc, 1436.28_dev_live_tu
 * 
 * Old name: _GET_GAME_BUILD_STRING
 *

 * @return {string | number}
 */
global.GetGameVersionName = function () {
  return _in(0x05a5f662, 0xad35c573, _r, _s);
};

/**
 * _0xA8D970D8A72640A6
 * nullsub, doesn't do anything
 *

 * @return {any}
 */
global.N_0xA8D970D8A72640A6 = function () {
  return _in(0xa8d970d8, 0xa72640a6, _r);
};

/**
 * _0xACF9CB705BEFA8CB
 * nullsub, doesn't do anything
 *

 * @return {any}
 */
global.N_0xACF9CB705BEFA8CB = function () {
  return _in(0xacf9cb70, 0x5befa8cb, _r);
};

/**
 * DECOR_EXIST_ON
 * Returns whether or not the specified property is set for the entity.
 *
 * @param {number} entity
 * @param {string | number} propertyName
 * @return {boolean}
 */
global.DecorExistOn = function (entity, propertyName) {
  return _in(0xd9d1cdbf, 0x3464dcdf, entity, _ts(propertyName), _r);
};

/**
 * DECOR_GET_BOOL
 *
 * @param {number} entity
 * @param {string | number} propertyName
 * @return {boolean}
 */
global.DecorGetBool = function (entity, propertyName) {
  return _in(0xdef3f1b0, 0x71abb197, entity, _ts(propertyName), _r);
};

/**
 * DECOR_GET_FLOAT
 *
 * @param {number} entity
 * @param {string | number} propertyName
 * @return {number}
 */
global.DecorGetFloat = function (entity, propertyName) {
  return _in(0xe5ff70cd, 0x842ca9d4, entity, _ts(propertyName), _r, _rf);
};

/**
 * DECOR_GET_INT
 *
 * @param {number} entity
 * @param {string | number} propertyName
 * @return {number}
 */
global.DecorGetInt = function (entity, propertyName) {
  return _in(0x44db6272, 0x7762fd9b, entity, _ts(propertyName), _r, _ri);
};

/**
 * DECOR_IS_REGISTERED_AS_TYPE
 * type: see DECOR_REGISTER
 *
 * @param {string | number} propertyName
 * @param {number} type
 * @return {boolean}
 */
global.DecorIsRegisteredAsType = function (propertyName, type) {
  return _in(0x72355278, 0xc069f272, _ts(propertyName), type, _r);
};

/**
 * DECOR_REGISTER
 *
 * @param {string | number} propertyName
 * @param {number} type
 * @return {void}
 */
global.DecorRegister = function (propertyName, type) {
  return _in(0x0b253d64, 0x4e3c36b3, _ts(propertyName), type);
};

/**
 * DECOR_REMOVE
 *
 * @param {number} entity
 * @param {string | number} propertyName
 * @return {boolean}
 */
global.DecorRemove = function (entity, propertyName) {
  return _in(0x2ba7f587, 0x7a088a1d, entity, _ts(propertyName), _r);
};

/**
 * DECOR_REMOVE_ALL
 *
 * @param {number} entity
 * @return {boolean}
 */
global.DecorRemoveAll = function (entity) {
  return _in(0x88942780, 0xe0adea42, entity, _r);
};

/**
 * DECOR_SET_BOOL
 * This function sets metadata of type bool to specified entity.
 * 
 *
 * @param {number} entity
 * @param {string | number} propertyName
 * @param {boolean} value
 * @return {boolean}
 */
global.DecorSetBool = function (entity, propertyName, value) {
  return _in(0xfe26e460, 0x9b1c3772, entity, _ts(propertyName), value, _r);
};

/**
 * DECOR_SET_FLOAT
 *
 * @param {number} entity
 * @param {string | number} propertyName
 * @param {number} value
 * @return {boolean}
 */
global.DecorSetFloat = function (entity, propertyName, value) {
  return _in(0x238f8b0c, 0x1c7fe834, entity, _ts(propertyName), _fv(value), _r);
};

/**
 * DECOR_SET_INT
 * Sets property to int.
 *
 * @param {number} entity
 * @param {string | number} propertyName
 * @param {number} value
 * @return {boolean}
 */
global.DecorSetInt = function (entity, propertyName, value) {
  return _in(0xe88f4d7f, 0x52a6090f, entity, _ts(propertyName), value, _r);
};

/**
 * DECOR_SET_STRING
 *
 * @param {number} entity
 * @param {string | number} propertyName
 * @param {string | number} value
 * @return {boolean}
 */
global.DecorSetString = function (entity, propertyName, value) {
  return _in(0x0671c1a3, 0xff7afdfc, entity, _ts(propertyName), _ts(value), _r);
};

/**
 * _DECOR_GET_UINT8
 *
 * @param {number} entity
 * @param {string | number} propertyName
 * @return {number}
 */
global.DecorGetUint8 = function (entity, propertyName) {
  return _in(0xb1682b24, 0x43f0540b, entity, _ts(propertyName), _r, _ri);
};

/**
 * _DECOR_REGISTER_2
 *
 * @param {string | number} propertyName
 * @param {number} type
 * @param {boolean} p2
 * @return {void}
 */
global.DecorRegister_2 = function (propertyName, type, p2) {
  return _in(0x4587374f, 0x88b7f6c2, _ts(propertyName), type, p2);
};

/**
 * _DECOR_SET_UINT8
 *
 * @param {number} entity
 * @param {string | number} propertyName
 * @param {number} value
 * @return {boolean}
 */
global.DecorSetUint8 = function (entity, propertyName, value) {
  return _in(0x4bdc8315, 0x0d43772d, entity, _ts(propertyName), value, _r);
};

/**
 * GET_IS_LOADING_SCREEN_ACTIVE
 *

 * @return {boolean}
 */
global.GetIsLoadingScreenActive = function () {
  return _in(0x71d4bf58, 0x90659b0c, _r);
};

/**
 * IS_DLC_PRESENT
 *
 * @param {number} dlcHash
 * @return {boolean}
 */
global.IsDlcPresent = function (dlcHash) {
  return _in(0x2763dc12, 0xbbe2bb6f, _ch(dlcHash), _r);
};

/**
 * _GET_SPECIAL_EDITION_CASH_CAMP_BONUS_ENABLED
 *

 * @return {boolean}
 */
global.GetSpecialEditionCashCampBonusEnabled = function () {
  return _in(0x1db9d61e, 0x505ae3fc, _r);
};

/**
 * _GET_SPECIAL_EDITION_CORE_STATS_BONUS_ENABLED
 *

 * @return {boolean}
 */
global.GetSpecialEditionCoreStatsBonusEnabled = function () {
  return _in(0xa16b4fba, 0x7887d7ba, _r);
};

/**
 * APPLY_FORCE_TO_ENTITY
 *
 * @param {number} entity
 * @param {number} forceFlags
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} offX
 * @param {number} offY
 * @param {number} offZ
 * @param {number} boneIndex
 * @param {boolean} isDirectionRel
 * @param {boolean} ignoreUpVec
 * @param {boolean} isForceRel
 * @param {boolean} p12
 * @param {boolean} p13
 * @return {void}
 */
global.ApplyForceToEntity = function (entity, forceFlags, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13) {
  return _in(0xf15e8f5d, 0x333f09c4, entity, forceFlags, _fv(x), _fv(y), _fv(z), _fv(offX), _fv(offY), _fv(offZ), boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13);
};

/**
 * APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS
 * p6/relative - makes the xyz force not relative to world coords, but to something else
 * p7/highForce - setting false will make the force really low
 *
 * @param {number} entity
 * @param {number} forceType
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} component
 * @param {boolean} isDirectionRel
 * @param {boolean} isForceRel
 * @param {boolean} p8
 * @return {void}
 */
global.ApplyForceToEntityCenterOfMass = function (entity, forceType, x, y, z, component, isDirectionRel, isForceRel, p8) {
  return _in(0x31da7cec, 0x5334db37, entity, forceType, _fv(x), _fv(y), _fv(z), component, isDirectionRel, isForceRel, p8);
};

/**
 * ATTACH_ENTITY_TO_ENTITY
 * Attaches entity1 to bone (boneIndex) of entity2.
 * 
 * boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
 * https://github.com/femga/rdr3_discoveries/tree/master/boneNames
 * 
 * useSoftPinning - if set to false attached entity will not detach when fixed
 * collision - controls collision between the two entities (FALSE disables collision).
 * isPed - pitch doesn't work when false and roll will only work on negative numbers (only peds)
 * vertexIndex - position of vertex
 * fixedRot - if false it ignores entity vector
 *
 * @param {number} entity1
 * @param {number} entity2
 * @param {number} boneIndex
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {boolean} p9
 * @param {boolean} useSoftPinning
 * @param {boolean} collision
 * @param {boolean} isPed
 * @param {number} vertexIndex
 * @param {boolean} fixedRot
 * @param {boolean} p15
 * @param {boolean} p16
 * @return {void}
 */
global.AttachEntityToEntity = function (entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, vertexIndex, fixedRot, p15, p16) {
  return _in(0x6b9bbd38, 0xab0796df, entity1, entity2, boneIndex, _fv(xPos), _fv(yPos), _fv(zPos), _fv(xRot), _fv(yRot), _fv(zRot), p9, useSoftPinning, collision, isPed, vertexIndex, fixedRot, p15, p16);
};

/**
 * ATTACH_ENTITY_TO_ENTITY_PHYSICALLY
 *
 * @param {number} entity1
 * @param {number} entity2
 * @param {number} p2
 * @param {number} boneIndex
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @param {number} p7
 * @param {number} p8
 * @param {number} p9
 * @param {number} p10
 * @param {number} p11
 * @param {number} p12
 * @param {number} p13
 * @param {boolean} p14
 * @param {boolean} p15
 * @param {boolean} p16
 * @param {boolean} p17
 * @param {number} p18
 * @param {boolean} p19
 * @param {number} p20
 * @param {number} p21
 * @return {void}
 */
global.AttachEntityToEntityPhysically = function (entity1, entity2, p2, boneIndex, offsetX, offsetY, offsetZ, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21) {
  return _in(0xb629a43c, 0xa1643481, entity1, entity2, p2, boneIndex, _fv(offsetX), _fv(offsetY), _fv(offsetZ), _fv(p7), _fv(p8), _fv(p9), _fv(p10), _fv(p11), _fv(p12), _fv(p13), p14, p15, p16, p17, p18, p19, _fv(p20), _fv(p21));
};

/**
 * CLEAR_ENTITY_LAST_DAMAGE_ENTITY
 *
 * @param {number} entity
 * @return {void}
 */
global.ClearEntityLastDamageEntity = function (entity) {
  return _in(0xbb19ac7d, 0x4dcefd0f, entity);
};

/**
 * CREATE_FORCED_OBJECT
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {any} p3
 * @param {number} modelHash
 * @param {boolean} p5
 * @return {void}
 */
global.CreateForcedObject = function (x, y, z, p3, modelHash, p5) {
  return _in(0x0961a905, 0xafbc34c7, _fv(x), _fv(y), _fv(z), p3, _ch(modelHash), p5);
};

/**
 * CREATE_MODEL_HIDE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} model
 * @param {boolean} p5
 * @return {void}
 */
global.CreateModelHide = function (x, y, z, radius, model, p5) {
  return _in(0x069848b3, 0xfb3c4426, _fv(x), _fv(y), _fv(z), _fv(radius), _ch(model), p5);
};

/**
 * CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} model
 * @param {boolean} p5
 * @return {void}
 */
global.CreateModelHideExcludingScriptObjects = function (x, y, z, radius, model, p5) {
  return _in(0xd136090a, 0x9aaab17d, _fv(x), _fv(y), _fv(z), _fv(radius), _ch(model), p5);
};

/**
 * CREATE_MODEL_SWAP
 * Only works with objects!
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} originalModel
 * @param {number} newModel
 * @param {boolean} p6
 * @return {void}
 */
global.CreateModelSwap = function (x, y, z, radius, originalModel, newModel, p6) {
  return _in(0x10b22183, 0x20b6f5ac, _fv(x), _fv(y), _fv(z), _fv(radius), _ch(originalModel), _ch(newModel), p6);
};

/**
 * DELETE_ENTITY
 * Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
 *

 * @return {number}
 */
global.DeleteEntity = function () {
  return _in(0x4cd38c78, 0xbd19a497, _i);
};

/**
 * DETACH_ENTITY
 *
 * @param {number} entity
 * @param {boolean} p1
 * @param {boolean} collision
 * @return {void}
 */
global.DetachEntity = function (entity, p1, collision) {
  return _in(0x64cde9d6, 0xbf8ecad3, entity, p1, collision);
};

/**
 * DOES_ENTITY_BELONG_TO_THIS_SCRIPT
 *
 * @param {number} entity
 * @param {boolean} p1
 * @return {boolean}
 */
global.DoesEntityBelongToThisScript = function (entity, p1) {
  return _in(0x622b1980, 0xcbe13332, entity, p1, _r);
};

/**
 * DOES_ENTITY_EXIST
 * Checks if the Entity exists
 *
 * @param {number} entity
 * @return {boolean}
 */
global.DoesEntityExist = function (entity) {
  return _in(0xd42bd6eb, 0x2e0f1677, entity, _r);
};

/**
 * DOES_ENTITY_HAVE_DRAWABLE
 *
 * @param {number} entity
 * @return {boolean}
 */
global.DoesEntityHaveDrawable = function (entity) {
  return _in(0x20487f0d, 0xa9af164a, entity, _r);
};

/**
 * DOES_ENTITY_HAVE_PHYSICS
 *
 * @param {number} entity
 * @return {boolean}
 */
global.DoesEntityHavePhysics = function (entity) {
  return _in(0xa512b3f1, 0xb2a0b51c, entity, _r);
};

/**
 * FIND_ANIM_EVENT_PHASE
 *
 * @param {string | number} animDictionary
 * @param {string | number} animName
 * @param {string | number} p2
 * @param {DataView} p3
 * @param {DataView} p4
 * @return {boolean}
 */
global.FindAnimEventPhase = function (animDictionary, animName, p2, p3, p4) {
  return _in(0x42718cc5, 0x59bd7776, _ts(animDictionary), _ts(animName), _ts(p2), p3, p4, _r);
};

/**
 * FORCE_ENTITY_AI_AND_ANIMATION_UPDATE
 *
 * @param {number} entity
 * @param {boolean} p1
 * @return {void}
 */
global.ForceEntityAiAndAnimationUpdate = function (entity, p1) {
  return _in(0x4c9e9647, 0x3d4f1a88, entity, p1);
};

/**
 * FREEZE_ENTITY_POSITION
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.FreezeEntityPosition = function (entity, toggle) {
  return _in(0x7d9efb7a, 0xd6b19754, entity, toggle);
};

/**
 * GET_ANIM_DURATION
 *
 * @param {string | number} animDict
 * @param {string | number} animName
 * @return {number}
 */
global.GetAnimDuration = function (animDict, animName) {
  return _in(0x9ffaf494, 0x0a54cc09, _ts(animDict), _ts(animName), _r, _rf);
};

/**
 * GET_CARRIABLE_ENTITY_STATE
 * enum eCarriableState
 * {
 *   CARRIABLE_STATE_NONE,
 *   CARRIABLE_STATE_TRANSITIONING_TO_HOGTIED,
 *   CARRIABLE_STATE_CARRIABLE_INTRO,
 *   CARRIABLE_STATE_CARRIABLE,
 *   CARRIABLE_STATE_BEING_PICKED_UP_FROM_GROUND,
 *   CARRIABLE_STATE_CARRIED_BY_HUMAN,
 *   CARRIABLE_STATE_BEING_PLACED_ON_GROUND,
 *   CARRIABLE_STATE_CARRIED_BY_MOUNT,
 *   CARRIABLE_STATE_BEING_PLACED_ON_MOUNT,
 *   CARRIABLE_STATE_BEING_PICKED_UP_FROM_MOUNT,
 *   CARRIABLE_STATE_BEING_CUT_FREE,
 *   CARRIABLE_STATE_BEING_PLACED_ON_GROUND_ESCAPE,
 *   CARRIABLE_STATE_BEING_PLACED_IN_VEHICLE
 * };
 *
 * @param {number} entity
 * @return {number}
 */
global.GetCarriableEntityState = function (entity) {
  return _in(0x61914209, 0xc36efddb, entity, _r, _ri);
};

/**
 * GET_ENTITY_ALPHA
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityAlpha = function (entity) {
  return _in(0x1bb50162, 0x4faf2bea, entity, _r, _ri);
};

/**
 * GET_ENTITY_ATTACHED_TO
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityAttachedTo = function (entity) {
  return _in(0x56d71388, 0x8a566481, entity, _r, _ri);
};

/**
 * GET_ENTITY_BONE_INDEX_BY_NAME
 *
 * @param {number} entity
 * @param {string | number} boneName
 * @return {number}
 */
global.GetEntityBoneIndexByName = function (entity, boneName) {
  return _in(0xbaca8fe9, 0xc76c124e, entity, _ts(boneName), _r, _ri);
};

/**
 * GET_ENTITY_COLLISION_DISABLED
 *
 * @param {number} entity
 * @return {boolean}
 */
global.GetEntityCollisionDisabled = function (entity) {
  return _in(0xaa2fadd3, 0x0f45a9da, entity, _r);
};

/**
 * GET_ENTITY_COORDS
 * Gets the current coordinates for a specified entity.
 * `entity` = The entity to get the coordinates from.
 * `alive` = Unused by the game, potentially used by debug builds in order to assert whether or not an entity was alive.
 * 
 * If entity is a ped and it's in a vehicle or on a mount the coords of that entity are returned. Set 'realCoords' to true when you need the true ped coords.
 *
 * @param {number} entity
 * @param {boolean} alive
 * @param {boolean} realCoords
 * @return {Vector3}
 */
global.GetEntityCoords = function (entity, alive, realCoords) {
  return _in(0xa86d5f06, 0x9399f44d, entity, alive, realCoords, _r, _rv);
};

/**
 * GET_ENTITY_FORWARD_VECTOR
 * Gets the entity's forward vector in XY(Z) eulers.
 *
 * @param {number} entity
 * @return {Vector3}
 */
global.GetEntityForwardVector = function (entity) {
  return _in(0x2412d9c0, 0x5bb09b97, entity, _r, _rv);
};

/**
 * GET_ENTITY_FORWARD_X
 * Gets the X-component of the entity's forward vector.
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityForwardX = function (entity) {
  return _in(0xdb0954e9, 0x960f6457, entity, _r, _rf);
};

/**
 * GET_ENTITY_FORWARD_Y
 * Gets the Y-component of the entity's forward vector.
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityForwardY = function (entity) {
  return _in(0x9a5c073e, 0xcbda7ee7, entity, _r, _rf);
};

/**
 * GET_ENTITY_HEADING
 * Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityHeading = function (entity) {
  return _in(0xc230dd95, 0x6e2f5507, entity, _r, _rf);
};

/**
 * GET_ENTITY_HEALTH
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityHealth = function (entity) {
  return _in(0x82368787, 0xea73c0f7, entity, _r, _ri);
};

/**
 * GET_ENTITY_HEIGHT
 *
 * @param {number} entity
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} atTop
 * @param {boolean} inWorldCoords
 * @return {number}
 */
global.GetEntityHeight = function (entity, x, y, z, atTop, inWorldCoords) {
  return _in(0x296debc8, 0x4474b375, entity, _fv(x), _fv(y), _fv(z), atTop, inWorldCoords, _r, _rf);
};

/**
 * GET_ENTITY_HEIGHT_ABOVE_GROUND
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityHeightAboveGround = function (entity) {
  return _in(0x0d3b5bae, 0xa08f63e9, entity, _r, _rf);
};

/**
 * GET_ENTITY_LOD_DIST
 * Returns the LOD distance of an entity.
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityLodDist = function (entity) {
  return _in(0xdf240d0c, 0x2a948683, entity, _r, _ri);
};

/**
 * GET_ENTITY_MATRIX
 *
 * @param {number} entity
 * @return {[Vector3, Vector3, Vector3, Vector3]}
 */
global.GetEntityMatrix = function (entity) {
  return _in(0x3a9b1120, 0xaf13fbf2, entity, _v, _v, _v, _v);
};

/**
 * GET_ENTITY_MAX_HEALTH
 *
 * @param {number} entity
 * @param {boolean} p1
 * @return {number}
 */
global.GetEntityMaxHealth = function (entity, p1) {
  return _in(0x15d75760, 0x6d170c3c, entity, p1, _r, _ri);
};

/**
 * GET_ENTITY_MODEL
 * Returns the model hash from the entity
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityModel = function (entity) {
  return _in(0xda76a9f3, 0x9210d365, entity, _r, _ri);
};

/**
 * GET_ENTITY_PITCH
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityPitch = function (entity) {
  return _in(0xef355abe, 0xff7f5005, entity, _r, _rf);
};

/**
 * GET_ENTITY_POPULATION_TYPE
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityPopulationType = function (entity) {
  return _in(0xade28862, 0xb6d7b85b, entity, _r, _ri);
};

/**
 * GET_ENTITY_ROLL
 * Displays the current ROLL axis of the entity [-180.0000/180.0000+]
 * (Sideways Roll) such as a vehicle tipped on its side
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityRoll = function (entity) {
  return _in(0xbf966536, 0xfa8b6879, entity, _r, _rf);
};

/**
 * GET_ENTITY_ROTATION
 *
 * @param {number} entity
 * @param {number} rotationOrder
 * @return {Vector3}
 */
global.GetEntityRotation = function (entity, rotationOrder) {
  return _in(0xe09caf86, 0xc32cb48f, entity, rotationOrder, _r, _rv);
};

/**
 * GET_ENTITY_SPEED
 * Result is in meters per second (m/s)
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntitySpeed = function (entity) {
  return _in(0xfb6ba510, 0xa533df81, entity, _r, _rf);
};

/**
 * GET_ENTITY_SPEED_VECTOR
 *
 * @param {number} entity
 * @param {boolean} relative
 * @return {Vector3}
 */
global.GetEntitySpeedVector = function (entity, relative) {
  return _in(0xf2db0981, 0x6a419dc5, entity, relative, _r, _rv);
};

/**
 * GET_ENTITY_SUBMERGED_LEVEL
 * Get how much of the entity is submerged.  1.0f is whole entity.
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntitySubmergedLevel = function (entity) {
  return _in(0x4a77c3f7, 0x3fd9e831, entity, _r, _rf);
};

/**
 * GET_ENTITY_TYPE
 * Returns entityType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityType
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityType = function (entity) {
  return _in(0x97f696ac, 0xa466b4e0, entity, _r, _ri);
};

/**
 * GET_ENTITY_UPRIGHT_VALUE
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityUprightValue = function (entity) {
  return _in(0x56398be6, 0x5160c3be, entity, _r, _rf);
};

/**
 * GET_ENTITY_VELOCITY
 *
 * @param {number} entity
 * @param {number} p1
 * @return {Vector3}
 */
global.GetEntityVelocity = function (entity, p1) {
  return _in(0x4805d2b1, 0xd8cf94a9, entity, p1, _r, _rv);
};

/**
 * GET_IS_ANIMAL
 *
 * @param {number} entity
 * @return {boolean}
 */
global.GetIsAnimal = function (entity) {
  return _in(0x9a100f1c, 0xf4546629, entity, _r);
};

/**
 * GET_MATCHING_ENTITIES
 *
 * @param {number} volume
 * @param {number} itemSet
 * @param {number} entityType
 * @param {any} p3
 * @param {number} p4
 * @param {string | number} p5
 * @return {number}
 */
global.GetMatchingEntities = function (volume, itemSet, entityType, p3, p4, p5) {
  return _in(0x84ccf9a1, 0x2942c83d, volume, itemSet, entityType, p3, _ch(p4), _ts(p5), _r, _ri);
};

/**
 * GET_NEAREST_PARTICIPANT_TO_ENTITY
 *
 * @param {number} entity
 * @return {number}
 */
global.GetNearestParticipantToEntity = function (entity) {
  return _in(0x6888a43c, 0x35a5f630, entity, _r, _ri);
};

/**
 * GET_NEAREST_PLAYER_TO_ENTITY
 *
 * @param {number} entity
 * @param {number} playerPedToIgnore
 * @param {number} flags
 * @return {number}
 */
global.GetNearestPlayerToEntity = function (entity, playerPedToIgnore, flags) {
  return _in(0x990e294f, 0xc387fb88, entity, playerPedToIgnore, flags, _r, _ri);
};

/**
 * GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM
 *
 * @param {number} entity
 * @param {number} team
 * @param {number} playerPedToIgnore
 * @param {number} flags
 * @return {number}
 */
global.GetNearestPlayerToEntityOnTeam = function (entity, team, playerPedToIgnore, flags) {
  return _in(0xb2c30c3b, 0x4aff718c, entity, team, playerPedToIgnore, flags, _r, _ri);
};

/**
 * GET_OBJECT_INDEX_FROM_ENTITY_INDEX
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * @param {number} entity
 * @return {number}
 */
global.GetObjectIndexFromEntityIndex = function (entity) {
  return _in(0x280bbe56, 0x01eaa983, entity, _r, _ri);
};

/**
 * GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS
 *
 * @param {number} entity
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @return {Vector3}
 */
global.GetOffsetFromEntityGivenWorldCoords = function (entity, posX, posY, posZ) {
  return _in(0x497c6b1a, 0x2c9ae69c, entity, _fv(posX), _fv(posY), _fv(posZ), _r, _rv);
};

/**
 * GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS
 * Offset values are relative to the entity.
 * 
 * x = left/right
 * y = forward/backward
 * z = up/down
 *
 * @param {number} entity
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @return {Vector3}
 */
global.GetOffsetFromEntityInWorldCoords = function (entity, offsetX, offsetY, offsetZ) {
  return _in(0x1899f328, 0xb0e12848, entity, _fv(offsetX), _fv(offsetY), _fv(offsetZ), _r, _rv);
};

/**
 * GET_PED_INDEX_FROM_ENTITY_INDEX
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * @param {number} entity
 * @return {number}
 */
global.GetPedIndexFromEntityIndex = function (entity) {
  return _in(0x0f16d042, 0xbd640ea3, entity, _r, _ri);
};

/**
 * GET_VEHICLE_INDEX_FROM_ENTITY_INDEX
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * @param {number} entity
 * @return {number}
 */
global.GetVehicleIndexFromEntityIndex = function (entity) {
  return _in(0xdf1e5aac, 0x561afc59, entity, _r, _ri);
};

/**
 * GET_WORLD_POSITION_OF_ENTITY_BONE
 * Returns the coordinates of an entity-bone.
 * https://github.com/femga/rdr3_discoveries/tree/master/boneNames
 *
 * @param {number} entity
 * @param {number} boneIndex
 * @return {Vector3}
 */
global.GetWorldPositionOfEntityBone = function (entity, boneIndex) {
  return _in(0x82cfa50e, 0x34681ca5, entity, boneIndex, _r, _rv);
};

/**
 * HAS_ANIM_EVENT_FIRED
 *
 * @param {number} entity
 * @param {number} actionHash
 * @return {boolean}
 */
global.HasAnimEventFired = function (entity, actionHash) {
  return _in(0x5851cc48, 0x405f4a07, entity, _ch(actionHash), _r);
};

/**
 * HAS_COLLISION_LOADED_AROUND_ENTITY
 *
 * @param {number} entity
 * @return {boolean}
 */
global.HasCollisionLoadedAroundEntity = function (entity) {
  return _in(0xbeb16009, 0x52b9cf5c, entity, _r);
};

/**
 * HAS_COLLISION_LOADED_AROUND_POSITION
 * Old name: _HAS_COLLISION_LOADED_AT_COORDS
 *
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @return {boolean}
 */
global.HasCollisionLoadedAroundPosition = function (xPos, yPos, zPos) {
  return _in(0x6bfbdc46, 0x139c45ab, _fv(xPos), _fv(yPos), _fv(zPos), _r);
};

/**
 * HAS_ENTITY_ANIM_FINISHED
 *
 * @param {number} entity
 * @param {string | number} animDict
 * @param {string | number} animName
 * @param {number} p3
 * @return {boolean}
 */
global.HasEntityAnimFinished = function (entity, animDict, animName, p3) {
  return _in(0xaeb40615, 0x337ef1e3, entity, _ts(animDict), _ts(animName), p3, _r);
};

/**
 * HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT
 *
 * @param {number} entity
 * @return {boolean}
 */
global.HasEntityBeenDamagedByAnyObject = function (entity) {
  return _in(0x73bb7638, 0x80cd23a6, entity, _r);
};

/**
 * HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED
 *
 * @param {number} entity
 * @return {boolean}
 */
global.HasEntityBeenDamagedByAnyPed = function (entity) {
  return _in(0x9934e9c4, 0x2d52d87e, entity, _r);
};

/**
 * HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE
 *
 * @param {number} entity
 * @return {boolean}
 */
global.HasEntityBeenDamagedByAnyVehicle = function (entity) {
  return _in(0x695d7c26, 0xde65c423, entity, _r);
};

/**
 * HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY
 *
 * @param {number} entity1
 * @param {number} entity2
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {boolean}
 */
global.HasEntityBeenDamagedByEntity = function (entity1, entity2, p2, p3) {
  return _in(0x7b6e7bec, 0x1143ac86, entity1, entity2, p2, p3, _r);
};

/**
 * HAS_ENTITY_CLEAR_LOS_TO_COORD
 *
 * @param {number} entity
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} flags
 * @return {boolean}
 */
global.HasEntityClearLosToCoord = function (entity, x, y, z, flags) {
  return _in(0x0c9dbf48, 0xc6ba6e4c, entity, _fv(x), _fv(y), _fv(z), flags, _r);
};

/**
 * HAS_ENTITY_CLEAR_LOS_TO_ENTITY
 *
 * @param {number} entity1
 * @param {number} entity2
 * @param {number} traceType
 * @return {boolean}
 */
global.HasEntityClearLosToEntity = function (entity1, entity2, traceType) {
  return _in(0xfcdff7b7, 0x2d23a1ac, entity1, entity2, traceType, _r);
};

/**
 * HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT
 * Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
 *
 * @param {number} entity1
 * @param {number} entity2
 * @param {number} traceType
 * @return {boolean}
 */
global.HasEntityClearLosToEntityInFront = function (entity1, entity2, traceType) {
  return _in(0xe88f1966, 0x0651d566, entity1, entity2, traceType, _r);
};

/**
 * HAS_ENTITY_COLLIDED_WITH_ANYTHING
 *
 * @param {number} entity
 * @return {boolean}
 */
global.HasEntityCollidedWithAnything = function (entity) {
  return _in(0xdf18751e, 0xc74f90ff, entity, _r);
};

/**
 * IS_AN_ENTITY
 *
 * @param {number} handle
 * @return {boolean}
 */
global.IsAnEntity = function (handle) {
  return _in(0x27cff3e5, 0xa286d3df, handle, _r);
};

/**
 * IS_ENTITY_AN_OBJECT
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityAnObject = function (entity) {
  return _in(0x0a27a546, 0xa375fdef, entity, _r);
};

/**
 * IS_ENTITY_ATTACHED
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityAttached = function (entity) {
  return _in(0xee6ad63a, 0xbf59c0b7, entity, _r);
};

/**
 * IS_ENTITY_ATTACHED_TO_ANY_OBJECT
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityAttachedToAnyObject = function (entity) {
  return _in(0x306c1f61, 0x78f01ab3, entity, _r);
};

/**
 * IS_ENTITY_ATTACHED_TO_ANY_PED
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityAttachedToAnyPed = function (entity) {
  return _in(0xc841153d, 0xed2ca89a, entity, _r);
};

/**
 * IS_ENTITY_ATTACHED_TO_ANY_VEHICLE
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityAttachedToAnyVehicle = function (entity) {
  return _in(0x12df6e0d, 0x2e736749, entity, _r);
};

/**
 * IS_ENTITY_ATTACHED_TO_ENTITY
 *
 * @param {number} from
 * @param {number} to
 * @return {boolean}
 */
global.IsEntityAttachedToEntity = function (from, to) {
  return _in(0x154a3c52, 0x9497053e, from, to, _r);
};

/**
 * IS_ENTITY_AT_COORD
 * Checks if entity is within x/y/zSize distance of x/y/z. 
 * 
 * Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
 *
 * @param {number} entity
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {number} xSize
 * @param {number} ySize
 * @param {number} zSize
 * @param {boolean} p7
 * @param {boolean} p8
 * @param {number} p9
 * @return {boolean}
 */
global.IsEntityAtCoord = function (entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9) {
  return _in(0x5e583426, 0x02e94718, entity, _fv(xPos), _fv(yPos), _fv(zPos), _fv(xSize), _fv(ySize), _fv(zSize), p7, p8, p9, _r);
};

/**
 * IS_ENTITY_AT_ENTITY
 * Checks if entity1 is within the box defined by x/y/zSize of entity2.
 * 
 * Last three parameters are almost always p5 = 0, p6 = 1, p7 = 0
 *
 * @param {number} entity1
 * @param {number} entity2
 * @param {number} xSize
 * @param {number} ySize
 * @param {number} zSize
 * @param {boolean} p5
 * @param {boolean} p6
 * @param {number} p7
 * @return {boolean}
 */
global.IsEntityAtEntity = function (entity1, entity2, xSize, ySize, zSize, p5, p6, p7) {
  return _in(0xc057f02b, 0x837a27f6, entity1, entity2, _fv(xSize), _fv(ySize), _fv(zSize), p5, p6, p7, _r);
};

/**
 * IS_ENTITY_A_MISSION_ENTITY
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityAMissionEntity = function (entity) {
  return _in(0x138190f6, 0x4db4bbd1, entity, _r);
};

/**
 * IS_ENTITY_A_PED
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityAPed = function (entity) {
  return _in(0xcf817691, 0x2dda4ea5, entity, _r);
};

/**
 * IS_ENTITY_A_VEHICLE
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityAVehicle = function (entity) {
  return _in(0xc3d96af4, 0x5fccec4c, entity, _r);
};

/**
 * IS_ENTITY_DEAD
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityDead = function (entity) {
  return _in(0x7d5b1f88, 0xe7504bba, entity, _r);
};

/**
 * IS_ENTITY_IN_AIR
 *
 * @param {number} entity
 * @param {any} p1
 * @return {boolean}
 */
global.IsEntityInAir = function (entity, p1) {
  return _in(0x886e37ec, 0x497200b6, entity, p1, _r);
};

/**
 * IS_ENTITY_IN_ANGLED_AREA
 * Creates a spherical cone at origin that extends to surface with the angle specified. Then returns true if the entity is inside the spherical cone
 * 
 * Angle is measured in degrees.
 *
 * @param {number} entity
 * @param {number} originX
 * @param {number} originY
 * @param {number} originZ
 * @param {number} edgeX
 * @param {number} edgeY
 * @param {number} edgeZ
 * @param {number} angle
 * @param {boolean} p8
 * @param {boolean} p9
 * @param {any} p10
 * @return {boolean}
 */
global.IsEntityInAngledArea = function (entity, originX, originY, originZ, edgeX, edgeY, edgeZ, angle, p8, p9, p10) {
  return _in(0xd3151e53, 0x134595e5, entity, _fv(originX), _fv(originY), _fv(originZ), _fv(edgeX), _fv(edgeY), _fv(edgeZ), _fv(angle), p8, p9, p10, _r);
};

/**
 * IS_ENTITY_IN_AREA
 *
 * @param {number} entity
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {boolean} p7
 * @param {boolean} p8
 * @param {any} p9
 * @return {boolean}
 */
global.IsEntityInArea = function (entity, x1, y1, z1, x2, y2, z2, p7, p8, p9) {
  return _in(0x0c2634c4, 0x0a16193e, entity, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), p7, p8, p9, _r);
};

/**
 * IS_ENTITY_IN_VOLUME
 *
 * @param {number} entity
 * @param {number} volume
 * @param {boolean} p2
 * @param {number} p3
 * @return {boolean}
 */
global.IsEntityInVolume = function (entity, volume, p2, p3) {
  return _in(0x5a5526bc, 0x09c06623, entity, volume, p2, p3, _r);
};

/**
 * IS_ENTITY_IN_WATER
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityInWater = function (entity) {
  return _in(0xdde5c125, 0xac446723, entity, _r);
};

/**
 * IS_ENTITY_OCCLUDED
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityOccluded = function (entity) {
  return _in(0x140188e8, 0x84645624, entity, _r);
};

/**
 * IS_ENTITY_ON_SCREEN
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityOnScreen = function (entity) {
  return _in(0x613c15d5, 0xd8db781f, entity, _r);
};

/**
 * IS_ENTITY_PLAYING_ANIM
 *
 * @param {number} entity
 * @param {string | number} animDict
 * @param {string | number} animName
 * @param {number} animType
 * @return {boolean}
 */
global.IsEntityPlayingAnim = function (entity, animDict, animName, animType) {
  return _in(0xdee49d5c, 0xa6c49148, entity, _ts(animDict), _ts(animName), animType, _r);
};

/**
 * IS_ENTITY_STATIC
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityStatic = function (entity) {
  return _in(0x86468adf, 0xa0f6b861, entity, _r);
};

/**
 * IS_ENTITY_TOUCHING_ENTITY
 *
 * @param {number} entity
 * @param {number} targetEntity
 * @return {boolean}
 */
global.IsEntityTouchingEntity = function (entity, targetEntity) {
  return _in(0x9a2304a6, 0x4c3c8423, entity, targetEntity, _r);
};

/**
 * IS_ENTITY_TOUCHING_MODEL
 *
 * @param {number} entity
 * @param {number} modelHash
 * @return {boolean}
 */
global.IsEntityTouchingModel = function (entity, modelHash) {
  return _in(0x2ae3ebc8, 0xdeb9768b, entity, _ch(modelHash), _r);
};

/**
 * IS_ENTITY_UPRIGHT
 *
 * @param {number} entity
 * @param {number} angle
 * @return {boolean}
 */
global.IsEntityUpright = function (entity, angle) {
  return _in(0xf6f6afd8, 0xd4fb2658, entity, _fv(angle), _r);
};

/**
 * IS_ENTITY_UPSIDEDOWN
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityUpsidedown = function (entity) {
  return _in(0x109de3da, 0x41aad94a, entity, _r);
};

/**
 * IS_ENTITY_VISIBLE
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityVisible = function (entity) {
  return _in(0xffc96ecb, 0x7fa404ca, entity, _r);
};

/**
 * IS_ENTITY_VISIBLE_TO_SCRIPT
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityVisibleToScript = function (entity) {
  return _in(0xf213c724, 0xe77f321a, entity, _r);
};

/**
 * IS_ENTITY_WAITING_FOR_WORLD_COLLISION
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityWaitingForWorldCollision = function (entity) {
  return _in(0x5e1cc2e8, 0xdc3111dd, entity, _r);
};

/**
 * IS_MAP_ENTITY_PINNED
 *
 * @param {any} p0
 * @return {boolean}
 */
global.IsMapEntityPinned = function (p0) {
  return _in(0x1ff441d7, 0x954f8709, p0, _r);
};

/**
 * PIN_CLOSEST_MAP_ENTITY
 *
 * @param {number} modelHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} flags
 * @return {any}
 */
global.PinClosestMapEntity = function (modelHash, x, y, z, flags) {
  return _in(0x6f306825, 0x8a499e52, _ch(modelHash), _fv(x), _fv(y), _fv(z), flags, _r);
};

/**
 * PLACE_ENTITY_ON_GROUND_PROPERLY
 *
 * @param {number} entity
 * @param {boolean} p1
 * @return {boolean}
 */
global.PlaceEntityOnGroundProperly = function (entity, p1) {
  return _in(0x9587913b, 0x9e772d29, entity, p1, _r);
};

/**
 * PLAY_ENTITY_ANIM
 * https://github.com/femga/rdr3_discoveries/tree/master/animations
 *
 * @param {number} entity
 * @param {string | number} animName
 * @param {string | number} animDict
 * @param {number} p3
 * @param {boolean} loop
 * @param {boolean} stayInAnim
 * @param {boolean} p6
 * @param {number} delta
 * @param {any} bitset
 * @return {boolean}
 */
global.PlayEntityAnim = function (entity, animName, animDict, p3, loop, stayInAnim, p6, delta, bitset) {
  return _in(0xdc6d22fa, 0xb76d4874, entity, _ts(animName), _ts(animDict), _fv(p3), loop, stayInAnim, p6, _fv(delta), bitset, _r);
};

/**
 * REMOVE_FORCED_OBJECT
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.RemoveForcedObject = function (p0, p1, p2, p3, p4) {
  return _in(0x553fa683, 0xf2bcd814, p0, p1, p2, p3, p4);
};

/**
 * REMOVE_MODEL_HIDE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.RemoveModelHide = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x3f38a985, 0x76f6213a, p0, p1, p2, p3, p4, p5);
};

/**
 * REMOVE_MODEL_SWAP
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} originalModel
 * @param {number} newModel
 * @param {boolean} p6
 * @return {void}
 */
global.RemoveModelSwap = function (x, y, z, radius, originalModel, newModel, p6) {
  return _in(0x824e1c26, 0xa14cb817, _fv(x), _fv(y), _fv(z), _fv(radius), _ch(originalModel), _ch(newModel), p6);
};

/**
 * RESET_ENTITY_ALPHA
 *
 * @param {number} entity
 * @return {void}
 */
global.ResetEntityAlpha = function (entity) {
  return _in(0x744b9ef4, 0x4779d9ab, entity);
};

/**
 * SCRIPT_OVERRIDE_ENTITY_LOOT_TABLE_PERMANENT
 * Sets the loot table an entity will carry. Returns true if loot table has been successfully set. Returns false if entity is not a ped or object.
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/loot_rewards.lua
 *
 * @param {number} entity
 * @param {number} lootTable
 * @return {boolean}
 */
global.ScriptOverrideEntityLootTablePermanent = function (entity, lootTable) {
  return _in(0x8c03cd6b, 0x5e0e85e8, entity, _ch(lootTable), _r);
};

/**
 * SET_CAN_AUTO_VAULT_ON_ENTITY
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetCanAutoVaultOnEntity = function (entity, toggle) {
  return _in(0x80646744, 0xfa88f9d7, entity, toggle);
};

/**
 * SET_CAN_CLIMB_ON_ENTITY
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetCanClimbOnEntity = function (entity, toggle) {
  return _in(0x24aed2a6, 0x08f93c4c, entity, toggle);
};

/**
 * SET_ENTITY_ALPHA
 * skin - everything alpha except skin
 * Set entity alpha level. Ranging from 0 to 255 but changes occur after every 20 percent (after every 51).
 *
 * @param {number} entity
 * @param {number} alphaLevel
 * @param {boolean} skin
 * @return {void}
 */
global.SetEntityAlpha = function (entity, alphaLevel, skin) {
  return _in(0x0df7692b, 0x1d9e7ba7, entity, alphaLevel, skin);
};

/**
 * SET_ENTITY_ALWAYS_PRERENDER
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityAlwaysPrerender = function (entity, toggle) {
  return _in(0xacad101e, 0x1fb66689, entity, toggle);
};

/**
 * SET_ENTITY_AS_MISSION_ENTITY
 * Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
 *
 * @param {number} entity
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.SetEntityAsMissionEntity = function (entity, p1, p2) {
  return _in(0xdc19c288, 0x082e586e, entity, p1, p2);
};

/**
 * SET_ENTITY_AS_NO_LONGER_NEEDED
 * Marks the specified entity (ped, vehicle or object) as no longer needed.
 * Entities marked as no longer needed, will be deleted as the engine sees fit.
 *

 * @return {number}
 */
global.SetEntityAsNoLongerNeeded = function () {
  return _in(0x4971d2f8, 0x162b9674, _i);
};

/**
 * SET_ENTITY_CAN_BE_DAMAGED
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityCanBeDamaged = function (entity, toggle) {
  return _in(0x0d06d522, 0xb90e861f, entity, toggle);
};

/**
 * SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP
 *
 * @param {number} entity
 * @param {boolean} bCanBeDamaged
 * @param {number} relGroup
 * @return {void}
 */
global.SetEntityCanBeDamagedByRelationshipGroup = function (entity, bCanBeDamaged, relGroup) {
  return _in(0x0ef1afb1, 0x8649e015, entity, bCanBeDamaged, _ch(relGroup));
};

/**
 * SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS
 * Sets whether the entity can be targeted without being in line-of-sight.
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityCanBeTargetedWithoutLos = function (entity, toggle) {
  return _in(0x6d09f32e, 0x284d0fb7, entity, toggle);
};

/**
 * SET_ENTITY_COLLISION
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @param {boolean} keepPhysics
 * @return {void}
 */
global.SetEntityCollision = function (entity, toggle, keepPhysics) {
  return _in(0xf66f8209, 0x09453b8c, entity, toggle, keepPhysics);
};

/**
 * SET_ENTITY_COMPLETELY_DISABLE_COLLISION
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @param {boolean} keepPhysics
 * @return {void}
 */
global.SetEntityCompletelyDisableCollision = function (entity, toggle, keepPhysics) {
  return _in(0xe0580ec8, 0x4813875a, entity, toggle, keepPhysics);
};

/**
 * SET_ENTITY_COORDS
 *
 * @param {number} entity
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {boolean} xAxis
 * @param {boolean} yAxis
 * @param {boolean} zAxis
 * @param {boolean} clearArea
 * @return {void}
 */
global.SetEntityCoords = function (entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea) {
  return _in(0x06843da7, 0x060a026b, entity, _fv(xPos), _fv(yPos), _fv(zPos), xAxis, yAxis, zAxis, clearArea);
};

/**
 * SET_ENTITY_COORDS_NO_OFFSET
 * Axis - Invert Axis Flags
 *
 * @param {number} entity
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {boolean} xAxis
 * @param {boolean} yAxis
 * @param {boolean} zAxis
 * @return {void}
 */
global.SetEntityCoordsNoOffset = function (entity, xPos, yPos, zPos, xAxis, yAxis, zAxis) {
  return _in(0x239a3351, 0xac1da385, entity, _fv(xPos), _fv(yPos), _fv(zPos), xAxis, yAxis, zAxis);
};

/**
 * SET_ENTITY_DYNAMIC
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityDynamic = function (entity, toggle) {
  return _in(0xfbfc4473, 0xf66ce344, entity, toggle);
};

/**
 * SET_ENTITY_HAS_GRAVITY
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityHasGravity = function (entity, toggle) {
  return _in(0x0cedb728, 0xa1083fa7, entity, toggle);
};

/**
 * SET_ENTITY_HEADING
 *
 * @param {number} entity
 * @param {number} heading
 * @return {void}
 */
global.SetEntityHeading = function (entity, heading) {
  return _in(0xcf2b9c06, 0x45c4651b, entity, _fv(heading));
};

/**
 * SET_ENTITY_HEALTH
 * Sets the entity's health. healthAmount sets the health value to that, and sets the maximum health core value. Setting healthAmount to 0 will kill the entity. entityKilledBy parameter can also be 0
 *
 * @param {number} entity
 * @param {number} healthAmount
 * @param {number} entityKilledBy
 * @return {void}
 */
global.SetEntityHealth = function (entity, healthAmount, entityKilledBy) {
  return _in(0xac2767ed, 0x8bdfab15, entity, healthAmount, entityKilledBy);
};

/**
 * SET_ENTITY_INVINCIBLE
 * Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions.
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityInvincible = function (entity, toggle) {
  return _in(0xa5c38736, 0xc426fcb8, entity, toggle);
};

/**
 * SET_ENTITY_IS_TARGET_PRIORITY
 *
 * @param {number} entity
 * @param {boolean} p1
 * @param {number} p2
 * @return {void}
 */
global.SetEntityIsTargetPriority = function (entity, p1, p2) {
  return _in(0x0a5d170c, 0x44cb2189, entity, p1, _fv(p2));
};

/**
 * SET_ENTITY_LOAD_COLLISION_FLAG
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityLoadCollisionFlag = function (entity, toggle) {
  return _in(0x9b9ee31a, 0xed48072e, entity, toggle);
};

/**
 * SET_ENTITY_LOD_DIST
 * LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
 *
 * @param {number} entity
 * @param {number} value
 * @return {void}
 */
global.SetEntityLodDist = function (entity, value) {
  return _in(0x5fb407f0, 0xa7c877bf, entity, value);
};

/**
 * SET_ENTITY_MAX_HEALTH
 *
 * @param {number} entity
 * @param {number} value
 * @return {void}
 */
global.SetEntityMaxHealth = function (entity, value) {
  return _in(0x166e7cf6, 0x8597d8b5, entity, value);
};

/**
 * SET_ENTITY_MOTION_BLUR
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityMotionBlur = function (entity, toggle) {
  return _in(0x516c6abd, 0x18322b63, entity, toggle);
};

/**
 * SET_ENTITY_NOWEAPONDECALS
 * Old name: _SET_ENTITY_DECALS_DISABLED
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityNoweapondecals = function (entity, toggle) {
  return _in(0xc64e5977, 0x83be9a1d, entity, toggle);
};

/**
 * SET_ENTITY_NO_COLLISION_ENTITY
 *
 * @param {number} entity1
 * @param {number} entity2
 * @param {boolean} thisFrameOnly
 * @return {void}
 */
global.SetEntityNoCollisionEntity = function (entity1, entity2, thisFrameOnly) {
  return _in(0xe037bf06, 0x8223c38d, entity1, entity2, thisFrameOnly);
};

/**
 * SET_ENTITY_ONLY_DAMAGED_BY_PLAYER
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityOnlyDamagedByPlayer = function (entity, toggle) {
  return _in(0x47359868, 0x3095d430, entity, toggle);
};

/**
 * SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP
 *
 * @param {number} entity
 * @param {boolean} p1
 * @param {number} relationshipGroup
 * @return {void}
 */
global.SetEntityOnlyDamagedByRelationshipGroup = function (entity, p1, relationshipGroup) {
  return _in(0x6c1f6aa2, 0xf0add104, entity, p1, _ch(relationshipGroup));
};

/**
 * SET_ENTITY_PROOFS
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/ENTITY_PROOFS
 * BOOL p2: handles an additional special proofs flag, so it simply indicates whether it should be enabled or disabled, not sure what exactly it proofs the entity from though
 *
 * @param {number} entity
 * @param {number} proofsBitset
 * @param {boolean} specialFlag
 * @return {void}
 */
global.SetEntityProofs = function (entity, proofsBitset, specialFlag) {
  return _in(0xfaee099c, 0x6f890bb8, entity, proofsBitset, specialFlag);
};

/**
 * SET_ENTITY_QUATERNION
 *
 * @param {number} entity
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} w
 * @return {void}
 */
global.SetEntityQuaternion = function (entity, x, y, z, w) {
  return _in(0x100e7007, 0xd13e3687, entity, _fv(x), _fv(y), _fv(z), _fv(w));
};

/**
 * SET_ENTITY_RENDER_SCORCHED
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityRenderScorched = function (entity, toggle) {
  return _in(0x85b8a753, 0x4e44bc23, entity, toggle);
};

/**
 * SET_ENTITY_REQUIRES_MORE_EXPENSIVE_RIVER_CHECK
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityRequiresMoreExpensiveRiverCheck = function (entity, toggle) {
  return _in(0x850c940e, 0xe3e7b8b5, entity, toggle);
};

/**
 * SET_ENTITY_ROTATION
 *
 * @param {number} entity
 * @param {number} pitch
 * @param {number} roll
 * @param {number} yaw
 * @param {number} rotationOrder
 * @param {boolean} p5
 * @return {void}
 */
global.SetEntityRotation = function (entity, pitch, roll, yaw, rotationOrder, p5) {
  return _in(0x9cc8314d, 0xfede441e, entity, _fv(pitch), _fv(roll), _fv(yaw), rotationOrder, p5);
};

/**
 * SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION
 * Old name: _SET_ENTITY_CLEANUP_BY_ENGINE
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityShouldFreezeWaitingOnCollision = function (entity, toggle) {
  return _in(0x740cb4f3, 0xf602c9f4, entity, toggle);
};

/**
 * SET_ENTITY_VELOCITY
 * Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
 *
 * @param {number} entity
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.SetEntityVelocity = function (entity, x, y, z) {
  return _in(0x1c99bb7b, 0x6e96d16f, entity, _fv(x), _fv(y), _fv(z));
};

/**
 * SET_ENTITY_VISIBLE
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityVisible = function (entity, toggle) {
  return _in(0x1794b4fc, 0xc84d812f, entity, toggle);
};

/**
 * SET_OBJECT_AS_NO_LONGER_NEEDED
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 *

 * @return {number}
 */
global.SetObjectAsNoLongerNeeded = function () {
  return _in(0x3ae22deb, 0x5ba5a3e6, _i);
};

/**
 * SET_PED_AS_NO_LONGER_NEEDED
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 *

 * @return {number}
 */
global.SetPedAsNoLongerNeeded = function () {
  return _in(0x2595dd42, 0x36549ce3, _i);
};

/**
 * SET_VEHICLE_AS_NO_LONGER_NEEDED
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 *

 * @return {number}
 */
global.SetVehicleAsNoLongerNeeded = function () {
  return _in(0x629bfa74, 0x418d6239, _i);
};

/**
 * STOP_ENTITY_ANIM
 *
 * @param {number} entity
 * @param {string | number} animation
 * @param {string | number} animGroup
 * @param {number} p3
 * @return {any}
 */
global.StopEntityAnim = function (entity, animation, animGroup, p3) {
  return _in(0x786591d9, 0x86de9159, entity, _ts(animation), _ts(animGroup), _fv(p3), _r);
};

/**
 * WOULD_ENTITY_BE_OCCLUDED
 *
 * @param {number} entityModelHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} p4
 * @return {boolean}
 */
global.WouldEntityBeOccluded = function (entityModelHash, x, y, z, p4) {
  return _in(0x3546fab2, 0x93ff2981, _ch(entityModelHash), _fv(x), _fv(y), _fv(z), p4, _r);
};

/**
 * _0x002AAC783ED323ED
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x002AAC783ED323ED = function (p0, p1) {
  return _in(0x002aac78, 0x3ed323ed, p0, p1);
};

/**
 * _0x007AAC783ED323ED
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x007AAC783ED323ED = function (p0, p1, p2) {
  return _in(0x007aac78, 0x3ed323ed, p0, p1, p2);
};

/**
 * _0x0939E773925C4719
 *

 * @return {void}
 */
global.N_0x0939E773925C4719 = function () {
  return _in(0x0939e773, 0x925c4719);
};

/**
 * _0x0CCEFC6C2C95DA2A
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0x0CCEFC6C2C95DA2A = function (p0, p1, p2, p3) {
  return _in(0x0ccefc6c, 0x2c95da2a, p0, p1, p2, p3, _r);
};

/**
 * _0x0DB41D59E0F1502B
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0DB41D59E0F1502B = function (p0) {
  return _in(0x0db41d59, 0xe0f1502b, p0);
};

/**
 * _0x0FD7D7C232876E72
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0FD7D7C232876E72 = function (p0) {
  return _in(0x0fd7d7c2, 0x32876e72, p0);
};

/**
 * _0x119A5714578F4E05
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x119A5714578F4E05 = function (p0, p1) {
  return _in(0x119a5714, 0x578f4e05, p0, p1);
};

/**
 * _0x120376C23F019C6C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x120376C23F019C6C = function (p0, p1) {
  return _in(0x120376c2, 0x3f019c6c, p0, p1, _r);
};

/**
 * _0x16908E859C3AB698
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x16908E859C3AB698 = function (p0, p1, p2, p3, p4) {
  return _in(0x16908e85, 0x9c3ab698, p0, p1, p2, p3, p4);
};

/**
 * _0x188736456D1DEDE6
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x188736456D1DEDE6 = function (p0, p1) {
  return _in(0x18873645, 0x6d1dede6, p0, p1, _r);
};

/**
 * _0x20FAEE47427A4497
 *

 * @return {void}
 */
global.N_0x20FAEE47427A4497 = function () {
  return _in(0x20faee47, 0x427a4497);
};

/**
 * _0x2A77EF9BEC8518F4
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x2A77EF9BEC8518F4 = function (p0) {
  return _in(0x2a77ef9b, 0xec8518f4, p0, _r);
};

/**
 * _0x2D40BCBFE9305DEA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x2D40BCBFE9305DEA = function (p0, p1) {
  return _in(0x2d40bcbf, 0xe9305dea, p0, p1);
};

/**
 * _0x350E9211074955AF
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x350E9211074955AF = function (p0, p1) {
  return _in(0x350e9211, 0x074955af, p0, p1, _r);
};

/**
 * _0x371D179701D9C082
 * Called if entity is in water and submerged level is larger than 1f. If CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION is true, it gets disabled as well.
 *
 * @param {number} entity
 * @return {void}
 */
global.N_0x371D179701D9C082 = function (entity) {
  return _in(0x371d1797, 0x01d9c082, entity);
};

/**
 * _0x37B01666BAE8F7EF
 * Seems to return true if entity is burned / scorched
 * _GET_ENTITY_*
 *
 * @param {number} entity
 * @return {any}
 */
global.N_0x37B01666BAE8F7EF = function (entity) {
  return _in(0x37b01666, 0xbae8f7ef, entity, _r);
};

/**
 * _0x37CEB637BA3B1A47
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x37CEB637BA3B1A47 = function (p0) {
  return _in(0x37ceb637, 0xba3b1a47, p0);
};

/**
 * _0x383F64263F946E45
 * Used when checking if ped is in water
 *
 * @param {number} entity
 * @param {number} p2
 * @param {number} ped
 * @param {any} p4
 * @param {number} p5
 * @return {[boolean, number]}
 */
global.N_0x383F64263F946E45 = function (entity, p2, ped, p4, p5) {
  return _in(0x383f6426, 0x3f946e45, _i, entity, p2, ped, p4, p5, _r);
};

/**
 * _0x3AB3A77672F6473F
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {Vector3}
 */
global.N_0x3AB3A77672F6473F = function (p0, p1, p2, p3) {
  return _in(0x3ab3a776, 0x72f6473f, p0, p1, p2, p3, _r, _rv);
};

/**
 * _0x3EC28DA1FFAC9DDD
 * Used in Script Function DUELING_DID_PLAYER_DISARM_OPPONENT
 *
 * @param {number} entity1
 * @param {number} entity2
 * @param {any} p2
 * @param {any} p3
 * @return {boolean}
 */
global.N_0x3EC28DA1FFAC9DDD = function (entity1, entity2, p2, p3) {
  return _in(0x3ec28da1, 0xffac9ddd, entity1, entity2, p2, p3, _r);
};

/**
 * _0x3F08C6163A4AB1D6
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x3F08C6163A4AB1D6 = function (p0) {
  return _in(0x3f08c616, 0x3a4ab1d6, p0);
};

/**
 * _0x445D7D8EA66E373E
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @param {any} p13
 * @param {any} p14
 * @param {any} p15
 * @return {void}
 */
global.N_0x445D7D8EA66E373E = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15) {
  return _in(0x445d7d8e, 0xa66e373e, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15);
};

/**
 * _0x56E0735D6273B227
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x56E0735D6273B227 = function (p0, p1) {
  return _in(0x56e0735d, 0x6273b227, p0, p1);
};

/**
 * _0x5744562E973E33CD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {any}
 */
global.N_0x5744562E973E33CD = function (p0, p1, p2, p3, p4) {
  return _in(0x5744562e, 0x973e33cd, p0, p1, p2, p3, p4, _r);
};

/**
 * _0x5826EFD6D73C4DE5
 * _REMOVE_DECALS_* - _REMOVE_FORCED*
 *
 * @param {number} entity
 * @return {void}
 */
global.N_0x5826EFD6D73C4DE5 = function (entity) {
  return _in(0x5826efd6, 0xd73c4de5, entity);
};

/**
 * _0x582F73ACFE969571
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x582F73ACFE969571 = function (p0, p1, p2) {
  return _in(0x582f73ac, 0xfe969571, p0, p1, p2, _r);
};

/**
 * _0x5E214112806591EA
 * Attaches scenario to bone with an offset
 * _GET_I* - _GET_M*
 *
 * @param {number} entity
 * @param {number} boneIndex
 * @return {Vector3}
 */
global.N_0x5E214112806591EA = function (entity, boneIndex) {
  return _in(0x5e214112, 0x806591ea, entity, boneIndex, _r, _rv);
};

/**
 * _0x669655FFB29EF1A9
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x669655FFB29EF1A9 = function (p0, p1, p2, p3) {
  return _in(0x669655ff, 0xb29ef1a9, p0, p1, p2, p3);
};

/**
 * _0x6C31B06E91518269
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x6C31B06E91518269 = function (p0, p1) {
  return _in(0x6c31b06e, 0x91518269, p0, p1);
};

/**
 * _0x6D58167F62238284
 *
 * @param {number} vehicle
 * @return {number}
 */
global.N_0x6D58167F62238284 = function (vehicle) {
  return _in(0x6d58167f, 0x62238284, vehicle, _r, _rf);
};

/**
 * _0x7A49D40DE437BC8D
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x7A49D40DE437BC8D = function (p0, p1) {
  return _in(0x7a49d40d, 0xe437bc8d, p0, p1);
};

/**
 * _0x7F20092547B4DDEA
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x7F20092547B4DDEA = function (p0) {
  return _in(0x7f200925, 0x47b4ddea, p0);
};

/**
 * _0x80FDEB3A9E9AA578
 *
 * @param {number} entity
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x80FDEB3A9E9AA578 = function (entity, p1) {
  return _in(0x80fdeb3a, 0x9e9aa578, entity, p1);
};

/**
 * _0x898586729DB5221D
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x898586729DB5221D = function (ped) {
  return _in(0x89858672, 0x9db5221d, ped);
};

/**
 * _0x8E10DF0FFA63FB65
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {any}
 */
global.N_0x8E10DF0FFA63FB65 = function (p0, p1, p2, p3, p4) {
  return _in(0x8e10df0f, 0xfa63fb65, p0, p1, p2, p3, p4, _r);
};

/**
 * _0x8E46E18AA828334F
 * Used in Script Function GENERIC_ITEM_HAS_ANIM_COMPLETED
 * _GET_ENTITY_*
 *
 * @param {number} entity
 * @param {string | number} animDict
 * @param {string | number} animClip
 * @return {number}
 */
global.N_0x8E46E18AA828334F = function (entity, animDict, animClip) {
  return _in(0x8e46e18a, 0xa828334f, entity, _ts(animDict), _ts(animClip), _r, _rf);
};

/**
 * _0x978AA2323ED32209
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x978AA2323ED32209 = function (p0, p1) {
  return _in(0x978aa232, 0x3ed32209, p0, p1);
};

/**
 * _0x9C6906EF8CB20C5F
 *
 * @param {number} entity
 * @return {void}
 */
global.N_0x9C6906EF8CB20C5F = function (entity) {
  return _in(0x9c6906ef, 0x8cb20c5f, entity);
};

/**
 * _0xA48E4801DEBDF7E4
 *
 * @param {number} entity
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xA48E4801DEBDF7E4 = function (entity, p1) {
  return _in(0xa48e4801, 0xdebdf7e4, entity, p1);
};

/**
 * _0xA9E6D8F2DDFC4DB9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA9E6D8F2DDFC4DB9 = function (p0, p1) {
  return _in(0xa9e6d8f2, 0xddfc4db9, p0, p1);
};

/**
 * _0xAAACB74442C1BED3
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xAAACB74442C1BED3 = function (p0) {
  return _in(0xaaacb744, 0x42c1bed3, p0, _r);
};

/**
 * _0xAF72EC7E1B54539B
 *
 * @param {number} entity
 * @return {number}
 */
global.N_0xAF72EC7E1B54539B = function (entity) {
  return _in(0xaf72ec7e, 0x1b54539b, entity, _r, _ri);
};

/**
 * _0xAF7F3099B9FEB535
 * SET_ENTITY_LO*
 *
 * @param {number} entity
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.N_0xAF7F3099B9FEB535 = function (entity, p1, p2, p3) {
  return _in(0xaf7f3099, 0xb9feb535, entity, _fv(p1), _fv(p2), _fv(p3));
};

/**
 * _0xB16C780C51E51E2B
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xB16C780C51E51E2B = function (p0) {
  return _in(0xb16c780c, 0x51e51e2b, p0, _r);
};

/**
 * _0xB38A29CCD5447783
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xB38A29CCD5447783 = function (p0, p1, p2) {
  return _in(0xb38a29cc, 0xd5447783, p0, p1, p2);
};

/**
 * _0xBA2A089E60ED1163
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {any}
 */
global.N_0xBA2A089E60ED1163 = function (p0, p1, p2, p3, p4) {
  return _in(0xba2a089e, 0x60ed1163, p0, p1, p2, p3, p4, _r);
};

/**
 * _0xBD94CECFB2D65119
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0xBD94CECFB2D65119 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xbd94cecf, 0xb2d65119, p0, p1, p2, p3, p4, p5);
};

/**
 * _0xC0EDEF16D90661EE
 * SET_ENTITY_A*
 *
 * @param {number} entity
 * @param {number} p1
 * @return {void}
 */
global.N_0xC0EDEF16D90661EE = function (entity, p1) {
  return _in(0xc0edef16, 0xd90661ee, entity, _fv(p1));
};

/**
 * _0xC2E71D7E0A7B4C89
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC2E71D7E0A7B4C89 = function (p0) {
  return _in(0xc2e71d7e, 0x0a7b4c89, p0, _r);
};

/**
 * _0xC3ABCFBC7D74AFA5
 * Returns BOOL in ida
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0xC3ABCFBC7D74AFA5 = function (ped, p1, p2) {
  return _in(0xc3abcfbc, 0x7d74afa5, ped, p1, p2);
};

/**
 * _0xC6A1A3D63F122DE7
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xC6A1A3D63F122DE7 = function (p0, p1) {
  return _in(0xc6a1a3d6, 0x3f122de7, p0, p1);
};

/**
 * _0xC76E94A78127412B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xC76E94A78127412B = function (p0, p1, p2) {
  return _in(0xc76e94a7, 0x8127412b, p0, p1, p2);
};

/**
 * _0xCDB682BB47C02F0A
 *
 * @param {number} entity
 * @param {number} p1
 * @return {void}
 */
global.N_0xCDB682BB47C02F0A = function (entity, p1) {
  return _in(0xcdb682bb, 0x47c02f0a, entity, _ch(p1));
};

/**
 * _0xD21C7418C590BB40
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xD21C7418C590BB40 = function (p0) {
  return _in(0xd21c7418, 0xc590bb40, p0, _r);
};

/**
 * _0xD45BB89B53FC0CFD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.N_0xD45BB89B53FC0CFD = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xd45bb89b, 0x53fc0cfd, p0, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * _0xD4636C2EDB0DEA8A
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xD4636C2EDB0DEA8A = function (p0) {
  return _in(0xd4636c2e, 0xdb0dea8a, p0, _r);
};

/**
 * _0xD46BF94C4C66FAB0
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0xD46BF94C4C66FAB0 = function (p0, p1, p2, p3) {
  return _in(0xd46bf94c, 0x4c66fab0, p0, p1, p2, p3, _r);
};

/**
 * _0xDD03FC2089AD093C
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xDD03FC2089AD093C = function (p0, p1, p2, p3) {
  return _in(0xdd03fc20, 0x89ad093c, p0, p1, p2, p3);
};

/**
 * _0xDF8E49EA89A01DB1
 * Hardcoded to return zero/false.
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xDF8E49EA89A01DB1 = function (p0, p1, p2) {
  return _in(0xdf8e49ea, 0x89a01db1, p0, p1, p2, _r);
};

/**
 * _0xDFC2B226D56D85F6
 *
 * @param {any} p0
 * @param {any} p1
 * @return {number}
 */
global.N_0xDFC2B226D56D85F6 = function (p0, p1) {
  return _in(0xdfc2b226, 0xd56d85f6, p0, p1, _r, _rf);
};

/**
 * _0xE19035EB65AB2932
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE19035EB65AB2932 = function (p0, p1) {
  return _in(0xe19035eb, 0x65ab2932, p0, p1);
};

/**
 * _0xE31FC20319874CB3
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xE31FC20319874CB3 = function (p0, p1, p2) {
  return _in(0xe31fc203, 0x19874cb3, p0, p1, p2, _r);
};

/**
 * _0xE75EEA8DB59A9F39
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0xE75EEA8DB59A9F39 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xe75eea8d, 0xb59a9f39, p0, p1, p2, p3, p4, p5);
};

/**
 * _0xE9E7A0BAC7F57746
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE9E7A0BAC7F57746 = function (p0, p1) {
  return _in(0xe9e7a0ba, 0xc7f57746, p0, p1);
};

/**
 * _0xEAB3D91D30A344F1
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xEAB3D91D30A344F1 = function (p0) {
  return _in(0xeab3d91d, 0x30a344f1, p0);
};

/**
 * _0xEF259AA1E097E0AD
 *
 * @param {number} entity
 * @param {any} p1
 * @return {void}
 */
global.N_0xEF259AA1E097E0AD = function (entity, p1) {
  return _in(0xef259aa1, 0xe097e0ad, entity, p1);
};

/**
 * _0xEF2D9ED7CE684F08
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0xEF2D9ED7CE684F08 = function (ped) {
  return _in(0xef2d9ed7, 0xce684f08, ped, _r, _ri);
};

/**
 * _0xF41E2979D5BC5370
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xF41E2979D5BC5370 = function (p0) {
  return _in(0xf41e2979, 0xd5bc5370, p0);
};

/**
 * _0xF59FDE7B4D31A630
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xF59FDE7B4D31A630 = function (p0) {
  return _in(0xf59fde7b, 0x4d31a630, p0, _r);
};

/**
 * _0xFF83AF534156B399
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xFF83AF534156B399 = function (p0, p1) {
  return _in(0xff83af53, 0x4156b399, p0, p1);
};

/**
 * _0xFF9965C47FA404DA
 * SET_ENTITY_LO*
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0xFF9965C47FA404DA = function (entity, toggle) {
  return _in(0xff9965c4, 0x7fa404da, entity, toggle);
};

/**
 * _ADD_ENTITY_TRACKING_TRAILS
 *
 * @param {number} entity
 * @return {void}
 */
global.AddEntityTrackingTrails = function (entity) {
  return _in(0x1ad922ab, 0x5038def3, entity);
};

/**
 * _CHANGE_ENTITY_HEALTH
 * Alters entity's health by 'amount'. Can be negative (to drain health).
 * In the scripts entity2 and weaponHash are unused (zero).
 *
 * @param {number} entity
 * @param {number} amount
 * @param {number} entity2
 * @param {number} weaponHash
 * @return {boolean}
 */
global.ChangeEntityHealth = function (entity, amount, entity2, weaponHash) {
  return _in(0x835f131e, 0x7dc8f97a, entity, _fv(amount), entity2, _ch(weaponHash), _r);
};

/**
 * _CREATE_FOOTPATH_TRAIL
 *
 * @param {any} p0
 * @param {string | number} waypointRecord
 * @param {boolean} bUseSnowOffset
 * @param {number} p3
 * @param {number} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {boolean} bInit
 * @return {any}
 */
global.CreateFootpathTrail = function (p0, waypointRecord, bUseSnowOffset, p3, p4, p5, p6, p7, p8, p9, p10, bInit) {
  return _in(0x29ba9f78, 0x321e5a6c, p0, _ts(waypointRecord), bUseSnowOffset, _fv(p3), _fv(p4), p5, p6, p7, p8, p9, p10, bInit, _r);
};

/**
 * _DELETE_CARRIABLE
 *

 * @return {number}
 */
global.DeleteCarriable = function () {
  return _in(0x0d0db2b6, 0xaf19a987, _i);
};

/**
 * _DELETE_ENTITY_2
 * Must be called from a background script, otherwise it will do nothing.
 *

 * @return {number}
 */
global.DeleteEntity_2 = function () {
  return _in(0x5e94ea09, 0xe7207c16, _i);
};

/**
 * _DOES_THREAD_OWN_THIS_ENTITY
 * Returns true if calling script owns specified entity
 *
 * @param {number} entity
 * @return {boolean}
 */
global.DoesThreadOwnThisEntity = function (entity) {
  return _in(0x88ad6cc1, 0x0d8d35b2, entity, _r);
};

/**
 * _GET_CARRIABLE_FROM_ENTITY
 * Returns a hash of an entity's name. (Alternative Name: _GET_ENTITY_PROMPT_NAME_HASH)
 *
 * @param {number} entity
 * @return {number}
 */
global.GetCarriableFromEntity = function (entity) {
  return _in(0x31fef6a2, 0x0f00b963, entity, _r, _ri);
};

/**
 * _GET_ENTITIES_IN_VOLUME
 *
 * @param {number} volume
 * @param {number} itemSet
 * @param {number} entityType
 * @return {number}
 */
global.GetEntitiesInVolume = function (volume, itemSet, entityType) {
  return _in(0x886171a1, 0x2f400b89, volume, itemSet, entityType, _r, _ri);
};

/**
 * _GET_ENTITIES_NEAR_POINT
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} itemSet
 * @param {number} p5
 * @return {number}
 */
global.GetEntitiesNearPoint = function (x, y, z, radius, itemSet, p5) {
  return _in(0x59b57c4b, 0x06531e1e, _fv(x), _fv(y), _fv(z), _fv(radius), itemSet, p5, _r, _ri);
};

/**
 * _GET_ENTITY_ANIM_CURRENT_TIME
 *
 * @param {number} entity
 * @param {string | number} animDict
 * @param {string | number} animName
 * @return {number}
 */
global.GetEntityAnimCurrentTime = function (entity, animDict, animName) {
  return _in(0x62752038, 0x9e288a73, entity, _ts(animDict), _ts(animName), _r, _rf);
};

/**
 * _GET_ENTITY_BY_DOORHASH
 * Params: p1 = 0 in R* Scripts (GET_DOOR_ENTITY_FROM_ID)
 * https://github.com/femga/rdr3_discoveries/blob/master/doorHashes/doorhashes.lua
 *
 * @param {number} doorHash
 * @param {number} p1
 * @return {number}
 */
global.GetEntityByDoorhash = function (doorHash, p1) {
  return _in(0xf7424890, 0xe4a094c0, _ch(doorHash), p1, _r, _ri);
};

/**
 * _GET_ENTITY_CAN_BE_DAMAGED
 *
 * @param {number} entity
 * @return {boolean}
 */
global.GetEntityCanBeDamaged = function (entity) {
  return _in(0x75df9e73, 0xf2f005fd, entity, _r);
};

/**
 * _GET_ENTITY_CARRYING_FLAG
 * flagId: see _SET_ENTITY_CARRYING_FLAG
 *
 * @param {number} entity
 * @param {number} flagId
 * @return {boolean}
 */
global.GetEntityCarryingFlag = function (entity, flagId) {
  return _in(0x80807764, 0x7856de62, entity, flagId, _r);
};

/**
 * _GET_ENTITY_CARRY_CONFIG
 * Returns zero if the entity is not a carriable
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityCarryConfig = function (entity) {
  return _in(0x0fd25587, 0xbb306c86, entity, _r, _ri);
};

/**
 * _GET_ENTITY_FORWARD_VECTOR_YX
 * Gets the entity's forward vector in YX(Z) eulers. Similar to GET_ENTITY_FORWARD_VECTOR
 *
 * @param {number} entity
 * @return {Vector3}
 */
global.GetEntityForwardVectorYx = function (entity) {
  return _in(0x935a30aa, 0x88fb1014, entity, _r, _rv);
};

/**
 * _GET_ENTITY_HEALTH_FLOAT
 * Returns (CUR_HEALTH / MAX_HEALTH)
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityHealthFloat = function (entity) {
  return _in(0x96c63878, 0x4db4c815, entity, _r, _rf);
};

/**
 * _GET_ENTITY_PROOFS
 * Note: this native was removed in 1232 but added back in 1311
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityProofs = function (entity) {
  return _in(0x6cf0dad7, 0xfa1088ea, entity, _r, _ri);
};

/**
 * _GET_ENTITY_SCRIPT
 *
 * @param {number} entity
 * @param {DataView} argStruct
 * @return {number}
 */
global.GetEntityScript = function (entity, argStruct) {
  return _in(0x2a08a32b, 0x6d49906f, entity, argStruct, _r, _ri);
};

/**
 * _GET_ENTITY_THREAT_TIER
 *
 * @param {number} entity
 * @return {number}
 */
global.GetEntityThreatTier = function (entity) {
  return _in(0xe12f56cb, 0x25d9ce23, entity, _r, _ri);
};

/**
 * _GET_ENTITY_WORLD_POSITION_OF_DIMENSIONS
 *
 * @param {number} entity
 * @return {[Vector3, Vector3]}
 */
global.GetEntityWorldPositionOfDimensions = function (entity) {
  return _in(0xf3fda9a6, 0x17a15145, entity, _v, _v);
};

/**
 * _GET_IS_BIRD
 *
 * @param {number} entity
 * @return {boolean}
 */
global.GetIsBird = function (entity) {
  return _in(0xc346a546, 0x612c49a9, entity, _r);
};

/**
 * _GET_IS_CARRIABLE_PELT
 *
 * @param {number} entity
 * @return {boolean}
 */
global.GetIsCarriablePelt = function (entity) {
  return _in(0x255b6db4, 0xe3ad3c3e, entity, _r);
};

/**
 * _GET_IS_PREDATOR
 *
 * @param {number} entity
 * @return {boolean}
 */
global.GetIsPredator = function (entity) {
  return _in(0x5594afe9, 0xde0c01b7, entity, _r);
};

/**
 * _GET_OPTIMAL_CARRY_CONFIG
 * Valid indices: 0 - 3
 * Index 1 always returns a `hogtied` config, doesn't matter the entity.
 * It's for humans only and the ped must be resurrected first if it's dead.
 *
 * @param {number} entity
 * @param {number} index
 * @return {number}
 */
global.GetOptimalCarryConfig = function (entity, index) {
  return _in(0x34f008a7, 0xe48c496b, entity, index, _r, _ri);
};

/**
 * _GET_PED_ANIMAL_TYPE
 * Returns the ped's animal type hash: https://alloc8or.re/rdr3/doc/enums/eAnimalType.txt
 * Combine this with GET_STRING_FROM_HASH_KEY to display localized entity names
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedAnimalType = function (ped) {
  return _in(0x964000d3, 0x55219fc0, ped, _r, _ri);
};

/**
 * _GET_PINNED_MAP_ENTITY
 *
 * @param {any} p0
 * @return {number}
 */
global.GetPinnedMapEntity = function (p0) {
  return _in(0x4735e2a4, 0xbb83d9da, p0, _r, _ri);
};

/**
 * _GET_SCRIPT_OVERRIDE_ENTITY_LOOT_TABLE_PERMANENT
 * Returns false if entity is not a ped or object.
 *
 * @param {number} entity
 * @return {[boolean, number]}
 */
global.GetScriptOverrideEntityLootTablePermanent = function (entity) {
  return _in(0x1e804ea9, 0xb12030a4, entity, _i, _r);
};

/**
 * _IS_CARRIABLE_MODEL
 *
 * @param {number} model
 * @return {boolean}
 */
global.IsCarriableModel = function (model) {
  return _in(0x5affa9dd, 0xc87846f8, _ch(model), _r);
};

/**
 * _IS_ENTITY_FROZEN
 * Getter for FREEZE_ENTITY_POSITION
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityFrozen = function (entity) {
  return _in(0x083d497d, 0x57b7400f, entity, _r);
};

/**
 * _IS_ENTITY_FULLY_LOOTED
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityFullyLooted = function (entity) {
  return _in(0x8de41e99, 0x02e85756, entity, _r);
};

/**
 * _IS_ENTITY_ON_TRAIN_TRACK
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityOnTrainTrack = function (entity) {
  return _in(0x857acb0a, 0xb4bd0d55, entity, _r);
};

/**
 * _IS_ENTITY_OWNED_BY_PERSISTENCE_SYSTEM
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityOwnedByPersistenceSystem = function (entity) {
  return _in(0xa7e51b53, 0x309eac97, entity, _r);
};

/**
 * _IS_ENTITY_PLAYING_ANY_ANIM
 * Params: p1 (probably animType) = 1, 0
 *
 * @param {number} entity
 * @param {number} p1
 * @return {boolean}
 */
global.IsEntityPlayingAnyAnim = function (entity, p1) {
  return _in(0x0b7cb130, 0x0cbfe19c, entity, p1, _r);
};

/**
 * _IS_ENTITY_UNDERWATER
 *
 * @param {number} entity
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsEntityUnderwater = function (entity, p1) {
  return _in(0xd4e5c1e9, 0x3c466127, entity, p1, _r);
};

/**
 * _IS_TRACKED_ENTITY_VISIBLE
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsTrackedEntityVisible = function (entity) {
  return _in(0xc8ccdb71, 0x2fbcba92, entity, _r);
};

/**
 * _PAUSE_ENTITY_TRACKING
 *
 * @param {number} entity
 * @param {boolean} pause
 * @return {void}
 */
global.PauseEntityTracking = function (entity, pause) {
  return _in(0x36eb4d34, 0xd4a092c5, entity, pause);
};

/**
 * _REQUEST_ENTITY_LOOT_LIST
 *
 * @param {number} mount
 * @param {DataView} argStruct
 * @param {number} visiblelootslotrequestType
 * @param {number} flag
 * @param {number} p4
 * @param {boolean} p5
 * @return {boolean}
 */
global.RequestEntityLootList = function (mount, argStruct, visiblelootslotrequestType, flag, p4, p5) {
  return _in(0xa88e215c, 0xeb0435c0, mount, argStruct, _ch(visiblelootslotrequestType), flag, p4, p5, _r);
};

/**
 * _SEARCH_BUILDING_POOL_FOR_ENTITY_WITH_THIS_MODEL
 * Alternative Name: _GET_ENTITY_FROM_MAP_OBJECT; You can get existing objects and manipulate them using this native.
 *
 * @param {number} modelHash
 * @return {number}
 */
global.SearchBuildingPoolForEntityWithThisModel = function (modelHash) {
  return _in(0x66b2b83b, 0x94b22458, _ch(modelHash), _r, _ri);
};

/**
 * _SET_ENTITY_ANIM_CURRENT_TIME
 * https://gfycat.com/amazingmiserlyamericanquarterhorse
 *
 * @param {number} entity
 * @param {string | number} animDict
 * @param {string | number} animName
 * @param {number} time
 * @return {void}
 */
global.SetEntityAnimCurrentTime = function (entity, animDict, animName, time) {
  return _in(0x11cdabdc, 0x7783b2bc, entity, _ts(animDict), _ts(animName), _fv(time));
};

/**
 * _SET_ENTITY_ANIM_SPEED
 *
 * @param {number} entity
 * @param {string | number} animDict
 * @param {string | number} animName
 * @param {number} speedMultiplier
 * @return {void}
 */
global.SetEntityAnimSpeed = function (entity, animDict, animName, speedMultiplier) {
  return _in(0xeaa885ba, 0x3cea4e4a, entity, _ts(animDict), _ts(animName), _fv(speedMultiplier));
};

/**
 * _SET_ENTITY_CARCASS_TYPE
 * Changes type and quality of skins
 * type hashes: https://pastebin.com/C1WvQjCy
 *
 * @param {number} entity
 * @param {number} type
 * @return {void}
 */
global.SetEntityCarcassType = function (entity, type) {
  return _in(0x399657ed, 0x871b3a6c, entity, _ch(type));
};

/**
 * _SET_ENTITY_CARRYING_FLAG
 * flagId: https://github.com/femga/rdr3_discoveries/tree/master/AI/CARRYING_FLAGS
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CCarryingFlags__Flags
 * 
 * enum eCarryingFlag
 * {
 *   CARRYING_FLAG_CAN_BE_CUT_FREE = 1,
 *   CARRYING_FLAG_CAN_BE_CARRIED_ON_FOOT = 2,
 *   CARRYING_FLAG_CAN_BE_DROPPED = 4,
 *   CARRYING_FLAG_CAN_BE_CARRIED_WHEN_DEAD = 7,
 *   CARRYING_FLAG_CAN_CARRY_ANYTHING = 9,
 *   CARRYING_FLAG_DISABLE_PROMPT_LOS_CHECKS = 19,
 *   CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION = 23,
 *   CARRYING_FLAG_PICKUPS_IGNORE_HEIGHT_RESTRICTIONS = 26,
 *   CARRYING_FLAG_CLEAN_UP_WHEN_NOT_CARRIED = 27,
 *   CARRYING_FLAG_BLOCK_KNOCK_OFF_PED_VARIATIONS_FROM_CARRIABLE_INTERACTIONS = 29,
 *   CARRYING_FLAG_HIT_WHEN_CARRIABLE = 31,
 *   CARRYING_FLAG_DISABLE_CARRIABLE_INTERACTIONS_ON_THIS_MOUNT = 34,
 *   CARRYING_FLAG_FORCE_HIDE_PROMPT_GROUP = 37,
 * };
 *
 * @param {number} entity
 * @param {number} flagId
 * @param {boolean} value
 * @return {void}
 */
global.SetEntityCarryingFlag = function (entity, flagId, value) {
  return _in(0x18ff3110, 0xcf47115d, entity, flagId, value);
};

/**
 * _SET_ENTITY_COORDS_AND_HEADING
 *
 * @param {number} entity
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {number} heading
 * @param {boolean} xAxis
 * @param {boolean} yAxis
 * @param {boolean} zAxis
 * @return {void}
 */
global.SetEntityCoordsAndHeading = function (entity, xPos, yPos, zPos, heading, xAxis, yAxis, zAxis) {
  return _in(0x203beffd, 0xbe12e96a, entity, _fv(xPos), _fv(yPos), _fv(zPos), _fv(heading), xAxis, yAxis, zAxis);
};

/**
 * _SET_ENTITY_COORDS_AND_HEADING_NO_OFFSET
 *
 * @param {number} entity
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {number} heading
 * @param {boolean} p5
 * @param {boolean} p6
 * @return {void}
 */
global.SetEntityCoordsAndHeadingNoOffset = function (entity, xPos, yPos, zPos, heading, p5, p6) {
  return _in(0x0918e356, 0x5c20f03c, entity, _fv(xPos), _fv(yPos), _fv(zPos), _fv(heading), p5, p6);
};

/**
 * _SET_ENTITY_CUSTOM_PICKUP_RADIUS
 *
 * @param {number} entity
 * @param {number} radius
 * @return {void}
 */
global.SetEntityCustomPickupRadius = function (entity, radius) {
  return _in(0x482d17e4, 0x5665da44, entity, _fv(radius));
};

/**
 * _SET_ENTITY_FADE_IN
 *
 * @param {number} entity
 * @return {void}
 */
global.SetEntityFadeIn = function (entity) {
  return _in(0xa91e6cf9, 0x4404e8c9, entity);
};

/**
 * _SET_ENTITY_FULLY_LOOTED
 *
 * @param {number} entity
 * @param {boolean} looted
 * @return {void}
 */
global.SetEntityFullyLooted = function (entity, looted) {
  return _in(0x6bcf5f3d, 0x8ffe988d, entity, looted);
};

/**
 * _SET_ENTITY_LIGHTS_ENABLED
 *
 * @param {number} entity
 * @param {boolean} enabled
 * @return {void}
 */
global.SetEntityLightsEnabled = function (entity, enabled) {
  return _in(0xebdc1286, 0x1d079aba, entity, enabled);
};

/**
 * _SET_ENTITY_THREAT_TIER
 * tier: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityThreatTier
 *
 * @param {number} entity
 * @param {number} tier
 * @param {boolean} p2
 * @return {void}
 */
global.SetEntityThreatTier = function (entity, tier, p2) {
  return _in(0x4b436bac, 0x8cbe9b07, entity, tier, p2);
};

/**
 * _UNPIN_MAP_ENTITY
 *
 * @param {number} entity
 * @return {void}
 */
global.UnpinMapEntity = function (entity) {
  return _in(0xd2b9c785, 0x37ed5759, entity);
};

/**
 * ADD_SHOCKING_EVENT_AT_POSITION
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS
 *
 * @param {number} eventType
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {number} p9
 * @param {number} p10
 * @return {number}
 */
global.AddShockingEventAtPosition = function (eventType, x, y, z, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0xd9f84554, 0x09b525e9, _ch(eventType), _fv(x), _fv(y), _fv(z), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _fv(p8), p9, p10, _r, _ri);
};

/**
 * ADD_SHOCKING_EVENT_FOR_ENTITY
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * @param {number} eventType
 * @param {number} entity
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {boolean} p8
 * @param {boolean} p9
 * @param {number} p10
 * @param {number} p11
 * @return {number}
 */
global.AddShockingEventForEntity = function (eventType, entity, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
  return _in(0x7fd8f3be, 0x76f89422, _ch(eventType), entity, _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), p8, p9, p10, p11, _r, _ri);
};

/**
 * IS_SHOCKING_EVENT_IN_SPHERE
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * @param {number} eventType
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {boolean}
 */
global.IsShockingEventInSphere = function (eventType, x, y, z, radius) {
  return _in(0x9db47e16, 0x060d6354, _ch(eventType), _fv(x), _fv(y), _fv(z), _fv(radius), _r);
};

/**
 * REMOVE_ALL_SHOCKING_EVENTS
 *
 * @param {boolean} p0
 * @return {void}
 */
global.RemoveAllShockingEvents = function (p0) {
  return _in(0xd47a168c, 0x2ab90dc4, p0);
};

/**
 * REMOVE_ALL_SHOCKING_EVENTS_OF_TYPE
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * @param {number} eventType
 * @param {boolean} p1
 * @return {void}
 */
global.RemoveAllShockingEventsOfType = function (eventType, p1) {
  return _in(0x118873dd, 0x538490b4, _ch(eventType), p1);
};

/**
 * REMOVE_SHOCKING_EVENT
 *
 * @param {number} event
 * @return {boolean}
 */
global.RemoveShockingEvent = function (event) {
  return _in(0xe8bb3cc2, 0x53a34559, event, _r);
};

/**
 * REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS
 *

 * @return {void}
 */
global.RemoveShockingEventSpawnBlockingAreas = function () {
  return _in(0xdb249021, 0x652420c5);
};

/**
 * SET_DECISION_MAKER
 *
 * @param {number} ped
 * @param {number} name
 * @return {void}
 */
global.SetDecisionMaker = function (ped, name) {
  return _in(0x8ae2f981, 0xcddb8fa4, ped, _ch(name));
};

/**
 * SET_DECISION_MAKER_TO_DEFAULT
 *
 * @param {number} ped
 * @return {void}
 */
global.SetDecisionMakerToDefault = function (ped) {
  return _in(0x6b9c5c38, 0x838fb6e6, ped);
};

/**
 * SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME
 *

 * @return {void}
 */
global.SuppressShockingEventsNextFrame = function () {
  return _in(0x84994fad, 0x4e4e4e69);
};

/**
 * _0x18E93EBFC1FCFA48
 * Only used in R* SP Script beat_rat_infestation and homeinvasion
 *
 * @param {number} volume
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {any}
 */
global.N_0x18E93EBFC1FCFA48 = function (volume, p1, p2) {
  return _in(0x18e93ebf, 0xc1fcfa48, volume, p1, p2, _r);
};

/**
 * _0x1A5C5D350068A673
 * AGGRO_CHECK_PROPERTY_DAMAGE: Property damage found with event
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x1A5C5D350068A673 = function (ped, p1) {
  return _in(0x1a5c5d35, 0x0068a673, ped, p1);
};

/**
 * _0x1D1B448D719415AB
 * _GET*
 *
 * @param {number} ped
 * @return {any}
 */
global.N_0x1D1B448D719415AB = function (ped) {
  return _in(0x1d1b448d, 0x719415ab, ped, _r);
};

/**
 * _0x26054EB81AC0893B
 *
 * @param {number} object
 * @return {boolean}
 */
global.N_0x26054EB81AC0893B = function (object) {
  return _in(0x26054eb8, 0x1ac0893b, object, _r);
};

/**
 * _0x2DD42FAD06E6F19E
 *
 * @param {number} object
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {any}
 */
global.N_0x2DD42FAD06E6F19E = function (object, p1, p2) {
  return _in(0x2dd42fad, 0x06e6f19e, object, p1, p2, _r);
};

/**
 * _0x36D0F2BA2C0D9BDE
 * _ADD* (_ADD_SHOCKING_EVENT_* ?)
 *
 * @param {number} entity
 * @param {number} p1
 * @return {any}
 */
global.N_0x36D0F2BA2C0D9BDE = function (entity, p1) {
  return _in(0x36d0f2ba, 0x2c0d9bde, entity, p1, _r);
};

/**
 * _0x4465C3D1475BD3FD
 *
 * @param {number} model
 * @return {void}
 */
global.N_0x4465C3D1475BD3FD = function (model) {
  return _in(0x4465c3d1, 0x475bd3fd, _ch(model));
};

/**
 * _0x4B2B1A891D437CA7
 * Only used in R* SP Script coachrobberies
 * _SET_S*
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x4B2B1A891D437CA7 = function (p0) {
  return _in(0x4b2b1a89, 0x1d437ca7, _fv(p0));
};

/**
 * _0x56B3410626A473E7
 * Only used in R* SP Script beat_rat_infestation
 * Params: p0 = value returned by 0x18E93EBFC1FCFA48
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x56B3410626A473E7 = function (p0) {
  return _in(0x56b34106, 0x26a473e7, p0);
};

/**
 * _0x7C511E91738A0828
 * Only used in R* SP Scripts
 * Hash only used in R* Script mob3.ysc: ROBBERY
 * _ADD_PED*
 *
 * @param {number} ped1
 * @param {number} ped2
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.N_0x7C511E91738A0828 = function (ped1, ped2, p2, p3) {
  return _in(0x7c511e91, 0x738a0828, ped1, ped2, p2, _ch(p3));
};

/**
 * _0x83D43F0FD5276E4D
 * _GET*
 *
 * @param {number} entity
 * @param {number} p1
 * @return {any}
 */
global.N_0x83D43F0FD5276E4D = function (entity, p1) {
  return _in(0x83d43f0f, 0xd5276e4d, entity, p1, _r);
};

/**
 * _0x9520175B35E2268D
 * _SET_P*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x9520175B35E2268D = function (ped, p1) {
  return _in(0x9520175b, 0x35e2268d, ped, p1);
};

/**
 * _0xA86B0EE9B39D15D6
 *
 * @param {number} object
 * @return {void}
 */
global.N_0xA86B0EE9B39D15D6 = function (object) {
  return _in(0xa86b0ee9, 0xb39d15d6, object);
};

/**
 * _0xAD17A18215DD23D6
 * Might return time since some (?) event.
 *
 * @param {number} entity
 * @param {number} p1
 * @param {number} p2
 * @return {number}
 */
global.N_0xAD17A18215DD23D6 = function (entity, p1, p2) {
  return _in(0xad17a182, 0x15dd23d6, entity, p1, p2, _r, _ri);
};

/**
 * _0xB6F4825153920582
 * _S* (_SUPPRESS_EVENTS_NEXT_FRAME?)
 *

 * @return {void}
 */
global.N_0xB6F4825153920582 = function () {
  return _in(0xb6f48251, 0x53920582);
};

/**
 * _0xE28D7FC9FD32ABEB
 * HAS_ACTOR_RECEIVED_TRACKED_EVENT_THAT_SHOULD_ALERT - iTimeSinceEvent >= iTimeLimitMS
 *
 * @param {number} entity
 * @param {number} eventType
 * @param {number} p2
 * @return {void}
 */
global.N_0xE28D7FC9FD32ABEB = function (entity, eventType, p2) {
  return _in(0xe28d7fc9, 0xfd32abeb, entity, _ch(eventType), p2);
};

/**
 * _0xE2C2FBB7825FFC66
 *

 * @return {void}
 */
global.N_0xE2C2FBB7825FFC66 = function () {
  return _in(0xe2c2fbb7, 0x825ffc66);
};

/**
 * _ADD_MODEL_TO_EVENT_MONITOR
 * Models used in the scripts: P_REGISTER05X, P_REGISTER06X, P_REGISTER03X, PLAYER_ZERO, PLAYER_THREE, A_C_HORSE_MORGAN_FLAXENCHESTNUT
 *
 * @param {number} model
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.AddModelToEventMonitor = function (model, p1, p2) {
  return _in(0x608ad36a, 0x644a97fe, _ch(model), p1, p2);
};

/**
 * _CREATE_SHOCKING_EVENT
 *
 * @param {DataView} args
 * @return {number}
 */
global.CreateShockingEvent = function (args) {
  return _in(0xca1315c3, 0x3b9a2847, args, _r, _ri);
};

/**
 * _EVENT_FLUSH_ALL_EVENT_TRACKERS
 *
 * @param {number} ped
 * @return {void}
 */
global.EventFlushAllEventTrackers = function (ped) {
  return _in(0xad8f2424, 0xc6e1e3a8, ped);
};

/**
 * _EVENT_GET_RECENT_EVENT
 * Returns eventType
 *
 * @param {number} entity
 * @param {number} p1
 * @param {number} p2
 * @return {number}
 */
global.EventGetRecentEvent = function (entity, p1, p2) {
  return _in(0x796eecff, 0x0c6d39be, entity, p1, p2, _r, _ri);
};

/**
 * _EVENT_GET_SOURCE_ENTITY_FROM_EVENT
 *
 * @param {number} entity
 * @param {number} eventType
 * @param {number} p2
 * @param {number} p3
 * @return {number}
 */
global.EventGetSourceEntityFromEvent = function (entity, eventType, p2, p3) {
  return _in(0x822a001b, 0xcea5bd81, entity, _ch(eventType), p2, p3, _r, _ri);
};

/**
 * _EVENT_GET_TARGET_ENTITY_FROM_EVENT
 *
 * @param {number} entity
 * @param {number} eventType
 * @param {number} p2
 * @param {number} p3
 * @return {number}
 */
global.EventGetTargetEntityFromEvent = function (entity, eventType, p2, p3) {
  return _in(0x38497f13, 0x9981c5c9, entity, _ch(eventType), p2, p3, _r, _ri);
};

/**
 * _EVENT_GET_TIME_SINCE_EVENT
 *
 * @param {number} entity
 * @param {number} eventType
 * @param {number} p2
 * @param {number} p3
 * @return {number}
 */
global.EventGetTimeSinceEvent = function (entity, eventType, p2, p3) {
  return _in(0xc6a7dc54, 0x6e94fed5, entity, _ch(eventType), p2, p3, _r, _ri);
};

/**
 * _IS_EVENT_TRACKER_ACTIVE
 *
 * @param {string | number} eventName
 * @param {number} shockingEvent
 * @return {boolean}
 */
global.IsEventTrackerActive = function (eventName, shockingEvent) {
  return _in(0x797b3d4d, 0x92e56094, _ts(eventName), _ch(shockingEvent), _r);
};

/**
 * _REMOVE_ALL_SHOCKING_EVENTS_IN_AREA
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {boolean} p4
 * @return {void}
 */
global.RemoveAllShockingEventsInArea = function (x, y, z, radius, p4) {
  return _in(0xb4c71ba9, 0xcab097bd, _fv(x), _fv(y), _fv(z), _fv(radius), p4);
};

/**
 * _REMOVE_ALL_SHOCKING_EVENTS_OF_TYPE_IN_AREA
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * @param {number} eventType
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {boolean} p5
 * @return {void}
 */
global.RemoveAllShockingEventsOfTypeInArea = function (eventType, x, y, z, radius, p5) {
  return _in(0x6a648d42, 0xbf271dc7, _ch(eventType), _fv(x), _fv(y), _fv(z), _fv(radius), p5);
};

/**
 * _SET_EVENT_TRACKER_FOR_PED
 *
 * @param {number} ped
 * @param {string | number} eventName
 * @param {number} p2
 * @return {void}
 */
global.SetEventTrackerForPed = function (ped, eventName, p2) {
  return _in(0xbb1e41dd, 0x3d3c6250, ped, _ts(eventName), p2);
};

/**
 * ADD_EXPLOSION
 * https://github.com/femga/rdr3_discoveries/tree/master/graphics/explosions
 * 
 * explosionType:
 * enum eExplosionTag
 * {
 *   EXP_TAG_DONTCARE = -1,
 *   EXP_TAG_GRENADE,
 *   EXP_TAG_STICKYBOMB,
 *   EXP_TAG_MOLOTOV,
 *   EXP_TAG_MOLOTOV_VOLATILE,
 *   EXP_TAG_HI_OCTANE,
 *   EXP_TAG_CAR,
 *   EXP_TAG_PLANE,
 *   EXP_TAG_PETROL_PUMP,
 *   EXP_TAG_DIR_STEAM,
 *   EXP_TAG_DIR_FLAME,
 *   EXP_TAG_DIR_WATER_HYDRANT,
 *   EXP_TAG_BOAT,
 *   EXP_TAG_BULLET,
 *   EXP_TAG_SMOKEGRENADE,
 *   EXP_TAG_BZGAS,
 *   EXP_TAG_GAS_CANISTER,
 *   EXP_TAG_EXTINGUISHER,
 *   EXP_TAG_TRAIN,
 *   EXP_TAG_DIR_FLAME_EXPLODE,
 *   EXP_TAG_VEHICLE_BULLET,
 *   EXP_TAG_BIRD_CRAP,
 *   EXP_TAG_FIREWORK,
 *   EXP_TAG_TORPEDO,
 *   EXP_TAG_TORPEDO_UNDERWATER,
 *   EXP_TAG_LANTERN,
 *   EXP_TAG_DYNAMITE,
 *   EXP_TAG_DYNAMITESTACK,
 *   EXP_TAG_DYNAMITE_VOLATILE,
 *   EXP_TAG_RIVER_BLAST,
 *   EXP_TAG_PLACED_DYNAMITE,
 *   EXP_TAG_FIRE_ARROW,
 *   EXP_TAG_DYNAMITE_ARROW,
 *   EXP_TAG_PHOSPHOROUS_BULLET,
 *   EXP_TAG_LIGHTNING_STRIKE,
 *   EXP_TAG_TRACKING_ARROW,
 *   EXP_TAG_POISON_BOTTLE
 * };
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} explosionType
 * @param {number} damageScale
 * @param {boolean} isAudible
 * @param {boolean} isInvisible
 * @param {number} cameraShake
 * @return {void}
 */
global.AddExplosion = function (x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake) {
  return _in(0x7d6f58f6, 0x9da92530, _fv(x), _fv(y), _fv(z), explosionType, _fv(damageScale), isAudible, isInvisible, _fv(cameraShake));
};

/**
 * ADD_EXPLOSION_WITH_USER_VFX
 * explosionType: see ADD_EXPLOSION
 * Change explosionFx (Visual Effect) for specified explosionType
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} explosionType
 * @param {number} explosionFx
 * @param {number} damageScale
 * @param {boolean} isAudible
 * @param {boolean} isInvisible
 * @param {number} cameraShake
 * @return {void}
 */
global.AddExplosionWithUserVfx = function (x, y, z, explosionType, explosionFx, damageScale, isAudible, isInvisible, cameraShake) {
  return _in(0x53ba259f, 0x3a67a99e, _fv(x), _fv(y), _fv(z), explosionType, _ch(explosionFx), _fv(damageScale), isAudible, isInvisible, _fv(cameraShake));
};

/**
 * ADD_OWNED_EXPLOSION
 * explosionType: see ADD_EXPLOSION
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} explosionType
 * @param {number} damageScale
 * @param {boolean} isAudible
 * @param {boolean} isInvisible
 * @param {number} cameraShake
 * @return {void}
 */
global.AddOwnedExplosion = function (ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake) {
  return _in(0xd84a917a, 0x64d4d016, ped, _fv(x), _fv(y), _fv(z), explosionType, _fv(damageScale), isAudible, isInvisible, _fv(cameraShake));
};

/**
 * GET_CLOSEST_FIRE_POS
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {[boolean, Vector3]}
 */
global.GetClosestFirePos = function (x, y, z) {
  return _in(0xb646fb65, 0x7f448261, _v, _fv(x), _fv(y), _fv(z), _r);
};

/**
 * GET_NUMBER_OF_FIRES_IN_RANGE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {number}
 */
global.GetNumberOfFiresInRange = function (x, y, z, radius) {
  return _in(0xf9617bc6, 0xfae61e08, _fv(x), _fv(y), _fv(z), _fv(radius), _r, _ri);
};

/**
 * GET_OWNER_OF_EXPLOSION_IN_ANGLED_AREA
 * explosionType: see ADD_EXPLOSION
 *
 * @param {number} explosionType
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} radius
 * @return {number}
 */
global.GetOwnerOfExplosionInAngledArea = function (explosionType, x1, y1, z1, x2, y2, z2, radius) {
  return _in(0x8002ddab, 0x58594d78, explosionType, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _fv(radius), _r, _ri);
};

/**
 * IS_ENTITY_ON_FIRE
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityOnFire = function (entity) {
  return _in(0x1bd7c371, 0xce257c3e, entity, _r);
};

/**
 * IS_EXPLOSION_ACTIVE_IN_AREA
 * explosionType: see ADD_EXPLOSION
 *
 * @param {number} explosionType
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @return {boolean}
 */
global.IsExplosionActiveInArea = function (explosionType, x1, y1, z1, x2, y2, z2) {
  return _in(0xd96e82ae, 0xbffaaff0, explosionType, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _r);
};

/**
 * IS_EXPLOSION_IN_ANGLED_AREA
 * explosionType: see ADD_EXPLOSION
 *
 * @param {number} explosionType
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} angle
 * @return {boolean}
 */
global.IsExplosionInAngledArea = function (explosionType, x1, y1, z1, x2, y2, z2, angle) {
  return _in(0x5ae661ec, 0xd18524c9, explosionType, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _fv(angle), _r);
};

/**
 * IS_EXPLOSION_IN_AREA
 * explosionType: see ADD_EXPLOSION
 *
 * @param {number} explosionType
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @return {boolean}
 */
global.IsExplosionInArea = function (explosionType, x1, y1, z1, x2, y2, z2) {
  return _in(0x8391ba43, 0x13a25ad3, explosionType, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _r);
};

/**
 * IS_EXPLOSION_IN_SPHERE
 * explosionType: see ADD_EXPLOSION
 *
 * @param {number} explosionType
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {boolean}
 */
global.IsExplosionInSphere = function (explosionType, x, y, z, radius) {
  return _in(0xd62dd846, 0xd82cbb90, explosionType, _fv(x), _fv(y), _fv(z), _fv(radius), _r);
};

/**
 * REMOVE_SCRIPT_FIRE
 *
 * @param {FireId} fireHandle
 * @return {void}
 */
global.RemoveScriptFire = function (fireHandle) {
  return _in(0x790125c3, 0x6e194069, fireHandle);
};

/**
 * START_ENTITY_FIRE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.StartEntityFire = function (p0, p1, p2, p3) {
  return _in(0xc4dc7418, 0xa44d6822, p0, p1, p2, p3);
};

/**
 * START_SCRIPT_FIRE
 * Starts a fire:
 * 
 * xyz: Location of fire
 * maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
 * isGasFire: Whether or not the fire is powered by gasoline.
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @param {number} p4
 * @param {boolean} p5
 * @param {string | number} soundsetName
 * @param {number} p7
 * @param {number} p8
 * @return {FireId}
 */
global.StartScriptFire = function (x, y, z, p3, p4, p5, soundsetName, p7, p8) {
  return _in(0x6b83617e, 0x04503888, _fv(x), _fv(y), _fv(z), p3, _fv(p4), p5, _ts(soundsetName), _fv(p7), p8, _r, _ri);
};

/**
 * STOP_ENTITY_FIRE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.StopEntityFire = function (p0, p1) {
  return _in(0x8390751d, 0xc40c1e98, p0, p1);
};

/**
 * STOP_FIRE_IN_RANGE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {void}
 */
global.StopFireInRange = function (x, y, z, radius) {
  return _in(0xdb38f247, 0xbd421708, _fv(x), _fv(y), _fv(z), _fv(radius));
};

/**
 * _0x24DB6B9F2B719043
 * Only used in R* SP Related Camp Scripts
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x24DB6B9F2B719043 = function (p0) {
  return _in(0x24db6b9f, 0x2b719043, _fv(p0));
};

/**
 * _0x34AE85C7CA4857AA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @return {void}
 */
global.N_0x34AE85C7CA4857AA = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0x34ae85c7, 0xca4857aa, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
};

/**
 * _0x41B87A6495EE13DD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @return {any}
 */
global.N_0x41B87A6495EE13DD = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x41b87a64, 0x95ee13dd, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _r);
};

/**
 * _0x559FC1D310813031
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @return {any}
 */
global.N_0x559FC1D310813031 = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x559fc1d3, 0x10813031, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _r);
};

/**
 * _0x68F6A75FDF5A70D6
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @return {void}
 */
global.N_0x68F6A75FDF5A70D6 = function (x, y, z, p3) {
  return _in(0x68f6a75f, 0xdf5a70d6, _fv(x), _fv(y), _fv(z), _fv(p3));
};

/**
 * _0x754937C28271BC65
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x754937C28271BC65 = function (p0) {
  return _in(0x754937c2, 0x8271bc65, p0);
};

/**
 * _0xA4454592DCF7C992
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xA4454592DCF7C992 = function (p0) {
  return _in(0xa4454592, 0xdcf7c992, p0, _r);
};

/**
 * _0xB7DF150605EEDC9B
 * _ADD_EXPLOSION_*(ON ENTITY?)
 *
 * @param {number} entity
 * @param {number} p1
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} explosionType
 * @param {number} damageScale
 * @param {boolean} isAudible
 * @param {boolean} isInvisible
 * @param {number} cameraShake
 * @return {void}
 */
global.N_0xB7DF150605EEDC9B = function (entity, p1, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake) {
  return _in(0xb7df1506, 0x05eedc9b, entity, p1, _fv(x), _fv(y), _fv(z), explosionType, _fv(damageScale), isAudible, isInvisible, _fv(cameraShake));
};

/**
 * _IS_ENTITY_CONSUMED_BY_FIRE
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityConsumedByFire = function (entity) {
  return _in(0xcdc25355, 0xc0d65963, entity, _r);
};

/**
 * _IS_EXPLOSION_IN_VOLUME
 * explosionType: see ADD_EXPLOSION
 *
 * @param {number} explosionType
 * @param {number} volume
 * @return {boolean}
 */
global.IsExplosionInVolume = function (explosionType, volume) {
  return _in(0xe24822a4, 0xcfc9107a, explosionType, volume, _r);
};

/**
 * _IS_PED_SHOCKING_EVENT_ACTIVE
 * Tested with fire & dynamite. Only returns true using value p1 = 1 and when the ped is affected by fire.
 *
 * @param {number} ped
 * @param {number} p1
 * @return {boolean}
 */
global.IsPedShockingEventActive = function (ped, p1) {
  return _in(0xab7993ba, 0x61a4674f, ped, p1, _r);
};

/**
 * _STOP_FIRE_IN_BOX
 *
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @return {void}
 */
global.StopFireInBox = function (posX, posY, posZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
  return _in(0xb7c7bdc3, 0x75aea9a4, _fv(posX), _fv(posY), _fv(posZ), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ));
};

/**
 * GET_ANIMAL_TUNING_BOOL_PARAM
 * index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningBools
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_BOOL_PARAMS
 *
 * @param {number} animal
 * @param {number} index
 * @return {boolean}
 */
global.GetAnimalTuningBoolParam = function (animal, index) {
  return _in(0x1c199382, 0x4a396603, animal, index, _r);
};

/**
 * GET_ANIMAL_TUNING_FLOAT_PARAM
 * index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningFloats
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_FLOAT_PARAMS
 *
 * @param {number} animal
 * @param {number} index
 * @return {number}
 */
global.GetAnimalTuningFloatParam = function (animal, index) {
  return _in(0x4bc3ecfd, 0xa0297e27, animal, index, _r, _rf);
};

/**
 * GET_SPECIES_TUNING_FLOAT_PARAM
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @return {number}
 */
global.GetSpeciesTuningFloatParam = function (p0, p1, p2) {
  return _in(0xe1084896, 0x21422f91, _ch(p0), p1, p2, _r, _rf);
};

/**
 * RESET_ANIMAL_TUNING_BOOL_PARAM
 *
 * @param {number} animal
 * @param {number} index
 * @return {void}
 */
global.ResetAnimalTuningBoolParam = function (animal, index) {
  return _in(0x96aa1304, 0xd30e6bc3, animal, index);
};

/**
 * RESET_ANIMAL_TUNING_FLOAT_PARAM
 *
 * @param {number} animal
 * @param {number} index
 * @return {void}
 */
global.ResetAnimalTuningFloatParam = function (animal, index) {
  return _in(0xe776a195, 0x488fc520, animal, index);
};

/**
 * SET_ANIMAL_TUNING_BOOL_PARAM
 *
 * @param {number} animal
 * @param {number} index
 * @param {boolean} value
 * @return {void}
 */
global.SetAnimalTuningBoolParam = function (animal, index, value) {
  return _in(0x9ff1e042, 0xfa597187, animal, index, value);
};

/**
 * SET_ANIMAL_TUNING_FLOAT_PARAM
 *
 * @param {number} animal
 * @param {number} index
 * @param {number} value
 * @return {void}
 */
global.SetAnimalTuningFloatParam = function (animal, index, value) {
  return _in(0xcbda22c8, 0x7977244f, animal, index, _fv(value));
};

/**
 * SET_SPECIES_TUNING_BOOL_PARAM
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {boolean} p3
 * @return {void}
 */
global.SetSpeciesTuningBoolParam = function (p0, p1, p2, p3) {
  return _in(0x6d1d94c2, 0x459b42ee, _ch(p0), p1, p2, p3);
};

/**
 * SET_SPECIES_TUNING_FLOAT_PARAM
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.SetSpeciesTuningFloatParam = function (p0, p1, p2, p3) {
  return _in(0x963240b6, 0xc252ba49, _ch(p0), p1, p2, _fv(p3));
};

/**
 * _0x0816C31480764AB0
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x0816C31480764AB0 = function (p0, p1, p2, p3) {
  return _in(0x0816c314, 0x80764ab0, p0, p1, p2, p3);
};

/**
 * _0x09EE00B8F858E0BE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {any}
 */
global.N_0x09EE00B8F858E0BE = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x09ee00b8, 0xf858e0be, p0, p1, p2, p3, p4, p5, p6, _r);
};

/**
 * _0x1520626FFAFFFA8F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x1520626FFAFFFA8F = function (p0, p1) {
  return _in(0x1520626f, 0xfafffa8f, p0, p1);
};

/**
 * _0x17E3E5C46ECCD308
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x17E3E5C46ECCD308 = function (p0, p1, p2) {
  return _in(0x17e3e5c4, 0x6eccd308, p0, p1, p2);
};

/**
 * _0x19870C40C7EE15BE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x19870C40C7EE15BE = function (p0, p1) {
  return _in(0x19870c40, 0xc7ee15be, p0, p1, _r);
};

/**
 * _0x1DA6CB02071055D5
 *
 * @param {any} p0
 * @return {Vector3}
 */
global.N_0x1DA6CB02071055D5 = function (p0) {
  return _in(0x1da6cb02, 0x071055d5, p0, _r, _rv);
};

/**
 * _0x2DF3D457D86F8E57
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x2DF3D457D86F8E57 = function (p0, p1) {
  return _in(0x2df3d457, 0xd86f8e57, p0, p1);
};

/**
 * _0x34B9C4D86DF2C2F3
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x34B9C4D86DF2C2F3 = function (p0) {
  return _in(0x34b9c4d8, 0x6df2c2f3, p0, _r);
};

/**
 * _0x36486AF7DA93A464
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x36486AF7DA93A464 = function (p0) {
  return _in(0x36486af7, 0xda93a464, p0, _r);
};

/**
 * _0x408D1149C5E39C1E
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x408D1149C5E39C1E = function (p0, p1) {
  return _in(0x408d1149, 0xc5e39c1e, p0, p1);
};

/**
 * _0x53187E563F938E76
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x53187E563F938E76 = function (p0) {
  return _in(0x53187e56, 0x3f938e76, p0, _r);
};

/**
 * _0x67A43EA3F6FE0076
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x67A43EA3F6FE0076 = function (p0) {
  return _in(0x67a43ea3, 0xf6fe0076, p0);
};

/**
 * _0x6C57BEA886A20C6B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x6C57BEA886A20C6B = function (p0, p1) {
  return _in(0x6c57bea8, 0x86a20c6b, p0, p1);
};

/**
 * _0x706B434FEFAD6A24
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x706B434FEFAD6A24 = function (p0) {
  return _in(0x706b434f, 0xefad6a24, p0);
};

/**
 * _0x8049B17BEC937662
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {any}
 */
global.N_0x8049B17BEC937662 = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x8049b17b, 0xec937662, p0, p1, p2, p3, p4, p5, p6, _r);
};

/**
 * _0x9E13ACC38BA8F9C3
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x9E13ACC38BA8F9C3 = function (p0, p1) {
  return _in(0x9e13acc3, 0x8ba8f9c3, p0, p1, _r);
};

/**
 * _0xA881F5C77A560906
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xA881F5C77A560906 = function (p0) {
  return _in(0xa881f5c7, 0x7a560906, p0);
};

/**
 * _0xC3D581A34BC0A1F0
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xC3D581A34BC0A1F0 = function (p0, p1) {
  return _in(0xc3d581a3, 0x4bc0a1f0, p0, p1);
};

/**
 * _0xC72CE37081DAE625
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xC72CE37081DAE625 = function (p0, p1, p2, p3) {
  return _in(0xc72ce370, 0x81dae625, p0, p1, p2, p3);
};

/**
 * _0xC95611869E14F8AF
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xC95611869E14F8AF = function (p0, p1, p2, p3) {
  return _in(0xc9561186, 0x9e14f8af, p0, p1, p2, p3);
};

/**
 * _0xCC6B5AAFC87BFC7B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xCC6B5AAFC87BFC7B = function (p0, p1, p2) {
  return _in(0xcc6b5aaf, 0xc87bfc7b, p0, p1, p2);
};

/**
 * _0xD95F04A4E73BE85E
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xD95F04A4E73BE85E = function (p0, p1) {
  return _in(0xd95f04a4, 0xe73be85e, p0, p1, _r);
};

/**
 * _0xE0961AED72642B80
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE0961AED72642B80 = function (p0) {
  return _in(0xe0961aed, 0x72642b80, p0);
};

/**
 * _0xE36D2CB540597EF7
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.N_0xE36D2CB540597EF7 = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xe36d2cb5, 0x40597ef7, p0, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * _0xE93415B3307208E5
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {any}
 */
global.N_0xE93415B3307208E5 = function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0xe93415b3, 0x307208e5, p0, p1, p2, p3, p4, p5, p6, p7, p8, _r);
};

/**
 * _0xF2CCA7B68CFAB2B9
 * species: SPECIES_BIRD_CROW
 *
 * @param {number} species
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} x3
 * @param {number} y3
 * @param {number} z3
 * @param {number} p10
 * @param {number} p11
 * @param {number} p12
 * @param {number} p13
 * @return {void}
 */
global.N_0xF2CCA7B68CFAB2B9 = function (species, x1, y1, z1, x2, y2, z2, x3, y3, z3, p10, p11, p12, p13) {
  return _in(0xf2cca7b6, 0x8cfab2b9, _ch(species), _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _fv(x3), _fv(y3), _fv(z3), _fv(p10), _fv(p11), _fv(p12), _fv(p13));
};

/**
 * _0xFA821997794F48E7
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xFA821997794F48E7 = function (p0, p1, p2) {
  return _in(0xfa821997, 0x794f48e7, p0, p1, p2);
};

/**
 * _0xFB16F08F47B83B4C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xFB16F08F47B83B4C = function (p0) {
  return _in(0xfb16f08f, 0x47b83b4c, p0);
};

/**
 * _0xFDB008B3BCF5992F
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xFDB008B3BCF5992F = function (p0, p1, p2) {
  return _in(0xfdb008b3, 0xbcf5992f, p0, p1, p2);
};

/**
 * _0xFF1E339CE40EAAAF
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xFF1E339CE40EAAAF = function (p0, p1) {
  return _in(0xff1e339c, 0xe40eaaaf, p0, p1);
};

/**
 * _ADD_PED_TO_FLOCK
 *
 * @param {any} p0
 * @param {number} ped
 * @return {void}
 */
global.AddPedToFlock = function (p0, ped) {
  return _in(0x933e5d31, 0xa7d13069, p0, ped);
};

/**
 * _CREATE_HERD
 *

 * @return {number}
 */
global.CreateHerd = function () {
  return _in(0xcb4ef7ed, 0xae2e16f1, _r, _ri);
};

/**
 * _GET_ANIMAL_IS_WILD
 * Ped (horse) will run away from players and mounting will trigger them to buck until disabled.
 * Used for: REL_DOMESTICATED_ANIMAL
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetAnimalIsWild = function (ped) {
  return _in(0x3b005ff0, 0x538ed2a9, ped, _r);
};

/**
 * _GET_ANIMAL_RARITY
 * enum eAnimalRarityLevel
 * {
 *   ARL_COMMON,
 *   ARL_RARE,
 *   ARL_LEGENDARY,
 *   ARL_NUMRARITYLEVELS
 * };
 *
 * @param {number} ped
 * @return {number}
 */
global.GetAnimalRarity = function (ped) {
  return _in(0xf8b48a36, 0x1dc388ae, ped, _r, _ri);
};

/**
 * _IS_HERD_VALID
 *
 * @param {number} herdHandle
 * @return {boolean}
 */
global.IsHerdValid = function (herdHandle) {
  return _in(0x8d913e49, 0x3bafe0a3, herdHandle, _r);
};

/**
 * _SET_ANIMAL_IS_WILD
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetAnimalIsWild = function (ped, toggle) {
  return _in(0xaeb97d84, 0xcdf3c00b, ped, toggle);
};

/**
 * _SET_ANIMAL_RARITY
 * rarityLevel: see _GET_ANIMAL_RARITY
 *
 * @param {number} ped
 * @param {number} rarityLevel
 * @return {void}
 */
global.SetAnimalRarity = function (ped, rarityLevel) {
  return _in(0x8b6f0f59, 0xb1b99801, ped, rarityLevel);
};

/**
 * NETWORK_GET_GANG_ID
 *
 * @param {number} player
 * @return {any}
 */
global.NetworkGetGangId = function (player) {
  return _in(0x901e0dc2, 0x5080c8b9, player, _r);
};

/**
 * NETWORK_GET_GANG_LEADER
 *
 * @param {any} gangId
 * @return {number}
 */
global.NetworkGetGangLeader = function (gangId) {
  return _in(0x4be6c13a, 0x45cca8ec, gangId, _r, _ri);
};

/**
 * NETWORK_GET_NUM_GANG_MEMBERS
 *
 * @param {any} gangId
 * @return {number}
 */
global.NetworkGetNumGangMembers = function (gangId) {
  return _in(0x149a2751, 0xab66ac02, gangId, _r, _ri);
};

/**
 * NETWORK_IS_GANG_ACTIVE
 *
 * @param {any} gangId
 * @return {boolean}
 */
global.NetworkIsGangActive = function (gangId) {
  return _in(0x0f99f643, 0x6528a089, gangId, _r);
};

/**
 * NETWORK_IS_GANG_ID_VALID
 *
 * @param {any} gangId
 * @return {boolean}
 */
global.NetworkIsGangIdValid = function (gangId) {
  return _in(0xd6f6acf4, 0x392187fb, gangId, _r);
};

/**
 * NETWORK_IS_GANG_IN_SESSION
 *
 * @param {any} gangId
 * @return {boolean}
 */
global.NetworkIsGangInSession = function (gangId) {
  return _in(0x93a91a35, 0x1a07360e, gangId, _r);
};

/**
 * NETWORK_IS_GANG_LEADER
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsGangLeader = function (player) {
  return _in(0x424b17a7, 0xdc5c90bc, player, _r);
};

/**
 * NETWORK_IS_IN_SAME_GANG
 *
 * @param {number} player1
 * @param {number} player2
 * @return {boolean}
 */
global.NetworkIsInSameGang = function (player1, player2) {
  return _in(0x3f59fe6f, 0x37869576, player1, player2, _r);
};

/**
 * _0x0E5C9FB9ED5DFF1C
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x0E5C9FB9ED5DFF1C = function (p0) {
  return _in(0x0e5c9fb9, 0xed5dff1c, p0, _r);
};

/**
 * _0x1F11702DDBD915C6
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x1F11702DDBD915C6 = function (p0, p1) {
  return _in(0x1f11702d, 0xdbd915c6, p0, p1, _r);
};

/**
 * _0x2F7EB8B6F6AFE79C
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x2F7EB8B6F6AFE79C = function (p0) {
  return _in(0x2f7eb8b6, 0xf6afe79c, p0, _r);
};

/**
 * _0x3ADC71A66356D706
 *

 * @return {any}
 */
global.N_0x3ADC71A66356D706 = function () {
  return _in(0x3adc71a6, 0x6356d706, _r);
};

/**
 * _0x48D82C83987E18E4
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x48D82C83987E18E4 = function (p0) {
  return _in(0x48d82c83, 0x987e18e4, p0, _r);
};

/**
 * _0x51C5EF47086AA0D7
 *

 * @return {any}
 */
global.N_0x51C5EF47086AA0D7 = function () {
  return _in(0x51c5ef47, 0x086aa0d7, _r);
};

/**
 * _0x53A94294FDDCF98C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x53A94294FDDCF98C = function (p0, p1) {
  return _in(0x53a94294, 0xfddcf98c, p0, p1, _r);
};

/**
 * _0x6102830F764B3DE1
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0x6102830F764B3DE1 = function (player) {
  return _in(0x6102830f, 0x764b3de1, player, _r);
};

/**
 * _0x644E02F24F9D4E98
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x644E02F24F9D4E98 = function (p0, p1) {
  return _in(0x644e02f2, 0x4f9d4e98, p0, p1, _r);
};

/**
 * _0x7933754F260B428A
 *
 * @param {number} player
 * @return {any}
 */
global.N_0x7933754F260B428A = function (player) {
  return _in(0x7933754f, 0x260b428a, player, _r);
};

/**
 * _0x7BAA30C9BBE8AEE7
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x7BAA30C9BBE8AEE7 = function (p0, p1) {
  return _in(0x7baa30c9, 0xbbe8aee7, p0, p1, _r);
};

/**
 * _0xA9CEAE8D6637FBAD
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xA9CEAE8D6637FBAD = function (p0) {
  return _in(0xa9ceae8d, 0x6637fbad, p0);
};

/**
 * _0xAD22AB64FA428DF3
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xAD22AB64FA428DF3 = function (p0) {
  return _in(0xad22ab64, 0xfa428df3, p0);
};

/**
 * _0xAFD3599A3CC5637D
 *

 * @return {any}
 */
global.N_0xAFD3599A3CC5637D = function () {
  return _in(0xafd3599a, 0x3cc5637d, _r);
};

/**
 * _0xB22B1D9F74095382
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xB22B1D9F74095382 = function (p0) {
  return _in(0xb22b1d9f, 0x74095382, p0);
};

/**
 * _0xB38C256498748413
 *

 * @return {void}
 */
global.N_0xB38C256498748413 = function () {
  return _in(0xb38c2564, 0x98748413);
};

/**
 * _0xC81A9E2C8EFD28D5
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC81A9E2C8EFD28D5 = function (p0) {
  return _in(0xc81a9e2c, 0x8efd28d5, p0);
};

/**
 * _0xDA801F7F6A5278D3
 * _NETWORK_GET_* or _NETWORK_IS_*
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0xDA801F7F6A5278D3 = function (player) {
  return _in(0xda801f7f, 0x6a5278d3, player, _r);
};

/**
 * _0xE4C64CD37CB176AA
 *
 * @param {number} p0
 * @return {any}
 */
global.N_0xE4C64CD37CB176AA = function (p0) {
  return _in(0xe4c64cd3, 0x7cb176aa, p0, _r);
};

/**
 * _0xEE4F20004D0288B7
 *

 * @return {void}
 */
global.N_0xEE4F20004D0288B7 = function () {
  return _in(0xee4f2000, 0x4d0288b7);
};

/**
 * _0xFA7C5B7E087A4CEB
 *

 * @return {any}
 */
global.N_0xFA7C5B7E087A4CEB = function () {
  return _in(0xfa7c5b7e, 0x087a4ceb, _r);
};

/**
 * _NETWORK_GET_GANG_LEADER_HANDLE
 *
 * @param {any} gangId
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkGetGangLeaderHandle = function (gangId, gamerHandle) {
  return _in(0xce88a261, 0xdcbba0d9, gangId, gamerHandle, _r);
};

/**
 * _NETWORK_GET_GANG_MEMBERS
 *
 * @param {any} gangId
 * @param {DataView} memberHandles
 * @return {number}
 */
global.NetworkGetGangMembers = function (gangId, memberHandles) {
  return _in(0xd1bf325c, 0x8252a982, gangId, memberHandles, _r, _ri);
};

/**
 * _NETWORK_GET_GANG_PRIVACY
 *

 * @return {number}
 */
global.NetworkGetGangPrivacy = function () {
  return _in(0x9970ae8c, 0x3d706139, _r, _ri);
};

/**
 * _NETWORK_GET_GANG_SIZE
 *
 * @param {any} gangId
 * @return {number}
 */
global.NetworkGetGangSize = function (gangId) {
  return _in(0x853b0fa4, 0xd8732c57, gangId, _r, _ri);
};

/**
 * _NETWORK_IS_GANG_MEMBER
 *
 * @param {any} gangId
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsGangMember = function (gangId, player) {
  return _in(0x9be7dcb2, 0x2d32ccbe, gangId, player, _r);
};

/**
 * _NETWORK_IS_GANG_OPEN
 *
 * @param {any} gangId
 * @return {boolean}
 */
global.NetworkIsGangOpen = function (gangId) {
  return _in(0xfcf96ccb, 0xd81b24c8, gangId, _r);
};

/**
 * _NETWORK_IS_IN_MY_GANG
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsInMyGang = function (player) {
  return _in(0x81fb74c8, 0x3c2ed69f, player, _r);
};

/**
 * _NETWORK_KICK_GANG_MEMBER
 * banTimeSeconds is 120 in R* Scripts
 *
 * @param {number} player
 * @param {number} banTimeSeconds
 * @return {void}
 */
global.NetworkKickGangMember = function (player, banTimeSeconds) {
  return _in(0xcd9e2d9b, 0xc52fd80f, player, banTimeSeconds);
};

/**
 * _NETWORK_LEAVE_GANG
 *
 * @param {boolean} disband
 * @return {void}
 */
global.NetworkLeaveGang = function (disband) {
  return _in(0x0a04a07b, 0xc3074edb, disband);
};

/**
 * _NETWORK_REQUEST_GANG_JOIN
 * Returns true if join succeeded, false if failed.
 *
 * @param {any} gangId
 * @return {boolean}
 */
global.NetworkRequestGangJoin = function (gangId) {
  return _in(0xc0474c8b, 0xcf6787ad, gangId, _r);
};

/**
 * _NETWORK_SET_GANG_PRIVACY
 *
 * @param {number} privacyType
 * @return {boolean}
 */
global.NetworkSetGangPrivacy = function (privacyType) {
  return _in(0xc5bf29f4, 0x035277c2, privacyType, _r);
};

/**
 * _NETWORK_SET_GANG_SIZE
 *
 * @param {number} size
 * @return {boolean}
 */
global.NetworkSetGangSize = function (size) {
  return _in(0x833d8268, 0xd51b4522, size, _r);
};

/**
 * _NETWORK_START_GANG
 * openStatus = true -> sets privacyType = 2 (PUBLIC_ADVERTISED)
 * openStatus = false -> sets privacyType = 1 (INVITE_ONLY)
 * 
 * campSize: NET_CAMP_SIZE_SMALLEST = 4, NET_CAMP_SIZE_LARGEST = 7
 *
 * @param {boolean} openStatus
 * @param {number} campSize
 * @return {void}
 */
global.NetworkStartGang = function (openStatus, campSize) {
  return _in(0xd1a226f2, 0xe05e58fc, openStatus, campSize);
};

/**
 * _GOOGLE_ANALYTICS_END_EVENT
 *

 * @return {boolean}
 */
global.GoogleAnalyticsEndEvent = function () {
  return _in(0x87bbcc43, 0x60a9bde3, _r);
};

/**
 * _GOOGLE_ANALYTICS_POP_PAGE
 *
 * @param {string | number} pageName
 * @return {void}
 */
global.GoogleAnalyticsPopPage = function (pageName) {
  return _in(0xc6de0403, 0x78364798, _ts(pageName));
};

/**
 * _GOOGLE_ANALYTICS_PUSH_PAGE
 *
 * @param {string | number} pageName
 * @return {void}
 */
global.GoogleAnalyticsPushPage = function (pageName) {
  return _in(0xd43a616a, 0xe3ac4ef6, _ts(pageName));
};

/**
 * _GOOGLE_ANALYTICS_START_EVENT
 *
 * @param {string | number} eventCategory
 * @param {string | number} eventAction
 * @param {string | number} eventLabel
 * @param {number} eventValue
 * @return {boolean}
 */
global.GoogleAnalyticsStartEvent = function (eventCategory, eventAction, eventLabel, eventValue) {
  return _in(0x1c54f031, 0xd7c0f7ac, _ts(eventCategory), _ts(eventAction), _ts(eventLabel), eventValue, _r);
};

/**
 * ADD_DECAL
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @param {any} p13
 * @param {any} p14
 * @param {any} p15
 * @param {any} p16
 * @param {any} p17
 * @param {any} p18
 * @param {any} p19
 * @param {any} p20
 * @param {any} p21
 * @return {number}
 */
global.AddDecal = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21) {
  return _in(0x57cb2676, 0x24ef85c0, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, _r, _ri);
};

/**
 * ADD_PETROL_TRAIL_DECAL_INFO
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @return {void}
 */
global.AddPetrolTrailDecalInfo = function (x, y, z, p3) {
  return _in(0x73354fb6, 0xd03d2e8a, _fv(x), _fv(y), _fv(z), _fv(p3));
};

/**
 * ADD_VEG_MODIFIER_SPHERE
 * Returns veg modifier handle
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} modType
 * @param {number} flags
 * @param {number} p6
 * @return {number}
 */
global.AddVegModifierSphere = function (x, y, z, radius, modType, flags, p6) {
  return _in(0xfa50f792, 0x57745e74, _fv(x), _fv(y), _fv(z), _fv(radius), modType, flags, p6, _r, _ri);
};

/**
 * ALLOW_PICKUP_LIGHT_SYNC
 *
 * @param {number} pickupObject
 * @param {boolean} allow
 * @return {void}
 */
global.AllowPickupLightSync = function (pickupObject, allow) {
  return _in(0x7c348310, 0xa6e2fb91, pickupObject, allow);
};

/**
 * ANIMPOSTFX_HAS_EVENT_TRIGGERED_BY_STACKHASH
 *
 * @param {number} effectNameHash
 * @param {number} p1
 * @param {boolean} p2
 * @return {[boolean, boolean]}
 */
global.AnimpostfxHasEventTriggeredByStackhash = function (effectNameHash, p1, p2) {
  return _in(0x9ab192a9, 0xef980eed, _ch(effectNameHash), p1, p2, /* actually bool */ _i, _r);
};

/**
 * ANIMPOSTFX_IS_PRELOADING_BY_STACKHASH
 *
 * @param {number} effectNameHash
 * @return {boolean}
 */
global.AnimpostfxIsPreloadingByStackhash = function (effectNameHash) {
  return _in(0x59ea8007, 0x9b86d8c7, _ch(effectNameHash), _r);
};

/**
 * ANIMPOSTFX_IS_RUNNING
 *
 * @param {string | number} effectName
 * @return {boolean}
 */
global.AnimpostfxIsRunning = function (effectName) {
  return _in(0x4a123e85, 0xd7c4ca0b, _ts(effectName), _r);
};

/**
 * ANIMPOSTFX_PLAY
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/animpostfx
 *
 * @param {string | number} effectName
 * @return {void}
 */
global.AnimpostfxPlay = function (effectName) {
  return _in(0x4102732d, 0xf6b4005f, _ts(effectName));
};

/**
 * ANIMPOSTFX_STOP
 *
 * @param {string | number} effectName
 * @return {void}
 */
global.AnimpostfxStop = function (effectName) {
  return _in(0xb4fd7446, 0xbab2f394, _ts(effectName));
};

/**
 * ANIMPOSTFX_STOP_ALL
 *

 * @return {void}
 */
global.AnimpostfxStopAll = function () {
  return _in(0x66560a0d, 0x4c64fd21);
};

/**
 * ATTACH_TV_AUDIO_TO_ENTITY
 *
 * @param {number} entity
 * @return {void}
 */
global.AttachTvAudioToEntity = function (entity) {
  return _in(0x40866a41, 0x8eb8efde, entity);
};

/**
 * BEGIN_CREATE_LOW_QUALITY_COPY_OF_PHOTO
 * Called together with FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
 *
 * @param {number} p0
 * @return {boolean}
 */
global.BeginCreateLowQualityCopyOfPhoto = function (p0) {
  return _in(0x494a9874, 0xf17a7d50, p0, _r);
};

/**
 * BEGIN_TAKE_HIGH_QUALITY_PHOTO
 *

 * @return {boolean}
 */
global.BeginTakeHighQualityPhoto = function () {
  return _in(0xa15bffc0, 0xa01b34e1, _r);
};

/**
 * BLOCK_PICKUP_PLACEMENT_LIGHT
 *
 * @param {number} pickup
 * @param {boolean} toggle
 * @return {void}
 */
global.BlockPickupPlacementLight = function (pickup, toggle) {
  return _in(0x0552aa3f, 0xfc5b87aa, pickup, toggle);
};

/**
 * CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE
 *

 * @return {void}
 */
global.CascadeShadowsClearShadowSampleType = function () {
  return _in(0xf7c29d7c, 0x12c36f03);
};

/**
 * CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER
 * When this is set to ON, shadows only draw as you get nearer.
 * 
 * When OFF, they draw from a further distance.
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.CascadeShadowsEnableEntityTracker = function (toggle) {
  return _in(0x8fbfd2ae, 0xb196b369, toggle);
};

/**
 * CASCADE_SHADOWS_SET_CASCADE_BOUNDS
 *
 * @param {any} p0
 * @param {boolean} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {boolean} p6
 * @param {number} p7
 * @return {void}
 */
global.CascadeShadowsSetCascadeBounds = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xd9edb2e4, 0x512d563e, p0, p1, _fv(p2), _fv(p3), _fv(p4), _fv(p5), p6, _fv(p7));
};

/**
 * CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE
 * Possible values:
 * "CSM_ST_POINT"
 * "CSM_ST_LINEAR"
 * "CSM_ST_BOX3x3"
 * "CSM_ST_BOX4x4"
 * "CSM_ST_DITHER2_LINEAR"
 * "CSM_ST_CUBIC"
 * "CSM_ST_POISSON16"
 * "CSM_ST_SOFT8"
 * "CSM_ST_SOFT16"
 * "CSM_ST_SOFT32"
 * "CSM_ST_DITHER16_RPDB"
 * "CSM_ST_POISSON16_RPDB_GNORM"
 * "CSM_ST_HIGHRES_BOX4x4"
 * "CSM_ST_ESM"
 *
 * @param {string | number} type
 * @return {void}
 */
global.CascadeShadowsSetShadowSampleType = function (type) {
  return _in(0xce4774e0, 0xf9ad48d1, _ts(type));
};

/**
 * CLEAR_TIMECYCLE_MODIFIER
 *

 * @return {void}
 */
global.ClearTimecycleModifier = function () {
  return _in(0x0e3f4af2, 0xd63491fb);
};

/**
 * CREATE_CHECKPOINT_WITH_NAMEHASH
 *
 * @param {number} typeHash
 * @param {number} posX1
 * @param {number} posY1
 * @param {number} posZ1
 * @param {number} posX2
 * @param {number} posY2
 * @param {number} posZ2
 * @param {number} radius
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 * @param {number} reserved
 * @return {number}
 */
global.CreateCheckpointWithNamehash = function (typeHash, posX1, posY1, posZ1, posX2, posY2, posZ2, radius, red, green, blue, alpha, reserved) {
  return _in(0x17566883, 0x6b44cbb0, _ch(typeHash), _fv(posX1), _fv(posY1), _fv(posZ1), _fv(posX2), _fv(posY2), _fv(posZ2), _fv(radius), red, green, blue, alpha, reserved, _r, _ri);
};

/**
 * CREATE_TRACKED_POINT
 * Creates a tracked point, useful for checking the visibility of a 3D point on screen.
 *

 * @return {number}
 */
global.CreateTrackedPoint = function () {
  return _in(0xfb405cb3, 0x57c69cb9, _r, _ri);
};

/**
 * DELETE_CHECKPOINT
 *
 * @param {number} checkpoint
 * @return {void}
 */
global.DeleteCheckpoint = function (checkpoint) {
  return _in(0x0ded5b0c, 0x8ebaae12, checkpoint);
};

/**
 * DESTROY_TRACKED_POINT
 *
 * @param {number} point
 * @return {void}
 */
global.DestroyTrackedPoint = function (point) {
  return _in(0x37a59922, 0x109f8f1c, point);
};

/**
 * DISABLE_ENTITYMASK
 *

 * @return {void}
 */
global.DisableEntitymask = function () {
  return _in(0x5c9978a2, 0xa3dc3d0d);
};

/**
 * DISABLE_HDTEX_THIS_FRAME
 *

 * @return {void}
 */
global.DisableHdtexThisFrame = function () {
  return _in(0x98a7cd5e, 0xa379a854);
};

/**
 * DOES_PARTICLE_FX_LOOPED_EXIST
 *
 * @param {number} ptfxHandle
 * @return {boolean}
 */
global.DoesParticleFxLoopedExist = function (ptfxHandle) {
  return _in(0x9dd5aff5, 0x61e88f2a, ptfxHandle, _r);
};

/**
 * DRAW_LIGHT_WITH_RANGE
 *
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} colorR
 * @param {number} colorG
 * @param {number} colorB
 * @param {number} range
 * @param {number} intensity
 * @return {void}
 */
global.DrawLightWithRange = function (posX, posY, posZ, colorR, colorG, colorB, range, intensity) {
  return _in(0xd2d9e04c, 0x0df927f4, _fv(posX), _fv(posY), _fv(posZ), colorR, colorG, colorB, _fv(range), _fv(intensity));
};

/**
 * DRAW_LOW_QUALITY_PHOTO_TO_PHONE
 * nullsub, doesn't do anything (GTA5 leftover, there is no phone in RDR3)
 *
 * @param {boolean} p0
 * @param {number} photoRotation
 * @return {void}
 */
global.DrawLowQualityPhotoToPhone = function (p0, photoRotation) {
  return _in(0xf1142e5d, 0x64b47802, p0, photoRotation);
};

/**
 * DRAW_RECT
 * Draws a rectangle on the screen.
 * 
 * -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
 * 
 * -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
 * 
 * -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
 * 
 * -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
 * 
 * -R: Red part of the color. (0-255)
 * 
 * -G: Green part of the color. (0-255)
 * 
 * -B: Blue part of the color. (0-255)
 * 
 * -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
 *
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 * @param {boolean} p8
 * @param {boolean} p9
 * @return {void}
 */
global.DrawRect = function (x, y, width, height, red, green, blue, alpha, p8, p9) {
  return _in(0x40522459, 0x1df02025, _fv(x), _fv(y), _fv(width), _fv(height), red, green, blue, alpha, p8, p9);
};

/**
 * DRAW_SPRITE
 * Draws a 2D sprite on the screen.
 * 
 * Parameters:
 * textureDict - Name of texture dictionary to load texture from
 * 
 * textureName - Name of texture to load from texture dictionary
 * 
 * screenX/Y - Screen offset (0.5 = center)
 * scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
 * 
 * heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
 * 
 * red,green,blue - Sprite color (default = 255/255/255)
 * 
 * alpha - opacity level
 * 
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures
 *
 * @param {string | number} textureDict
 * @param {string | number} textureName
 * @param {number} screenX
 * @param {number} screenY
 * @param {number} width
 * @param {number} height
 * @param {number} heading
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 * @param {boolean} p11
 * @return {void}
 */
global.DrawSprite = function (textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha, p11) {
  return _in(0xc9884eca, 0xde94cb34, _ts(textureDict), _ts(textureName), _fv(screenX), _fv(screenY), _fv(width), _fv(height), _fv(heading), red, green, blue, alpha, p11);
};

/**
 * DRAW_TV_CHANNEL
 *
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} xScale
 * @param {number} yScale
 * @param {number} rotation
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 * @return {void}
 */
global.DrawTvChannel = function (xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha) {
  return _in(0xc0a14554, 0x0254a840, _fv(xPos), _fv(yPos), _fv(xScale), _fv(yScale), _fv(rotation), red, green, blue, alpha);
};

/**
 * ENABLE_ENTITYMASK
 *

 * @return {void}
 */
global.EnableEntitymask = function () {
  return _in(0xfaad23de, 0x7a54fc14);
};

/**
 * ENABLE_MOON_CYCLE_OVERRIDE
 * Old name: _ENABLE_EXTRA_TIMECYCLE_MODIFIER_STRENGTH
 *
 * @param {number} strength
 * @return {void}
 */
global.EnableMoonCycleOverride = function (strength) {
  return _in(0x6fe93bcc, 0x7bf12b63, _fv(strength));
};

/**
 * ENABLE_MOVIE_SUBTITLES
 * nullsub, doesn't do anything
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.EnableMovieSubtitles = function (toggle) {
  return _in(0x6fc9b065, 0x229c0787, toggle);
};

/**
 * END_PETROL_TRAIL_DECALS
 *

 * @return {void}
 */
global.EndPetrolTrailDecals = function () {
  return _in(0x0e126aae, 0x933f3b56);
};

/**
 * FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO
 *

 * @return {void}
 */
global.FreeMemoryForHighQualityPhoto = function () {
  return _in(0xd45547d8, 0x396f002a);
};

/**
 * FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
 *

 * @return {void}
 */
global.FreeMemoryForLowQualityPhoto = function () {
  return _in(0x614682e7, 0x15adbaac);
};

/**
 * FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO
 *

 * @return {void}
 */
global.FreeMemoryForMissionCreatorPhoto = function () {
  return _in(0x7dff8f94, 0x937d2659);
};

/**
 * GET_SCREEN_COORD_FROM_WORLD_COORD
 *
 * @param {number} worldX
 * @param {number} worldY
 * @param {number} worldZ
 * @return {[boolean, number, number]}
 */
global.GetScreenCoordFromWorldCoord = function (worldX, worldY, worldZ) {
  return _in(0xcb50d7af, 0xcc8b0ec6, _fv(worldX), _fv(worldY), _fv(worldZ), _f, _f, _r);
};

/**
 * GET_SCREEN_RESOLUTION
 * Hardcoded to always set x to 1280 and y to 720.
 *

 * @return {[number, number]}
 */
global.GetScreenResolution = function () {
  return _in(0x66773c92, 0x835d0909, _i, _i);
};

/**
 * GET_STATUS_OF_CREATE_LOW_QUALITY_COPY_OF_PHOTO
 * Old name: _GET_STATUS_OF_DRAW_LOW_QUALITY_PHOTO
 *
 * @param {any} p0
 * @return {number}
 */
global.GetStatusOfCreateLowQualityCopyOfPhoto = function (p0) {
  return _in(0x13430d3d, 0x5a45f14b, p0, _r, _ri);
};

/**
 * GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO
 * contentId: returned by NETWORK::_UGC_QUERY_GET_CREATOR_PHOTO(uVar0, 0, sParam3)
 *
 * @param {string | number} contentId
 * @return {number}
 */
global.GetStatusOfLoadMissionCreatorPhoto = function (contentId) {
  return _in(0xc71b50ae, 0x58d07369, _ts(contentId), _r, _ri);
};

/**
 * GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO
 * 0 = succeeded
 * 1 = getting status
 * 2 = failed
 *

 * @return {number}
 */
global.GetStatusOfSaveHighQualityPhoto = function () {
  return _in(0xd6663ec3, 0x74092383, _r, _ri);
};

/**
 * GET_STATUS_OF_SORTED_LIST_OPERATION
 * 0 = succeeded
 * 1 = getting status
 * 2 = failed
 *

 * @return {number}
 */
global.GetStatusOfSortedListOperation = function () {
  return _in(0xb28894cd, 0x7408bd0c, _r, _ri);
};

/**
 * GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO
 *

 * @return {number}
 */
global.GetStatusOfTakeHighQualityPhoto = function () {
  return _in(0x4a3da74c, 0x3ccb1725, _r, _ri);
};

/**
 * GET_TIMECYCLE_MODIFIER_INDEX
 *

 * @return {number}
 */
global.GetTimecycleModifierIndex = function () {
  return _in(0xa7053942, 0x93e2b3d3, _r, _ri);
};

/**
 * GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX
 *

 * @return {number}
 */
global.GetTimecycleTransitionModifierIndex = function () {
  return _in(0x2da67ba3, 0xc8a6755d, _r, _ri);
};

/**
 * GET_TOGGLE_PAUSED_RENDERPHASES_STATUS
 *

 * @return {boolean}
 */
global.GetTogglePausedRenderphasesStatus = function () {
  return _in(0x86ed21bd, 0xb2791ce8, _r);
};

/**
 * GET_TV_CHANNEL
 *

 * @return {number}
 */
global.GetTvChannel = function () {
  return _in(0xf90fbfd6, 0x8f3c59ae, _r, _ri);
};

/**
 * IS_DECAL_ALIVE
 *
 * @param {number} decal
 * @return {boolean}
 */
global.IsDecalAlive = function (decal) {
  return _in(0x3e4b4e5c, 0xf5d3eeb5, decal, _r);
};

/**
 * IS_PHOTO_FRAME
 *

 * @return {boolean}
 */
global.IsPhotoFrame = function () {
  return _in(0x86076ae3, 0x5cbbe55f, _r);
};

/**
 * IS_TRACKED_POINT_VISIBLE
 *
 * @param {number} point
 * @return {boolean}
 */
global.IsTrackedPointVisible = function (point) {
  return _in(0xcbb056ba, 0x159fb48d, point, _r);
};

/**
 * IS_TVSHOW_CURRENTLY_PLAYING
 * Old name: _IS_TV_PLAYLIST_ITEM_PLAYING
 *
 * @param {number} videoCliphash
 * @return {boolean}
 */
global.IsTvshowCurrentlyPlaying = function (videoCliphash) {
  return _in(0x4d562223, 0xe0eb65f3, _ch(videoCliphash), _r);
};

/**
 * LOAD_MISSION_CREATOR_PHOTO
 *
 * @param {DataView} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {boolean}
 */
global.LoadMissionCreatorPhoto = function (p0, p1, p2, p3) {
  return _in(0x84f0ba74, 0x62ff8d58, p0, p1, p2, p3, _r);
};

/**
 * PEDSHOT_IS_AVAILABLE
 *

 * @return {boolean}
 */
global.PedshotIsAvailable = function () {
  return _in(0xaf6e67d0, 0x73d2dce2, _r);
};

/**
 * QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS
 *

 * @return {any}
 */
global.QueueOperationToCreateSortedListOfPhotos = function () {
  return _in(0xa42edf1e, 0x88734a7e, _r);
};

/**
 * REMOVE_DECAL
 *
 * @param {number} decal
 * @return {void}
 */
global.RemoveDecal = function (decal) {
  return _in(0x49a72055, 0x2eb0bb88, decal);
};

/**
 * REMOVE_DECALS_FROM_OBJECT
 *
 * @param {number} obj
 * @return {void}
 */
global.RemoveDecalsFromObject = function (obj) {
  return _in(0xfb8972ba, 0xe0013140, obj);
};

/**
 * REMOVE_DECALS_IN_RANGE
 * Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} range
 * @return {void}
 */
global.RemoveDecalsInRange = function (x, y, z, range) {
  return _in(0x86de59fa, 0x02902b40, _fv(x), _fv(y), _fv(z), _fv(range));
};

/**
 * REMOVE_GRASS_CULL_SPHERE
 *
 * @param {number} handle
 * @return {void}
 */
global.RemoveGrassCullSphere = function (handle) {
  return _in(0xae7bf7ca, 0x9e4ba48d, handle);
};

/**
 * REMOVE_PARTICLE_FX
 *
 * @param {number} ptfxHandle
 * @param {boolean} p1
 * @return {void}
 */
global.RemoveParticleFx = function (ptfxHandle, p1) {
  return _in(0x459598f5, 0x79c98929, ptfxHandle, p1);
};

/**
 * REMOVE_PARTICLE_FX_FROM_ENTITY
 *
 * @param {number} entity
 * @return {void}
 */
global.RemoveParticleFxFromEntity = function (entity) {
  return _in(0x92884b4a, 0x49d81325, entity);
};

/**
 * REMOVE_PARTICLE_FX_IN_RANGE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {void}
 */
global.RemoveParticleFxInRange = function (x, y, z, radius) {
  return _in(0x87b5905e, 0xca623b68, _fv(x), _fv(y), _fv(z), _fv(radius));
};

/**
 * REMOVE_VEG_MODIFIER_SPHERE
 *
 * @param {number} vegModifierHandle
 * @param {number} p1
 * @return {void}
 */
global.RemoveVegModifierSphere = function (vegModifierHandle, p1) {
  return _in(0x9cf1836c, 0x03fb67a2, vegModifierHandle, p1);
};

/**
 * RESET_ADAPTATION
 * Sets an unknown value related to timecycles.
 *
 * @param {number} unk
 * @return {void}
 */
global.ResetAdaptation = function (unk) {
  return _in(0x297b72e2, 0xaf094742, unk);
};

/**
 * RESET_PARTICLE_FX_OVERRIDE
 * Resets the effect of SET_PARTICLE_FX_OVERRIDE
 *
 * @param {string | number} name
 * @return {void}
 */
global.ResetParticleFxOverride = function (name) {
  return _in(0x274b3dab, 0xf7e72def, _ts(name));
};

/**
 * RESET_PAUSED_RENDERPHASES
 *

 * @return {void}
 */
global.ResetPausedRenderphases = function () {
  return _in(0xccd9aad8, 0x5e1b559e);
};

/**
 * SAVE_HIGH_QUALITY_PHOTO
 *
 * @param {number} unused
 * @return {boolean}
 */
global.SaveHighQualityPhoto = function (unused) {
  return _in(0x57639fd8, 0x76b68a91, unused, _r);
};

/**
 * SET_ARTIFICIAL_LIGHTS_STATE
 * Does not affect weapons, particles, fire/explosions, flashlights or the sun.
 * When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
 * 
 * state: True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
 *
 * @param {boolean} state
 * @return {void}
 */
global.SetArtificialLightsState = function (state) {
  return _in(0xb2797619, 0xa7c7747b, state);
};

/**
 * SET_CHECKPOINT_RGBA
 * Sets the checkpoint color.
 *
 * @param {number} checkpoint
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 * @return {void}
 */
global.SetCheckpointRgba = function (checkpoint, red, green, blue, alpha) {
  return _in(0xcaafc225, 0xe33b1d15, checkpoint, red, green, blue, alpha);
};

/**
 * SET_CHECKPOINT_RGBA2
 * Sets the checkpoint icon color.
 *
 * @param {number} checkpoint
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 * @return {void}
 */
global.SetCheckpointRgba2 = function (checkpoint, red, green, blue, alpha) {
  return _in(0x99aff172, 0x22d4deb4, checkpoint, red, green, blue, alpha);
};

/**
 * SET_DISABLE_PETROL_DECALS_IGNITING_THIS_FRAME
 *

 * @return {void}
 */
global.SetDisablePetrolDecalsIgnitingThisFrame = function () {
  return _in(0x53ed07bf, 0x368eda59);
};

/**
 * SET_GRASS_CULL_SPHERE
 * Returns handle to be used with REMOVE_GRASS_CULL_SPHERE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @param {number} p4
 * @return {number}
 */
global.SetGrassCullSphere = function (x, y, z, p3, p4) {
  return _in(0x27219300, 0xc36a8d40, _fv(x), _fv(y), _fv(z), _fv(p3), p4, _r, _ri);
};

/**
 * SET_HIDOF_OVERRIDE
 * Old name: _SET_HIDOF_ENV_BLUR_PARAMS
 *
 * @param {boolean} p0
 * @param {boolean} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @return {void}
 */
global.SetHidofOverride = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xcc23aa1a, 0x7cbfe840, p0, p1, _fv(p2), _fv(p3), _fv(p4), _fv(p5));
};

/**
 * SET_PARTICLE_FX_AMBIENT_COLOUR
 * Related to Campfires.
 * p1: AMB_BONFIRE_MP, AMB_CAMPFIRE_LRG_MP
 *
 * @param {number} entity
 * @param {string | number} p1
 * @param {number} r
 * @param {number} g
 * @param {number} b
 * @return {void}
 */
global.SetParticleFxAmbientColour = function (entity, p1, r, g, b) {
  return _in(0x3c61b52b, 0x00848c26, entity, _ts(p1), _fv(r), _fv(g), _fv(b));
};

/**
 * SET_PARTICLE_FX_BULLET_IMPACT_LODRANGE_SCALE
 *
 * @param {number} p0
 * @return {void}
 */
global.SetParticleFxBulletImpactLodrangeScale = function (p0) {
  return _in(0x8dccc98d, 0xc0dbf9e4, _fv(p0));
};

/**
 * SET_PARTICLE_FX_BULLET_IMPACT_SCALE
 *
 * @param {number} scale
 * @return {void}
 */
global.SetParticleFxBulletImpactScale = function (scale) {
  return _in(0xa53c8d7d, 0x0f8c74d0, _fv(scale));
};

/**
 * SET_PARTICLE_FX_FOOT_LODRANGE_SCALE
 *
 * @param {number} p0
 * @return {void}
 */
global.SetParticleFxFootLodrangeScale = function (p0) {
  return _in(0x2a162585, 0x8887d4e6, _fv(p0));
};

/**
 * SET_PARTICLE_FX_LOOPED_ALPHA
 *
 * @param {number} ptfxHandle
 * @param {number} alpha
 * @return {void}
 */
global.SetParticleFxLoopedAlpha = function (ptfxHandle, alpha) {
  return _in(0x88786e76, 0x234f7054, ptfxHandle, _fv(alpha));
};

/**
 * SET_PARTICLE_FX_LOOPED_COLOUR
 *
 * @param {number} ptfxHandle
 * @param {number} r
 * @param {number} g
 * @param {number} b
 * @param {boolean} p4
 * @return {void}
 */
global.SetParticleFxLoopedColour = function (ptfxHandle, r, g, b, p4) {
  return _in(0x239879fc, 0x61c610cc, ptfxHandle, _fv(r), _fv(g), _fv(b), p4);
};

/**
 * SET_PARTICLE_FX_LOOPED_EVOLUTION
 *
 * @param {number} ptfxHandle
 * @param {string | number} propertyName
 * @param {number} amount
 * @param {boolean} noNetwork
 * @return {void}
 */
global.SetParticleFxLoopedEvolution = function (ptfxHandle, propertyName, amount, noNetwork) {
  return _in(0x3674f389, 0xb0facd80, ptfxHandle, _ts(propertyName), _fv(amount), noNetwork);
};

/**
 * SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST
 *
 * @param {number} ptfxHandle
 * @param {number} range
 * @return {void}
 */
global.SetParticleFxLoopedFarClipDist = function (ptfxHandle, range) {
  return _in(0x9b04d471, 0xda0ad7aa, ptfxHandle, _fv(range));
};

/**
 * SET_PARTICLE_FX_LOOPED_OFFSETS
 *
 * @param {number} ptfxHandle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @return {void}
 */
global.SetParticleFxLoopedOffsets = function (ptfxHandle, x, y, z, rotX, rotY, rotZ) {
  return _in(0xd3a4a95f, 0xc94fe83b, ptfxHandle, _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ));
};

/**
 * SET_PARTICLE_FX_LOOPED_SCALE
 *
 * @param {number} ptfxHandle
 * @param {number} scale
 * @return {void}
 */
global.SetParticleFxLoopedScale = function (ptfxHandle, scale) {
  return _in(0x1a9e1c0d, 0x98d093b7, ptfxHandle, _fv(scale));
};

/**
 * SET_PARTICLE_FX_NON_LOOPED_ALPHA
 *
 * @param {number} alpha
 * @return {void}
 */
global.SetParticleFxNonLoopedAlpha = function (alpha) {
  return _in(0xe8a35938, 0xa7026cea, _fv(alpha));
};

/**
 * SET_PARTICLE_FX_NON_LOOPED_COLOUR
 *
 * @param {number} r
 * @param {number} g
 * @param {number} b
 * @return {void}
 */
global.SetParticleFxNonLoopedColour = function (r, g, b) {
  return _in(0x60b85bed, 0x6577a35b, _fv(r), _fv(g), _fv(b));
};

/**
 * SET_PARTICLE_FX_OVERRIDE
 *
 * @param {string | number} oldAsset
 * @param {string | number} newAsset
 * @return {void}
 */
global.SetParticleFxOverride = function (oldAsset, newAsset) {
  return _in(0xbe711a16, 0x9e9c7e95, _ts(oldAsset), _ts(newAsset));
};

/**
 * SET_PICKUP_LIGHT
 * https://imgur.com/a/I2swSDJ
 * 
 * Old name: _SET_PICKUP_OBJECT_GLOW_ENABLED
 *
 * @param {number} object
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPickupLight = function (object, toggle) {
  return _in(0x7dfb49bc, 0xdb73089a, object, toggle);
};

/**
 * SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU
 * Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for draw commands that are used with a world render target.
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetScriptGfxDrawBehindPausemenu = function (toggle) {
  return _in(0x906b86e6, 0xd7896b9e, toggle);
};

/**
 * SET_SCRIPT_GFX_DRAW_ORDER
 * Sets the draw order for script draw commands.
 *
 * @param {number} drawOrder
 * @return {void}
 */
global.SetScriptGfxDrawOrder = function (drawOrder) {
  return _in(0xcfcc7839, 0x1c8b3814, drawOrder);
};

/**
 * SET_TIMECYCLE_MODIFIER
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/timecycles
 *
 * @param {string | number} modifierName
 * @return {void}
 */
global.SetTimecycleModifier = function (modifierName) {
  return _in(0xfa08722a, 0x5ea82da7, _ts(modifierName));
};

/**
 * SET_TIMECYCLE_MODIFIER_STRENGTH
 *
 * @param {number} strength
 * @return {void}
 */
global.SetTimecycleModifierStrength = function (strength) {
  return _in(0xfdb74c9c, 0xc54c3f37, _fv(strength));
};

/**
 * SET_TRACKED_POINT_INFO
 *
 * @param {number} point
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {void}
 */
global.SetTrackedPointInfo = function (point, x, y, z, radius) {
  return _in(0xf6fda3d4, 0x404d4f2c, point, _fv(x), _fv(y), _fv(z), _fv(radius));
};

/**
 * SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER
 *
 * @param {number} strength
 * @return {void}
 */
global.SetTransitionOutOfTimecycleModifier = function (strength) {
  return _in(0xbb6c707f, 0x20d955d4, _fv(strength));
};

/**
 * SET_TRANSITION_TIMECYCLE_MODIFIER
 *
 * @param {string | number} modifierName
 * @param {number} transitionBlend
 * @return {void}
 */
global.SetTransitionTimecycleModifier = function (modifierName, transitionBlend) {
  return _in(0xff927a09, 0xf481d80c, _ts(modifierName), _fv(transitionBlend));
};

/**
 * SET_TV_AUDIO_FRONTEND
 * Probably changes tvs from being a 3d audio to being "global" audio
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetTvAudioFrontend = function (toggle) {
  return _in(0x64437c98, 0xfcc5f291, toggle);
};

/**
 * SET_TV_CHANNEL
 *
 * @param {number} channel
 * @return {void}
 */
global.SetTvChannel = function (channel) {
  return _in(0x593faf7f, 0xc9401a56, channel);
};

/**
 * SET_TV_CHANNEL_PLAYLIST
 *
 * @param {number} tvChannel
 * @param {string | number} playlistName
 * @param {boolean} restart
 * @return {void}
 */
global.SetTvChannelPlaylist = function (tvChannel, playlistName, restart) {
  return _in(0xdec6b25f, 0x5dc8925b, tvChannel, _ts(playlistName), restart);
};

/**
 * SET_TV_VOLUME
 *
 * @param {number} volume
 * @return {void}
 */
global.SetTvVolume = function (volume) {
  return _in(0x73a97068, 0x787d7231, _fv(volume));
};

/**
 * START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY
 *
 * @param {string | number} effectName
 * @param {number} entity
 * @param {number} xOffset
 * @param {number} yOffset
 * @param {number} zOffset
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} scale
 * @param {boolean} xAxis
 * @param {boolean} yAxis
 * @param {boolean} zAxis
 * @return {number}
 */
global.StartNetworkedParticleFxLoopedOnEntity = function (effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis) {
  return _in(0x8f90ab32, 0xe1944bde, _ts(effectName), entity, _fv(xOffset), _fv(yOffset), _fv(zOffset), _fv(xRot), _fv(yRot), _fv(zRot), _fv(scale), xAxis, yAxis, zAxis, _r, _ri);
};

/**
 * START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE
 *
 * @param {string | number} effectName
 * @param {number} entity
 * @param {number} xOffset
 * @param {number} yOffset
 * @param {number} zOffset
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} boneIndex
 * @param {number} scale
 * @param {boolean} xAxis
 * @param {boolean} yAxis
 * @param {boolean} zAxis
 * @return {number}
 */
global.StartNetworkedParticleFxLoopedOnEntityBone = function (effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis) {
  return _in(0x9c566214, 0x62ffe7a6, _ts(effectName), entity, _fv(xOffset), _fv(yOffset), _fv(zOffset), _fv(xRot), _fv(yRot), _fv(zRot), boneIndex, _fv(scale), xAxis, yAxis, zAxis, _r, _ri);
};

/**
 * START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD
 *
 * @param {string | number} effectName
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} scale
 * @param {boolean} xAxis
 * @param {boolean} yAxis
 * @param {boolean} zAxis
 * @return {boolean}
 */
global.StartNetworkedParticleFxNonLoopedAtCoord = function (effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis) {
  return _in(0xfb976184, 0x57994a62, _ts(effectName), _fv(xPos), _fv(yPos), _fv(zPos), _fv(xRot), _fv(yRot), _fv(zRot), _fv(scale), xAxis, yAxis, zAxis, _r);
};

/**
 * START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY
 *
 * @param {string | number} effectName
 * @param {number} entity
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scale
 * @param {boolean} axisX
 * @param {boolean} axisY
 * @param {boolean} axisZ
 * @return {boolean}
 */
global.StartNetworkedParticleFxNonLoopedOnEntity = function (effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ) {
  return _in(0xe6cfe439, 0x37061143, _ts(effectName), entity, _fv(offsetX), _fv(offsetY), _fv(offsetZ), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scale), axisX, axisY, axisZ, _r);
};

/**
 * START_PARTICLE_FX_LOOPED_AT_COORD
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_looped.lua
 *
 * @param {string | number} effectName
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} scale
 * @param {boolean} xAxis
 * @param {boolean} yAxis
 * @param {boolean} zAxis
 * @param {boolean} p11
 * @return {number}
 */
global.StartParticleFxLoopedAtCoord = function (effectName, x, y, z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11) {
  return _in(0xba32867e, 0x86125d3a, _ts(effectName), _fv(x), _fv(y), _fv(z), _fv(xRot), _fv(yRot), _fv(zRot), _fv(scale), xAxis, yAxis, zAxis, p11, _r, _ri);
};

/**
 * START_PARTICLE_FX_LOOPED_ON_ENTITY
 *
 * @param {string | number} effectName
 * @param {number} entity
 * @param {number} xOffset
 * @param {number} yOffset
 * @param {number} zOffset
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} scale
 * @param {boolean} xAxis
 * @param {boolean} yAxis
 * @param {boolean} zAxis
 * @return {number}
 */
global.StartParticleFxLoopedOnEntity = function (effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis) {
  return _in(0xbd41e144, 0x0ce39800, _ts(effectName), entity, _fv(xOffset), _fv(yOffset), _fv(zOffset), _fv(xRot), _fv(yRot), _fv(zRot), _fv(scale), xAxis, yAxis, zAxis, _r, _ri);
};

/**
 * START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE
 *
 * @param {string | number} effectName
 * @param {number} entity
 * @param {number} xOffset
 * @param {number} yOffset
 * @param {number} zOffset
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} boneIndex
 * @param {number} scale
 * @param {boolean} xAxis
 * @param {boolean} yAxis
 * @param {boolean} zAxis
 * @return {number}
 */
global.StartParticleFxLoopedOnEntityBone = function (effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis) {
  return _in(0xd3ba6ec7, 0xf2fbd5e9, _ts(effectName), entity, _fv(xOffset), _fv(yOffset), _fv(zOffset), _fv(xRot), _fv(yRot), _fv(zRot), boneIndex, _fv(scale), xAxis, yAxis, zAxis, _r, _ri);
};

/**
 * START_PARTICLE_FX_LOOPED_ON_PED_BONE
 *
 * @param {string | number} effectName
 * @param {number} ped
 * @param {number} xOffset
 * @param {number} yOffset
 * @param {number} zOffset
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} boneIndex
 * @param {number} scale
 * @param {boolean} xAxis
 * @param {boolean} yAxis
 * @param {boolean} zAxis
 * @return {number}
 */
global.StartParticleFxLoopedOnPedBone = function (effectName, ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis) {
  return _in(0xe689c1b1, 0x432bb8af, _ts(effectName), ped, _fv(xOffset), _fv(yOffset), _fv(zOffset), _fv(xRot), _fv(yRot), _fv(zRot), boneIndex, _fv(scale), xAxis, yAxis, zAxis, _r, _ri);
};

/**
 * START_PARTICLE_FX_NON_LOOPED_AT_COORD
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_non_looped.lua
 *
 * @param {string | number} effectName
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} scale
 * @param {boolean} xAxis
 * @param {boolean} yAxis
 * @param {boolean} zAxis
 * @return {boolean}
 */
global.StartParticleFxNonLoopedAtCoord = function (effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis) {
  return _in(0x2e80bf72, 0xef7c87ac, _ts(effectName), _fv(xPos), _fv(yPos), _fv(zPos), _fv(xRot), _fv(yRot), _fv(zRot), _fv(scale), xAxis, yAxis, zAxis, _r);
};

/**
 * START_PARTICLE_FX_NON_LOOPED_ON_ENTITY
 *
 * @param {string | number} effectName
 * @param {number} entity
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scale
 * @param {boolean} axisX
 * @param {boolean} axisY
 * @param {boolean} axisZ
 * @return {boolean}
 */
global.StartParticleFxNonLoopedOnEntity = function (effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ) {
  return _in(0xff4c64c5, 0x13388c12, _ts(effectName), entity, _fv(offsetX), _fv(offsetY), _fv(offsetZ), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scale), axisX, axisY, axisZ, _r);
};

/**
 * START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
 *
 * @param {string | number} effectName
 * @param {number} ped
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} boneIndex
 * @param {number} scale
 * @param {boolean} axisX
 * @param {boolean} axisY
 * @param {boolean} axisZ
 * @return {boolean}
 */
global.StartParticleFxNonLoopedOnPedBone = function (effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ) {
  return _in(0x3faa72bd, 0x940c3ac0, _ts(effectName), ped, _fv(offsetX), _fv(offsetY), _fv(offsetZ), _fv(rotX), _fv(rotY), _fv(rotZ), boneIndex, _fv(scale), axisX, axisY, axisZ, _r);
};

/**
 * START_PETROL_TRAIL_DECALS
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.StartPetrolTrailDecals = function (p0, p1) {
  return _in(0x46f246d6, 0x504f0031, p0, p1);
};

/**
 * STOP_PARTICLE_FX_LOOPED
 *
 * @param {number} ptfxHandle
 * @param {boolean} p1
 * @return {void}
 */
global.StopParticleFxLooped = function (ptfxHandle, p1) {
  return _in(0x22970f3a, 0x088b133b, ptfxHandle, p1);
};

/**
 * TOGGLE_PAUSED_RENDERPHASES
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.TogglePausedRenderphases = function (toggle) {
  return _in(0xef9e1c45, 0x732f55fa, toggle);
};

/**
 * UPDATE_LIGHTS_ON_ENTITY
 *
 * @param {number} entity
 * @return {void}
 */
global.UpdateLightsOnEntity = function (entity) {
  return _in(0xbdbacb52, 0xa03cc760, entity);
};

/**
 * USE_PARTICLE_FX_ASSET
 * fxName: see data_0/data/effects/ptfx/fxlists/
 *
 * @param {string | number} fxName
 * @return {void}
 */
global.UseParticleFxAsset = function (fxName) {
  return _in(0xa10db07f, 0xc234dd12, _ts(fxName));
};

/**
 * _0x085C5B61A0114F32
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x085C5B61A0114F32 = function (p0, p1) {
  return _in(0x085c5b61, 0xa0114f32, p0, p1);
};

/**
 * _0x0D5B19C34068FEE7
 * Gets set to 1 when GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO = PHOTO_OPERATION_SUCCEEDED
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0D5B19C34068FEE7 = function (p0) {
  return _in(0x0d5b19c3, 0x4068fee7, p0);
};

/**
 * _0x1460B644397453EB
 * _RESET_*
 *

 * @return {void}
 */
global.N_0x1460B644397453EB = function () {
  return _in(0x1460b644, 0x397453eb);
};

/**
 * _0x171C18E994C1A395
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x171C18E994C1A395 = function (p0, p1, p2, p3, p4) {
  return _in(0x171c18e9, 0x94c1a395, p0, p1, p2, p3, p4);
};

/**
 * _0x1A9F09AB458D49C6
 * Used in shop scripts for CATALOG_BOOK
 * false = Normal -> [CATALOG_BOOK_SHUTDOWN]
 * true = Trees flickering? -> [CATALOG_BOOK_OPEN]
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x1A9F09AB458D49C6 = function (p0) {
  return _in(0x1a9f09ab, 0x458d49c6, p0);
};

/**
 * _0x1C6306E5BC25C29C
 *

 * @return {void}
 */
global.N_0x1C6306E5BC25C29C = function () {
  return _in(0x1c6306e5, 0xbc25c29c);
};

/**
 * _0x1FF8731BE1DFC0C0
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x1FF8731BE1DFC0C0 = function (p0, p1) {
  return _in(0x1ff8731b, 0xe1dfc0c0, p0, p1);
};

/**
 * _0x21F00E08CBB5F37B
 * Params: component - used in odriscolls1 and sean1 R* SP Script: COMPONENT_BINOCULARS_SCOPE01
 * Triggers the binocular scaleform
 *
 * @param {string | number} component
 * @return {void}
 */
global.N_0x21F00E08CBB5F37B = function (component) {
  return _in(0x21f00e08, 0xcbb5f37b, _ts(component));
};

/**
 * _0x26DD2FB0A88CC412
 * effectName2, p2 and p3 are unused
 * 
 * ANIMPOSTFX_*
 *
 * @param {string | number} effectName
 * @param {string | number} effectName2
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x26DD2FB0A88CC412 = function (effectName, effectName2, p2, p3) {
  return _in(0x26dd2fb0, 0xa88cc412, _ts(effectName), _ts(effectName2), p2, p3);
};

/**
 * _0x285438C26C732F9D
 *

 * @return {any}
 */
global.N_0x285438C26C732F9D = function () {
  return _in(0x285438c2, 0x6c732f9d, _r);
};

/**
 * _0x32DE2BFFDA43E62A
 *

 * @return {void}
 */
global.N_0x32DE2BFFDA43E62A = function () {
  return _in(0x32de2bff, 0xda43e62a);
};

/**
 * _0x38D9D50F2085E9B3
 * ANIMPOSTFX_*
 *
 * @param {number} effectNameHash
 * @return {void}
 */
global.N_0x38D9D50F2085E9B3 = function (effectNameHash) {
  return _in(0x38d9d50f, 0x2085e9b3, _ch(effectNameHash));
};

/**
 * _0x3DA7A10583A4BEC0
 * ANIMPOSTFX_*
 *

 * @return {boolean}
 */
global.N_0x3DA7A10583A4BEC0 = function () {
  return _in(0x3da7a105, 0x83a4bec0, _r);
};

/**
 * _0x402E1A61D2587FCD
 * Only used in R* SP Script spd_agnesdown1
 *
 * @param {any} p0
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p4
 * @param {number} p5
 * @param {number} heading
 * @return {boolean}
 */
global.N_0x402E1A61D2587FCD = function (p0, x, y, z, p4, p5, heading) {
  return _in(0x402e1a61, 0xd2587fcd, p0, _fv(x), _fv(y), _fv(z), _fv(p4), _fv(p5), _fv(heading), _r);
};

/**
 * _0x4046493D2EEACA0E
 * _DISABLE_*
 *

 * @return {void}
 */
global.N_0x4046493D2EEACA0E = function () {
  return _in(0x4046493d, 0x2eeaca0e);
};

/**
 * _0x41F88A85A579A61D
 * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x41F88A85A579A61D = function (p0) {
  return _in(0x41f88a85, 0xa579a61d, _fv(p0));
};

/**
 * _0x453D16D41FC51D3E
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x453D16D41FC51D3E = function (p0) {
  return _in(0x453d16d4, 0x1fc51d3e, p0);
};

/**
 * _0x48FE0DB54045B975
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.N_0x48FE0DB54045B975 = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x48fe0db5, 0x4045b975, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _0x4BD66B4E3427689B
 * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
 *
 * @param {string | number} p0
 * @return {void}
 */
global.N_0x4BD66B4E3427689B = function (p0) {
  return _in(0x4bd66b4e, 0x3427689b, _ts(p0));
};

/**
 * _0x4FB67D172C4476F3
 * p1: AMB_ANN_COAL_CHUTE_DIVE, AMB_ANN_COAL_CHUTE
 * p2: EMIT
 * p3: either 0.0f or 1.0f
 *
 * @param {number} entity
 * @param {string | number} p1
 * @param {string | number} p2
 * @param {number} p3
 * @return {void}
 */
global.N_0x4FB67D172C4476F3 = function (entity, p1, p2, p3) {
  return _in(0x4fb67d17, 0x2c4476f3, entity, _ts(p1), _ts(p2), _fv(p3));
};

/**
 * _0x503941F65DBA24EC
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x503941F65DBA24EC = function (p0) {
  return _in(0x503941f6, 0x5dba24ec, p0);
};

/**
 * _0x519928DF02EB5101
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x519928DF02EB5101 = function (p0) {
  return _in(0x519928df, 0x02eb5101, p0);
};

/**
 * _0x5AC6E0FA028369DE
 * Closes the the binocular scaleform
 *

 * @return {void}
 */
global.N_0x5AC6E0FA028369DE = function () {
  return _in(0x5ac6e0fa, 0x028369de);
};

/**
 * _0x5C674EB487891F6B
 *

 * @return {any}
 */
global.N_0x5C674EB487891F6B = function () {
  return _in(0x5c674eb4, 0x87891f6b, _r);
};

/**
 * _0x5C9C3A466B3296A8
 * Only used in R* SP Script spd_agnesdown1
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x5C9C3A466B3296A8 = function (p0) {
  return _in(0x5c9c3a46, 0x6b3296a8, p0, _r);
};

/**
 * _0x5CD6A2CCE5087161
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x5CD6A2CCE5087161 = function (p0) {
  return _in(0x5cd6a2cc, 0xe5087161, p0);
};

/**
 * _0x62B9F9A1272AED80
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x62B9F9A1272AED80 = function (p0) {
  return _in(0x62b9f9a1, 0x272aed80, p0);
};

/**
 * _0x67B0778C62E74423
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x67B0778C62E74423 = function (p0) {
  return _in(0x67b0778c, 0x62e74423, p0);
};

/**
 * _0x6C03118E9E5C1A14
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6C03118E9E5C1A14 = function (p0) {
  return _in(0x6c03118e, 0x9e5c1a14, p0);
};

/**
 * _0x71845905BCCDE781
 * ANIMPOSTFX_*
 *
 * @param {number} effectNameHash
 * @return {void}
 */
global.N_0x71845905BCCDE781 = function (effectNameHash) {
  return _in(0x71845905, 0xbccde781, _ch(effectNameHash));
};

/**
 * _0x735762E8D7573E42
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x735762E8D7573E42 = function (p0, p1, p2) {
  return _in(0x735762e8, 0xd7573e42, p0, p1, p2);
};

/**
 * _0x812C1563185C6FB2
 * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
 * _ENABLE_*
 *

 * @return {void}
 */
global.N_0x812C1563185C6FB2 = function () {
  return _in(0x812c1563, 0x185c6fb2);
};

/**
 * _0x815653A42C5ABE76
 *

 * @return {void}
 */
global.N_0x815653A42C5ABE76 = function () {
  return _in(0x815653a4, 0x2c5abe76);
};

/**
 * _0x8996FA6AD9FE4E90
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x8996FA6AD9FE4E90 = function (p0) {
  return _in(0x8996fa6a, 0xd9fe4e90, p0);
};

/**
 * _0x910E260AEAD855DE
 *

 * @return {void}
 */
global.N_0x910E260AEAD855DE = function () {
  return _in(0x910e260a, 0xead855de);
};

/**
 * _0x9229ED770975BD9E
 *

 * @return {void}
 */
global.N_0x9229ED770975BD9E = function () {
  return _in(0x9229ed77, 0x0975bd9e);
};

/**
 * _0x94B261F1F35293E1
 * nullsub, doesn't do anything
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x94B261F1F35293E1 = function (p0) {
  return _in(0x94b261f1, 0xf35293e1, p0);
};

/**
 * _0x981C7D863980FA51
 *

 * @return {void}
 */
global.N_0x981C7D863980FA51 = function () {
  return _in(0x981c7d86, 0x3980fa51);
};

/**
 * _0x9D1B0B5066205692
 *

 * @return {void}
 */
global.N_0x9D1B0B5066205692 = function () {
  return _in(0x9d1b0b50, 0x66205692);
};

/**
 * _0x9F158A49B0D84C3C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9F158A49B0D84C3C = function (p0) {
  return _in(0x9f158a49, 0xb0d84c3c, p0);
};

/**
 * _0x9F6D859C80708B26
 *
 * @param {boolean} p0
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x9F6D859C80708B26 = function (p0, p1) {
  return _in(0x9f6d859c, 0x80708b26, p0, p1);
};

/**
 * _0xA04EF43030593ABC
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA04EF43030593ABC = function (p0, p1) {
  return _in(0xa04ef430, 0x30593abc, p0, p1);
};

/**
 * _0xA0F4D12D6042F6D5
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA0F4D12D6042F6D5 = function (p0, p1) {
  return _in(0xa0f4d12d, 0x6042f6d5, p0, p1);
};

/**
 * _0xA15CCAB8AD038291
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0xA15CCAB8AD038291 = function (p0, p1, p2, p3) {
  return _in(0xa15ccab8, 0xad038291, p0, p1, p2, p3, _r);
};

/**
 * _0xA1A86055792FB249
 *
 * @param {number} personaPhotoLocalCacheType
 * @return {void}
 */
global.N_0xA1A86055792FB249 = function (personaPhotoLocalCacheType) {
  return _in(0xa1a86055, 0x792fb249, personaPhotoLocalCacheType);
};

/**
 * _0xA201A3D0AC087C37
 * ANIMPOSTFX_*
 *
 * @param {string | number} effectName
 * @return {void}
 */
global.N_0xA201A3D0AC087C37 = function (effectName) {
  return _in(0xa201a3d0, 0xac087c37, _ts(effectName));
};

/**
 * _0xA21AF60C9F99CCC5
 *

 * @return {void}
 */
global.N_0xA21AF60C9F99CCC5 = function () {
  return _in(0xa21af60c, 0x9f99ccc5);
};

/**
 * _0xB032C085D9A03907
 * _SET_D* or _SET_E*
 *

 * @return {void}
 */
global.N_0xB032C085D9A03907 = function () {
  return _in(0xb032c085, 0xd9a03907);
};

/**
 * _0xB958D97A0DFAA0C2
 * ANIMPOSTFX_*
 *
 * @param {string | number} effectName
 * @return {boolean}
 */
global.N_0xB958D97A0DFAA0C2 = function (effectName) {
  return _in(0xb958d97a, 0x0dfaa0c2, _ts(effectName), _r);
};

/**
 * _0xC06F2F45A73EABCD
 * Used in NET_CAMP_SPIRIT_ANIMAL_CLEAR_ANIMAL_VISIBILITY
 *
 * @param {number} entity
 * @return {void}
 */
global.N_0xC06F2F45A73EABCD = function (entity) {
  return _in(0xc06f2f45, 0xa73eabcd, entity);
};

/**
 * _0xC28F62AC9774FC1B
 *

 * @return {any}
 */
global.N_0xC28F62AC9774FC1B = function () {
  return _in(0xc28f62ac, 0x9774fc1b, _r);
};

/**
 * _0xC37792A3F9C90771
 * Doesn't actually return anything.
 * 
 * ANIMPOSTFX_*
 *

 * @return {any}
 */
global.N_0xC37792A3F9C90771 = function () {
  return _in(0xc37792a3, 0xf9c90771, _r);
};

/**
 * _0xC489FE31AC726512
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xC489FE31AC726512 = function (p0, p1) {
  return _in(0xc489fe31, 0xac726512, p0, p1);
};

/**
 * _0xC76FC4C2FC5F4405
 * ANIMPOSTFX_*
 *
 * @param {number} effectNameHash
 * @return {void}
 */
global.N_0xC76FC4C2FC5F4405 = function (effectNameHash) {
  return _in(0xc76fc4c2, 0xfc5f4405, _ch(effectNameHash));
};

/**
 * _0xC8D0611D9A0CF5D3
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC8D0611D9A0CF5D3 = function (p0) {
  return _in(0xc8d0611d, 0x9a0cf5d3, p0);
};

/**
 * _0xCC3B787E73E64160
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0xCC3B787E73E64160 = function (p0, p1, p2, p3, p4) {
  return _in(0xcc3b787e, 0x73e64160, p0, p1, p2, p3, p4);
};

/**
 * _0xD1472AFF30C103D6
 * Only used in R* Script nb_stalking_hunter
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0xD1472AFF30C103D6 = function (p0) {
  return _in(0xd1472aff, 0x30c103d6, _fv(p0));
};

/**
 * _0xD543487A1F12828F
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xD543487A1F12828F = function (p0, p1, p2, p3) {
  return _in(0xd543487a, 0x1f12828f, p0, p1, p2, p3);
};

/**
 * _0xD9BC98B55BCFAA9B
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xD9BC98B55BCFAA9B = function (p0) {
  return _in(0xd9bc98b5, 0x5bcfaa9b, p0);
};

/**
 * _0xDFE332A5DA6FE7C9
 * Returns iNumPixels, iPixelsVisible
 *
 * @param {number} iTrackedPoint
 * @return {number}
 */
global.N_0xDFE332A5DA6FE7C9 = function (iTrackedPoint) {
  return _in(0xdfe332a5, 0xda6fe7c9, iTrackedPoint, _r, _ri);
};

/**
 * _0xE63D68F455CA0B47
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {any}
 */
global.N_0xE63D68F455CA0B47 = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xe63d68f4, 0x55ca0b47, p0, p1, p2, p3, p4, p5, p6, _r);
};

/**
 * _0xE75CDDEBF618C8FF
 * ANIMPOSTFX_*
 *
 * @param {number} effectNameHash
 * @return {boolean}
 */
global.N_0xE75CDDEBF618C8FF = function (effectNameHash) {
  return _in(0xe75cddeb, 0xf618c8ff, _ch(effectNameHash), _r);
};

/**
 * _0xEB48CE48EEC41FD4
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xEB48CE48EEC41FD4 = function (p0) {
  return _in(0xeb48ce48, 0xeec41fd4, p0);
};

/**
 * _0xEC3D8C228FE553D7
 *
 * @param {boolean} p0
 * @return {boolean}
 */
global.N_0xEC3D8C228FE553D7 = function (p0) {
  return _in(0xec3d8c22, 0x8fe553d7, p0, _r);
};

/**
 * _0xEC3F7F24EEEB3BA3
 *

 * @return {void}
 */
global.N_0xEC3F7F24EEEB3BA3 = function () {
  return _in(0xec3f7f24, 0xeeeb3ba3);
};

/**
 * _0xF2F543D48F319A3A
 *

 * @return {void}
 */
global.N_0xF2F543D48F319A3A = function () {
  return _in(0xf2f543d4, 0x8f319a3a);
};

/**
 * _0xF5793BB386E1FF9C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xF5793BB386E1FF9C = function (p0) {
  return _in(0xf5793bb3, 0x86e1ff9c, p0);
};

/**
 * _0xFB680A9B33D0EDBE
 * _DISABLE_*
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0xFB680A9B33D0EDBE = function (p0) {
  return _in(0xfb680a9b, 0x33d0edbe, p0);
};

/**
 * _0xFBF161FCFEC8589E
 * ANIMPOSTFX_*
 *
 * @param {string | number} effectName
 * @param {number} p1
 * @param {boolean} p2
 * @return {[boolean, boolean]}
 */
global.N_0xFBF161FCFEC8589E = function (effectName, p1, p2) {
  return _in(0xfbf161fc, 0xfec8589e, _ts(effectName), p1, p2, /* actually bool */ _i, _r);
};

/**
 * _0xFC9B53C072F418E0
 *

 * @return {any}
 */
global.N_0xFC9B53C072F418E0 = function () {
  return _in(0xfc9b53c0, 0x72f418e0, _r);
};

/**
 * _0xFD05B1DDE83749FA
 * R* Script spd_agnesdow1: p0 = SPD_AGNES_DOWD_01
 *
 * @param {string | number} p0
 * @return {boolean}
 */
global.N_0xFD05B1DDE83749FA = function (p0) {
  return _in(0xfd05b1dd, 0xe83749fa, _ts(p0), _r);
};

/**
 * _0xFF584F097C17FA8F
 * Returns whether the 'killFX' setting is enabled.
 * 
 * ANIMPOSTFX_*
 *

 * @return {boolean}
 */
global.N_0xFF584F097C17FA8F = function () {
  return _in(0xff584f09, 0x7c17fa8f, _r);
};

/**
 * _0xFF8018C778349234
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xFF8018C778349234 = function (p0) {
  return _in(0xff8018c7, 0x78349234, p0);
};

/**
 * _ADD_BLOOD_POOL
 * https://i.imgur.com/ULQU9US.jpg
 * More rounded and small puddle
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} unused
 * @return {void}
 */
global.AddBloodPool = function (x, y, z, unused) {
  return _in(0xfa2ecc78, 0xa6014d4f, _fv(x), _fv(y), _fv(z), unused);
};

/**
 * _ADD_BLOOD_POOLS_FOR_PED
 * Creates blood pools for the given ped in some interval for a few seconds.
 *
 * @param {number} ped
 * @return {void}
 */
global.AddBloodPoolsForPed = function (ped) {
  return _in(0xdfce8ce9, 0xf3ebe93f, ped);
};

/**
 * _ADD_BLOOD_POOLS_FOR_PED_WITH_PARAMS
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} size
 * @param {number} p3
 * @return {void}
 */
global.AddBloodPoolsForPedWithParams = function (ped, p1, size, p3) {
  return _in(0xc349ee1e, 0x6efa494b, ped, _fv(p1), _fv(size), _fv(p3));
};

/**
 * _ADD_BLOOD_POOL_2
 * https://i.imgur.com/rPITUCV.jpg
 * More customizable and more like quadrants
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @param {number} size
 * @param {number} p5
 * @param {boolean} permanent
 * @param {number} p7
 * @param {boolean} p8
 * @return {void}
 */
global.AddBloodPool_2 = function (x, y, z, p3, size, p5, permanent, p7, p8) {
  return _in(0xf7082986, 0x75abdc6a, _fv(x), _fv(y), _fv(z), _fv(p3), _fv(size), _fv(p5), permanent, _fv(p7), p8);
};

/**
 * _ADD_BLOOD_TRAIL_POINT
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.AddBloodTrailPoint = function (x, y, z) {
  return _in(0xdd9dc1ab, 0x63d513ce, _fv(x), _fv(y), _fv(z));
};

/**
 * _ADD_BLOOD_TRAIL_SPLAT
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.AddBloodTrailSplat = function (x, y, z) {
  return _in(0xf5e45cb1, 0xcf965d2d, _fv(x), _fv(y), _fv(z));
};

/**
 * _ADD_ENTITY_TO_ENTITY_MASK
 *
 * @param {number} entity
 * @param {number} mask
 * @return {void}
 */
global.AddEntityToEntityMask = function (entity, mask) {
  return _in(0xc6f81fcd, 0x15350323, entity, mask);
};

/**
 * _ADD_ENTITY_TO_ENTITY_MASK_WITH_INTENSITY
 *
 * @param {number} entity
 * @param {number} mask
 * @param {number} intensity
 * @return {void}
 */
global.AddEntityToEntityMaskWithIntensity = function (entity, mask, intensity) {
  return _in(0x958debd9, 0x353c0935, entity, mask, _fv(intensity));
};

/**
 * _ADD_VEG_MODIFIER_ZONE
 * Adds Vegetation Blocking Zone, Added Snow Flattening veg mod Zone
 * Returns veg modifier handle
 *
 * @param {number} volume
 * @param {number} p1
 * @param {number} flags
 * @param {number} p3
 * @return {number}
 */
global.AddVegModifierZone = function (volume, p1, flags, p3) {
  return _in(0xbd332428, 0x1e8b9933, volume, p1, flags, p3, _r, _ri);
};

/**
 * _ANIMPOSTFX_CLEAR_EFFECT
 *
 * @param {string | number} effectName
 * @return {void}
 */
global.AnimpostfxClearEffect = function (effectName) {
  return _in(0xc5cb91d6, 0x5852ed7e, _ts(effectName));
};

/**
 * _ANIMPOSTFX_GET_STACKHASH
 * Known effects: MP_Trans_SceneToPhoto
 * MP_Trans_WinLose
 * SpectateFilter
 * MP_CharacterCreatorPhoto
 * MP_Trans_PhotoToScene
 * InterrogationHit
 *
 * @param {string | number} effectName
 * @return {number}
 */
global.AnimpostfxGetStackhash = function (effectName) {
  return _in(0x842ccc94, 0x91ffcd9b, _ts(effectName), _r, _ri);
};

/**
 * _ANIMPOSTFX_HAS_LOADED
 *
 * @param {string | number} effectName
 * @return {boolean}
 */
global.AnimpostfxHasLoaded = function (effectName) {
  return _in(0xbf2dd155, 0xb2adcd0a, _ts(effectName), _r);
};

/**
 * _ANIMPOSTFX_IS_STACKHASH_PLAYING
 *
 * @param {number} effectNameHash
 * @return {boolean}
 */
global.AnimpostfxIsStackhashPlaying = function (effectNameHash) {
  return _in(0xeef83a75, 0x9ae06a27, _ch(effectNameHash), _r);
};

/**
 * _ANIMPOSTFX_IS_TAG_PLAYING
 *
 * @param {string | number} effectName
 * @return {boolean}
 */
global.AnimpostfxIsTagPlaying = function (effectName) {
  return _in(0x2d4f9c85, 0x2ce8a253, _ts(effectName), _r);
};

/**
 * _ANIMPOSTFX_PLAY_TAG
 *
 * @param {number} effectNameHash
 * @return {void}
 */
global.AnimpostfxPlayTag = function (effectNameHash) {
  return _in(0x9b8d5d4c, 0xb8af58b3, _ch(effectNameHash));
};

/**
 * _ANIMPOSTFX_PLAY_TIMED
 *
 * @param {string | number} effectName
 * @param {number} duration
 * @return {void}
 */
global.AnimpostfxPlayTimed = function (effectName, duration) {
  return _in(0x3a9a281f, 0xf71249e9, _ts(effectName), duration);
};

/**
 * _ANIMPOSTFX_PRELOAD_POSTFX
 *
 * @param {string | number} effectName
 * @return {void}
 */
global.AnimpostfxPreloadPostfx = function (effectName) {
  return _in(0x5199405e, 0xabfbd7f0, _ts(effectName));
};

/**
 * _ANIMPOSTFX_PRELOAD_POSTFX_BY_STACKHASH
 *
 * @param {number} effectNameHash
 * @return {void}
 */
global.AnimpostfxPreloadPostfxByStackhash = function (effectNameHash) {
  return _in(0xf3e03932, 0x2bfbd4d8, _ch(effectNameHash));
};

/**
 * _ANIMPOSTFX_SET_POSTFX_COLOR
 *
 * @param {string | number} effectName
 * @param {number} p1
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 * @return {void}
 */
global.AnimpostfxSetPostfxColor = function (effectName, p1, red, green, blue, alpha) {
  return _in(0x63011d0c, 0x7c6519e0, _ts(effectName), p1, red, green, blue, alpha);
};

/**
 * _ANIMPOSTFX_SET_POTENCY
 * Health Core Effect Filter Potency: p1 = 1
 * Stamina Core Effect Filter Potency: p1 = 2
 * Multiple Core Effect Filter Potency: p1 = 3
 *
 * @param {string | number} effectName
 * @param {number} p1
 * @param {number} potency
 * @return {void}
 */
global.AnimpostfxSetPotency = function (effectName, p1, potency) {
  return _in(0xf972f0ab, 0x16dc5260, _ts(effectName), p1, _fv(potency));
};

/**
 * _ANIMPOSTFX_SET_STRENGTH
 * must be called after ANIMPOSTFX_PLAY, strength 0.0f - 1.0f
 *
 * @param {string | number} effectName
 * @param {number} strength
 * @return {void}
 */
global.AnimpostfxSetStrength = function (effectName, strength) {
  return _in(0xcab4dd2d, 0x5b2b7246, _ts(effectName), _fv(strength));
};

/**
 * _ANIMPOSTFX_SET_TO_UNLOAD
 *
 * @param {string | number} effectName
 * @return {void}
 */
global.AnimpostfxSetToUnload = function (effectName) {
  return _in(0x37d7bdba, 0x89f13959, _ts(effectName));
};

/**
 * _ANIMPOSTFX_STOP_STACKHASH_POSTFX
 *
 * @param {number} effectNameHash
 * @return {void}
 */
global.AnimpostfxStopStackhashPostfx = function (effectNameHash) {
  return _in(0xeda5cbec, 0xf56e1386, _ch(effectNameHash));
};

/**
 * _ANIMPOSTFX_STOP_TAG
 *
 * @param {string | number} effectName
 * @return {void}
 */
global.AnimpostfxStopTag = function (effectName) {
  return _in(0xad74c22a, 0x541ab987, _ts(effectName));
};

/**
 * _BLOCK_PICKUP_OBJECT_LIGHT
 *
 * @param {number} pickupObject
 * @param {boolean} toggle
 * @return {void}
 */
global.BlockPickupObjectLight = function (pickupObject, toggle) {
  return _in(0x50c14328, 0x119e1dd1, pickupObject, toggle);
};

/**
 * _BLOOD_TRAIL_FOR_WAYPOINT
 * p1: 0.3f in R* Scripts
 *
 * @param {string | number} waypointRecording
 * @param {number} p1
 * @return {void}
 */
global.BloodTrailForWaypoint = function (waypointRecording, p1) {
  return _in(0xb9c92616, 0x929cc25d, _ts(waypointRecording), _fv(p1));
};

/**
 * _CREATE_SWATCH_TEXTURE_DICT
 *
 * @param {number} slots
 * @return {boolean}
 */
global.CreateSwatchTextureDict = function (slots) {
  return _in(0x3d084d55, 0x68fb4028, slots, _r);
};

/**
 * _DESTROY_SWATCH_TEXTURE_DICT
 *

 * @return {void}
 */
global.DestroySwatchTextureDict = function () {
  return _in(0xdad7fb84, 0x02651654);
};

/**
 * _DISABLE_FAR_ARTIFICIAL_LIGHTS
 * Only used in guama1 R* Script
 * Disables lod/distant lights when BOOL is set to true
 *
 * @param {boolean} disable
 * @return {void}
 */
global.DisableFarArtificialLights = function (disable) {
  return _in(0xcd284e2f, 0x6ac27ee9, disable);
};

/**
 * _DISABLE_STATIC_VEG_MODIFIER
 *
 * @param {number} p0
 * @return {void}
 */
global.DisableStaticVegModifier = function (p0) {
  return _in(0xdd0bc0ed, 0xcb2162f6, _ch(p0));
};

/**
 * _DOES_CHECKPOINT_HAVE_FX
 *
 * @param {number} checkpoint
 * @return {boolean}
 */
global.DoesCheckpointHaveFx = function (checkpoint) {
  return _in(0x4c11ccac, 0xb7c02b6e, checkpoint, _r);
};

/**
 * _DRAW_MARKER
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/markers/marker_types.lua
 *
 * @param {number} type
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} dirX
 * @param {number} dirY
 * @param {number} dirZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 * @param {boolean} bobUpAndDown
 * @param {boolean} faceCamera
 * @param {number} p19
 * @param {boolean} rotate
 * @param {string | number} textureDict
 * @param {string | number} textureName
 * @param {boolean} drawOnEnts
 * @return {void}
 */
global.DrawMarker = function (type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts) {
  return _in(0x2a32faa5, 0x7b937173, _ch(type), _fv(posX), _fv(posY), _fv(posZ), _fv(dirX), _fv(dirY), _fv(dirZ), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ), red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, _ts(textureDict), _ts(textureName), drawOnEnts);
};

/**
 * _ENABLE_STATIC_VEG_MODIFIER
 *
 * @param {number} p0
 * @return {void}
 */
global.EnableStaticVegModifier = function (p0) {
  return _in(0xdfea23ec, 0x90113657, _ch(p0));
};

/**
 * _GENERATE_SWATCH_TEXTURE
 * Example:
 * local hash = GetHashKey("CLOTHING_ITEM_M_EYES_001_TINT_001")
 * _GENERATE_SWATCH_TEXTURE(0, hash, 0, true)
 * metapedType: see 0xEC9A1261BF0CE510
 *
 * @param {number} slotId
 * @param {number} componentHash
 * @param {number} metapedType
 * @param {boolean} p3
 * @return {void}
 */
global.GenerateSwatchTexture = function (slotId, componentHash, metapedType, p3) {
  return _in(0x16092125, 0x5327c591, slotId, _ch(componentHash), metapedType, p3);
};

/**
 * _GENERATE_SWATCH_TEXTURE_DIRECTLY
 * Example: https://pastebin.com/tTgpER9A
 *
 * @param {number} slot
 * @param {any} p1
 * @return {void}
 */
global.GenerateSwatchTextureDirectly = function (slot, p1) {
  return _in(0x646ed1a1, 0xd28487df, slot, p1);
};

/**
 * _GET_CURRENT_NUMBER_OF_LOCAL_PHOTOS
 *

 * @return {number}
 */
global.GetCurrentNumberOfLocalPhotos = function () {
  return _in(0x78c56b8a, 0x7b1d000c, _r, _ri);
};

/**
 * _GET_ENTITY_MASK_LAYERS
 *
 * @param {number} entity
 * @return {[boolean, number, number, number, number]}
 */
global.GetEntityMaskLayers = function (entity) {
  return _in(0xe8a8378b, 0xf651079c, entity, _f, _f, _f, _f, _r);
};

/**
 * _GET_MAX_NUMBER_OF_LOCAL_PHOTOS
 * Always returns 200.
 *

 * @return {number}
 */
global.GetMaxNumberOfLocalPhotos = function () {
  return _in(0x8e587fcd, 0x30e05592, _r, _ri);
};

/**
 * _GET_MODIFIED_VISIBILITY_DISTANCE
 * _GET_C* - _GET_E*
 *

 * @return {number}
 */
global.GetModifiedVisibilityDistance = function () {
  return _in(0x25ca89b2, 0xa39dcc69, _r, _rf);
};

/**
 * _GET_PHOTO_MODE_CONTRAST
 *

 * @return {number}
 */
global.GetPhotoModeContrast = function () {
  return _in(0x98f41549, 0x89b81ec6, _r, _rf);
};

/**
 * _GET_PHOTO_MODE_EXPOSURE
 *

 * @return {number}
 */
global.GetPhotoModeExposure = function () {
  return _in(0x06c0d8bb, 0x6b04a709, _r, _rf);
};

/**
 * _GET_PROXY_INTERIOR_INDEX
 * Returns proxyInteriorIndex
 *
 * @param {number} interiorId
 * @return {number}
 */
global.GetProxyInteriorIndex = function (interiorId) {
  return _in(0x5d1c5d8e, 0x62e8ee1c, interiorId, _r, _ri);
};

/**
 * _IS_PROXY_INTERIOR_INDEX_ARTIFICIAL_LIGHTS_ENABLED
 *
 * @param {number} proxyInteriorIndex
 * @return {boolean}
 */
global.IsProxyInteriorIndexArtificialLightsEnabled = function (proxyInteriorIndex) {
  return _in(0x113857d6, 0x6a9cabe6, proxyInteriorIndex, _r);
};

/**
 * _IS_STATIC_VEG_MODIFIER_ENABLED
 *
 * @param {number} p0
 * @return {boolean}
 */
global.IsStaticVegModifierEnabled = function (p0) {
  return _in(0xde9bad32, 0x92aa6d5e, _ch(p0), _r);
};

/**
 * _IS_TEXTURE_IN_DICT
 *
 * @param {number} txdHash
 * @param {number} dict
 * @return {boolean}
 */
global.IsTextureInDict = function (txdHash, dict) {
  return _in(0xa2a51869, 0xbded733b, _ch(txdHash), _ch(dict), _r);
};

/**
 * _IS_TRACKED_POINT_VALID
 *
 * @param {number} point
 * @return {boolean}
 */
global.IsTrackedPointValid = function (point) {
  return _in(0xf2fddcc8, 0xc6bae1b3, point, _r);
};

/**
 * _PEDSHOT_FINISH_CLEANUP_DATA
 *

 * @return {void}
 */
global.PedshotFinishCleanupData = function () {
  return _in(0xc2b8164c, 0x3be871a4);
};

/**
 * _PEDSHOT_GENERATE_PERSONA_PHOTO
 *
 * @param {string | number} texture
 * @param {number} ped
 * @param {number} playerSlot
 * @return {boolean}
 */
global.PedshotGeneratePersonaPhoto = function (texture, ped, playerSlot) {
  return _in(0xd9c24f53, 0x631f2372, _ts(texture), ped, playerSlot, _r);
};

/**
 * _PEDSHOT_INIT_CLEANUP_DATA
 *

 * @return {void}
 */
global.PedshotInitCleanupData = function () {
  return _in(0x55285f88, 0x5f662169);
};

/**
 * _PEDSHOT_PREVIOUS_PERSONA_PHOTO_DATA_CLEANUP
 *

 * @return {void}
 */
global.PedshotPreviousPersonaPhotoDataCleanup = function () {
  return _in(0x3e2fddbe, 0x435a8787);
};

/**
 * _PEDSHOT_SET_PERSONA_PHOTO_TYPE
 *
 * @param {number} personaPhotoLocalCacheType
 * @return {void}
 */
global.PedshotSetPersonaPhotoType = function (personaPhotoLocalCacheType) {
  return _in(0x196d3acb, 0xeba4a44b, personaPhotoLocalCacheType);
};

/**
 * _REMOVE_ENTITY_FROM_ENTITY_MASK
 *
 * @param {number} entity
 * @return {void}
 */
global.RemoveEntityFromEntityMask = function (entity) {
  return _in(0x56a786e8, 0x7ff53478, entity);
};

/**
 * _RESET_ENTITY_AURA
 * Used for script function RPG_GLOBAL_STATS__PRIVATE__DEACTIVATE_STAT_FLAG - Inspiration Aura unequip
 *

 * @return {void}
 */
global.ResetEntityAura = function () {
  return _in(0xaf4d239b, 0x8903fcbe);
};

/**
 * _SET_CLOUD_HEIGHT
 *
 * @param {number} height
 * @return {void}
 */
global.SetCloudHeight = function (height) {
  return _in(0xc332c913, 0x88f5580b, _fv(height));
};

/**
 * _SET_CLOUD_LAYER
 *
 * @param {number} x
 * @param {number} y
 * @param {number} p2
 * @return {void}
 */
global.SetCloudLayer = function (x, y, p2) {
  return _in(0xb8c984c0, 0xd47f4f07, _fv(x), _fv(y), p2);
};

/**
 * _SET_CLOUD_NOISE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.SetCloudNoise = function (x, y, z) {
  return _in(0xfe7966df, 0x01452f32, _fv(x), _fv(y), _fv(z));
};

/**
 * _SET_CLOUD_POSITION
 * Only used in finale2, smuggler2, winter4
 * _SET_CLOUD_A* - _SET_CLOUD_H*
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.SetCloudPosition = function (x, y, z) {
  return _in(0x10c1767b, 0x93257480, _fv(x), _fv(y), _fv(z));
};

/**
 * _SET_DISTRICT_PHOTO_TAKEN_STAT
 *
 * @param {string | number} p0
 * @return {void}
 */
global.SetDistrictPhotoTakenStat = function (p0) {
  return _in(0x9937facb, 0xbf267244, _ts(p0));
};

/**
 * _SET_ENTITY_AURA
 * Used for script function RPG_GLOBAL_STATS__PRIVATE__ACTIVATE_STAT_FLAG - Quite and Inspiration Aura equip
 * Params: 0f, 2f, 2f
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.SetEntityAura = function (p0, p1, p2) {
  return _in(0x249cd6b7, 0x285536f2, _fv(p0), _fv(p1), _fv(p2));
};

/**
 * _SET_ENTITY_MASK_LAYERS
 *
 * @param {number} entity
 * @return {[number, number, number, number]}
 */
global.SetEntityMaskLayers = function (entity) {
  return _in(0xe9201261, 0x1461a42a, entity, _f, _f, _f, _f);
};

/**
 * _SET_ENTITY_RENDER_GUARMA_SHIP
 * Only used in guama1 R* SP Script while spawning the ship
 * _SET_ENTITY_QUATERNION_* - SET_ENTITY_RENDER_*
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityRenderGuarmaShip = function (vehicle, toggle) {
  return _in(0xc38b4952, 0xb728397a, vehicle, toggle);
};

/**
 * _SET_LIGHTS_COLOR_FOR_ENTITY
 * https://gfycat.com/meagerfaireyra
 *
 * @param {number} entity
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @return {void}
 */
global.SetLightsColorForEntity = function (entity, red, green, blue) {
  return _in(0x6ec2a679, 0x62296f49, entity, red, green, blue);
};

/**
 * _SET_LIGHTS_INTENSITY_FOR_ENTITY
 *
 * @param {number} entity
 * @param {number} intensity
 * @return {void}
 */
global.SetLightsIntensityForEntity = function (entity, intensity) {
  return _in(0x07c0f87a, 0xac57f2e4, entity, _fv(intensity));
};

/**
 * _SET_LIGHTS_TYPE_FOR_ENTITY
 * type must be less than or equal to 20
 *
 * @param {number} entity
 * @param {number} type
 * @return {void}
 */
global.SetLightsTypeForEntity = function (entity, type) {
  return _in(0xab72c671, 0x63dc4db4, entity, type);
};

/**
 * _SET_PARTICLE_FX_LOOPED_UPDATE_DISTANT_SMOKE
 * _SET_PARTICLE_FX_LOOPED_FA* - _SET_PARTICLE_FX_LOOPED_OF*
 *
 * @param {number} ptfxHandle
 * @param {number} scalar
 * @return {void}
 */
global.SetParticleFxLoopedUpdateDistantSmoke = function (ptfxHandle, scalar) {
  return _in(0x9ddc222d, 0x85d5af2a, ptfxHandle, _fv(scalar));
};

/**
 * _SET_PARTICLE_FX_NON_LOOPED_EMITTER_SCALE
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.SetParticleFxNonLoopedEmitterScale = function (p0, p1, p2) {
  return _in(0x56c392c2, 0xbd78b024, _fv(p0), _fv(p1), _fv(p2));
};

/**
 * _SET_PEARLESCENT_FX_ENABLED
 * Enables/disables a kind of 'shiny' effect on metals.
 *
 * @param {number} object
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPearlescentFxEnabled = function (object, toggle) {
  return _in(0x72e30372, 0xe7cc4415, object, toggle);
};

/**
 * _SET_PHOTO_IN_PHOTOMODE_STAT
 *
 * @param {boolean} p0
 * @return {void}
 */
global.SetPhotoInPhotomodeStat = function (p0) {
  return _in(0xfa917369, 0x33ab3d93, p0);
};

/**
 * _SET_PHOTO_OVERLAY_EFFECT_STAT
 *
 * @param {number} p0
 * @return {void}
 */
global.SetPhotoOverlayEffectStat = function (p0) {
  return _in(0x8b329627, 0x8328b5eb, p0);
};

/**
 * _SET_PHOTO_SELF_STAT
 *
 * @param {boolean} p0
 * @return {void}
 */
global.SetPhotoSelfStat = function (p0) {
  return _in(0x2705d18c, 0x11b61046, p0);
};

/**
 * _SET_PHOTO_STUDIO_STAT
 *
 * @param {number} p0
 * @return {void}
 */
global.SetPhotoStudioStat = function (p0) {
  return _in(0x8e6aff35, 0x3c09652e, p0);
};

/**
 * _SET_PLAYER_APPEAR_IN_PHOTO
 *
 * @param {number} player
 * @return {void}
 */
global.SetPlayerAppearInPhoto = function (player) {
  return _in(0x75d56860, 0x7909333e, player);
};

/**
 * _SET_POSSE_ID_FOR_PHOTO
 *
 * @param {any} posseId
 * @return {void}
 */
global.SetPosseIdForPhoto = function (posseId) {
  return _in(0x564837d4, 0xa9ede296, posseId);
};

/**
 * _SET_PROXY_INTERIOR_INDEX_ARTIFICIAL_LIGHTS_STATE
 * state: false disables artificial interior light sources for specific proxyInteriorIndex
 *
 * @param {number} proxyInteriorIndex
 * @param {boolean} state
 * @return {void}
 */
global.SetProxyInteriorIndexArtificialLightsState = function (proxyInteriorIndex, state) {
  return _in(0xbfcb1789, 0x5bb99e4e, proxyInteriorIndex, state);
};

/**
 * _SET_REGION_PHOTO_TAKEN_STAT
 *
 * @param {string | number} p0
 * @return {void}
 */
global.SetRegionPhotoTakenStat = function (p0) {
  return _in(0xd1031b83, 0xac093bc7, _ts(p0));
};

/**
 * _SET_SNIPER_GLINTS_ENABLED
 *
 * @param {boolean} enabled
 * @return {void}
 */
global.SetSniperGlintsEnabled = function (enabled) {
  return _in(0x6e8eb45a, 0x4f4460eb, enabled);
};

/**
 * _SET_SNOW_COVERAGE_TYPE
 * enum class eSnowCoverageType
 * {
 *   Primary,
 *   Secondary,
 *   Xmas,
 *   XmasSecondary // since b1232
 * };
 *
 * @param {number} type
 * @return {void}
 */
global.SetSnowCoverageType = function (type) {
  return _in(0xf02a9c33, 0x0bbfc5c7, type);
};

/**
 * _SET_STATE_PHOTO_TAKEN_STAT
 *
 * @param {string | number} p0
 * @return {void}
 */
global.SetStatePhotoTakenStat = function (p0) {
  return _in(0x8952e857, 0x696b8a79, _ts(p0));
};

/**
 * _START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE_2
 *
 * @param {string | number} effectName
 * @param {number} ped
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} boneIndex
 * @param {number} scale
 * @param {boolean} axisX
 * @param {boolean} axisY
 * @param {boolean} axisZ
 * @return {boolean}
 */
global.StartParticleFxNonLoopedOnPedBone_2 = function (effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ) {
  return _in(0xc695870b, 0x8a149b96, _ts(effectName), ped, _fv(offsetX), _fv(offsetY), _fv(offsetZ), _fv(rotX), _fv(rotY), _fv(rotZ), boneIndex, _fv(scale), axisX, axisY, axisZ, _r);
};

/**
 * ALLOW_PAUSE_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME
 * Old name: _ALLOW_PAUSE_MENU_WHEN_DEAD_THIS_FRAME
 *

 * @return {void}
 */
global.AllowPauseWhenNotInStateOfPlayThisFrame = function () {
  return _in(0x30996422, 0xdf1ee561);
};

/**
 * BUSYSPINNER_IS_ON
 *

 * @return {boolean}
 */
global.BusyspinnerIsOn = function () {
  return _in(0x823bf7b1, 0xdf613a21, _r);
};

/**
 * BUSYSPINNER_OFF
 * Removes the loading prompt at the bottom right of the screen.
 *

 * @return {void}
 */
global.BusyspinnerOff = function () {
  return _in(0x58f441b9, 0x0ea84d06);
};

/**
 * CLEAR_ALL_HELP_MESSAGES
 *

 * @return {void}
 */
global.ClearAllHelpMessages = function () {
  return _in(0x916ed832, 0x1f087059);
};

/**
 * CREATE_FAKE_MP_GAMER_TAG
 *
 * @param {number} ped
 * @param {string | number} username
 * @param {boolean} pointedClanTag
 * @param {boolean} isRockstarClan
 * @param {string | number} clanTag
 * @param {number} clanFlag
 * @return {number}
 */
global.CreateFakeMpGamerTag = function (ped, username, pointedClanTag, isRockstarClan, clanTag, clanFlag) {
  return _in(0x53cb4b50, 0x2e1c57ea, ped, _ts(username), pointedClanTag, isRockstarClan, _ts(clanTag), clanFlag, _r, _ri);
};

/**
 * DISABLE_FRONTEND_THIS_FRAME
 *

 * @return {void}
 */
global.DisableFrontendThisFrame = function () {
  return _in(0x56ce42a5, 0x28156a67);
};

/**
 * DISPLAY_HUD
 * If Hud should be displayed
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.DisplayHud = function (toggle) {
  return _in(0xd63fe3af, 0x9fb3d53f, toggle);
};

/**
 * DOES_TEXT_LABEL_EXIST
 * Checks if the passed gxt name exists in the game files.
 *
 * @param {string | number} label
 * @return {boolean}
 */
global.DoesTextLabelExist = function (label) {
  return _in(0x73c258c6, 0x8d6f55b6, _ts(label), _r);
};

/**
 * GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME
 * Note: you must use VAR_STRING. Byte code very similar to TEXT_COMMAND_DISPLAY_TEXT in V
 * Old name: _GET_TEXT_SUBSTRING
 *
 * @param {string | number} text
 * @param {number} position
 * @param {number} length
 * @return {string | number}
 */
global.GetCharacterFromAudioConversationFilename = function (text, position, length) {
  return _in(0x9d7e12ec, 0x6a1ee4e5, _ts(text), position, length, _r, _s);
};

/**
 * GET_FILENAME_FOR_AUDIO_CONVERSATION
 * Gets a string literal from a label name.
 * 
 * Old name: _GET_LABEL_TEXT
 *
 * @param {string | number} labelName
 * @return {string | number}
 */
global.GetFilenameForAudioConversation = function (labelName) {
  return _in(0xcfedccad, 0x3c5ba90d, _ts(labelName), _r, _s);
};

/**
 * GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION
 *
 * @param {number} worldX
 * @param {number} worldY
 * @param {number} worldZ
 * @return {[number, number, number]}
 */
global.GetHudScreenPositionFromWorldPosition = function (worldX, worldY, worldZ) {
  return _in(0xb39c8162, 0x8ef10b42, _fv(worldX), _fv(worldY), _fv(worldZ), _f, _f, _r, _ri);
};

/**
 * GET_LENGTH_OF_LITERAL_STRING
 * Returns the length of the string passed (much like strlen).
 *
 * @param {string | number} string
 * @return {number}
 */
global.GetLengthOfLiteralString = function (string) {
  return _in(0x481fbf58, 0x8b0b76db, _ts(string), _r, _ri);
};

/**
 * GET_LENGTH_OF_LITERAL_STRING_IN_BYTES
 *
 * @param {string | number} string
 * @return {number}
 */
global.GetLengthOfLiteralStringInBytes = function (string) {
  return _in(0xdc5ad6b7, 0xab8184f5, _ts(string), _r, _ri);
};

/**
 * GET_NAMED_RENDERTARGET_RENDER_ID
 *
 * @param {string | number} name
 * @return {number}
 */
global.GetNamedRendertargetRenderId = function (name) {
  return _in(0xb6762a85, 0xee29aa60, _ts(name), _r, _ri);
};

/**
 * GET_STRING_FROM_HASH_KEY
 * Returns the label text given the hash.
 * 
 * Old name: _GET_LABEL_TEXT_BY_HASH
 *
 * @param {number} labelHash
 * @return {string | number}
 */
global.GetStringFromHashKey = function (labelHash) {
  return _in(0xbd5dd5ea, 0xe2b6ce14, _ch(labelHash), _r, _s);
};

/**
 * HIDE_HUD_AND_RADAR_THIS_FRAME
 *

 * @return {void}
 */
global.HideHudAndRadarThisFrame = function () {
  return _in(0x36cdd816, 0x27a6fcd2);
};

/**
 * HIDE_LOADING_ON_FADE_THIS_FRAME
 *

 * @return {void}
 */
global.HideLoadingOnFadeThisFrame = function () {
  return _in(0xea600aab, 0xaf4b9084);
};

/**
 * IS_HUD_HIDDEN
 *

 * @return {boolean}
 */
global.IsHudHidden = function () {
  return _in(0x71b72b47, 0x8f8189dc, _r);
};

/**
 * IS_MP_GAMER_TAG_ACTIVE
 *
 * @param {number} gamerTagId
 * @return {boolean}
 */
global.IsMpGamerTagActive = function (gamerTagId) {
  return _in(0x6e1c31e1, 0x4c7a5f97, gamerTagId, _r);
};

/**
 * IS_NAMED_RENDERTARGET_LINKED
 *
 * @param {number} modelHash
 * @return {boolean}
 */
global.IsNamedRendertargetLinked = function (modelHash) {
  return _in(0x70703283, 0x5ff09ae7, _ch(modelHash), _r);
};

/**
 * IS_NAMED_RENDERTARGET_REGISTERED
 *
 * @param {string | number} name
 * @return {boolean}
 */
global.IsNamedRendertargetRegistered = function (name) {
  return _in(0x3ee32f79, 0x64c40fe6, _ts(name), _r);
};

/**
 * IS_PAUSE_MENU_ACTIVE
 * Returns true when either Pause Menu, a Frontend Menu, Online Policies menu or Social Club menu is active.
 *

 * @return {boolean}
 */
global.IsPauseMenuActive = function () {
  return _in(0x535384d6, 0x067ba42e, _r);
};

/**
 * IS_RADAR_HIDDEN
 *

 * @return {boolean}
 */
global.IsRadarHidden = function () {
  return _in(0x1b82fd5f, 0xfa4d666e, _r);
};

/**
 * IS_RADAR_HIDDEN_BY_SCRIPT
 *

 * @return {boolean}
 */
global.IsRadarHiddenByScript = function () {
  return _in(0x66f35dd9, 0xd2b58579, _r);
};

/**
 * IS_RADAR_PREFERENCE_SWITCHED_ON
 *

 * @return {boolean}
 */
global.IsRadarPreferenceSwitchedOn = function () {
  return _in(0x81e47f0e, 0xe1f2b21e, _r);
};

/**
 * IS_SUBTITLE_PREFERENCE_SWITCHED_ON
 *

 * @return {boolean}
 */
global.IsSubtitlePreferenceSwitchedOn = function () {
  return _in(0x7c4ac957, 0x3587f2df, _r);
};

/**
 * LINK_NAMED_RENDERTARGET
 *
 * @param {number} modelHash
 * @return {void}
 */
global.LinkNamedRendertarget = function (modelHash) {
  return _in(0x2f506b85, 0x56242ddb, _ch(modelHash));
};

/**
 * REGISTER_NAMED_RENDERTARGET
 *
 * @param {string | number} name
 * @param {boolean} p1
 * @return {boolean}
 */
global.RegisterNamedRendertarget = function (name, p1) {
  return _in(0x98af2bb6, 0xf62bd588, _ts(name), p1, _r);
};

/**
 * RELEASE_NAMED_RENDERTARGET
 *
 * @param {string | number} name
 * @return {boolean}
 */
global.ReleaseNamedRendertarget = function (name) {
  return _in(0x0e692ee6, 0x1761361f, _ts(name), _r);
};

/**
 * REMOVE_MP_GAMER_TAG
 *
 * @param {number} gamerTagId
 * @return {void}
 */
global.RemoveMpGamerTag = function (gamerTagId) {
  return _in(0x839bfd7d, 0x7e49fe09, gamerTagId);
};

/**
 * SET_FRONTEND_ACTIVE
 *
 * @param {boolean} active
 * @return {void}
 */
global.SetFrontendActive = function (active) {
  return _in(0xce47c21c, 0x0687ebc2, active);
};

/**
 * SET_MISSION_NAME
 *
 * @param {boolean} p0
 * @param {string | number} name
 * @return {void}
 */
global.SetMissionName = function (p0, name) {
  return _in(0x402669a4, 0xbdaa72da, p0, _ts(name));
};

/**
 * SET_MISSION_NAME_FOR_UGC_MISSION
 *
 * @param {boolean} p0
 * @param {string | number} name
 * @return {void}
 */
global.SetMissionNameForUgcMission = function (p0, name) {
  return _in(0xd98630ce, 0x73c61e98, p0, _ts(name));
};

/**
 * SET_MP_GAMER_TAG_BIG_TEXT
 *
 * @param {number} gamerTagId
 * @param {string | number} string
 * @return {void}
 */
global.SetMpGamerTagBigText = function (gamerTagId, string) {
  return _in(0xa0d7ce5f, 0x83259663, gamerTagId, _ts(string));
};

/**
 * SET_MP_GAMER_TAG_NAME
 *
 * @param {number} gamerTagId
 * @param {string | number} string
 * @return {void}
 */
global.SetMpGamerTagName = function (gamerTagId, string) {
  return _in(0xea6f4b8d, 0x4b4b5b3e, gamerTagId, _ts(string));
};

/**
 * SET_TEXT_RENDER_ID
 *
 * @param {number} renderId
 * @return {void}
 */
global.SetTextRenderId = function (renderId) {
  return _in(0xe550cde1, 0x28d56757, renderId);
};

/**
 * TEXT_BLOCK_IS_LOADED
 *
 * @param {string | number} textBlock
 * @return {boolean}
 */
global.TextBlockIsLoaded = function (textBlock) {
  return _in(0xd0976cc3, 0x4002db57, _ts(textBlock), _r);
};

/**
 * TEXT_BLOCK_REQUEST
 *
 * @param {string | number} textBlock
 * @return {void}
 */
global.TextBlockRequest = function (textBlock) {
  return _in(0xf6609001, 0x3de648d5, _ts(textBlock));
};

/**
 * UI_GET_SCENE_UIOBJECT
 *
 * @param {any} p0
 * @return {any}
 */
global.UiGetSceneUiobject = function (p0) {
  return _in(0xbe1067cd, 0x1c9570f6, p0, _r);
};

/**
 * UI_MOVIEVIEW_SET_RENDER_TARGET
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.UiMovieviewSetRenderTarget = function (p0, p1) {
  return _in(0x51de09a2, 0x196bd951, p0, p1);
};

/**
 * UI_PROMPT_IS_CONTROL_ACTION_ACTIVE
 *
 * @param {number} controlAction
 * @return {boolean}
 */
global.UiPromptIsControlActionActive = function (controlAction) {
  return _in(0x1be19185, 0xb8afe299, _ch(controlAction), _r);
};

/**
 * UI_REQUEST_SCENE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.UiRequestScene = function (p0, p1) {
  return _in(0xb6857100, 0xf8fd433c, p0, p1, _r);
};

/**
 * _IS_NEAR_MOUNT
 * Not official native name
 * This native accepts 1 as parameter in the decompiles
 * returns the closest horse handle if within 2 3 meters of the player, if not close enough returns false
 * 
 * NOTE: if type is 0 returns PlayerPedId always?
 *
 * @param {number} p0
 * @return {any}
 */
global.IsNearMount = function (p0) {
  return _in(0x0501d52d, 0x24ea8934, p0, _r);
};

/**
 * _0x052D4AC0922AF91A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x052D4AC0922AF91A = function (p0, p1) {
  return _in(0x052d4ac0, 0x922af91a, p0, p1);
};

/**
 * _0x066725A9D52B3641
 *

 * @return {any}
 */
global.N_0x066725A9D52B3641 = function () {
  return _in(0x066725a9, 0xd52b3641, _r);
};

/**
 * _0x100157D6D7FE32CA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x100157D6D7FE32CA = function (p0, p1) {
  return _in(0x100157d6, 0xd7fe32ca, p0, p1, _r);
};

/**
 * _0x160825DADF1B04B3
 *

 * @return {void}
 */
global.N_0x160825DADF1B04B3 = function () {
  return _in(0x160825da, 0xdf1b04b3);
};

/**
 * _0x28AE29D909C8FDCE
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x28AE29D909C8FDCE = function (p0) {
  return _in(0x28ae29d9, 0x09c8fdce, p0, _r);
};

/**
 * _0x2F7BB105144ACF30
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.N_0x2F7BB105144ACF30 = function () {
  return _in(0x2f7bb105, 0x144acf30);
};

/**
 * _0x3FE4FB41EF7D2196
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x3FE4FB41EF7D2196 = function (p0) {
  return _in(0x3fe4fb41, 0xef7d2196, p0);
};

/**
 * _0x53CE46C01A089DA1
 *
 * @param {number} prompt
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x53CE46C01A089DA1 = function (prompt, p1) {
  return _in(0x53ce46c0, 0x1a089da1, prompt, p1);
};

/**
 * _0x5651516D947ABC53
 *

 * @return {void}
 */
global.N_0x5651516D947ABC53 = function () {
  return _in(0x5651516d, 0x947abc53);
};

/**
 * _0x7EC0D68233E391AC
 *
 * @param {number} p0
 * @return {number}
 */
global.N_0x7EC0D68233E391AC = function (p0) {
  return _in(0x7ec0d682, 0x33e391ac, p0, _r, _ri);
};

/**
 * _0x806862E5D266CF38
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x806862E5D266CF38 = function (p0, p1, p2) {
  return _in(0x806862e5, 0xd266cf38, p0, p1, p2, _r);
};

/**
 * _0x8A59D44189AF2BC5
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x8A59D44189AF2BC5 = function (p0, p1) {
  return _in(0x8a59d441, 0x89af2bc5, p0, p1);
};

/**
 * _0x8B55B324A9123F6B
 *
 * @param {number} groupId
 * @param {number} volume
 * @param {string | number} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {any}
 */
global.N_0x8B55B324A9123F6B = function (groupId, volume, p2, p3, p4, p5) {
  return _in(0x8b55b324, 0xa9123f6b, groupId, volume, _ts(p2), p3, p4, p5, _r);
};

/**
 * _0x958278B97C4AFFD8
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x958278B97C4AFFD8 = function (p0, p1) {
  return _in(0x958278b9, 0x7c4affd8, p0, p1);
};

/**
 * _0x9C409BBC492CB5B1
 *

 * @return {any}
 */
global.N_0x9C409BBC492CB5B1 = function () {
  return _in(0x9c409bbc, 0x492cb5b1, _r);
};

/**
 * _0x9D37EB5003E0F2CF
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x9D37EB5003E0F2CF = function (p0, p1) {
  return _in(0x9d37eb50, 0x03e0f2cf, p0, p1);
};

/**
 * _0xB0E8599243B3F568
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xB0E8599243B3F568 = function (p0) {
  return _in(0xb0e85992, 0x43b3f568, p0, _r);
};

/**
 * _0xBFFF81E12A745A5F
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.N_0xBFFF81E12A745A5F = function () {
  return _in(0xbfff81e1, 0x2a745a5f);
};

/**
 * _0xCE0D2F5586627CCE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0xCE0D2F5586627CCE = function (p0, p1, p2, p3, p4) {
  return _in(0xce0d2f55, 0x86627cce, p0, p1, p2, p3, p4);
};

/**
 * _0xD6BD313CFA41E57A
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xD6BD313CFA41E57A = function (p0) {
  return _in(0xd6bd313c, 0xfa41e57a, p0, _r);
};

/**
 * _0xF1E6979C0B779985
 *
 * @param {number} uiscene
 * @return {void}
 */
global.N_0xF1E6979C0B779985 = function (uiscene) {
  return _in(0xf1e6979c, 0x0b779985, uiscene);
};

/**
 * _BUSYSPINNER_SET_TEXT
 *
 * @param {string | number} text
 * @return {void}
 */
global.BusyspinnerSetText = function (text) {
  return _in(0x7f78cd75, 0xcc4539e4, _ts(text));
};

/**
 * _CREATE_MP_GAMER_TAG
 *
 * @param {number} player
 * @param {string | number} username
 * @param {boolean} pointedClanTag
 * @param {boolean} isRockstarClan
 * @param {string | number} clanTag
 * @param {number} clanFlag
 * @return {number}
 */
global.CreateMpGamerTag = function (player, username, pointedClanTag, isRockstarClan, clanTag, clanFlag) {
  return _in(0xd877af11, 0x2ad2b41b, player, _ts(username), pointedClanTag, isRockstarClan, _ts(clanTag), clanFlag, _r, _ri);
};

/**
 * _CREATE_MP_GAMER_TAG_ON_ENTITY
 *
 * @param {number} entity
 * @param {string | number} text
 * @return {number}
 */
global.CreateMpGamerTagOnEntity = function (entity, text) {
  return _in(0xe961bf23, 0xeab76b12, entity, _ts(text), _r, _ri);
};

/**
 * _DISABLE_HUD_CONTEXT
 * Old name: _DISPLAY_HUD_COMPONENT
 *
 * @param {number} component
 * @return {void}
 */
global.DisableHudContext = function (component) {
  return _in(0x8bc7c1f9, 0x29d07bf3, _ch(component));
};

/**
 * _DISABLE_REDUCED_MENU_TIME_SCALE
 * Disables reduced time scale while menus such as weapon wheel and satchel are open.
 *

 * @return {void}
 */
global.DisableReducedMenuTimeScale = function () {
  return _in(0xc5c7a2f6, 0x567fccbc);
};

/**
 * _DISPLAY_TEXT
 * nullsub, this native does nothing since build 1436, use _BG_DISPLAY_TEXT (0x16794E044C9EFB58) instead.
 *
 * @param {string | number} text
 * @param {number} xPos
 * @param {number} yPos
 * @return {void}
 */
global.DisplayText = function (text, xPos, yPos) {
  return _in(0xd79334a4, 0xbb99bad1, _ts(text), _fv(xPos), _fv(yPos));
};

/**
 * _DOES_TEXT_BLOCK_EXIST
 *
 * @param {string | number} textDatabase
 * @return {boolean}
 */
global.DoesTextBlockExist = function (textDatabase) {
  return _in(0x2c729f2b, 0x94cea911, _ts(textDatabase), _r);
};

/**
 * _ENABLE_HUD_CONTEXT
 * https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/hud_presets
 * Old name: _HIDE_HUD_COMPONENT
 *
 * @param {number} component
 * @return {void}
 */
global.EnableHudContext = function (component) {
  return _in(0x4cc5f2fc, 0x1332577f, _ch(component));
};

/**
 * _ENABLE_HUD_CONTEXT_THIS_FRAME
 *
 * @param {number} component
 * @return {void}
 */
global.EnableHudContextThisFrame = function (component) {
  return _in(0xc9caeaee, 0xc1256e54, _ch(component));
};

/**
 * _ENABLE_REDUCED_MENU_TIME_SCALE
 * Enables reduced time scale while menus such as weapon wheel and satchel are open.
 *

 * @return {void}
 */
global.EnableReducedMenuTimeScale = function () {
  return _in(0x26f6bbea, 0x2ce3e3dc);
};

/**
 * _GET_COLOR_FROM_NAME
 * colorNameHash: https://alloc8or.re/rdr3/doc/enums/eColor.txt
 *
 * @param {number} colorNameHash
 * @return {[number, number, number, number]}
 */
global.GetColorFromName = function (colorNameHash) {
  return _in(0xb981dd2d, 0xfaf9b1c9, _ch(colorNameHash), _i, _i, _i, _i);
};

/**
 * _GET_LABEL_TEXT_2
 *
 * @param {string | number} label
 * @return {string | number}
 */
global.GetLabelText_2 = function (label) {
  return _in(0x3429670f, 0x9b9ef2d3, _ts(label), _r, _s);
};

/**
 * _GET_TEXT_SUBSTRING_2
 * Similar to 0x9D7E12EC6A1EE4E5(GET_TEXT_SUBSTRING) but starts at the beginning of the string
 *
 * @param {string | number} text
 * @param {number} length
 * @return {string | number}
 */
global.GetTextSubstring_2 = function (text, length) {
  return _in(0xd8402b85, 0x8f4ddd88, _ts(text), length, _r, _s);
};

/**
 * _HIDE_HUD_THIS_FRAME
 *

 * @return {void}
 */
global.HideHudThisFrame = function () {
  return _in(0xbf4f34a8, 0x5ca2970d);
};

/**
 * _IS_MP_GAMER_TAG_ACTIVE_ON_ENTITY
 *
 * @param {number} gamerTagId
 * @param {number} entity
 * @return {boolean}
 */
global.IsMpGamerTagActiveOnEntity = function (gamerTagId, entity) {
  return _in(0x502e1591, 0xa504f843, gamerTagId, entity, _r);
};

/**
 * _JOURNAL_CAN_WRITE_ENTRY
 *
 * @param {any} p0
 * @return {any}
 */
global.JournalCanWriteEntry = function (p0) {
  return _in(0xcf782691, 0xd91f270e, p0, _r);
};

/**
 * _JOURNAL_CLEAR_ALL_PROGRESS
 *

 * @return {void}
 */
global.JournalClearAllProgress = function () {
  return _in(0xf402978d, 0xe6f88d6e);
};

/**
 * _JOURNAL_GET_ENTRY_AT_INDEX
 *
 * @param {any} p0
 * @return {any}
 */
global.JournalGetEntryAtIndex = function (p0) {
  return _in(0x3d16abd7, 0xa1fd8c96, p0, _r);
};

/**
 * _JOURNAL_GET_ENTRY_COUNT
 *

 * @return {any}
 */
global.JournalGetEntryCount = function () {
  return _in(0xe65b5de5, 0x3351be22, _r);
};

/**
 * _JOURNAL_GET_ENTRY_INFO
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.JournalGetEntryInfo = function (p0, p1) {
  return _in(0x5514c3e6, 0x0673530f, p0, p1, _r);
};

/**
 * _JOURNAL_GET_GRIME_AT_INDEX
 *
 * @param {any} p0
 * @return {any}
 */
global.JournalGetGrimeAtIndex = function (p0) {
  return _in(0xcb5945e1, 0xb855852f, p0, _r);
};

/**
 * _JOURNAL_GET_TEXTURE_WITH_LAYOUT
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.JournalGetTextureWithLayout = function (p0, p1, p2) {
  return _in(0x62cc549b, 0x3b8ea2aa, p0, p1, p2, _r);
};

/**
 * _JOURNAL_MARK_READ
 *
 * @param {any} p0
 * @return {void}
 */
global.JournalMarkRead = function (p0) {
  return _in(0xe4509bab, 0xe59bd24e, p0);
};

/**
 * _JOURNAL_WRITE_ENTRY
 *
 * @param {any} p0
 * @return {void}
 */
global.JournalWriteEntry = function (p0) {
  return _in(0x6dfdd665, 0xe416b093, p0);
};

/**
 * _MP_GAMER_TAG_DISABLE_REVIVE_TOP_ICON
 *
 * @param {number} gamerTagId
 * @return {void}
 */
global.MpGamerTagDisableReviveTopIcon = function (gamerTagId) {
  return _in(0x1f9a64c2, 0x804b3471, gamerTagId);
};

/**
 * _MP_GAMER_TAG_ENABLE_REVIVE_TOP_ICON
 *
 * @param {number} gamerTagId
 * @return {void}
 */
global.MpGamerTagEnableReviveTopIcon = function (gamerTagId) {
  return _in(0xfff6579c, 0xf0139fce, gamerTagId);
};

/**
 * _SET_MP_GAMER_TAG_COLOUR
 *
 * @param {number} gamerTagId
 * @param {number} colour
 * @return {void}
 */
global.SetMpGamerTagColour = function (gamerTagId, colour) {
  return _in(0x84bd27dd, 0xf9575816, gamerTagId, _ch(colour));
};

/**
 * _SET_MP_GAMER_TAG_NAME_POSSE
 *
 * @param {number} gamerTagId
 * @param {string | number} text
 * @return {void}
 */
global.SetMpGamerTagNamePosse = function (gamerTagId, text) {
  return _in(0x1ea716e0, 0x628a6f44, gamerTagId, _ts(text));
};

/**
 * _SET_MP_GAMER_TAG_SECONDARY_ICON
 * Found icons: SPEAKER, THROPY
 *
 * @param {number} gamerTagId
 * @param {number} icon
 * @return {void}
 */
global.SetMpGamerTagSecondaryIcon = function (gamerTagId, icon) {
  return _in(0x95384c6c, 0xe1526eff, gamerTagId, _ch(icon));
};

/**
 * _SET_MP_GAMER_TAG_TOP_ICON
 * Found icons: https://pastebin.com/xx6rEgiG
 *
 * @param {number} gamerTagId
 * @param {number} icon
 * @return {void}
 */
global.SetMpGamerTagTopIcon = function (gamerTagId, icon) {
  return _in(0x5f57522b, 0xc1eb9d9d, gamerTagId, _ch(icon));
};

/**
 * _SET_MP_GAMER_TAG_TYPE
 * Found types: GENERIC_PLAYER, DEADDROP, HOTPROPERTY, MINIGAMES
 *
 * @param {number} gamerTagId
 * @param {number} type
 * @return {void}
 */
global.SetMpGamerTagType = function (gamerTagId, type) {
  return _in(0x25b9c78a, 0x25105c35, gamerTagId, _ch(type));
};

/**
 * _SET_MP_GAMER_TAG_UNK_ALLOW_LOCALIZED
 * nullsub, doesn't do anything
 *
 * @param {number} gamerTagId
 * @param {boolean} allow
 * @return {void}
 */
global.SetMpGamerTagUnkAllowLocalized = function (gamerTagId, allow) {
  return _in(0xef7ab1a0, 0xe8c86170, gamerTagId, allow);
};

/**
 * _SET_MP_GAMER_TAG_VISIBILITY
 * visibility:
 * enum eUIGamertagVisibility
 * {
 *   UIGAMERTAGVISIBILITY_NONE,
 *   UIGAMERTAGVISIBILITY_ICON,
 *   UIGAMERTAGVISIBILITY_SIMPLE,
 *   UIGAMERTAGVISIBILITY_COMPLEX
 * };
 *
 * @param {number} gamerTagId
 * @param {number} visibility
 * @return {void}
 */
global.SetMpGamerTagVisibility = function (gamerTagId, visibility) {
  return _in(0x93171ddd, 0xab274eb8, gamerTagId, visibility);
};

/**
 * _SET_TEXT_COLOR
 * This native does nothing since build 1436, use _BG_SET_TEXT_COLOR (0x16FA5CE47F184F1E) instead.
 *
 * @param {number} r
 * @param {number} g
 * @param {number} b
 * @param {number} a
 * @return {void}
 */
global.SetTextColor = function (r, g, b, a) {
  return _in(0x50a41ad9, 0x66910f03, r, g, b, a);
};

/**
 * _SHOW_HORSE_CORES
 *
 * @param {boolean} state
 * @return {void}
 */
global.ShowHorseCores = function (state) {
  return _in(0xd4ee21b7, 0xcc7fd350, state);
};

/**
 * _SHOW_PLAYER_CORES
 *
 * @param {boolean} state
 * @return {void}
 */
global.ShowPlayerCores = function (state) {
  return _in(0x50c803a4, 0xcd5932c5, state);
};

/**
 * _TEXT_BLOCK_DELETE
 *
 * @param {string | number} textBlock
 * @return {void}
 */
global.TextBlockDelete = function (textBlock) {
  return _in(0xaa03f130, 0xa637d923, _ts(textBlock));
};

/**
 * _TEXT_BLOCK_IS_STREAMED
 *
 * @param {string | number} textBlock
 * @return {boolean}
 */
global.TextBlockIsStreamed = function (textBlock) {
  return _in(0x3cf96e16, 0x265b7dc8, _ts(textBlock), _r);
};

/**
 * _UI_PROMPT_ADD_GROUP_LINK
 *
 * @param {any} p0
 * @param {number} prompt
 * @param {any} p2
 * @return {void}
 */
global.UiPromptAddGroupLink = function (p0, prompt, p2) {
  return _in(0x684c96cc, 0x7c66e8ef, p0, prompt, p2);
};

/**
 * _UI_PROMPT_ADD_GROUP_RETURN_LINK
 *
 * @param {any} p0
 * @param {number} prompt
 * @return {void}
 */
global.UiPromptAddGroupReturnLink = function (p0, prompt) {
  return _in(0x837972ed, 0x28159536, p0, prompt);
};

/**
 * _UI_PROMPT_CLEAR_HORIZONTAL_ORIENTATION
 * id is the return value from 0xD9459157EB22C895.
 *
 * @param {number} id
 * @return {void}
 */
global.UiPromptClearHorizontalOrientation = function (id) {
  return _in(0x6095358c, 0x4142932a, id);
};

/**
 * _UI_PROMPT_CLEAR_PROMPT_PRIORITY_PREFERENCE
 *

 * @return {void}
 */
global.UiPromptClearPromptPriorityPreference = function () {
  return _in(0x51259ae5, 0xc72d4a1b);
};

/**
 * _UI_PROMPT_CONTEXT_SET_POINT
 *
 * @param {number} prompt
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.UiPromptContextSetPoint = function (prompt, x, y, z) {
  return _in(0xae84c5ee, 0x2c384fb3, prompt, _fv(x), _fv(y), _fv(z));
};

/**
 * _UI_PROMPT_CONTEXT_SET_RADIUS
 *
 * @param {number} prompt
 * @param {number} radius
 * @return {void}
 */
global.UiPromptContextSetRadius = function (prompt, radius) {
  return _in(0x0c718001, 0xb77ca468, prompt, _fv(radius));
};

/**
 * _UI_PROMPT_CONTEXT_SET_VOLUME
 * Attaches a Volume
 *
 * @param {number} prompt
 * @param {number} volume
 * @return {void}
 */
global.UiPromptContextSetVolume = function (prompt, volume) {
  return _in(0x4d107406, 0x667423be, prompt, volume);
};

/**
 * _UI_PROMPT_CREATE
 *
 * @param {number} inputHash
 * @param {string | number} labelName
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {number} p5
 * @return {number}
 */
global.UiPromptCreate = function (inputHash, labelName, p2, p3, p4, p5) {
  return _in(0x29fa7910, 0x726c3889, _ch(inputHash), _ts(labelName), p2, p3, p4, p5, _r, _ri);
};

/**
 * _UI_PROMPT_DELETE
 *
 * @param {number} prompt
 * @return {void}
 */
global.UiPromptDelete = function (prompt) {
  return _in(0x00ede88d, 0x4d13cf59, prompt);
};

/**
 * _UI_PROMPT_DISABLE_PROMPTS_THIS_FRAME
 *

 * @return {void}
 */
global.UiPromptDisablePromptsThisFrame = function () {
  return _in(0xf1622ce8, 0x8a1946fb);
};

/**
 * _UI_PROMPT_DISABLE_PROMPT_TYPE_THIS_FRAME
 *
 * @param {number} p0
 * @return {void}
 */
global.UiPromptDisablePromptTypeThisFrame = function (p0) {
  return _in(0xfc094ef2, 0x6dd153fa, p0);
};

/**
 * _UI_PROMPT_DOES_AMBIENT_GROUP_EXIST
 *
 * @param {number} hash
 * @return {boolean}
 */
global.UiPromptDoesAmbientGroupExist = function (hash) {
  return _in(0xeb550b92, 0x7b34a1bb, _ch(hash), _r);
};

/**
 * _UI_PROMPT_ENABLE_PROMPT_TYPE_THIS_FRAME
 * https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/prompts/prompt_types
 *
 * @param {number} p0
 * @return {void}
 */
global.UiPromptEnablePromptTypeThisFrame = function (p0) {
  return _in(0x06565032, 0x897ba861, p0);
};

/**
 * _UI_PROMPT_FILTER_CLEAR
 *

 * @return {void}
 */
global.UiPromptFilterClear = function () {
  return _in(0x6a2f8204, 0x52017ea2);
};

/**
 * _UI_PROMPT_GET_GROUP_ACTIVE_PAGE
 *
 * @param {number} hash
 * @return {number}
 */
global.UiPromptGetGroupActivePage = function (hash) {
  return _in(0xc1fcc36c, 0x3f7286c8, _ch(hash), _r, _ri);
};

/**
 * _UI_PROMPT_GET_GROUP_ID_FOR_SCENARIO_POINT
 *
 * @param {any} p0
 * @param {number} p1
 * @return {number}
 */
global.UiPromptGetGroupIdForScenarioPoint = function (p0, p1) {
  return _in(0xcb73d752, 0x1e7103f0, p0, p1, _r, _ri);
};

/**
 * _UI_PROMPT_GET_GROUP_ID_FOR_TARGET_ENTITY
 *
 * @param {number} entity
 * @return {number}
 */
global.UiPromptGetGroupIdForTargetEntity = function (entity) {
  return _in(0xb796970b, 0xd125fce8, entity, _r, _ri);
};

/**
 * _UI_PROMPT_GET_MASH_MODE_PROGRESS
 *
 * @param {number} prompt
 * @return {number}
 */
global.UiPromptGetMashModeProgress = function (prompt) {
  return _in(0x8a958529, 0x3863b8a5, prompt, _r, _rf);
};

/**
 * _UI_PROMPT_GET_PROGRESS
 *
 * @param {number} prompt
 * @return {number}
 */
global.UiPromptGetProgress = function (prompt) {
  return _in(0x81801291, 0x806dbc50, prompt, _r, _rf);
};

/**
 * _UI_PROMPT_GET_URGENT_PULSING_ENABLED
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptGetUrgentPulsingEnabled = function (prompt) {
  return _in(0x1fba0dab, 0xecddb52b, prompt, _r);
};

/**
 * _UI_PROMPT_HAS_HOLD_AUTO_FILL_MODE
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptHasHoldAutoFillMode = function (prompt) {
  return _in(0x8010bebd, 0x0d5ed5bc, prompt, _r);
};

/**
 * _UI_PROMPT_HAS_HOLD_MODE
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptHasHoldMode = function (prompt) {
  return _in(0xb60c9f9e, 0xd47abb76, prompt, _r);
};

/**
 * _UI_PROMPT_HAS_HOLD_MODE_COMPLETED
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptHasHoldModeCompleted = function (prompt) {
  return _in(0xe0f65f06, 0x40ef0617, prompt, _r);
};

/**
 * _UI_PROMPT_HAS_MANUAL_MASH_MODE
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptHasManualMashMode = function (prompt) {
  return _in(0xa6c6a4ad, 0xb3bac409, prompt, _r);
};

/**
 * _UI_PROMPT_HAS_MASH_MODE
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptHasMashMode = function (prompt) {
  return _in(0xcd072523, 0x791ddc1b, prompt, _r);
};

/**
 * _UI_PROMPT_HAS_MASH_MODE_COMPLETED
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptHasMashModeCompleted = function (prompt) {
  return _in(0x845ce958, 0x416dc473, prompt, _r);
};

/**
 * _UI_PROMPT_HAS_MASH_MODE_FAILED
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptHasMashModeFailed = function (prompt) {
  return _in(0x25b18e53, 0x0cf39d6f, prompt, _r);
};

/**
 * _UI_PROMPT_HAS_PRESSED_TIMED_MODE_COMPLETED
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptHasPressedTimedModeCompleted = function (prompt) {
  return _in(0x3ce854d2, 0x50a88daf, prompt, _r);
};

/**
 * _UI_PROMPT_HAS_PRESSED_TIMED_MODE_FAILED
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptHasPressedTimedModeFailed = function (prompt) {
  return _in(0x1a17b9ec, 0xff617562, prompt, _r);
};

/**
 * _UI_PROMPT_HAS_STANDARD_MODE_COMPLETED
 * Params: p1 is 0
 *
 * @param {number} prompt
 * @param {number} p1
 * @return {boolean}
 */
global.UiPromptHasStandardModeCompleted = function (prompt, p1) {
  return _in(0xc92ac953, 0xf0a982ae, prompt, p1, _r);
};

/**
 * _UI_PROMPT_IS_ACTIVE
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptIsActive = function (prompt) {
  return _in(0x546e342e, 0x01de71cf, prompt, _r);
};

/**
 * _UI_PROMPT_IS_ENABLED
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptIsEnabled = function (prompt) {
  return _in(0x0d00eddf, 0xb58b7f28, prompt, _r);
};

/**
 * _UI_PROMPT_IS_HOLD_MODE_RUNNING
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptIsHoldModeRunning = function (prompt) {
  return _in(0xc7d70eae, 0xf92eff48, prompt, _r);
};

/**
 * _UI_PROMPT_IS_JUST_PRESSED
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptIsJustPressed = function (prompt) {
  return _in(0x2787cc61, 0x1d3facc5, prompt, _r);
};

/**
 * _UI_PROMPT_IS_JUST_RELEASED
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptIsJustReleased = function (prompt) {
  return _in(0x635cc82f, 0xa297a827, prompt, _r);
};

/**
 * _UI_PROMPT_IS_PRESSED
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptIsPressed = function (prompt) {
  return _in(0x21e60e23, 0x0086697f, prompt, _r);
};

/**
 * _UI_PROMPT_IS_RELEASED
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptIsReleased = function (prompt) {
  return _in(0xafc887ba, 0x7a7756d6, prompt, _r);
};

/**
 * _UI_PROMPT_IS_VALID
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptIsValid = function (prompt) {
  return _in(0x347469fb, 0xdd1589a9, prompt, _r);
};

/**
 * _UI_PROMPT_REGISTER_BEGIN
 *

 * @return {number}
 */
global.UiPromptRegisterBegin = function () {
  return _in(0x04f97de4, 0x5a519419, _r, _ri);
};

/**
 * _UI_PROMPT_REGISTER_END
 *
 * @param {number} prompt
 * @return {void}
 */
global.UiPromptRegisterEnd = function (prompt) {
  return _in(0xf7aa2696, 0xa22ad8b9, prompt);
};

/**
 * _UI_PROMPT_REMOVE_GROUP
 *
 * @param {number} prompt
 * @param {any} p1
 * @return {void}
 */
global.UiPromptRemoveGroup = function (prompt, p1) {
  return _in(0x4e52c800, 0xa28f7be8, prompt, p1);
};

/**
 * _UI_PROMPT_RESTART_MODES
 *
 * @param {number} prompt
 * @return {void}
 */
global.UiPromptRestartModes = function (prompt) {
  return _in(0xdc6c55df, 0xa2c24ee5, prompt);
};

/**
 * _UI_PROMPT_SET_ACTIVE_GROUP_THIS_FRAME
 * Note: you must use VAR_STRING for p1 if string is not part of text database
 * tabAmount: specifies number of tabs in prompt group
 * tabDefaultIndex: specifies starting index
 * p3 if is set > 3 you can no longer press Q to change tab if there are more than one tab set in tabAmount
 *
 * @param {number} hash
 * @param {string | number} name
 * @param {number} tabAmount
 * @param {number} tabDefaultIndex
 * @param {number} p4
 * @param {number} prompt
 * @return {any}
 */
global.UiPromptSetActiveGroupThisFrame = function (hash, name, tabAmount, tabDefaultIndex, p4, prompt) {
  return _in(0xc65a45d4, 0x453c2627, _ch(hash), _ts(name), tabAmount, tabDefaultIndex, p4, prompt, _r);
};

/**
 * _UI_PROMPT_SET_ALLOWED_ACTION
 *
 * @param {number} prompt
 * @param {number} action
 * @return {void}
 */
global.UiPromptSetAllowedAction = function (prompt, action) {
  return _in(0x565c1ce1, 0x83cb0eaf, prompt, _ch(action));
};

/**
 * _UI_PROMPT_SET_AMBIENT_GROUP_THIS_FRAME
 *
 * @param {number} entity
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {string | number} name
 * @param {number} p6
 * @return {any}
 */
global.UiPromptSetAmbientGroupThisFrame = function (entity, p1, p2, p3, p4, name, p6) {
  return _in(0x315c81d7, 0x60609108, entity, _fv(p1), p2, p3, _ch(p4), _ts(name), p6, _r);
};

/**
 * _UI_PROMPT_SET_ATTRIBUTE
 * attribute: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIPromptAttribute
 *
 * @param {number} prompt
 * @param {number} attribute
 * @param {boolean} enabled
 * @return {void}
 */
global.UiPromptSetAttribute = function (prompt, attribute, enabled) {
  return _in(0x560e76d5, 0xe2e1803f, prompt, attribute, enabled);
};

/**
 * _UI_PROMPT_SET_BEAT_MODE
 *
 * @param {number} prompt
 * @param {boolean} toggle
 * @return {void}
 */
global.UiPromptSetBeatMode = function (prompt, toggle) {
  return _in(0xf957a165, 0x4c6322fe, prompt, toggle);
};

/**
 * _UI_PROMPT_SET_BEAT_MODE_GRAYED_OUT
 *
 * @param {number} prompt
 * @param {any} p1
 * @return {void}
 */
global.UiPromptSetBeatModeGrayedOut = function (prompt, p1) {
  return _in(0xb487a493, 0x6fbf40ac, prompt, p1);
};

/**
 * _UI_PROMPT_SET_CONTROL_ACTION
 *
 * @param {number} prompt
 * @param {number} action
 * @return {any}
 */
global.UiPromptSetControlAction = function (prompt, action) {
  return _in(0xb5352b74, 0x94a08258, prompt, _ch(action), _r);
};

/**
 * _UI_PROMPT_SET_ENABLED
 *
 * @param {number} prompt
 * @param {boolean} toggle
 * @return {void}
 */
global.UiPromptSetEnabled = function (prompt, toggle) {
  return _in(0x8a0fb4d0, 0x3a630d21, prompt, toggle);
};

/**
 * _UI_PROMPT_SET_GROUP
 * tabIndex: specifies tab of prompt
 *
 * @param {number} prompt
 * @param {number} groupId
 * @param {number} tabIndex
 * @return {void}
 */
global.UiPromptSetGroup = function (prompt, groupId, tabIndex) {
  return _in(0x2f11d3a2, 0x54169ea4, prompt, groupId, tabIndex);
};

/**
 * _UI_PROMPT_SET_HOLD_AUTO_FILL_MODE
 *
 * @param {number} prompt
 * @param {number} autoFillTimeMs
 * @param {number} holdTimeMs
 * @return {void}
 */
global.UiPromptSetHoldAutoFillMode = function (prompt, autoFillTimeMs, holdTimeMs) {
  return _in(0x3ce932e7, 0x37c145d6, prompt, autoFillTimeMs, holdTimeMs);
};

/**
 * _UI_PROMPT_SET_HOLD_AUTO_FILL_WITH_DECAY_MODE
 *
 * @param {number} prompt
 * @param {number} autoFillTimeMs
 * @param {number} holdTimeMs
 * @return {void}
 */
global.UiPromptSetHoldAutoFillWithDecayMode = function (prompt, autoFillTimeMs, holdTimeMs) {
  return _in(0xa3f2149a, 0xa24f3d8e, prompt, autoFillTimeMs, holdTimeMs);
};

/**
 * _UI_PROMPT_SET_HOLD_INDEFINITELY_MODE
 *
 * @param {number} prompt
 * @return {void}
 */
global.UiPromptSetHoldIndefinitelyMode = function (prompt) {
  return _in(0xea5ccf4e, 0xeb2f82d1, prompt);
};

/**
 * _UI_PROMPT_SET_HOLD_MODE
 * Params: p2 is 304000 in R* SP Script coachrobberies
 *
 * @param {number} prompt
 * @param {number} holdTimeMs
 * @return {void}
 */
global.UiPromptSetHoldMode = function (prompt, holdTimeMs) {
  return _in(0x94073d5c, 0xa3f16b7b, prompt, holdTimeMs);
};

/**
 * _UI_PROMPT_SET_MANUAL_RESOLVED
 *
 * @param {number} prompt
 * @param {any} p1
 * @return {void}
 */
global.UiPromptSetManualResolved = function (prompt, p1) {
  return _in(0xa520c7b0, 0x5fa4eb2a, prompt, p1);
};

/**
 * _UI_PROMPT_SET_MASH_AUTO_FILL_MODE
 *
 * @param {number} prompt
 * @param {number} autoFillTimeMs
 * @param {number} mashes
 * @return {void}
 */
global.UiPromptSetMashAutoFillMode = function (prompt, autoFillTimeMs, mashes) {
  return _in(0x6c39587d, 0x7cc66801, prompt, autoFillTimeMs, mashes);
};

/**
 * _UI_PROMPT_SET_MASH_INDEFINITELY_MODE
 *
 * @param {number} prompt
 * @return {void}
 */
global.UiPromptSetMashIndefinitelyMode = function (prompt) {
  return _in(0x7b66e893, 0x12727274, prompt);
};

/**
 * _UI_PROMPT_SET_MASH_MANUAL_CAN_FAIL_MODE
 *
 * @param {number} prompt
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {any} p4
 * @return {void}
 */
global.UiPromptSetMashManualCanFailMode = function (prompt, p1, p2, p3, p4) {
  return _in(0x179dcf71, 0xf705da20, prompt, _fv(p1), _fv(p2), _fv(p3), p4);
};

/**
 * _UI_PROMPT_SET_MASH_MANUAL_MODE
 *
 * @param {number} prompt
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {any} p4
 * @return {void}
 */
global.UiPromptSetMashManualMode = function (prompt, p1, p2, p3, p4) {
  return _in(0x32df729d, 0x8bd3c1c6, prompt, _fv(p1), _fv(p2), _fv(p3), p4);
};

/**
 * _UI_PROMPT_SET_MASH_MANUAL_MODE_DECAY_SPEED
 * standard (prompt not held) rate: 0.035f
 * fast (prompt held) rate: 0.015f
 * punitive (been hit) rate: 0.14f
 *
 * @param {number} prompt
 * @param {number} speed
 * @return {void}
 */
global.UiPromptSetMashManualModeDecaySpeed = function (prompt, speed) {
  return _in(0x7d393c24, 0x7fb9b431, prompt, _fv(speed));
};

/**
 * _UI_PROMPT_SET_MASH_MANUAL_MODE_INCREASE_PER_PRESS
 * standard (prompt not held) rate: (1f / 128f)
 * fast (prompt held) rate: (1f / 64f)
 * punitive (been hit) rate: (1f / 128f)
 *
 * @param {number} prompt
 * @param {number} rate
 * @return {void}
 */
global.UiPromptSetMashManualModeIncreasePerPress = function (prompt, rate) {
  return _in(0xa0d1d79c, 0x6036a855, prompt, _fv(rate));
};

/**
 * _UI_PROMPT_SET_MASH_MANUAL_MODE_PRESSED_GROWTH_SPEED
 *
 * @param {number} prompt
 * @param {number} speed
 * @return {void}
 */
global.UiPromptSetMashManualModePressedGrowthSpeed = function (prompt, speed) {
  return _in(0x56dbb26f, 0x98582c29, prompt, _fv(speed));
};

/**
 * _UI_PROMPT_SET_MASH_MODE
 *
 * @param {number} prompt
 * @param {number} mashes
 * @return {void}
 */
global.UiPromptSetMashMode = function (prompt, mashes) {
  return _in(0xdf6423bf, 0x071c7f71, prompt, mashes);
};

/**
 * _UI_PROMPT_SET_MASH_WITH_RESISTANCE_CAN_FAIL_MODE
 *
 * @param {number} prompt
 * @param {number} mashes
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.UiPromptSetMashWithResistanceCanFailMode = function (prompt, mashes, p2, p3) {
  return _in(0xdc0cb602, 0xdeadba53, prompt, mashes, _fv(p2), _fv(p3));
};

/**
 * _UI_PROMPT_SET_MASH_WITH_RESISTANCE_MODE
 *
 * @param {number} prompt
 * @param {number} mashes
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.UiPromptSetMashWithResistanceMode = function (prompt, mashes, p2, p3) {
  return _in(0xcd1bdff1, 0x5efa79f5, prompt, mashes, _fv(p2), _fv(p3));
};

/**
 * _UI_PROMPT_SET_ORDERING_AS_INPUT_TYPE
 *
 * @param {number} prompt
 * @param {any} p1
 * @return {void}
 */
global.UiPromptSetOrderingAsInputType = function (prompt, p1) {
  return _in(0x2f385ecc, 0x5200938d, prompt, p1);
};

/**
 * _UI_PROMPT_SET_PRESSED_TIMED_MODE
 *
 * @param {number} prompt
 * @param {number} depletionTimeMs
 * @return {void}
 */
global.UiPromptSetPressedTimedMode = function (prompt, depletionTimeMs) {
  return _in(0x1473d3af, 0x51d54276, prompt, depletionTimeMs);
};

/**
 * _UI_PROMPT_SET_PRIORITY
 * priority: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptPriority
 *
 * @param {number} prompt
 * @param {number} priority
 * @return {void}
 */
global.UiPromptSetPriority = function (prompt, priority) {
  return _in(0xca24f528, 0xd0d16289, prompt, priority);
};

/**
 * _UI_PROMPT_SET_PROMPT_PRIORITY_PREFERENCE
 *
 * @param {number} ped
 * @return {void}
 */
global.UiPromptSetPromptPriorityPreference = function (ped) {
  return _in(0x530a4287, 0x05be5def, ped);
};

/**
 * _UI_PROMPT_SET_REGISTER_HORIZONTAL_ORIENTATION
 * This returns an id that can be used with 0x6095358C4142932A.
 *

 * @return {number}
 */
global.UiPromptSetRegisterHorizontalOrientation = function () {
  return _in(0xd9459157, 0xeb22c895, _r, _ri);
};

/**
 * _UI_PROMPT_SET_ROTATE_MODE
 * Used for controllers
 *
 * @param {number} prompt
 * @param {number} p1
 * @param {boolean} counterclockwise
 * @return {void}
 */
global.UiPromptSetRotateMode = function (prompt, p1, counterclockwise) {
  return _in(0x7abe7095, 0xfb3d2581, prompt, _fv(p1), counterclockwise);
};

/**
 * _UI_PROMPT_SET_SPINNER_POSITION
 *
 * @param {number} prompt
 * @param {any} p1
 * @return {void}
 */
global.UiPromptSetSpinnerPosition = function (prompt, p1) {
  return _in(0x832cb510, 0xde546282, prompt, p1);
};

/**
 * _UI_PROMPT_SET_SPINNER_SPEED
 *
 * @param {number} prompt
 * @param {any} p1
 * @return {void}
 */
global.UiPromptSetSpinnerSpeed = function (prompt, p1) {
  return _in(0xac6586a7, 0xfdcd4b68, prompt, p1);
};

/**
 * _UI_PROMPT_SET_STANDARDIZED_HOLD_MODE
 * Hashes: SHORT_TIMED_EVENT_MP, SHORT_TIMED_EVENT, MEDIUM_TIMED_EVENT, LONG_TIMED_EVENT, RUSTLING_CALM_TIMING, PLAYER_FOCUS_TIMING, PLAYER_REACTION_TIMING
 *
 * @param {number} prompt
 * @param {number} timedEventHash
 * @return {void}
 */
global.UiPromptSetStandardizedHoldMode = function (prompt, timedEventHash) {
  return _in(0x74c7d7b7, 0x2ed0d3cf, prompt, _ch(timedEventHash));
};

/**
 * _UI_PROMPT_SET_STANDARD_MODE
 *
 * @param {number} prompt
 * @param {boolean} releaseMode
 * @return {void}
 */
global.UiPromptSetStandardMode = function (prompt, releaseMode) {
  return _in(0xcc665679, 0x9977741b, prompt, releaseMode);
};

/**
 * _UI_PROMPT_SET_TAG
 *
 * @param {number} prompt
 * @param {any} p1
 * @return {void}
 */
global.UiPromptSetTag = function (prompt, p1) {
  return _in(0xdec85c17, 0x4751292b, prompt, p1);
};

/**
 * _UI_PROMPT_SET_TARGET_MODE
 *
 * @param {number} prompt
 * @param {number} p1
 * @param {number} p2
 * @param {any} p3
 * @return {void}
 */
global.UiPromptSetTargetMode = function (prompt, p1, p2, p3) {
  return _in(0x5f6503d9, 0xcd2754eb, prompt, _fv(p1), _fv(p2), p3);
};

/**
 * _UI_PROMPT_SET_TARGET_MODE_PROGRESS
 *
 * @param {number} prompt
 * @param {number} progress
 * @return {void}
 */
global.UiPromptSetTargetModeProgress = function (prompt, progress) {
  return _in(0x00123054, 0xbec8a30f, prompt, _fv(progress));
};

/**
 * _UI_PROMPT_SET_TARGET_MODE_TARGET
 *
 * @param {number} prompt
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.UiPromptSetTargetModeTarget = function (prompt, p1, p2) {
  return _in(0x5e019c45, 0xdd3b6a14, prompt, _fv(p1), _fv(p2));
};

/**
 * _UI_PROMPT_SET_TEXT
 *
 * @param {number} prompt
 * @param {string | number} text
 * @return {void}
 */
global.UiPromptSetText = function (prompt, text) {
  return _in(0x5dd02a83, 0x18420dd7, prompt, _ts(text));
};

/**
 * _UI_PROMPT_SET_TRANSPORT_MODE
 * TM_ANY = 0,
 * TM_ON_FOOT,
 * TM_IN_VEHICLE
 *
 * @param {number} prompt
 * @param {number} mode
 * @return {void}
 */
global.UiPromptSetTransportMode = function (prompt, mode) {
  return _in(0x876e4a35, 0xc73a6655, prompt, mode);
};

/**
 * _UI_PROMPT_SET_TYPE
 * Params: type = mostly 0, 6 (net_mission_intro_story_gvo), 7 (fm_mission_controller), 14 (net_ugc_end_flow_transition_online), 15 (net_main_[tlg_]offline)
 *
 * @param {number} prompt
 * @param {number} type
 * @return {void}
 */
global.UiPromptSetType = function (prompt, type) {
  return _in(0xf4a5c450, 0x9bf923b1, prompt, type);
};

/**
 * _UI_PROMPT_SET_URGENT_PULSING_ENABLED
 *
 * @param {number} prompt
 * @param {boolean} toggle
 * @return {void}
 */
global.UiPromptSetUrgentPulsingEnabled = function (prompt, toggle) {
  return _in(0xc5f428ee, 0x08fa7f2c, prompt, toggle);
};

/**
 * _UI_PROMPT_SET_VISIBLE
 *
 * @param {number} prompt
 * @param {boolean} toggle
 * @return {void}
 */
global.UiPromptSetVisible = function (prompt, toggle) {
  return _in(0x71215acc, 0xfde075ee, prompt, toggle);
};

/**
 * _UI_PROMPT_WAS_BEAT_MODE_PRESSED_IN_TIME_WINDOW
 *
 * @param {number} prompt
 * @return {boolean}
 */
global.UiPromptWasBeatModePressedInTimeWindow = function (prompt) {
  return _in(0x1fe4788a, 0xb1430c55, prompt, _r);
};

/**
 * _0x0B9F7A01EC50448D
 *
 * @param {number} ped
 * @param {DataView} args
 * @return {void}
 */
global.N_0x0B9F7A01EC50448D = function (ped, args) {
  return _in(0x0b9f7a01, 0xec50448d, ped, args);
};

/**
 * _0x6098139150DCC745
 *
 * @param {number} ped
 * @param {number} p1
 * @return {boolean}
 */
global.N_0x6098139150DCC745 = function (ped, p1) {
  return _in(0x60981391, 0x50dcc745, ped, p1, _r);
};

/**
 * _0x873C792E07A32C8B
 *
 * @param {number} ped1
 * @param {number} ped2
 * @return {void}
 */
global.N_0x873C792E07A32C8B = function (ped1, ped2) {
  return _in(0x873c792e, 0x07a32c8b, ped1, ped2);
};

/**
 * _INVERSE_KINEMATICS_REQUEST_LOOK_AT
 *
 * @param {number} ped
 * @param {DataView} args
 * @return {void}
 */
global.InverseKinematicsRequestLookAt = function (ped, args) {
  return _in(0x66f9eb44, 0x342bb4c5, ped, args);
};

/**
 * _INVERSE_KINEMATICS_SET_DISABLED_FOR_PED
 * Seems to disable IK on ped
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.InverseKinematicsSetDisabledForPed = function (ped, p1, p2) {
  return _in(0x0eabf182, 0xfbb63d72, ped, p1, p2);
};

/**
 * SET_MOUSE_CURSOR_STYLE
 * Changes the mouse cursor's sprite.
 * 
 * spriteId's: https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/cursor_sprites#readme
 * 
 * Old name: _SET_MOUSE_CURSOR_SPRITE
 *
 * @param {number} spriteId
 * @return {void}
 */
global.SetMouseCursorStyle = function (spriteId) {
  return _in(0x7f5858aa, 0xb5a58cce, spriteId);
};

/**
 * SET_MOUSE_CURSOR_THIS_FRAME
 * Shows the cursor on screen for one frame.
 * 
 * Old name: _SET_MOUSE_CURSOR_ACTIVE_THIS_FRAME
 *

 * @return {void}
 */
global.SetMouseCursorThisFrame = function () {
  return _in(0xf12e4cca, 0xf249dc10);
};

/**
 * _POINTER_IS_BEING_MOVED
 * Returns true if player is moving mouse while cursor is active
 * _PI* - _PO*
 *

 * @return {boolean}
 */
global.PointerIsBeingMoved = function () {
  return _in(0x2b8b605f, 0x2a9e64bf, _r);
};

/**
 * _POINTER_IS_LEFT_BUTTON_HELD
 * Returns true if player is holding LMB while cursor is active
 * _PI* - _PO*
 *

 * @return {boolean}
 */
global.PointerIsLeftButtonHeld = function () {
  return _in(0x61cae9d1, 0xfd055e44, _r);
};

/**
 * _POINTER_IS_LEFT_BUTTON_JUST_RELEASED
 * Returns true if player releases LMB if cursor is active
 * _PI* - _PO*
 *

 * @return {boolean}
 */
global.PointerIsLeftButtonJustReleased = function () {
  return _in(0xf7f51a57, 0x349739f2, _r);
};

/**
 * _SET_ALLOW_FIRST_PERSON_MOUSE_CAMERA_MOVEMENT
 * Allows camera to be moved if middle mouse button is held while in first person
 * Must be called every frame
 * _SET*
 *

 * @return {void}
 */
global.SetAllowFirstPersonMouseCameraMovement = function () {
  return _in(0x0546b117, 0xbb17548b);
};

/**
 * ACTIVATE_INTERIOR_ENTITY_SET
 * https://github.com/femga/rdr3_discoveries/tree/master/interiors/interior_sets
 *
 * @param {number} interior
 * @param {string | number} entitySetName
 * @param {number} p2
 * @return {void}
 */
global.ActivateInteriorEntitySet = function (interior, entitySetName, p2) {
  return _in(0x174d0aab, 0x11ced739, interior, _ts(entitySetName), p2);
};

/**
 * CLEAR_ROOM_FOR_ENTITY
 *
 * @param {number} entity
 * @return {void}
 */
global.ClearRoomForEntity = function (entity) {
  return _in(0xa1762d5b, 0xbfca13a8, entity);
};

/**
 * CLEAR_ROOM_FOR_GAME_VIEWPORT
 *

 * @return {void}
 */
global.ClearRoomForGameViewport = function () {
  return _in(0x951a0497, 0x65e0d450);
};

/**
 * DEACTIVATE_INTERIOR_ENTITY_SET
 *
 * @param {number} interior
 * @param {string | number} entitySetName
 * @param {boolean} p2
 * @return {void}
 */
global.DeactivateInteriorEntitySet = function (interior, entitySetName, p2) {
  return _in(0x33b81a2c, 0x07a51fff, interior, _ts(entitySetName), p2);
};

/**
 * DISABLE_INTERIOR
 *
 * @param {number} interior
 * @param {boolean} toggle
 * @return {void}
 */
global.DisableInterior = function (interior, toggle) {
  return _in(0x3c2b92a1, 0xa07d4fce, interior, toggle);
};

/**
 * FORCE_ROOM_FOR_ENTITY
 *
 * @param {number} entity
 * @param {number} interior
 * @param {number} roomHashKey
 * @return {void}
 */
global.ForceRoomForEntity = function (entity, interior, roomHashKey) {
  return _in(0xbc29a989, 0x4c976945, entity, interior, _ch(roomHashKey));
};

/**
 * FORCE_ROOM_FOR_GAME_VIEWPORT
 *
 * @param {number} interiorId
 * @param {number} roomHashKey
 * @return {void}
 */
global.ForceRoomForGameViewport = function (interiorId, roomHashKey) {
  return _in(0x115b4aa8, 0xfb28ab43, interiorId, _ch(roomHashKey));
};

/**
 * GET_INTERIOR_AT_COORDS
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.GetInteriorAtCoords = function (x, y, z) {
  return _in(0xcdd36c9e, 0x5c469070, _fv(x), _fv(y), _fv(z), _r, _ri);
};

/**
 * GET_INTERIOR_AT_COORDS_WITH_TYPE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {string | number} interiorType
 * @return {number}
 */
global.GetInteriorAtCoordsWithType = function (x, y, z, interiorType) {
  return _in(0xaad6170a, 0xa33b13c0, _fv(x), _fv(y), _fv(z), _ts(interiorType), _r, _ri);
};

/**
 * GET_INTERIOR_AT_COORDS_WITH_TYPEHASH
 * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} typeHash
 * @return {number}
 */
global.GetInteriorAtCoordsWithTypehash = function (x, y, z, typeHash) {
  return _in(0x3543aea1, 0x816d1d2b, _fv(x), _fv(y), _fv(z), _ch(typeHash), _r, _ri);
};

/**
 * GET_INTERIOR_FROM_COLLISION
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.GetInteriorFromCollision = function (x, y, z) {
  return _in(0x5054d1a5, 0x218fa696, _fv(x), _fv(y), _fv(z), _r, _ri);
};

/**
 * GET_INTERIOR_FROM_ENTITY
 * Returns the handle of the interior that the entity is in. Returns 0 if outside.
 *
 * @param {number} entity
 * @return {number}
 */
global.GetInteriorFromEntity = function (entity) {
  return _in(0xb4176898, 0x57646f61, entity, _r, _ri);
};

/**
 * GET_INTERIOR_FROM_PRIMARY_VIEW
 *

 * @return {number}
 */
global.GetInteriorFromPrimaryView = function () {
  return _in(0xbc8a281f, 0xf125c655, _r, _ri);
};

/**
 * GET_INTERIOR_LOCATION_AND_NAMEHASH
 *
 * @param {number} interior
 * @return {[Vector3, number]}
 */
global.GetInteriorLocationAndNamehash = function (interior) {
  return _in(0x8451e87d, 0x3c2b0286, interior, _v, _i);
};

/**
 * GET_KEY_FOR_ENTITY_IN_ROOM
 * Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY
 *
 * @param {number} entity
 * @return {number}
 */
global.GetKeyForEntityInRoom = function (entity) {
  return _in(0x27d7b6f7, 0x9e1f4603, entity, _r, _ri);
};

/**
 * GET_ROOM_KEY_FROM_ENTITY
 * Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
 *
 * @param {number} entity
 * @return {number}
 */
global.GetRoomKeyFromEntity = function (entity) {
  return _in(0x076e46e0, 0xeb52afc6, entity, _r, _ri);
};

/**
 * IS_COLLISION_MARKED_OUTSIDE
 * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {boolean}
 */
global.IsCollisionMarkedOutside = function (x, y, z) {
  return _in(0xf291396b, 0x517e25b2, _fv(x), _fv(y), _fv(z), _r);
};

/**
 * IS_INTERIOR_ENTITY_SET_ACTIVE
 *
 * @param {number} interior
 * @param {string | number} entitySetName
 * @return {boolean}
 */
global.IsInteriorEntitySetActive = function (interior, entitySetName) {
  return _in(0x32810ca2, 0x125f5842, interior, _ts(entitySetName), _r);
};

/**
 * IS_INTERIOR_READY
 *
 * @param {number} interior
 * @return {boolean}
 */
global.IsInteriorReady = function (interior) {
  return _in(0x941560d2, 0xd45dbfc8, interior, _r);
};

/**
 * IS_INTERIOR_SCENE
 *

 * @return {boolean}
 */
global.IsInteriorScene = function () {
  return _in(0x4200f14d, 0x6f840a9a, _r);
};

/**
 * IS_VALID_INTERIOR
 *
 * @param {number} interior
 * @return {boolean}
 */
global.IsValidInterior = function (interior) {
  return _in(0x017c1b31, 0x59f79f6c, interior, _r);
};

/**
 * PIN_INTERIOR_IN_MEMORY
 *
 * @param {number} interior
 * @return {void}
 */
global.PinInteriorInMemory = function (interior) {
  return _in(0xbd3d33ea, 0xbf680168, interior);
};

/**
 * RETAIN_ENTITY_IN_INTERIOR
 *
 * @param {number} entity
 * @param {number} interior
 * @return {void}
 */
global.RetainEntityInInterior = function (entity, interior) {
  return _in(0x5bd61673, 0x5f16bf5c, entity, interior);
};

/**
 * SET_INTERIOR_IN_USE
 * Actually returns void in IDA but the script header defines a BOOL return type
 *
 * @param {number} interior
 * @return {boolean}
 */
global.SetInteriorInUse = function (interior) {
  return _in(0xb5ef6fef, 0x2dc9ebed, interior, _r);
};

/**
 * UNPIN_INTERIOR
 * Does something similar to INTERIOR::DISABLE_INTERIOR.
 * 
 * You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside. 
 *
 * @param {number} interior
 * @return {void}
 */
global.UnpinInterior = function (interior) {
  return _in(0x07fd1a0b, 0x814f6055, interior);
};

/**
 * _0x2533F2AB0EB9C6F9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x2533F2AB0EB9C6F9 = function (p0, p1) {
  return _in(0x2533f2ab, 0x0eb9c6f9, p0, p1);
};

/**
 * _0xFE2B3D5500B1B2E4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xFE2B3D5500B1B2E4 = function (p0, p1) {
  return _in(0xfe2b3d55, 0x00b1b2e4, p0, p1);
};

/**
 * _GET_INTERIOR_MINIMAP_HASH
 *
 * @param {number} interior
 * @return {number}
 */
global.GetInteriorMinimapHash = function (interior) {
  return _in(0x3039be60, 0xb3749716, interior, _r, _ri);
};

/**
 * _GET_INTERIOR_POSITION
 *
 * @param {number} interior
 * @return {Vector3}
 */
global.GetInteriorPosition = function (interior) {
  return _in(0x2c9746d0, 0xca15be1c, interior, _r, _rv);
};

/**
 * _IS_INTERIOR_ENTITY_SET_VALID
 *
 * @param {number} interior
 * @param {string | number} entitySetName
 * @return {boolean}
 */
global.IsInteriorEntitySetValid = function (interior, entitySetName) {
  return _in(0xd56ff170, 0x710fc826, interior, _ts(entitySetName), _r);
};

/**
 * INVENTORY_COPY_MP_INVENTORY_TO_MISSION_INVENTORY
 *
 * @param {boolean} p0
 * @param {boolean} p1
 * @param {boolean} bCopySatchelItems
 * @param {boolean} bCopyEmotes
 * @param {boolean} bCopyHorse
 * @param {boolean} p5
 * @return {void}
 */
global.InventoryCopyMpInventoryToMissionInventory = function (p0, p1, bCopySatchelItems, bCopyEmotes, bCopyHorse, p5) {
  return _in(0x644ccb76, 0xa76cfbd6, p0, p1, bCopySatchelItems, bCopyEmotes, bCopyHorse, p5);
};

/**
 * INVENTORY_DISABLE_MISSION_INVENTORY_PICKUPS
 *

 * @return {void}
 */
global.InventoryDisableMissionInventoryPickups = function () {
  return _in(0xe1f389f0, 0x3dc83673);
};

/**
 * INVENTORY_GET_CHILDREN_IN_SLOT_COUNT
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {number} slotId
 * @return {number}
 */
global.InventoryGetChildrenInSlotCount = function (inventoryId, guid, slotId) {
  return _in(0x033ee4b8, 0x9f3ac545, inventoryId, guid, _ch(slotId), _r, _ri);
};

/**
 * INVENTORY_GET_GUID_FROM_ITEMID
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {number} p2
 * @param {number} slotId
 * @param {DataView} outGuid
 * @return {boolean}
 */
global.InventoryGetGuidFromItemid = function (inventoryId, guid, p2, slotId, outGuid) {
  return _in(0x886dfd3e, 0x185c8a89, inventoryId, guid, _ch(p2), _ch(slotId), outGuid, _r);
};

/**
 * INVENTORY_GET_INVENTORY_ITEM
 *
 * @param {number} inventoryId
 * @param {DataView} inData
 * @param {DataView} outData
 * @param {boolean} p3
 * @return {boolean}
 */
global.InventoryGetInventoryItem = function (inventoryId, inData, outData, p3) {
  return _in(0x9700e8ef, 0xc4ab9089, inventoryId, inData, outData, p3, _r);
};

/**
 * _0x0349404A22736740
 * Params: p0 is only 0 or 1
 * Only used in R* SP Scripts
 *
 * @param {boolean} p0
 * @param {number} inventoryId
 * @param {DataView} guid
 * @return {void}
 */
global.N_0x0349404A22736740 = function (p0, inventoryId, guid) {
  return _in(0x0349404a, 0x22736740, p0, inventoryId, guid);
};

/**
 * _0x112BCA290D2EB53C
 * Only used in R* SP Scripts
 *
 * @param {number} inventoryId
 * @param {number} p1
 * @return {[boolean, number, number, number, number, number, number]}
 */
global.N_0x112BCA290D2EB53C = function (inventoryId, p1) {
  return _in(0x112bca29, 0x0d2eb53c, inventoryId, _ch(p1), _i, _i, _i, _i, _i, _i, _r);
};

/**
 * _0x46743BBFEDBC859E
 * eInventoryItem: CLOTHING_FANCY_SUIT, CLOTHING_GUNSLINGER_OUTFIT, etc.
 * Only used in R* SP Scripts
 *
 * @param {number} inventoryId
 * @param {number} eInventoryItem
 * @param {boolean} p2
 * @return {void}
 */
global.N_0x46743BBFEDBC859E = function (inventoryId, eInventoryItem, p2) {
  return _in(0x46743bbf, 0xedbc859e, inventoryId, _ch(eInventoryItem), p2);
};

/**
 * _0x46DB71883EE9D5AF
 * Returns databindingEntryId to be used with 0x951847CEF3D829FF (p0)
 *
 * @param {any} data
 * @param {string | number} stats
 * @param {DataView} guid
 * @param {number} ped
 * @return {number}
 */
global.N_0x46DB71883EE9D5AF = function (data, stats, guid, ped) {
  return _in(0x46db7188, 0x3ee9d5af, data, _ts(stats), guid, ped, _r, _ri);
};

/**
 * _0x5D6182F3BCE1333B
 * removeReason: REMOVE_REASON_DEFAULT (eRemoveItemReason)
 * Example: INVENTORY::_0x5D6182F3BCE1333B(1, joaat("REMOVE_REASON_DEFAULT")); -> clears weapon wheel
 * Only used in R* SP Scripts
 *
 * @param {number} inventoryId
 * @param {number} removeReason
 * @return {boolean}
 */
global.N_0x5D6182F3BCE1333B = function (inventoryId, removeReason) {
  return _in(0x5d6182f3, 0xbce1333b, inventoryId, _ch(removeReason), _r);
};

/**
 * _0x6862E4D93F64CF01
 * Only used in R* SP Scripts
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {number} p2
 * @param {DataView} p3
 * @return {boolean}
 */
global.N_0x6862E4D93F64CF01 = function (inventoryId, guid, p2, p3) {
  return _in(0x6862e4d9, 0x3f64cf01, inventoryId, guid, _ch(p2), p3, _r);
};

/**
 * _0x6968CE7AC32F6788
 * Only used in R* SP Scripts
 *
 * @param {number} inventoryId
 * @return {void}
 */
global.N_0x6968CE7AC32F6788 = function (inventoryId) {
  return _in(0x6968ce7a, 0xc32f6788, inventoryId);
};

/**
 * _0x75CFAC49301E134E
 * p0: value returned by 0x9D21B185ABC2DBC5
 *
 * @param {any} data
 * @param {boolean} p1
 * @param {number} ped
 * @return {void}
 */
global.N_0x75CFAC49301E134E = function (data, p1, ped) {
  return _in(0x75cfac49, 0x301e134e, data, p1, ped);
};

/**
 * _0x75CFAC49301E134F
 * p1, p2: 0
 *
 * @param {number} databindingEntryId
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0x75CFAC49301E134F = function (databindingEntryId, p1, p2) {
  return _in(0x75cfac49, 0x301e134f, _ch(databindingEntryId), p1, p2);
};

/**
 * _0x951847CEF3D829FF
 * p0: value returned by 0x46DB71883EE9D5AF
 *
 * @param {any} p0
 * @param {DataView} outGuid
 * @param {number} ped
 * @return {void}
 */
global.N_0x951847CEF3D829FF = function (p0, outGuid, ped) {
  return _in(0x951847ce, 0xf3d829ff, p0, outGuid, ped);
};

/**
 * _0x9AC53CB6907B4428
 * p1 (out) and p2 (in) are both script arrays?
 * item: can be a component item, see SHOP_CATALOG_BUILD_LIST_OF_WEAPON_COMPONENTS
 *
 * @param {number} item
 * @param {DataView} p1
 * @param {DataView} p2
 * @return {boolean}
 */
global.N_0x9AC53CB6907B4428 = function (item, p1, p2) {
  return _in(0x9ac53cb6, 0x907b4428, _ch(item), p1, p2, _r);
};

/**
 * _0x9B4E793B1CB6550A
 * Used in function SET_SHOP_BEING_ROBBED and many other shop related scripts and functions.
 * INVENTORY_A*
 *

 * @return {void}
 */
global.N_0x9B4E793B1CB6550A = function () {
  return _in(0x9b4e793b, 0x1cb6550a);
};

/**
 * _0x9D21B185ABC2DBC4
 * p0 is the return value of DATABINDING::_DATABINDING_ADD_DATA_CONTAINER_FROM_PATH
 * p2, p3: 0
 * Returns databindingEntryId
 *
 * @param {any} data
 * @param {string | number} effects
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {number}
 */
global.N_0x9D21B185ABC2DBC4 = function (data, effects, p2, p3) {
  return _in(0x9d21b185, 0xabc2dbc4, data, _ts(effects), p2, p3, _r, _ri);
};

/**
 * _0x9D21B185ABC2DBC5
 * p2: 0
 * p3: -1
 * Returns databindingEntryId to be used with 0x75CFAC49301E134E (p0)
 *
 * @param {any} data
 * @param {string | number} stats
 * @param {number} p2
 * @param {number} p3
 * @return {number}
 */
global.N_0x9D21B185ABC2DBC5 = function (data, stats, p2, p3) {
  return _in(0x9d21b185, 0xabc2dbc5, data, _ts(stats), p2, p3, _r, _ri);
};

/**
 * _0x9E58207B194488AC
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x9E58207B194488AC = function (ped, p1) {
  return _in(0x9e58207b, 0x194488ac, ped, p1);
};

/**
 * _0xB1DD74A1F5536622
 *
 * @param {number} inventoryId
 * @param {DataView} itemGuid
 * @return {boolean}
 */
global.N_0xB1DD74A1F5536622 = function (inventoryId, itemGuid) {
  return _in(0xb1dd74a1, 0xf5536622, inventoryId, itemGuid, _r);
};

/**
 * _0xD08685BA892DBFAB
 * Params: p3 returns an int between 0 and 20 (?)
 * Only used in R* SP Scripts
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @return {[boolean, number, number]}
 */
global.N_0xD08685BA892DBFAB = function (inventoryId, guid) {
  return _in(0xd08685ba, 0x892dbfab, inventoryId, guid, _i, _i, _r);
};

/**
 * _0xE1F45A67A9F0DCBC
 * Only used in R* SP Scripts
 *
 * @param {number} inventoryId
 * @return {void}
 */
global.N_0xE1F45A67A9F0DCBC = function (inventoryId) {
  return _in(0xe1f45a67, 0xa9f0dcbc, inventoryId);
};

/**
 * _0xE36D4A38D28D9CFB
 * Only used in R* SP Scripts
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0xE36D4A38D28D9CFB = function (p0) {
  return _in(0xe36d4a38, 0xd28d9cfb, p0);
};

/**
 * _GET_DEFAULT_ITEM_SLOT_INFO
 * p1: WARDROBE, KIT_CAMP, CHARACTER, KIT_MOONSHINER_PROPERTY
 * Returns slot hash
 *
 * @param {number} item
 * @param {number} p1
 * @return {number}
 */
global.GetDefaultItemSlotInfo = function (item, p1) {
  return _in(0x6452b1d3, 0x57d81742, _ch(item), _ch(p1), _r, _ri);
};

/**
 * _GET_ITEM_ROLE_MAX_LEVEL_COUNT
 *
 * @param {number} inventoryId
 * @param {number} eRoleMaxLevel
 * @return {number}
 */
global.GetItemRoleMaxLevelCount = function (inventoryId, eRoleMaxLevel) {
  return _in(0xaddd1e7c, 0x0ecf7d95, inventoryId, _ch(eRoleMaxLevel), _r, _ri);
};

/**
 * _GET_ITEM_SLOT_MAX_COUNT
 *
 * @param {number} provision
 * @param {number} slotId
 * @return {number}
 */
global.GetItemSlotMaxCount = function (provision, slotId) {
  return _in(0xe80e50be, 0xe276a54a, _ch(provision), _ch(slotId), _r, _ri);
};

/**
 * _INVENTORY_ADD_ITEM_WITH_GUID
 * inventoryItemSlotHash: https://pastebin.com/P6fyr3vr
 *
 * @param {number} inventoryId
 * @param {DataView} guid1
 * @param {DataView} guid2
 * @param {number} item
 * @param {number} inventoryItemSlot
 * @param {number} p5
 * @param {number} addReason
 * @return {boolean}
 */
global.InventoryAddItemWithGuid = function (inventoryId, guid1, guid2, item, inventoryItemSlot, p5, addReason) {
  return _in(0xcb5d11f9, 0x508a928d, inventoryId, guid1, guid2, _ch(item), _ch(inventoryItemSlot), p5, _ch(addReason), _r);
};

/**
 * _INVENTORY_ARE_LOCAL_CHANGES_ALLOWED
 * inventoryId: see _INVENTORY_GET_PED_INVENTORY_ID
 *
 * @param {number} inventoryId
 * @return {boolean}
 */
global.InventoryAreLocalChangesAllowed = function (inventoryId) {
  return _in(0x0fbbffc8, 0x91a97c81, inventoryId, _r);
};

/**
 * _INVENTORY_COMPARE_GUIDS
 *
 * @param {DataView} guid1
 * @param {DataView} guid2
 * @return {boolean}
 */
global.InventoryCompareGuids = function (guid1, guid2) {
  return _in(0x4c543d5d, 0xfcd2dafd, guid1, guid2, _r);
};

/**
 * _INVENTORY_COPY_ITEM_TO_INVENTORY
 *
 * @param {number} inventoryId
 * @param {number} inventoryIdCloned
 * @param {DataView} p2
 * @param {any} p3
 * @return {void}
 */
global.InventoryCopyItemToInventory = function (inventoryId, inventoryIdCloned, p2, p3) {
  return _in(0xc04f47d4, 0x88ef9eba, inventoryId, inventoryIdCloned, p2, p3);
};

/**
 * _INVENTORY_COPY_ITEM_TO_MISSION_INVENTORY
 *
 * @param {DataView} guid
 * @param {boolean} p1
 * @return {void}
 */
global.InventoryCopyItemToMissionInventory = function (guid, p1) {
  return _in(0x3112adb9, 0xd5f3426b, guid, p1);
};

/**
 * _INVENTORY_CREATE_ITEM_COLLECTION
 * filterName (collections): "ALL", "ALL SATCHEL", "ALL HORSES", "ALL COACHES", "ALL MOUNTS", "ALL CLOTHING", "ALL WEAPONS", "ALL SATCHEL EXCLUDING CLOTHING", "ALL EXCLUDING CLOTHING"
 * slotId: -1591664384
 * p3: outCollectionSize (?)
 * Returns collectionId
 *
 * @param {number} inventoryId
 * @param {string | number} filterName
 * @param {number} slotId
 * @return {[number, number]}
 */
global.InventoryCreateItemCollection = function (inventoryId, filterName, slotId) {
  return _in(0x80d78bdc, 0x9d88ef07, inventoryId, _ts(filterName), _ch(slotId), _i, _r, _ri);
};

/**
 * _INVENTORY_CREATE_ITEM_COLLECTION_2
 * Returns collectionId
 *

 * @return {[number, number]}
 */
global.InventoryCreateItemCollection_2 = function () {
  return _in(0x97a36466, 0x45727f42, _i, _r, _ri);
};

/**
 * _INVENTORY_CREATE_ITEM_COLLECTION_WITH_FILTER
 *
 * @param {number} inventoryId
 * @param {DataView} filter
 * @return {[number, number]}
 */
global.InventoryCreateItemCollectionWithFilter = function (inventoryId, filter) {
  return _in(0x640f890c, 0x3e5a3ffd, inventoryId, filter, _i, _r, _ri);
};

/**
 * _INVENTORY_CREATE_SORTED_COLLECTION
 * p1: 32
 * Returns collectionId
 *
 * @param {number} inventoryId
 * @param {number} p1
 * @return {[number, number]}
 */
global.InventoryCreateSortedCollection = function (inventoryId, p1) {
  return _in(0xbb7f9686, 0x75b34b0c, inventoryId, p1, _i, _r, _ri);
};

/**
 * _INVENTORY_DISABLE_ITEM
 * Example: (1, WEAPON_REVOLVER_CATTLEMAN, 0) - disables cattleman revolver on weapon wheel
 *
 * @param {number} inventoryId
 * @param {number} item
 * @param {number} gtxReason
 * @return {void}
 */
global.InventoryDisableItem = function (inventoryId, item, gtxReason) {
  return _in(0x766315a5, 0x64594401, inventoryId, _ch(item), _ch(gtxReason));
};

/**
 * _INVENTORY_DISABLE_WEAPONS
 * Params: p1 = 0
 *
 * @param {number} inventoryId
 * @param {any} p1
 * @return {void}
 */
global.InventoryDisableWeapons = function (inventoryId, p1) {
  return _in(0xe3a46370, 0xf70f3607, inventoryId, p1);
};

/**
 * _INVENTORY_DOES_ITEM_OWN_EQUIPMENT
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {number} item
 * @return {boolean}
 */
global.InventoryDoesItemOwnEquipment = function (inventoryId, guid, item) {
  return _in(0x88b58b83, 0xa43a8cab, inventoryId, guid, _ch(item), _r);
};

/**
 * _INVENTORY_ENABLE_ITEM
 *
 * @param {number} inventoryId
 * @param {number} item
 * @return {void}
 */
global.InventoryEnableItem = function (inventoryId, item) {
  return _in(0x6a564540, 0xfac12211, inventoryId, _ch(item));
};

/**
 * _INVENTORY_ENABLE_WEAPONS
 *
 * @param {number} inventoryId
 * @return {void}
 */
global.InventoryEnableWeapons = function (inventoryId) {
  return _in(0xd5d72f16, 0x24f3ba7c, inventoryId);
};

/**
 * _INVENTORY_EQUIP_ITEM_WITH_GUID
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {boolean} bEquipped
 * @return {boolean}
 */
global.InventoryEquipItemWithGuid = function (inventoryId, guid, bEquipped) {
  return _in(0x734311e2, 0x852760d0, inventoryId, guid, bEquipped, _r);
};

/**
 * _INVENTORY_FITS_SLOT_ID
 *
 * @param {number} item
 * @param {number} slotId
 * @return {boolean}
 */
global.InventoryFitsSlotId = function (item, slotId) {
  return _in(0x780c5b9a, 0xe2819807, _ch(item), _ch(slotId), _r);
};

/**
 * _INVENTORY_GET_CHILDREN_COUNT
 *
 * @param {number} inventoryId
 * @param {DataView} parentGuid
 * @return {number}
 */
global.InventoryGetChildrenCount = function (inventoryId, parentGuid) {
  return _in(0xe843d21a, 0x8e2498aa, inventoryId, parentGuid, _r, _ri);
};

/**
 * _INVENTORY_GET_FULL_INVENTORY_ITEM_DATA
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {DataView} p2
 * @param {number} p3
 * @param {number} p4
 * @return {boolean}
 */
global.InventoryGetFullInventoryItemData = function (inventoryId, guid, p2, p3, p4) {
  return _in(0x025a1b1f, 0xb03fbf61, inventoryId, guid, p2, p3, p4, _r);
};

/**
 * _INVENTORY_GET_INVENTORY_ID_FROM_PED
 * Returns a unique inventory ID for this ped.
 * For the local player ped, it is an eInventories value.
 * For other peds, it is the inventory address casted to unsigned int.
 * 
 * enum eInventories
 * {
 *   INVENTORY_INVALID,
 *   INVENTORY_SP_PLAYER,
 *   INVENTORY_MP_PLAYER,
 *   INVENTORY_MP_MISSION,
 *   INVENTORY_SECOND_SCREEN,
 *   INVENTORY_SP_BACKUP,
 *   INVENTORY_SP_SNAPSHOT,
 *   INVENTORY_0xDE2AE452,
 *   INVENTORY_0x399D9B3A,
 *   INVENTORY_0x4BD43FA7,
 *   INVENTORY_0x9529D251,
 *   INVENTORY_0xA75776AC,
 *   INVENTORY_MAX_ID = 11,
 *   INVENTORY_IDS_COUNT
 * };
 *
 * @param {number} ped
 * @return {number}
 */
global.InventoryGetInventoryIdFromPed = function (ped) {
  return _in(0x13d234a2, 0xa3f66e63, ped, _r, _ri);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_CHILD
 *
 * @param {number} inventoryId
 * @param {DataView} parentGuid
 * @param {any} childIndex
 * @param {DataView} outInventoryItem
 * @return {boolean}
 */
global.InventoryGetInventoryItemChild = function (inventoryId, parentGuid, childIndex, outInventoryItem) {
  return _in(0xcd9a485f, 0x2b383b44, inventoryId, parentGuid, childIndex, outInventoryItem, _r);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_COUNT_WITH_GUID
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {boolean} p2
 * @return {number}
 */
global.InventoryGetInventoryItemCountWithGuid = function (inventoryId, guid, p2) {
  return _in(0xc97e0d23, 0x02382211, inventoryId, guid, p2, _r, _ri);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_COUNT_WITH_ITEMID
 *
 * @param {number} inventoryId
 * @param {number} eInventoryItem
 * @param {boolean} p2
 * @return {number}
 */
global.InventoryGetInventoryItemCountWithItemid = function (inventoryId, eInventoryItem, p2) {
  return _in(0xe787f05d, 0xfc977bde, inventoryId, _ch(eInventoryItem), p2, _r, _ri);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_DESCRIPTION_HASH
 *
 * @param {number} item
 * @return {number}
 */
global.InventoryGetInventoryItemDescriptionHash = function (item) {
  return _in(0xa4550fe9, 0xc512e3dd, _ch(item), _r, _ri);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_EQUIPPED_IN_SLOT
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {number} slotId
 * @param {number} p3
 * @param {DataView} p4
 * @return {number}
 */
global.InventoryGetInventoryItemEquippedInSlot = function (inventoryId, guid, slotId, p3, p4) {
  return _in(0xbe012571, 0xb25f5aca, inventoryId, guid, _ch(slotId), p3, p4, _r, _ri);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_EQUIPPED_IN_SLOT_BY_REF
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {number} slotId
 * @param {DataView} outGuid
 * @return {boolean}
 */
global.InventoryGetInventoryItemEquippedInSlotByRef = function (inventoryId, guid, slotId, outGuid) {
  return _in(0x22e590f1, 0x08289a9d, inventoryId, guid, _ch(slotId), outGuid, _r);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_FIT_SLOT
 *
 * @param {number} p0
 * @param {DataView} p1
 * @param {number} p2
 * @return {boolean}
 */
global.InventoryGetInventoryItemFitSlot = function (p0, p1, p2) {
  return _in(0xb991fe16, 0x6faf84fd, _ch(p0), p1, p2, _r);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_HIDDEN
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @return {boolean}
 */
global.InventoryGetInventoryItemHidden = function (inventoryId, guid) {
  return _in(0xf9933164, 0x965533b7, inventoryId, guid, _r);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_INSPECTION_INFO
 *
 * @param {number} item
 * @param {DataView} info
 * @return {boolean}
 */
global.InventoryGetInventoryItemInspectionInfo = function (item, info) {
  return _in(0x0c093c17, 0x87f18519, _ch(item), info, _r);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_IN_USE
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @return {boolean}
 */
global.InventoryGetInventoryItemInUse = function (inventoryId, guid) {
  return _in(0x70e3a884, 0xed000a01, inventoryId, guid, _r);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_IS_ANIMAL_PELT
 *
 * @param {number} item
 * @return {boolean}
 */
global.InventoryGetInventoryItemIsAnimalPelt = function (item) {
  return _in(0x4aef1fb5, 0xb9011d75, _ch(item), _r);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_SOUND
 * soundType: see 0x2BAE4880DCDD560B
 * Returns item Hash to be used with _IS_SCRIPTED_AUDIO_CUSTOM and _PLAY_SOUND_FROM_ITEM (p0)
 *
 * @param {number} item
 * @param {number} soundType
 * @return {number}
 */
global.InventoryGetInventoryItemSound = function (item, soundType) {
  return _in(0x2e1cdc1f, 0xf3b8473e, _ch(item), soundType, _r, _ri);
};

/**
 * _INVENTORY_GET_INVENTORY_ITEM_WEAPON_COPY_ID
 * Returns CopyID
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @return {number}
 */
global.InventoryGetInventoryItemWeaponCopyId = function (inventoryId, guid) {
  return _in(0xab5f1274, 0x6a099a0e, inventoryId, guid, _r, _ri);
};

/**
 * _INVENTORY_GET_IS_INVENTORY_ITEM_SOUND_VALID
 * soundType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CItemInfoSoundsInterface__sSoundsInfo__eSoundType
 *
 * @param {number} item
 * @param {number} soundType
 * @return {boolean}
 */
global.InventoryGetIsInventoryItemSoundValid = function (item, soundType) {
  return _in(0x2bae4880, 0xdcdd560b, _ch(item), soundType, _r);
};

/**
 * _INVENTORY_GET_ITEM_EXPIRY_TIME
 *
 * @param {DataView} itemGuid
 * @return {number}
 */
global.InventoryGetItemExpiryTime = function (itemGuid) {
  return _in(0x4a606c17, 0x276e1bcc, itemGuid, _r, _ri);
};

/**
 * _INVENTORY_GET_ITEM_FROM_COLLECTION_INDEX
 * collectionId is < outCollectionSize
 *
 * @param {number} collectionId
 * @param {number} itemIndex
 * @param {DataView} itemData
 * @return {boolean}
 */
global.InventoryGetItemFromCollectionIndex = function (collectionId, itemIndex, itemData) {
  return _in(0x82fa24c3, 0xd3fcd9b7, collectionId, itemIndex, itemData, _r);
};

/**
 * _INVENTORY_IS_GUID_VALID
 *
 * @param {DataView} guid
 * @return {boolean}
 */
global.InventoryIsGuidValid = function (guid) {
  return _in(0xb881ca83, 0x6cc4b6d4, guid, _r);
};

/**
 * _INVENTORY_IS_INVENTORY_ITEM_EQUIPPED
 * Alternative Name: _INVENTORY_IS_ITEM_DISABLED
 *
 * @param {number} inventoryId
 * @param {number} item
 * @param {boolean} p2
 * @return {boolean}
 */
global.InventoryIsInventoryItemEquipped = function (inventoryId, item, p2) {
  return _in(0x3d10d717, 0x9d7034af, inventoryId, _ch(item), p2, _r);
};

/**
 * _INVENTORY_IS_INVENTORY_ITEM_FLAG_ENABLED
 * flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ItemDatabaseItemFlags
 * 2097152 (is item read?), 8388608 (is item sent/received/mailable?), 16777216 (is item consumable?)
 *
 * @param {number} item
 * @param {number} flag
 * @return {boolean}
 */
global.InventoryIsInventoryItemFlagEnabled = function (item, flag) {
  return _in(0x245d0765, 0x1b1d183b, _ch(item), flag, _r);
};

/**
 * _INVENTORY_IS_ITEM_EXPIRED
 *
 * @param {DataView} itemGuid
 * @return {boolean}
 */
global.InventoryIsItemExpired = function (itemGuid) {
  return _in(0x0137c77a, 0x2ec64536, itemGuid, _r);
};

/**
 * _INVENTORY_IS_PLAYER_INVENTORY_MIRRORING_TRANSACTIONS
 *

 * @return {boolean}
 */
global.InventoryIsPlayerInventoryMirroringTransactions = function () {
  return _in(0xfc7563f4, 0x82781a3d, _r);
};

/**
 * _INVENTORY_MOVE_INVENTORY_ITEM
 * guid1: old parent GUID
 * guid2: new parent GUID
 * guid3: new item GUID (out param)
 *
 * @param {number} inventoryId
 * @param {DataView} guid1
 * @param {DataView} guid2
 * @param {number} slotId
 * @param {number} quantity
 * @param {DataView} outGuid
 * @return {boolean}
 */
global.InventoryMoveInventoryItem = function (inventoryId, guid1, guid2, slotId, quantity, outGuid) {
  return _in(0xdccaa7c3, 0xbfd88862, inventoryId, guid1, guid2, _ch(slotId), quantity, outGuid, _r);
};

/**
 * _INVENTORY_RELEASE_ITEM_COLLECTION
 * Max num of collections is 5, so release your unused ones.
 *
 * @param {number} collectionId
 * @return {boolean}
 */
global.InventoryReleaseItemCollection = function (collectionId) {
  return _in(0x42a2f33a, 0x1942e865, collectionId, _r);
};

/**
 * _INVENTORY_REMOVE_INVENTORY_ITEM_WITH_GUID
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {number} quantity
 * @param {number} removeReason
 * @return {boolean}
 */
global.InventoryRemoveInventoryItemWithGuid = function (inventoryId, guid, quantity, removeReason) {
  return _in(0x3e4e8114, 0x80b3ae79, inventoryId, guid, quantity, _ch(removeReason), _r);
};

/**
 * _INVENTORY_REMOVE_INVENTORY_ITEM_WITH_ITEMID
 *
 * @param {number} inventoryId
 * @param {number} item
 * @param {number} quantity
 * @param {number} removeReason
 * @return {boolean}
 */
global.InventoryRemoveInventoryItemWithItemid = function (inventoryId, item, quantity, removeReason) {
  return _in(0xb4158c8c, 0x9a3b5dce, inventoryId, _ch(item), quantity, _ch(removeReason), _r);
};

/**
 * _INVENTORY_SET_INVENTORY_ITEM_HIDDEN
 * Used with CClothingItem
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {boolean} hidden
 * @return {void}
 */
global.InventorySetInventoryItemHidden = function (inventoryId, guid, hidden) {
  return _in(0x9a113c66, 0x0aea3832, inventoryId, guid, hidden);
};

/**
 * _INVENTORY_SET_INVENTORY_ITEM_HIDDEN_2
 * Used with CSatchelItem, R* Script usage: fisihing_core
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {boolean} hidden
 * @return {void}
 */
global.InventorySetInventoryItemHidden_2 = function (inventoryId, guid, hidden) {
  return _in(0xd740f11f, 0xbc8aef43, inventoryId, guid, hidden);
};

/**
 * _INVENTORY_SET_INVENTORY_ITEM_INSPECTION_ENABLED
 *
 * @param {number} inventoryId
 * @param {DataView} p1
 * @param {boolean} enabled
 * @return {boolean}
 */
global.InventorySetInventoryItemInspectionEnabled = function (inventoryId, p1, enabled) {
  return _in(0x227522fd, 0x59ddb7e8, inventoryId, p1, enabled, _r);
};

/**
 * _INVENTORY_SET_INVENTORY_ITEM_IN_USE
 * Only works on CClothingItem
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {boolean} inUse
 * @return {void}
 */
global.InventorySetInventoryItemInUse = function (inventoryId, guid, inUse) {
  return _in(0x65a5f70f, 0x4a292ebe, inventoryId, guid, inUse);
};

/**
 * _INVENTORY_SET_INVENTORY_ITEM_WEATHER_EFFECTIVENESS
 * OWE_INVALID = -1,
 * OWE_GOOD_IN_HOT
 * OWE_GOOD_IN_NONE
 * OWE_GOOD_IN_COLD
 * OWE_GOOD_IN_ALL
 *
 * @param {number} inventoryId
 * @param {DataView} guid
 * @param {number} weatherEffectiveness
 * @return {void}
 */
global.InventorySetInventoryItemWeatherEffectiveness = function (inventoryId, guid, weatherEffectiveness) {
  return _in(0x6d2f9877, 0x36a42d4c, inventoryId, guid, weatherEffectiveness);
};

/**
 * _INVENTORY_SWAP_INVENTORY_ITEM
 *
 * @param {number} inventoryId
 * @param {DataView} guid1
 * @param {DataView} guid2
 * @return {boolean}
 */
global.InventorySwapInventoryItem = function (inventoryId, guid1, guid2) {
  return _in(0xf2753d69, 0x1bcda314, inventoryId, guid1, guid2, _r);
};

/**
 * _INVENTORY_UPDATE_INVENTORY_ITEM
 * Getter: _INVENTORY_GET_FULL_INVENTORY_ITEM_DATA
 *
 * @param {number} inventoryId
 * @param {DataView} guid1
 * @param {DataView} guid2
 * @param {number} p3
 * @return {boolean}
 */
global.InventoryUpdateInventoryItem = function (inventoryId, guid1, guid2, p3) {
  return _in(0xd80a8854, 0xdb5cfba5, inventoryId, guid1, guid2, p3, _r);
};

/**
 * _INVENTORY_USE_MISSION_INVENTORY
 *
 * @param {boolean} enable
 * @param {boolean} mirrorTransactions
 * @return {void}
 */
global.InventoryUseMissionInventory = function (enable, mirrorTransactions) {
  return _in(0xa6aa9f56, 0xbc6cff58, enable, mirrorTransactions);
};

/**
 * _INVENTORY_USE_SP_BACKUP
 *

 * @return {boolean}
 */
global.InventoryUseSpBackup = function () {
  return _in(0x7c7e4ab7, 0x48ea3b07, _r);
};

/**
 * _SET_CARRIABLE_CARRY_ACTION_PROMPT_OVERRIDE
 *
 * @param {DataView} data
 * @return {void}
 */
global.SetCarriableCarryActionPromptOverride = function (data) {
  return _in(0xf666ef30, 0xf4f0ac4e, data);
};

/**
 * _SET_ITEM_PROMPT_INFO_REQUEST
 *
 * @param {DataView} p0
 * @return {void}
 */
global.SetItemPromptInfoRequest = function (p0) {
  return _in(0xfd41d1d4, 0x350f6413, p0);
};

/**
 * _SET_USE_MISSION_INVENTORY
 * This native has no functionality.
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetUseMissionInventory = function (toggle) {
  return _in(0x597f571d, 0xdee3ffac, toggle);
};

/**
 * ITEMDATABASE_FILLOUT_ITEM_BY_NAME
 *
 * @param {number} key
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutItemByName = function (key, outData) {
  return _in(0x2a610bee, 0x7d341cc4, _ch(key), outData, _r);
};

/**
 * ITEMDATABASE_FILLOUT_ITEM_EFFECT_ID_INFO
 *
 * @param {number} key
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutItemEffectIdInfo = function (key, outData) {
  return _in(0xcf2d360d, 0x27fd1abf, _ch(key), outData, _r);
};

/**
 * ITEMDATABASE_FILLOUT_ITEM_INFO
 *
 * @param {number} key
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutItemInfo = function (key, outData) {
  return _in(0xfe90abbc, 0xbfdc13b2, _ch(key), outData, _r);
};

/**
 * ITEMDATABASE_IS_BUYABLE_AWARD_VALID
 *
 * @param {number} award
 * @return {boolean}
 */
global.ItemdatabaseIsBuyableAwardValid = function (award) {
  return _in(0x4ce75320, 0x3fa42214, _ch(award), _r);
};

/**
 * _0x17721003A66C72BF
 *
 * @param {number} shopType
 * @param {number} key
 * @param {DataView} outData
 * @return {boolean}
 */
global.N_0x17721003A66C72BF = function (shopType, key, outData) {
  return _in(0x17721003, 0xa66c72bf, _ch(shopType), _ch(key), outData, _r);
};

/**
 * _0x1FC25AEB5F76B38D
 * _ITEMDATABASE_GET_AWARD_ACQUIRE_COST
 *
 * @param {number} award
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.N_0x1FC25AEB5F76B38D = function (award, index, outData) {
  return _in(0x1fc25aeb, 0x5f76b38d, _ch(award), index, outData, _r);
};

/**
 * _0x388088BFF3681189
 *
 * @param {number} bundle
 * @param {number} costtype
 * @return {number}
 */
global.N_0x388088BFF3681189 = function (bundle, costtype) {
  return _in(0x388088bf, 0xf3681189, _ch(bundle), _ch(costtype), _r, _ri);
};

/**
 * _0x3A0B667ABFF87F6E
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {boolean}
 */
global.N_0x3A0B667ABFF87F6E = function (p0, p1, p2) {
  return _in(0x3a0b667a, 0xbff87f6e, p0, p1, p2, _r);
};

/**
 * _0x48229CE0C7938237
 * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
 *
 * @param {number} award
 * @return {number}
 */
global.N_0x48229CE0C7938237 = function (award) {
  return _in(0x48229ce0, 0xc7938237, _ch(award), _r, _ri);
};

/**
 * _0x537A0555F62CA01A
 *
 * @param {number} key
 * @param {number} p1
 * @return {boolean}
 */
global.N_0x537A0555F62CA01A = function (key, p1) {
  return _in(0x537a0555, 0xf62ca01a, _ch(key), p1, _r);
};

/**
 * _0x799FCD53358ED5FA
 * Returns Item Count
 *
 * @param {any} bundle
 * @param {any} p1
 * @return {number}
 */
global.N_0x799FCD53358ED5FA = function (bundle, p1) {
  return _in(0x799fcd53, 0x358ed5fa, bundle, p1, _r, _ri);
};

/**
 * _0x7A35A72A692BE9DB
 *
 * @param {any} p0
 * @return {number}
 */
global.N_0x7A35A72A692BE9DB = function (p0) {
  return _in(0x7a35a72a, 0x692be9db, p0, _r, _ri);
};

/**
 * _0x8870895BA5ED9385
 *
 * @param {number} key
 * @param {number} tagType
 * @param {DataView} outData
 * @return {number}
 */
global.N_0x8870895BA5ED9385 = function (key, tagType, outData) {
  return _in(0x8870895b, 0xa5ed9385, _ch(key), _ch(tagType), outData, _r, _ri);
};

/**
 * _0x8D029948CA29409B
 * _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
 *
 * @param {number} award
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.N_0x8D029948CA29409B = function (award, index, outData) {
  return _in(0x8d029948, 0xca29409b, _ch(award), index, outData, _r);
};

/**
 * _0xAA29A5F13B2C20B2
 * Returns Pathset Hash
 *
 * @param {any} p0
 * @param {number} p1
 * @return {number}
 */
global.N_0xAA29A5F13B2C20B2 = function (p0, p1) {
  return _in(0xaa29a5f1, 0x3b2c20b2, p0, _ch(p1), _r, _ri);
};

/**
 * _0xC4146375D8A0B374
 *
 * @param {any} bundle
 * @param {any} p1
 * @param {number} index
 * @param {any} p3
 * @return {boolean}
 */
global.N_0xC4146375D8A0B374 = function (bundle, p1, index, p3) {
  return _in(0xc4146375, 0xd8a0b374, bundle, p1, index, p3, _r);
};

/**
 * _0xD076DB9B96FAADF1
 *
 * @param {number} award
 * @param {DataView} outData
 * @return {boolean}
 */
global.N_0xD076DB9B96FAADF1 = function (award, outData) {
  return _in(0xd076db9b, 0x96faadf1, _ch(award), outData, _r);
};

/**
 * _0xDBEADA0DF5F9AB9F
 *
 * @param {number} layout
 * @param {number} index
 * @return {[boolean, number]}
 */
global.N_0xDBEADA0DF5F9AB9F = function (layout, index) {
  return _in(0xdbeada0d, 0xf5f9ab9f, _ch(layout), index, _i, _r);
};

/**
 * _ITEMDATABASE_CAN_EQUIP_ITEM_ON_CATEGORY
 *
 * @param {number} key
 * @param {number} category
 * @param {number} slotId
 * @return {boolean}
 */
global.ItemdatabaseCanEquipItemOnCategory = function (key, category, slotId) {
  return _in(0x856ff92c, 0x57742ae5, _ch(key), _ch(category), _ch(slotId), _r);
};

/**
 * _ITEMDATABASE_CREATE_ITEM_COLLECTION
 * Returns collectionId to be used with 0x8750F69A720C2E41 (p0) and 0xCBB7B6EDFA933ADE (p0)
 *
 * @param {DataView} data
 * @param {number} comparisonType
 * @return {[number, number]}
 */
global.ItemdatabaseCreateItemCollection = function (data, comparisonType) {
  return _in(0x71efa799, 0x9ae79408, data, _i, comparisonType, _r, _ri);
};

/**
 * _ITEMDATABASE_DOES_BUNDLE_HAVE_TAG
 * Params: tag = TAG_ITEM_PROPERTY (tagType(?))
 *
 * @param {number} bundle
 * @param {number} tag
 * @param {number} tagType
 * @return {boolean}
 */
global.ItemdatabaseDoesBundleHaveTag = function (bundle, tag, tagType) {
  return _in(0x99c6ea66, 0xdfe73757, _ch(bundle), _ch(tag), _ch(tagType), _r);
};

/**
 * _ITEMDATABASE_DOES_ITEM_HAVE_TAG
 *
 * @param {number} item
 * @param {number} tag
 * @param {number} tagType
 * @return {boolean}
 */
global.ItemdatabaseDoesItemHaveTag = function (item, tag, tagType) {
  return _in(0xff5fb560, 0x5ad56856, _ch(item), _ch(tag), _ch(tagType), _r);
};

/**
 * _ITEMDATABASE_FILLOUT_ACQUIRE_COST
 *
 * @param {number} key
 * @param {number} costtype
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutAcquireCost = function (key, costtype, outData) {
  return _in(0x74f79288, 0x16e4e181, _ch(key), _ch(costtype), outData, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_AWARD_ACQUIRE_COST
 *
 * @param {number} award
 * @param {number} costtype
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutAwardAcquireCost = function (award, costtype, index, outData) {
  return _in(0xf27f01bb, 0xf5acd3f3, _ch(award), _ch(costtype), index, outData, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_AWARD_ITEM_INFO
 *
 * @param {number} award
 * @param {number} index
 * @return {[boolean, number]}
 */
global.ItemdatabaseFilloutAwardItemInfo = function (award, index) {
  return _in(0x121d2005, 0xdd64496b, _ch(award), index, _i, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_BUNDLE
 *
 * @param {number} bundle
 * @param {number} costtype
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutBundle = function (bundle, costtype, index, outData) {
  return _in(0xb5426326, 0x93d53408, _ch(bundle), _ch(costtype), index, outData, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_BUNDLE_UI_DATA
 *
 * @param {number} bundle
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutBundleUiData = function (bundle, outData) {
  return _in(0x74c3b109, 0x3728d263, _ch(bundle), outData, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_BUY_AWARD_ACQUIRE_COSTS
 *
 * @param {number} award
 * @param {DataView} outData
 * @param {number} p3
 * @return {[boolean, number]}
 */
global.ItemdatabaseFilloutBuyAwardAcquireCosts = function (award, outData, p3) {
  return _in(0xb52e20f6, 0x767a09a2, _ch(award), outData, _i, p3, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_BUY_AWARD_UI_DATA
 *
 * @param {number} award
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutBuyAwardUiData = function (award, outData) {
  return _in(0xf8d09ef8, 0xce61d7bf, _ch(award), outData, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_ITEM
 *
 * @param {number} key
 * @param {number} costtype
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutItem = function (key, costtype, index, outData) {
  return _in(0xad73b614, 0xdf26cf8a, _ch(key), _ch(costtype), index, outData, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_ITEM_EFFECT_IDS
 *
 * @param {number} key
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutItemEffectIds = function (key, outData) {
  return _in(0x9379be60, 0xdc55bbe6, _ch(key), outData, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_MODIFIER
 *
 * @param {number} key
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutModifier = function (key, index, outData) {
  return _in(0x60614a0a, 0xb580a2b5, _ch(key), index, outData, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_PRICE_MODIFIER_BY_KEY
 *
 * @param {number} key
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutPriceModifierByKey = function (key, outData) {
  return _in(0x40c5d958, 0x18823c94, _ch(key), outData, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_SATCHEL_DATA
 *
 * @param {number} key
 * @return {[boolean, number]}
 */
global.ItemdatabaseFilloutSatchelData = function (key) {
  return _in(0x4776efd7, 0x8f75c23f, _ch(key), _i, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_SELL_PRICE
 * Params: sellType = SELL_SHOP_DEFAULT
 *
 * @param {number} key
 * @param {number} sellType
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutSellPrice = function (key, sellType, outData) {
  return _in(0x7a62a2ee, 0xde1c3766, _ch(key), _ch(sellType), outData, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_TAG_DATA
 *
 * @param {number} key
 * @param {DataView} outData
 * @param {number} p3
 * @return {[boolean, number]}
 */
global.ItemdatabaseFilloutTagData = function (key, outData, p3) {
  return _in(0x5a11d6ee, 0xa17165b0, _ch(key), outData, _i, p3, _r);
};

/**
 * _ITEMDATABASE_FILLOUT_UI_DATA
 *
 * @param {number} key
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseFilloutUiData = function (key, outData) {
  return _in(0xb86f7cc2, 0xdc67ac60, _ch(key), outData, _r);
};

/**
 * _ITEMDATABASE_GET_ACQUIRE_COST
 *
 * @param {number} key
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetAcquireCost = function (key, index, outData) {
  return _in(0x6772a83c, 0x67a25775, _ch(key), index, outData, _r);
};

/**
 * _ITEMDATABASE_GET_ACQUIRE_COSTS_COUNT
 * Returns the number of <Item>s <acquirecosts> has from the key in catalog_sp.ymt
 *
 * @param {number} key
 * @return {number}
 */
global.ItemdatabaseGetAcquireCostsCount = function (key) {
  return _in(0x01fddad3, 0x92d04144, _ch(key), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_ACQUIRE_COSTS_COUNT_FROM_COST_TYPE
 *
 * @param {number} key
 * @param {number} costtype
 * @return {number}
 */
global.ItemdatabaseGetAcquireCostsCountFromCostType = function (key, costtype) {
  return _in(0xdee7b3c7, 0x6ed664be, _ch(key), _ch(costtype), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_AWARD_ACQUIRE_COST_COUNT
 *
 * @param {number} key
 * @return {number}
 */
global.ItemdatabaseGetAwardAcquireCostCount = function (key) {
  return _in(0x12df9c58, 0x201dd19a, _ch(key), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_AWARD_ACQUIRE_COST_COUNT_FROM_COST_TYPE
 *
 * @param {number} award
 * @param {number} costtype
 * @return {number}
 */
global.ItemdatabaseGetAwardAcquireCostCountFromCostType = function (award, costtype) {
  return _in(0xf540239f, 0x9937033b, _ch(award), _ch(costtype), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_AWARD_COST_MODIFIERS
 *
 * @param {number} award
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetAwardCostModifiers = function (award, outData) {
  return _in(0xe81d0378, 0xa384e755, _ch(award), outData, _r);
};

/**
 * _ITEMDATABASE_GET_AWARD_ITEM_COUNT
 * Returns iAwardItemCount
 *
 * @param {number} award
 * @return {number}
 */
global.ItemdatabaseGetAwardItemCount = function (award) {
  return _in(0x3faa928a, 0x79591761, _ch(award), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_BUNDLE_ACQUIRE_COST_MODIFIERS
 *
 * @param {number} bundle
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetBundleAcquireCostModifiers = function (bundle, outData) {
  return _in(0xa97ee5e4, 0x589fcf5a, _ch(bundle), outData, _r);
};

/**
 * _ITEMDATABASE_GET_BUNDLE_ID
 *
 * @param {number} bundle
 * @return {number}
 */
global.ItemdatabaseGetBundleId = function (bundle) {
  return _in(0x891a4596, 0x0b6b768a, _ch(bundle), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_BUNDLE_ITEM_COUNT
 *
 * @param {number} bundleId
 * @param {DataView} data
 * @return {number}
 */
global.ItemdatabaseGetBundleItemCount = function (bundleId, data) {
  return _in(0x3332695b, 0x01015df9, bundleId, data, _r, _ri);
};

/**
 * _ITEMDATABASE_GET_BUNDLE_ITEM_INFO
 *
 * @param {number} bundleId
 * @param {DataView} data
 * @param {number} index
 * @return {[boolean, number]}
 */
global.ItemdatabaseGetBundleItemInfo = function (bundleId, data, index) {
  return _in(0x5d48a77e, 0x4b668b57, bundleId, data, index, _i, _r);
};

/**
 * _ITEMDATABASE_GET_COLLECTION_SIZE
 * Returns (collection?) size/index (?)
 * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
 *
 * @param {number} collectionId
 * @return {number}
 */
global.ItemdatabaseGetCollectionSize = function (collectionId) {
  return _in(0xd389a254, 0x9c4efb30, collectionId, _r, _ri);
};

/**
 * _ITEMDATABASE_GET_COMPONENT_ITEM
 * Params: p2 can be a component item hash
 *
 * @param {number} collectionId
 * @param {number} index
 * @return {[boolean, number]}
 */
global.ItemdatabaseGetComponentItem = function (collectionId, index) {
  return _in(0x8750f69a, 0x720c2e41, collectionId, index, _i, _r);
};

/**
 * _ITEMDATABASE_GET_FITS_SLOT_COUNT
 *
 * @param {number} category
 * @return {number}
 */
global.ItemdatabaseGetFitsSlotCount = function (category) {
  return _in(0x2970d1d6, 0xbfcf9b46, _ch(category), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_FITS_SLOT_INFO
 *
 * @param {number} category
 * @param {number} index
 * @return {[boolean, number]}
 */
global.ItemdatabaseGetFitsSlotInfo = function (category, index) {
  return _in(0x77210c14, 0x6ced5261, _ch(category), index, _i, _r);
};

/**
 * _ITEMDATABASE_GET_HAS_SLOT_COUNT
 *
 * @param {number} category
 * @return {number}
 */
global.ItemdatabaseGetHasSlotCount = function (category) {
  return _in(0x44915068, 0x579d7710, _ch(category), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_HAS_SLOT_INFO
 *
 * @param {number} category
 * @param {number} index
 * @return {[boolean, number]}
 */
global.ItemdatabaseGetHasSlotInfo = function (category, index) {
  return _in(0x8a9bd0db, 0x7e8376cf, _ch(category), index, _i, _r);
};

/**
 * _ITEMDATABASE_GET_ITEM_PATHSET
 *
 * @param {number} key
 * @param {number} defaultPathset
 * @return {number}
 */
global.ItemdatabaseGetItemPathset = function (key, defaultPathset) {
  return _in(0xf4452ce8, 0x3118c738, _ch(key), _ch(defaultPathset), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_ITEM_PRICE_MODIFIERS
 *
 * @param {number} key
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetItemPriceModifiers = function (key, outData) {
  return _in(0x4eb37aab, 0x79ab0c48, _ch(key), outData, _r);
};

/**
 * _ITEMDATABASE_GET_ITEM_TAG_TYPE
 *
 * @param {number} item
 * @param {number} tag
 * @return {number}
 */
global.ItemdatabaseGetItemTagType = function (item, tag) {
  return _in(0x6111b8f9, 0x413f413a, _ch(item), _ch(tag), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_MODIFIED_PRICE
 * Returns an alternative cost hash to COST_SHOP_DEFAULT
 *
 * @param {number} key
 * @param {number} index
 * @return {number}
 */
global.ItemdatabaseGetModifiedPrice = function (key, index) {
  return _in(0xcb92ec9c, 0x004732b4, _ch(key), index, _r, _ri);
};

/**
 * _ITEMDATABASE_GET_NUMBER_OF_MODIFIED_PRICES
 *
 * @param {number} key
 * @return {number}
 */
global.ItemdatabaseGetNumberOfModifiedPrices = function (key) {
  return _in(0x5aaaf40e, 0x9b224f5e, _ch(key), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_NUMBER_OF_MODIFIERS
 *
 * @param {number} key
 * @return {number}
 */
global.ItemdatabaseGetNumberOfModifiers = function (key) {
  return _in(0x1289d831, 0x5235856d, _ch(key), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_PRIORITY_ACCESS_AWARD
 * _ITEMDATABASE_GET_* - _ITEMDATABASE_IS_*
 *
 * @param {number} award
 * @return {boolean}
 */
global.ItemdatabaseGetPriorityAccessAward = function (award) {
  return _in(0xef254f1a, 0x4c08b7e6, _ch(award), _r);
};

/**
 * _ITEMDATABASE_GET_SHOP_INVENTORIES_ITEMS_COUNT
 *
 * @param {number} shopType
 * @return {number}
 */
global.ItemdatabaseGetShopInventoriesItemsCount = function (shopType) {
  return _in(0xc568b1a0, 0xf17c7025, _ch(shopType), _r, _ri);
};

/**
 * _ITEMDATABASE_GET_SHOP_INVENTORIES_ITEM_INFO
 *
 * @param {number} shopType
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetShopInventoriesItemInfo = function (shopType, index, outData) {
  return _in(0x4a79b41b, 0x4eb91f4e, _ch(shopType), index, outData, _r);
};

/**
 * _ITEMDATABASE_GET_SHOP_INVENTORIES_ITEM_INFO_BY_KEY
 * Same Native Function as 0x17721003A66C72BF
 *
 * @param {number} shopType
 * @param {number} key
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetShopInventoriesItemInfoByKey = function (shopType, key, outData) {
  return _in(0xcfb06801, 0xf5099b25, _ch(shopType), _ch(key), outData, _r);
};

/**
 * _ITEMDATABASE_GET_SHOP_INVENTORIES_REQUIREMENT_GROUP_INFO
 *
 * @param {number} shopType
 * @param {number} key
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetShopInventoriesRequirementGroupInfo = function (shopType, key, index, outData) {
  return _in(0x76c752d7, 0x88a76813, _ch(shopType), _ch(key), index, outData, _r);
};

/**
 * _ITEMDATABASE_GET_SHOP_INVENTORIES_REQUIREMENT_INFO
 *
 * @param {number} shopType
 * @param {number} key
 * @param {number} groupIndex
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetShopInventoriesRequirementInfo = function (shopType, key, groupIndex, index, outData) {
  return _in(0xe0ea5c03, 0x1ae5539f, _ch(shopType), _ch(key), groupIndex, index, outData, _r);
};

/**
 * _ITEMDATABASE_GET_SHOP_LAYOUT_INFO
 *
 * @param {number} layout
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetShopLayoutInfo = function (layout, outData) {
  return _in(0x66a6d76b, 0x6bb999b4, _ch(layout), outData, _r);
};

/**
 * _ITEMDATABASE_GET_SHOP_LAYOUT_MENU_INFO_BY_ID
 *
 * @param {number} layout
 * @param {number} menu
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetShopLayoutMenuInfoById = function (layout, menu, outData) {
  return _in(0xd6611446, 0x9978b55b, _ch(layout), _ch(menu), outData, _r);
};

/**
 * _ITEMDATABASE_GET_SHOP_LAYOUT_MENU_INFO_BY_INDEX
 *
 * @param {number} layout
 * @param {number} menu
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetShopLayoutMenuInfoByIndex = function (layout, menu, index, outData) {
  return _in(0xf0424709, 0x2f193b75, _ch(layout), _ch(menu), index, outData, _r);
};

/**
 * _ITEMDATABASE_GET_SHOP_LAYOUT_MENU_PAGE_KEY
 *
 * @param {number} layout
 * @param {number} menu
 * @param {number} index
 * @return {[boolean, number]}
 */
global.ItemdatabaseGetShopLayoutMenuPageKey = function (layout, menu, index) {
  return _in(0x9a605706, 0x57a7b635, _ch(layout), _ch(menu), index, _i, _r);
};

/**
 * _ITEMDATABASE_GET_SHOP_LAYOUT_PAGE_INFO_BY_KEY
 *
 * @param {number} layout
 * @param {number} pageKey
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetShopLayoutPageInfoByKey = function (layout, pageKey, outData) {
  return _in(0xb347c100, 0xdf0c9b7f, _ch(layout), _ch(pageKey), outData, _r);
};

/**
 * _ITEMDATABASE_GET_SHOP_LAYOUT_PAGE_ITEM_KEY
 *
 * @param {number} layout
 * @param {number} pageKey
 * @param {number} index
 * @return {[boolean, number, number, number]}
 */
global.ItemdatabaseGetShopLayoutPageItemKey = function (layout, pageKey, index) {
  return _in(0xf32bef57, 0x8b3dbae8, _ch(layout), _ch(pageKey), index, _i, _i, _i, _r);
};

/**
 * _ITEMDATABASE_GET_SHOP_LAYOUT_ROOT_MENU_INFO
 *
 * @param {number} layout
 * @param {number} index
 * @param {DataView} outData
 * @return {boolean}
 */
global.ItemdatabaseGetShopLayoutRootMenuInfo = function (layout, index, outData) {
  return _in(0x86fcb565, 0xcca0cfa7, _ch(layout), index, outData, _r);
};

/**
 * _ITEMDATABASE_IS_BUNDLE_VALID
 * Params: mode is 0
 *
 * @param {number} bundle
 * @param {number} mode
 * @return {boolean}
 */
global.ItemdatabaseIsBundleValid = function (bundle, mode) {
  return _in(0x4308812a, 0x6e9ca62e, _ch(bundle), mode, _r);
};

/**
 * _ITEMDATABASE_IS_INTRINSIC_ITEM
 *
 * @param {number} key
 * @return {boolean}
 */
global.ItemdatabaseIsIntrinsicItem = function (key) {
  return _in(0x337f88e3, 0xa063995e, _ch(key), _r);
};

/**
 * _ITEMDATABASE_IS_KEY_VALID
 * Params: mode is 0
 *
 * @param {number} key
 * @param {number} mode
 * @return {boolean}
 */
global.ItemdatabaseIsKeyValid = function (key, mode) {
  return _in(0x6d5d51b1, 0x88333fd1, _ch(key), mode, _r);
};

/**
 * _ITEMDATABASE_IS_OVERPOWERED_ITEM
 *
 * @param {number} key
 * @return {boolean}
 */
global.ItemdatabaseIsOverpoweredItem = function (key) {
  return _in(0x337f88e3, 0xa063995f, _ch(key), _r);
};

/**
 * _ITEMDATABASE_IS_SHOP_KEY_VALID
 *
 * @param {number} shopType
 * @return {boolean}
 */
global.ItemdatabaseIsShopKeyValid = function (shopType) {
  return _in(0x00b9507d, 0x8e1d8716, _ch(shopType), _r);
};

/**
 * _ITEMDATABASE_IS_SHOP_LAYOUT_KEY_VALID
 *
 * @param {number} layout
 * @return {boolean}
 */
global.ItemdatabaseIsShopLayoutKeyValid = function (layout) {
  return _in(0x3afe5182, 0xc45a84f6, _ch(layout), _r);
};

/**
 * _ITEMDATABASE_LOCALIZATION_GET_NUM_LABEL_TYPES
 * Returns docData.iNumTotalLabelTypes
 *
 * @param {any} p0
 * @return {number}
 */
global.ItemdatabaseLocalizationGetNumLabelTypes = function (p0) {
  return _in(0xcec6a41e, 0x8910486a, p0, _r, _ri);
};

/**
 * _ITEMDATABASE_LOCALIZATION_GET_NUM_VALUES
 * Returns iNumValuesForType
 *
 * @param {any} p0
 * @param {any} p1
 * @return {number}
 */
global.ItemdatabaseLocalizationGetNumValues = function (p0, p1) {
  return _in(0x49885d82, 0xa13eeaea, p0, p1, _r, _ri);
};

/**
 * _ITEMDATABASE_LOCALIZATION_GET_TYPE
 * Returns LabelType
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.ItemdatabaseLocalizationGetType = function (p0, p1) {
  return _in(0xcabf5d41, 0xd0073d4a, p0, p1, _r);
};

/**
 * _ITEMDATABASE_LOCALIZATION_GET_VALUE
 *
 * @param {any} p0
 * @param {number} label
 * @param {any} p2
 * @return {number}
 */
global.ItemdatabaseLocalizationGetValue = function (p0, label, p2) {
  return _in(0x9ae5610f, 0xdced6ea7, p0, _ch(label), p2, _r, _ri);
};

/**
 * _ITEMDATABASE_RELEASE_ITEM_COLLECTION
 *
 * @param {number} collectionId
 * @return {boolean}
 */
global.ItemdatabaseReleaseItemCollection = function (collectionId) {
  return _in(0xcbb7b6ed, 0xfa933ade, collectionId, _r);
};

/**
 * ADD_TO_ITEMSET
 *
 * @param {number} entity
 * @param {number} itemset
 * @return {boolean}
 */
global.AddToItemset = function (entity, itemset) {
  return _in(0xabe74510, 0x883c7950, entity, itemset, _r);
};

/**
 * CLEAN_ITEMSET
 *
 * @param {number} itemset
 * @return {void}
 */
global.CleanItemset = function (itemset) {
  return _in(0x85f3a86c, 0xa9021fb0, itemset);
};

/**
 * CREATE_ITEMSET
 *
 * @param {boolean} p0
 * @return {number}
 */
global.CreateItemset = function (p0) {
  return _in(0xa1af1608, 0x3320065a, p0, _r, _ri);
};

/**
 * DESTROY_ITEMSET
 *
 * @param {number} itemset
 * @return {void}
 */
global.DestroyItemset = function (itemset) {
  return _in(0x712bc69f, 0x10549b92, itemset);
};

/**
 * GET_INDEXED_ITEM_IN_ITEMSET
 *
 * @param {number} index
 * @param {number} itemset
 * @return {number}
 */
global.GetIndexedItemInItemset = function (index, itemset) {
  return _in(0x275a2e2c, 0x0fab7612, index, itemset, _r, _ri);
};

/**
 * GET_INDEXED_SCENARIO_POINT_INDEX_IN_ITEMSET
 *
 * @param {number} index
 * @param {number} itemset
 * @return {any}
 */
global.GetIndexedScenarioPointIndexInItemset = function (index, itemset) {
  return _in(0x9fc3cdb5, 0xce815901, index, itemset, _r);
};

/**
 * GET_ITEMSET_SIZE
 *
 * @param {number} itemset
 * @return {number}
 */
global.GetItemsetSize = function (itemset) {
  return _in(0x55f2e375, 0xac6018a9, itemset, _r, _ri);
};

/**
 * IS_IN_ITEMSET
 *
 * @param {number} entity
 * @param {number} itemset
 * @return {boolean}
 */
global.IsInItemset = function (entity, itemset) {
  return _in(0xd1503c2e, 0xe2fe688c, entity, itemset, _r);
};

/**
 * IS_ITEMSET_VALID
 *
 * @param {number} itemset
 * @return {boolean}
 */
global.IsItemsetValid = function (itemset) {
  return _in(0xd30765d1, 0x53ef5c76, itemset, _r);
};

/**
 * REMOVE_FROM_ITEMSET
 *
 * @param {number} entity
 * @param {number} itemset
 * @return {void}
 */
global.RemoveFromItemset = function (entity, itemset) {
  return _in(0xc5baa432, 0xb429dc24, entity, itemset);
};

/**
 * _CLEAR_ITEMSET
 *
 * @param {number} itemset
 * @return {void}
 */
global.ClearItemset = function (itemset) {
  return _in(0x20a4bf0e, 0x09bee146, itemset);
};

/**
 * ADD_BOUNTY
 *
 * @param {number} player
 * @param {number} itemValueAmount
 * @return {void}
 */
global.AddBounty = function (player, itemValueAmount) {
  return _in(0x0e3bdeed, 0x21beb945, player, itemValueAmount);
};

/**
 * ARE_WITNESSES_ACTIVE
 *
 * @param {number} player
 * @return {boolean}
 */
global.AreWitnessesActive = function (player) {
  return _in(0x69e18177, 0x2886f48b, player, _r);
};

/**
 * CLEAR_BOUNTY
 *
 * @param {number} player
 * @return {void}
 */
global.ClearBounty = function (player) {
  return _in(0xc76f2523, 0x71150d9a, player);
};

/**
 * CLEAR_PLAYER_PAST_CRIMES
 *
 * @param {number} player
 * @return {void}
 */
global.ClearPlayerPastCrimes = function (player) {
  return _in(0xbcc6dc59, 0xe32a2bdc, player);
};

/**
 * CLEAR_WANTED_SCORE
 *
 * @param {number} player
 * @return {void}
 */
global.ClearWantedScore = function (player) {
  return _in(0x062b4a4a, 0x3396351d, player);
};

/**
 * GET_BOUNTY
 *
 * @param {number} player
 * @return {number}
 */
global.GetBounty = function (player) {
  return _in(0x54310aab, 0x97b92816, player, _r, _ri);
};

/**
 * GET_PLAYER_REGISTERED_CRIME
 *
 * @param {number} player
 * @param {number} p1
 * @return {[boolean, number]}
 */
global.GetPlayerRegisteredCrime = function (player, p1) {
  return _in(0x532c5fdd, 0xb986ee5c, player, p1, _i, _r);
};

/**
 * GET_WANTED_SCORE
 *
 * @param {number} player
 * @return {number}
 */
global.GetWantedScore = function (player) {
  return _in(0xdd5fd601, 0x481f648b, player, _r, _ri);
};

/**
 * IS_LAW_INCIDENT_ACTIVE
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsLawIncidentActive = function (player) {
  return _in(0xad401c63, 0x158acbaa, player, _r);
};

/**
 * NUM_CRIMES_SUPPRESSED
 * Returns amount of suppressed crimes to be used later in the function MPINTRO_CRIME_MONITOR_MAINTAIN
 *
 * @param {number} player
 * @param {number} crimeType
 * @return {number}
 */
global.NumCrimesSuppressed = function (player, crimeType) {
  return _in(0xc08e804c, 0x91f47c80, player, _ch(crimeType), _r, _ri);
};

/**
 * RESET_WANTED_FOR_NEW_INCIDENT
 *
 * @param {number} player
 * @return {void}
 */
global.ResetWantedForNewIncident = function (player) {
  return _in(0x2728c77f, 0xbc4b9796, player);
};

/**
 * SET_BOUNTY
 *
 * @param {number} player
 * @param {number} amount
 * @return {void}
 */
global.SetBounty = function (player, amount) {
  return _in(0x093a9d1f, 0x72df0d19, player, amount);
};

/**
 * SET_DISABLE_DISTURBANCE_CRIMES
 *
 * @param {number} player
 * @param {boolean} p1
 * @return {void}
 */
global.SetDisableDisturbanceCrimes = function (player, p1) {
  return _in(0xde5faa74, 0x1a781f73, player, p1);
};

/**
 * SET_LAW_SENSE_RANGE_MODIFIER
 * Default range is 1.0f
 *
 * @param {number} player
 * @param {number} range
 * @return {void}
 */
global.SetLawSenseRangeModifier = function (player, range) {
  return _in(0xfec85339, 0xaaca2a35, player, _fv(range));
};

/**
 * SET_PLAYER_ARRESTED_IN_REGION
 *
 * @param {number} player
 * @param {number} lawRegionHash
 * @return {void}
 */
global.SetPlayerArrestedInRegion = function (player, lawRegionHash) {
  return _in(0xe0fa74aa, 0x3cce650b, player, _ch(lawRegionHash));
};

/**
 * SET_PLAYER_TURNED_IN_BOUNTY_IN_REGION
 *
 * @param {number} player
 * @param {number} lawRegionHash
 * @return {void}
 */
global.SetPlayerTurnedInBountyInRegion = function (player, lawRegionHash) {
  return _in(0x73bad7b2, 0xf2db50de, player, _ch(lawRegionHash));
};

/**
 * SET_POSTPONE_DISTURBANCE_CRIMES_DURING_COMBAT
 *
 * @param {number} player
 * @param {boolean} p1
 * @return {void}
 */
global.SetPostponeDisturbanceCrimesDuringCombat = function (player, p1) {
  return _in(0x362086b9, 0x11657b1a, player, p1);
};

/**
 * SET_WANTED_SCORE
 *
 * @param {number} player
 * @param {number} intensity
 * @return {void}
 */
global.SetWantedScore = function (player, intensity) {
  return _in(0xa80ff73f, 0x772acf6a, player, intensity);
};

/**
 * SUPPRESS_CRIME_THIS_FRAME
 * crimeType: see _REPORT_CRIME
 *
 * @param {number} player
 * @param {number} crimeType
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.SuppressCrimeThisFrame = function (player, crimeType, p2, p3, p4) {
  return _in(0x785177e4, 0xd57d7389, player, _ch(crimeType), p2, p3, p4);
};

/**
 * _0x00DB0BC05E3FAA4E
 *
 * @param {number} ped
 * @param {number} bitset
 * @return {void}
 */
global.N_0x00DB0BC05E3FAA4E = function (ped, bitset) {
  return _in(0x00db0bc0, 0x5e3faa4e, ped, bitset);
};

/**
 * _0x018F30D762E62DF8
 *
 * @param {number} ped
 * @param {DataView} p1
 * @return {any}
 */
global.N_0x018F30D762E62DF8 = function (ped, p1) {
  return _in(0x018f30d7, 0x62e62df8, ped, p1, _r);
};

/**
 * _0x07E8B8B20570271C
 * Used in SP only, called together with 0x55F37F5F3F2475E1 & CLEAR_WANTED_SCORE
 * _REPORT_*
 *
 * @param {number} player
 * @return {void}
 */
global.N_0x07E8B8B20570271C = function (player) {
  return _in(0x07e8b8b2, 0x0570271c, player);
};

/**
 * _0x0BDFEBCF40A5F7E3
 * Only used in net_fetch R* Script
 *
 * @param {number} crimeType
 * @return {number}
 */
global.N_0x0BDFEBCF40A5F7E3 = function (crimeType) {
  return _in(0x0bdfebcf, 0x40a5f7e3, _ch(crimeType), _r, _ri);
};

/**
 * _0x0C392DB374655176
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @param {number} itemSet
 * @return {void}
 */
global.N_0x0C392DB374655176 = function (x, y, z, p3, itemSet) {
  return _in(0x0c392db3, 0x74655176, _fv(x), _fv(y), _fv(z), _fv(p3), itemSet);
};

/**
 * _0x0DBACA9C38C9A686
 * Only used in sisikapenitentiary R* Script: name = SISIKA
 * _IS_G* or _IS_H*
 *
 * @param {string | number} name
 * @return {boolean}
 */
global.N_0x0DBACA9C38C9A686 = function (name) {
  return _in(0x0dbaca9c, 0x38c9a686, _ts(name), _r);
};

/**
 * _0x0EAF918F751F27BA
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x0EAF918F751F27BA = function (ped) {
  return _in(0x0eaf918f, 0x751f27ba, ped, _r);
};

/**
 * _0x0F230DE0DDBE3649
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0x0F230DE0DDBE3649 = function (player) {
  return _in(0x0f230de0, 0xddbe3649, player, _r);
};

/**
 * _0x148E7AC8141C9E64
 *
 * @param {number} player
 * @return {number}
 */
global.N_0x148E7AC8141C9E64 = function (player) {
  return _in(0x148e7ac8, 0x141c9e64, player, _r, _ri);
};

/**
 * _0x15ABD5004CAD2D99
 * Params: p0 either 0, 1 or -1 in R* Scripts
 * Set to 0 called together with _SUPPRESS_CRIME
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x15ABD5004CAD2D99 = function (p0) {
  return _in(0x15abd500, 0x4cad2d99, p0);
};

/**
 * _0x2001687F9562FD9D
 * Only used in resapwn_dump_body R* Script
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x2001687F9562FD9D = function (p0) {
  return _in(0x2001687f, 0x9562fd9d, p0);
};

/**
 * _0x21213B833EF4DAE7
 *
 * @param {number} player
 * @param {number} ped
 * @return {Vector3}
 */
global.N_0x21213B833EF4DAE7 = function (player, ped) {
  return _in(0x21213b83, 0x3ef4dae7, player, ped, _v);
};

/**
 * _0x22741652985C84D0
 * Used in SP only
 * _REPORT_*
 *
 * @param {number} player
 * @param {number} lawRegionHash
 * @return {void}
 */
global.N_0x22741652985C84D0 = function (player, lawRegionHash) {
  return _in(0x22741652, 0x985c84d0, player, _ch(lawRegionHash));
};

/**
 * _0x26934083D3F2579C
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0x26934083D3F2579C = function (player) {
  return _in(0x26934083, 0xd3f2579c, player, _r);
};

/**
 * _0x292AD61A33A7A485
 * Only used in R* Script fm_mission_controller
 * _CLEAR_WANTED_*
 *

 * @return {void}
 */
global.N_0x292AD61A33A7A485 = function () {
  return _in(0x292ad61a, 0x33a7a485);
};

/**
 * _0x29CD4896ECB66C12
 *

 * @return {void}
 */
global.N_0x29CD4896ECB66C12 = function () {
  return _in(0x29cd4896, 0xecb66c12);
};

/**
 * _0x318F0F9A4426CFA2
 * Only used in R* SP Script av_amb_camp_robbery
 *
 * @param {number} ped
 * @param {DataView} p1
 * @return {any}
 */
global.N_0x318F0F9A4426CFA2 = function (ped, p1) {
  return _in(0x318f0f9a, 0x4426cfa2, ped, p1, _r);
};

/**
 * _0x331D349E0380B097
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x331D349E0380B097 = function (p0) {
  return _in(0x331d349e, 0x0380b097, p0);
};

/**
 * _0x3738B784DDD35CC6
 *
 * @param {number} player
 * @param {number} p1
 * @param {number} p2
 * @return {boolean}
 */
global.N_0x3738B784DDD35CC6 = function (player, p1, p2) {
  return _in(0x3738b784, 0xddd35cc6, player, p1, p2, _r);
};

/**
 * _0x3852237A3D9DF145
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x3852237A3D9DF145 = function (p0) {
  return _in(0x3852237a, 0x3d9df145, p0);
};

/**
 * _0x390710D2DAFA6BFF
 * _CLEAR*
 *
 * @param {number} player
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x390710D2DAFA6BFF = function (player, p1) {
  return _in(0x390710d2, 0xdafa6bff, player, p1);
};

/**
 * _0x3D2674828A4E6B3C
 *

 * @return {boolean}
 */
global.N_0x3D2674828A4E6B3C = function () {
  return _in(0x3d267482, 0x8a4e6b3c, _r);
};

/**
 * _0x40851BCC33ACD9AB
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x40851BCC33ACD9AB = function (ped) {
  return _in(0x40851bcc, 0x33acd9ab, ped, _r);
};

/**
 * _0x522F74636DF10201
 *
 * @param {number} player
 * @param {number} itemSet
 * @return {void}
 */
global.N_0x522F74636DF10201 = function (player, itemSet) {
  return _in(0x522f7463, 0x6df10201, player, itemSet);
};

/**
 * _0x5E6F375CA101C108
 * Only used in R* SP Scripts
 *
 * @param {number} player
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x5E6F375CA101C108 = function (player, p1) {
  return _in(0x5e6f375c, 0xa101c108, player, p1);
};

/**
 * _0x61B98367D93F012F
 *
 * @param {number} player
 * @return {void}
 */
global.N_0x61B98367D93F012F = function (player) {
  return _in(0x61b98367, 0xd93f012f, player);
};

/**
 * _0x6ABC50979655BEE7
 *
 * @param {number} player
 * @param {any} p2
 * @return {number}
 */
global.N_0x6ABC50979655BEE7 = function (player, p2) {
  return _in(0x6abc5097, 0x9655bee7, player, _i, p2);
};

/**
 * _0x7351DA734F989F4E
 * Only used in shoprobberies
 *
 * @param {number} entity
 * @return {boolean}
 */
global.N_0x7351DA734F989F4E = function (entity) {
  return _in(0x7351da73, 0x4f989f4e, entity, _r);
};

/**
 * _0x7803436E68C32B26
 *

 * @return {void}
 */
global.N_0x7803436E68C32B26 = function () {
  return _in(0x7803436e, 0x68c32b26);
};

/**
 * _0x7EF2A2FE38D74456
 * _SET_DISPATCH_*
 *
 * @param {number} flag
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x7EF2A2FE38D74456 = function (flag, p1) {
  return _in(0x7ef2a2fe, 0x38d74456, flag, p1);
};

/**
 * _0x7FC667F6DDFBCDCC
 * Only used in R* Script long_update
 * Returns a value thats being subtracted from GET_GAME_TIMER
 *
 * @param {number} player
 * @return {number}
 */
global.N_0x7FC667F6DDFBCDCC = function (player) {
  return _in(0x7fc667f6, 0xddfbcdcc, player, _r, _ri);
};

/**
 * _0x82F11E1296996574
 * Only used in rcm_gunslinger1_1 R* Script: p0 = 0
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x82F11E1296996574 = function (p0) {
  return _in(0x82f11e12, 0x96996574, p0);
};

/**
 * _0x856CE8FDE2416602
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x856CE8FDE2416602 = function (ped) {
  return _in(0x856ce8fd, 0xe2416602, ped, _r);
};

/**
 * _0x89E005B1662F6E48
 *
 * @param {number} player
 * @param {number} p1
 * @param {number} p2
 * @return {boolean}
 */
global.N_0x89E005B1662F6E48 = function (player, p1, p2) {
  return _in(0x89e005b1, 0x662f6e48, player, p1, p2, _r);
};

/**
 * _0x95878B13E272EF1F
 *
 * @param {number} entity
 * @param {number} ped
 * @param {boolean} p2
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} crimeType
 * @return {any}
 */
global.N_0x95878B13E272EF1F = function (entity, ped, p2, x, y, z, crimeType) {
  return _in(0x95878b13, 0xe272ef1f, entity, ped, p2, _fv(x), _fv(y), _fv(z), _ch(crimeType), _r);
};

/**
 * _0x9772395CC73E8D1F
 * Only used in loanshark_miner1 R* Script: name = ANNESBURG_MINES
 *
 * @param {number} ped
 * @param {string | number} name
 * @return {void}
 */
global.N_0x9772395CC73E8D1F = function (ped, name) {
  return _in(0x9772395c, 0xc73e8d1f, ped, _ts(name));
};

/**
 * _0x987BE590FB9D41E5
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x987BE590FB9D41E5 = function (p0) {
  return _in(0x987be590, 0xfb9d41e5, p0);
};

/**
 * _0x9945A3E2528A02E8
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0x9945A3E2528A02E8 = function (player) {
  return _in(0x9945a3e2, 0x528a02e8, player, _r);
};

/**
 * _0x9B4C564BFA7CFF37
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x9B4C564BFA7CFF37 = function (p0) {
  return _in(0x9b4c564b, 0xfa7cff37, _fv(p0));
};

/**
 * _0x9C5BD8C562565CE6
 *

 * @return {number}
 */
global.N_0x9C5BD8C562565CE6 = function () {
  return _in(0x9c5bd8c5, 0x62565ce6, _i);
};

/**
 * _0x9C8A2BF37E966464
 * Only used in act_bankrobbery01 R* Script
 *
 * @param {number} player
 * @param {number} itemSet
 * @return {void}
 */
global.N_0x9C8A2BF37E966464 = function (player, itemSet) {
  return _in(0x9c8a2bf3, 0x7e966464, player, itemSet);
};

/**
 * _0x9D5C9A5A3321B128
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0x9D5C9A5A3321B128 = function (player) {
  return _in(0x9d5c9a5a, 0x3321b128, player, _r);
};

/**
 * _0x9EF07CFBB19A9733
 * Only used in shoprobberies R* Scripts
 *

 * @return {boolean}
 */
global.N_0x9EF07CFBB19A9733 = function () {
  return _in(0x9ef07cfb, 0xb19a9733, _r);
};

/**
 * _0xB527099D1E1EED49
 *
 * @param {number} player
 * @param {number} p1
 * @return {[boolean, number]}
 */
global.N_0xB527099D1E1EED49 = function (player, p1) {
  return _in(0xb527099d, 0x1e1eed49, player, p1, _i, _r);
};

/**
 * _0xBD944A3D36E992DE
 * Called together with REPORT_POLICE_SPOTTED_PLAYER
 *

 * @return {void}
 */
global.N_0xBD944A3D36E992DE = function () {
  return _in(0xbd944a3d, 0x36e992de);
};

/**
 * _0xC0DF161950FB101E
 * Only used in rcm_serial_killer1 R* Script
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xC0DF161950FB101E = function (ped) {
  return _in(0xc0df1619, 0x50fb101e, ped, _r);
};

/**
 * _0xC310239ACCCF5579
 *

 * @return {void}
 */
global.N_0xC310239ACCCF5579 = function () {
  return _in(0xc310239a, 0xcccf5579);
};

/**
 * _0xC5EB2755FA25F1E9
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0xC5EB2755FA25F1E9 = function (p0) {
  return _in(0xc5eb2755, 0xfa25f1e9, p0);
};

/**
 * _0xC687A23E166DCF68
 *
 * @param {DataView} p0
 * @return {any}
 */
global.N_0xC687A23E166DCF68 = function (p0) {
  return _in(0xc687a23e, 0x166dcf68, p0, _r);
};

/**
 * _0xC7DC5A0A7DF608CB
 * _GET_DISPATCH_*
 *
 * @param {number} flag
 * @return {boolean}
 */
global.N_0xC7DC5A0A7DF608CB = function (flag) {
  return _in(0xc7dc5a0a, 0x7df608cb, flag, _r);
};

/**
 * _0xCBFB4951F2E3934C
 *
 * @param {number} player
 * @param {DataView} data
 * @return {void}
 */
global.N_0xCBFB4951F2E3934C = function (player, data) {
  return _in(0xcbfb4951, 0xf2e3934c, player, data);
};

/**
 * _0xD6C0A8C7C0B2F82C
 *
 * @param {number} player
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xD6C0A8C7C0B2F82C = function (player, p1) {
  return _in(0xd6c0a8c7, 0xc0b2f82c, player, p1);
};

/**
 * _0xD7494DED50C6EF52
 * Only used in R* SP Scripts
 * Params: p2 either 1 or 2
 *
 * @param {number} player
 * @param {number} crimeType
 * @param {number} p2
 * @return {void}
 */
global.N_0xD7494DED50C6EF52 = function (player, crimeType, p2) {
  return _in(0xd7494ded, 0x50c6ef52, player, _ch(crimeType), p2);
};

/**
 * _0xDA1A9ADC4E3D4B16
 * Only used in R* SP Scripts
 * Params: p1 = true, p2 = false
 *
 * @param {number} itemSet
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0xDA1A9ADC4E3D4B16 = function (itemSet, p1, p2) {
  return _in(0xda1a9adc, 0x4e3d4b16, itemSet, p1, p2);
};

/**
 * _0xDAEFDFDB2AEECE37
 * crimeType: see _REPORT_CRIME
 *
 * @param {number} crimeType
 * @param {any} p1
 * @return {number}
 */
global.N_0xDAEFDFDB2AEECE37 = function (crimeType, p1) {
  return _in(0xdaefdfdb, 0x2aeece37, _ch(crimeType), p1, _r, _ri);
};

/**
 * _0xDCF12B89624AAC96
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0xDCF12B89624AAC96 = function (p0) {
  return _in(0xdcf12b89, 0x624aac96, p0);
};

/**
 * _0xDDCE8E960D1DE240
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0xDDCE8E960D1DE240 = function (p0) {
  return _in(0xddce8e96, 0x0d1de240, p0);
};

/**
 * _0xDEA083C16BB91345
 *

 * @return {void}
 */
global.N_0xDEA083C16BB91345 = function () {
  return _in(0xdea083c1, 0x6bb91345);
};

/**
 * _0xE083BEDA81709891
 *
 * @param {number} player
 * @return {number}
 */
global.N_0xE083BEDA81709891 = function (player) {
  return _in(0xe083beda, 0x81709891, player, _r, _ri);
};

/**
 * _0xE4D6E45F491A66CB
 *
 * @param {number} player
 * @param {number} p1
 * @return {any}
 */
global.N_0xE4D6E45F491A66CB = function (player, p1) {
  return _in(0xe4d6e45f, 0x491a66cb, player, p1, _r);
};

/**
 * _0xE94B5E938619712E
 * Seems to disable lawmen guarding behaviors (like during a region lockdown). Must be called every frame.
 * Only used in R* SP Scripts, mostly used in train_fast_travel_core
 *

 * @return {void}
 */
global.N_0xE94B5E938619712E = function () {
  return _in(0xe94b5e93, 0x8619712e);
};

/**
 * _0xE9AC8466ABE484BB
 * Only used in R* SP Scripts
 * Params: p1 = 0
 *
 * @param {boolean} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE9AC8466ABE484BB = function (p0, p1) {
  return _in(0xe9ac8466, 0xabe484bb, p0, p1);
};

/**
 * _0xE9EB79CBF9C0F58A
 * Returns p1 value for 0xE4D6E45F491A66CB
 *
 * @param {number} player
 * @return {number}
 */
global.N_0xE9EB79CBF9C0F58A = function (player) {
  return _in(0xe9eb79cb, 0xf9c0f58a, player, _r, _ri);
};

/**
 * _0xEDFC6C1FD1C964F5
 * _SET_C* - _SET_D*
 *
 * @param {number} player
 * @param {number} crimeType
 * @param {number} bounty
 * @param {number} p3
 * @param {number} p4
 * @param {boolean} p5
 * @param {number} p6
 * @param {number} p7
 * @param {any} p8
 * @return {void}
 */
global.N_0xEDFC6C1FD1C964F5 = function (player, crimeType, bounty, p3, p4, p5, p6, p7, p8) {
  return _in(0xedfc6c1f, 0xd1c964f5, player, _ch(crimeType), bounty, _fv(p3), _fv(p4), p5, _fv(p6), _fv(p7), p8);
};

/**
 * _0xF46108C50A22B029
 *

 * @return {boolean}
 */
global.N_0xF46108C50A22B029 = function () {
  return _in(0xf46108c5, 0x0a22b029, _r);
};

/**
 * _0xF611DE44AEB36A1D
 *
 * @param {number} crimeType
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xF611DE44AEB36A1D = function (crimeType, p1) {
  return _in(0xf611de44, 0xaeb36a1d, _ch(crimeType), p1);
};

/**
 * _0xFFEBE5AA96BC2E4E
 *
 * @param {number} ped
 * @param {number} crimeType
 * @param {boolean} p2
 * @return {any}
 */
global.N_0xFFEBE5AA96BC2E4E = function (ped, crimeType, p2) {
  return _in(0xffebe5aa, 0x96bc2e4e, ped, _ch(crimeType), p2, _r);
};

/**
 * _ADD_WITNESS_RESPONSE
 *
 * @param {number} player
 * @param {number} crimeType
 * @param {number} pedGroup
 * @return {void}
 */
global.AddWitnessResponse = function (player, crimeType, pedGroup) {
  return _in(0x10827b5a, 0x0aac56a7, player, _ch(crimeType), pedGroup);
};

/**
 * _ARE_ANY_LAW_PEDS_INVESTIGATING
 * Only used in rcm_homerob00 R* Script
 *

 * @return {boolean}
 */
global.AreAnyLawPedsInvestigating = function () {
  return _in(0xece3c34b, 0x270428d5, _r);
};

/**
 * _ARE_INVESTIGATORS_ACTIVE
 *
 * @param {number} player
 * @param {boolean} areInvestigatorsActive
 * @param {any} p2
 * @return {boolean}
 */
global.AreInvestigatorsActive = function (player, areInvestigatorsActive, p2) {
  return _in(0xf0fbfb9a, 0xb15f7734, player, areInvestigatorsActive, p2, _r);
};

/**
 * _ARE_LAW_PEDS_ENABLED_FOR_TRAIN
 * Only used in trainrobbery_ambient R* Script
 *

 * @return {boolean}
 */
global.AreLawPedsEnabledForTrain = function () {
  return _in(0xa22c46f1, 0x6359471c, _r);
};

/**
 * _ARE_WITNESSES_PENDING
 *
 * @param {number} player
 * @return {boolean}
 */
global.AreWitnessesPending = function (player) {
  return _in(0x0bb6de7d, 0x23c60626, player, _r);
};

/**
 * _CREATE_GUARD_ZONE
 *
 * @param {string | number} name
 * @return {void}
 */
global.CreateGuardZone = function (name) {
  return _in(0x8f9de756, 0x80275c9f, _ts(name));
};

/**
 * _CREATE_GUARD_ZONE_FOR_ENTITY
 * Returns true when investigation creation was successful
 *
 * @param {string | number} guardZoneName
 * @param {number} entity
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {boolean}
 */
global.CreateGuardZoneForEntity = function (guardZoneName, entity, x, y, z) {
  return _in(0x0d4b77e8, 0x62475ed3, _ts(guardZoneName), entity, _fv(x), _fv(y), _fv(z), _r);
};

/**
 * _CREATE_LAW_DISPATCH_RESPONSE_FOR_COORDS
 * dispatchResponseHash: see common/data/dispatchresponses/..
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} dispatchResponseHash
 * @return {any}
 */
global.CreateLawDispatchResponseForCoords = function (x, y, z, dispatchResponseHash) {
  return _in(0x75cbf20b, 0xa47e4f89, _fv(x), _fv(y), _fv(z), _ch(dispatchResponseHash), _r);
};

/**
 * _DISABLE_GUARD_ZONE
 *
 * @param {string | number} name
 * @return {void}
 */
global.DisableGuardZone = function (name) {
  return _in(0x26d55869, 0x2b25dd95, _ts(name));
};

/**
 * _ENABLE_DISPATCH_LAW
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.EnableDispatchLaw = function (toggle) {
  return _in(0xc805eb78, 0x5824f712, toggle);
};

/**
 * _ENABLE_DISPATCH_LAW_2
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.EnableDispatchLaw_2 = function (toggle) {
  return _in(0x710448d4, 0x4a64c213, toggle);
};

/**
 * _FORCE_LAW_ON_LOCAL_PLAYER_IMMEDIATELY
 *

 * @return {void}
 */
global.ForceLawOnLocalPlayerImmediately = function () {
  return _in(0x956510f8, 0xc36b5c64);
};

/**
 * _GET_BOUNTY_HUNTER_GLOBAL_COOLDOWN
 * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
 *
 * @param {number} p0
 * @return {number}
 */
global.GetBountyHunterGlobalCooldown = function (p0) {
  return _in(0x76cf93d4, 0xb416b288, _ch(p0), _r, _ri);
};

/**
 * _GET_CRIME_BOUNTY_AMOUNT_BY_TYPE
 * Returns bounty (increment) value
 *
 * @param {number} crimeType
 * @return {number}
 */
global.GetCrimeBountyAmountByType = function (crimeType) {
  return _in(0x35e5e21f, 0x9159849c, _ch(crimeType), _r, _ri);
};

/**
 * _GET_HUD_PLAYER_CRIME_TYPE
 * See _REPORT_CRIME
 *
 * @param {number} player
 * @return {number}
 */
global.GetHudPlayerCrimeType = function (player) {
  return _in(0x259ce340, 0xa8738814, player, _r, _ri);
};

/**
 * _GET_TIME_SINCE_LAST_SEEN_BY_LAW
 * Returns the amount of time (probably in game minutes) since last seen by the law / left the wanted radius
 *
 * @param {number} player
 * @return {number}
 */
global.GetTimeSinceLastSeenByLaw = function (player) {
  return _in(0x717da228, 0x1df90855, player, _r, _rf);
};

/**
 * _IS_GUARD_PED_INVESTIGATING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsGuardPedInvestigating = function (ped) {
  return _in(0xd743c429, 0x3f47afad, ped, _r);
};

/**
 * _LAW_WITNESS_RESPONSE_TASK
 *
 * @param {number} pedGroup1
 * @param {number} ped
 * @param {number} pedGroup2
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} crimeType
 * @return {boolean}
 */
global.LawWitnessResponseTask = function (pedGroup1, ped, pedGroup2, x, y, z, crimeType) {
  return _in(0xf0b67bad, 0x53c35bd9, pedGroup1, ped, pedGroup2, _fv(x), _fv(y), _fv(z), _ch(crimeType), _r);
};

/**
 * _PAUSE_BOUNTY_HUNTER_COOLDOWN
 * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
 *
 * @param {number} p0
 * @param {boolean} p1
 * @param {any} p2
 * @return {void}
 */
global.PauseBountyHunterCooldown = function (p0, p1, p2) {
  return _in(0xc61edebf, 0x16cd9668, _ch(p0), p1, p2);
};

/**
 * _REMOVE_GUARD_ZONE
 *
 * @param {string | number} name
 * @return {void}
 */
global.RemoveGuardZone = function (name) {
  return _in(0x67ebdd95, 0x8835956c, _ts(name));
};

/**
 * _REPORT_CRIME
 * crimeType:
 * enum eCrimeType : Hash
 * {
 *   CRIME_ACCOMPLICE = 0xAF074F6D,
 *   CRIME_ARSON = 0x68134DC7,
 *   CRIME_ASSAULT = 0x0BADC882,
 *   CRIME_ASSAULT_ANIMAL = 0x18DA55EE,
 *   CRIME_ASSAULT_CORPSE = 0x4E5F23F2,
 *   CRIME_ASSAULT_HORSE = 0xC4736181,
 *   CRIME_ASSAULT_LAW = 0xD7466D7C,
 *   CRIME_ASSAULT_LIVESTOCK = 0xCCE1CCBD,
 *   CRIME_BANK_ROBBERY = 0x6A1ADE3D,
 *   CRIME_BURGLARY = 0xA54C77E0,
 *   CRIME_CHEATING = 0xA2FF1145,
 *   CRIME_DISTURBANCE = 0x5011F613,
 *   CRIME_EXPLOSION = 0x3EBA7A37,
 *   CRIME_EXPLOSION_POISON = 0x91D0A0E1,
 *   CRIME_GRAVE_ROBBERY = 0x971EA5AF,
 *   CRIME_HASSLE = 0x58488776,
 *   CRIME_HIT_AND_RUN = 0xFF0A3CC4,
 *   CRIME_HIT_AND_RUN_LAW = 0x064814AF,
 *   CRIME_INTIMIDATION = 0x8319FBAB,
 *   CRIME_JACK_HORSE = 0x82F7E4A2,
 *   CRIME_JACK_VEHICLE = 0x6B981F4C,
 *   CRIME_JAIL_BREAK = 0x12C1D589,
 *   CRIME_KIDNAPPING = 0x98F908DB,
 *   CRIME_KIDNAPPING_LAW = 0xFD72A7EA,
 *   CRIME_LASSO_ASSAULT = 0x56EE5D5A,
 *   CRIME_LAW_IS_THREATENED = 0x1CB91DF0,
 *   CRIME_LOITERING = 0x6629D2F4,
 *   CRIME_LOOTING = 0x55AD2BEB,
 *   CRIME_MURDER = 0xE28ECE7E,
 *   CRIME_MURDER_ANIMAL = 0x48F59A66,
 *   CRIME_MURDER_HORSE = 0xC7261D79,
 *   CRIME_MURDER_LAW = 0x7797FCE7,
 *   CRIME_MURDER_LIVESTOCK = 0x9569C546,
 *   CRIME_MURDER_PLAYER = 0xF5ABD6C9,
 *   CRIME_MURDER_PLAYER_HORSE = 0xD55C6A79,
 *   CRIME_PROPERTY_DESTRUCTION = 0x533B003D,
 *   CRIME_RESIST_ARREST = 0xDF577BA5,
 *   CRIME_ROBBERY = 0xA3BEDE4C,
 *   CRIME_SELF_DEFENCE = 0xBD6A0AA3,
 *   CRIME_STAGECOACH_ROBBERY = 0xFC738E61,
 *   CRIME_STOLEN_GOODS = 0x9A949C79,
 *   CRIME_THEFT = 0x72ADE410,
 *   CRIME_THEFT_HORSE = 0xBE3A5838,
 *   CRIME_THEFT_LIVESTOCK = 0x85BA08FD,
 *   CRIME_THEFT_VEHICLE = 0x43A9ECA1,
 *   CRIME_THREATEN = 0x941C985A,
 *   CRIME_THREATEN_LAW = 0x7F908566,
 *   CRIME_TRAIN_ROBBERY = 0x647D2A5A,
 *   CRIME_TRAMPLE = 0x45DB39D8,
 *   CRIME_TRAMPLE_LAW = 0xF00F266B,
 *   CRIME_TRAMPLE_PLAYER = 0x75970C15,
 *   CRIME_TRESPASSING = 0xAEDE8E35,
 *   CRIME_UNARMED_ASSAULT = 0x5098CC5A,
 *   CRIME_VANDALISM = 0x80FDC759,
 *   CRIME_VANDALISM_VEHICLE = 0xF9E7ECE4,
 *   CRIME_VEHICLE_DESTRUCTION = 0x54A85DDC,
 *   CRIME_WANTED_LEVEL_UP_DEBUG_HIGH = 0x99C52FF5,
 *   CRIME_WANTED_LEVEL_UP_DEBUG_LOW = 0xD891890F
 * };
 *
 * @param {number} player
 * @param {number} crimeType
 * @param {number} bounty
 * @param {number} entity
 * @param {boolean} isKnownSuspect
 * @return {void}
 */
global.ReportCrime = function (player, crimeType, bounty, entity, isKnownSuspect) {
  return _in(0xf6038677, 0x0878a98f, player, _ch(crimeType), bounty, entity, isKnownSuspect);
};

/**
 * _REPORT_PLAYER_LAW_DISPATCH_RESPONSE_OVERRIDE
 *
 * @param {number} player
 * @param {number} dispatchResponseHash
 * @return {void}
 */
global.ReportPlayerLawDispatchResponseOverride = function (player, dispatchResponseHash) {
  return _in(0x9c435213, 0x4b2835fb, player, _ch(dispatchResponseHash));
};

/**
 * _SET_ALLOW_DISABLED_LAW_RESPONSES
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetAllowDisabledLawResponses = function (toggle) {
  return _in(0x4b52bf96, 0xe225d230, toggle);
};

/**
 * _SET_BOUNTY_HUNTER_GLOBAL_COOLDOWN
 * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.SetBountyHunterGlobalCooldown = function (p0, p1) {
  return _in(0xf19706b1, 0xf8ffa88f, _ch(p0), p1);
};

/**
 * _SET_BOUNTY_HUNTER_PURSUIT_CLEARED
 * Force clears local player's wanted level
 *

 * @return {void}
 */
global.SetBountyHunterPursuitCleared = function () {
  return _in(0x55f37f5f, 0x3f2475e1);
};

/**
 * _SET_CUSTOM_LAW_DISPATCH_RESPONSE
 * Note: This native is only used in multiplayer scripts
 * dispatchResponseHash: see update1/common/data/dispatchresponses/..
 *
 * @param {number} dispatchResponseHash
 * @return {void}
 */
global.SetCustomLawDispatchResponse = function (dispatchResponseHash) {
  return _in(0x009cf9a2, 0x9972c298, _ch(dispatchResponseHash));
};

/**
 * _SET_DISPATCH_MULTIPLIER_OVERRIDE
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetDispatchMultiplierOverride = function (multiplier) {
  return _in(0x002babe0, 0xb7d53136, _fv(multiplier));
};

/**
 * _SET_GUARD_ZONE_POSITION
 *
 * @param {string | number} name
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.SetGuardZonePosition = function (name, x, y, z) {
  return _in(0x7e7bf59f, 0x89fc6c6d, _ts(name), _fv(x), _fv(y), _fv(z));
};

/**
 * _SET_GUARD_ZONE_POSITION_2
 *
 * @param {string | number} name
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.SetGuardZonePosition_2 = function (name, x, y, z) {
  return _in(0x2f9005e2, 0xea4e5ee4, _ts(name), _fv(x), _fv(y), _fv(z));
};

/**
 * _SET_GUARD_ZONE_VOLUME_REGISTRATION_END
 *
 * @param {string | number} name
 * @param {number} volume
 * @return {void}
 */
global.SetGuardZoneVolumeRegistrationEnd = function (name, volume) {
  return _in(0xa8a74aa7, 0x9fb67159, _ts(name), volume);
};

/**
 * _SET_GUARD_ZONE_VOLUME_REGISTRATION_START
 *
 * @param {string | number} name
 * @param {number} volume
 * @return {void}
 */
global.SetGuardZoneVolumeRegistrationStart = function (name, volume) {
  return _in(0x8c598a93, 0x0f471938, _ts(name), volume);
};

/**
 * _SET_GUARD_ZONE_VOLUME_RESTRICTED
 *
 * @param {string | number} name
 * @param {number} volume
 * @return {void}
 */
global.SetGuardZoneVolumeRestricted = function (name, volume) {
  return _in(0x35815f37, 0x2d43e1e5, _ts(name), volume);
};

/**
 * _SET_GUARD_ZONE_VOLUME_THREAT
 *
 * @param {string | number} name
 * @param {number} volume
 * @return {void}
 */
global.SetGuardZoneVolumeThreat = function (name, volume) {
  return _in(0xa1b0e630, 0x1e2e02a6, _ts(name), volume);
};

/**
 * _SET_GUARD_ZONE_VOLUME_WARNING
 *
 * @param {string | number} name
 * @param {number} volume
 * @return {void}
 */
global.SetGuardZoneVolumeWarning = function (name, volume) {
  return _in(0xad3e07c3, 0x7a7c1adc, _ts(name), volume);
};

/**
 * _SET_LAW_DISABLED
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetLawDisabled = function (toggle) {
  return _in(0x8de82bc7, 0x74f3b862, toggle);
};

/**
 * _SET_LAW_RBS_VOLUME
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.SetLawRbsVolume = function (player, p1) {
  return _in(0x9bbdcb8d, 0xf789ebc1, player, _ch(p1));
};

/**
 * _SET_LAW_REGION
 * enum eLawRegion : Hash
 * {
 *   LAW_DISPATCH_REGION_NONE = 0,
 *   LAW_REGION_AGUASDULCES = 0x2F573EBE,
 *   LAW_REGION_ANNESBURG = 0x68CAFD50,
 *   LAW_REGION_ARMADILLO = 0xF0B90756,
 *   LAW_REGION_BAYOU_NWA = 0x80966B1C,
 *   LAW_REGION_BEECHERS_HOPE = 0xE2544977,
 *   LAW_REGION_BIG_VALLEY = 0x3DF1559A,
 *   LAW_REGION_BLACKWATER = 0x60D4886D,
 *   LAW_REGION_BLACKWATER_MAINGAME = 0x66553576,
 *   LAW_REGION_BLUEGILL_MARSH = 0x1D6AED8E,
 *   LAW_REGION_BRAITHWAITE_MANOR = 0x3D71E7FF,
 *   LAW_REGION_BUTCHER_CREEK = 0x2B3E1822,
 *   LAW_REGION_CALIGA_HALL = 0xF3FE5080,
 *   LAW_REGION_CORNWALL = 0xCC4672FA,
 *   LAW_REGION_CUMBERLAND_FOREST = 0x81A78306,
 *   LAW_REGION_EMERALD_RANCH = 0x5C069DF3,
 *   LAW_REGION_FORT_WALLACE = 0x0AF25192,
 *   LAW_REGION_GREAT_PLAINS = 0xB20573FA,
 *   LAW_REGION_GREAT_PLAINS_MAINGAME = 0x9862FF7C,
 *   LAW_REGION_GRIZZLIES = 0xBB936031,
 *   LAW_REGION_GUAMA = 0x200DFF42,
 *   LAW_REGION_HEARTLANDS = 0xAD14DA65,
 *   LAW_REGION_LAGRAS = 0xC64808D3,
 *   LAW_REGION_MACFARLANES_RANCH = 0x396A7D5F,
 *   LAW_REGION_MANICATO = 0x039DB6BF,
 *   LAW_REGION_MANZANITA_POST = 0x895E580E,
 *   LAW_REGION_MANZANITA_POST_MAINGAME = 0x9BDD6A38,
 *   LAW_REGION_OCCUPIED_CARAVAN_CAMP = 0x7EBABB01,
 *   LAW_REGION_OLD_MAP_WILDERNESS = 0xCBB45950,
 *   LAW_REGION_OLD_MAP_WILDERNESS_MAINGAME = 0x9F839BE7,
 *   LAW_REGION_OUTLAW3 = 0x97A02FC1,
 *   LAW_REGION_PRONGHORN_RANCH = 0x398E4BFC,
 *   LAW_REGION_RHODES = 0x89222928,
 *   LAW_REGION_RHODES_LOCKDOWN = 0xB1181671,
 *   LAW_REGION_RIDGEWOOD_FARM = 0x635C3028,
 *   LAW_REGION_ROANOKE_RIDGE = 0x46386A9A,
 *   LAW_REGION_SAINT_DENIS = 0x5CF7C268,
 *   LAW_REGION_SAINT_DENIS_RURAL = 0x4FD5331A,
 *   LAW_REGION_SCARLETT_MEADOWS = 0x5FDD9717,
 *   LAW_REGION_SISIKA = 0x2B6BBA52,
 *   LAW_REGION_STRAWBERRY = 0xDD932620,
 *   LAW_REGION_TALL_TREES = 0xD939B758,
 *   LAW_REGION_TALL_TREES_MAINGAME = 0x084B17DF,
 *   LAW_REGION_THIEVES_LANDING = 0x3D0C2EB6,
 *   LAW_REGION_THIEVES_LANDING_MAINGAME = 0x61C450F3,
 *   LAW_REGION_TUMBLEWEED = 0x0EFAF8DC,
 *   LAW_REGION_VALENTINE = 0xA7A3F0C3,
 *   LAW_REGION_VALENTINE_LOCKDOWN = 0x123582FE,
 *   LAW_REGION_VAN_HORN = 0x619B528E,
 *   LAW_REGION_WAPITI = 0x7A976E02
 * };
 *
 * @param {number} player
 * @param {number} lawRegionHash
 * @param {number} stateHash
 * @return {void}
 */
global.SetLawRegion = function (player, lawRegionHash, stateHash) {
  return _in(0x4752f68e, 0xb7f2d280, player, _ch(lawRegionHash), _ch(stateHash));
};

/**
 * _SET_PED_LAW_BEHAVIOUR
 * behaviour: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLawBehavior__Flags
 *
 * @param {number} ped
 * @param {number} behaviour
 * @return {void}
 */
global.SetPedLawBehaviour = function (ped, behaviour) {
  return _in(0x819add5e, 0xf1742f47, ped, behaviour);
};

/**
 * GET_CURRENT_LANGUAGE
 * 0 = american (en-US)
 * 1 = french (fr-FR)
 * 2 = german (de-DE)
 * 3 = italian (it-IT)
 * 4 = spanish (es-ES)
 * 5 = brazilian (pt-BR)
 * 6 = polish (pl-PL)
 * 7 = russian (ru-RU)
 * 8 = korean (ko-KR)
 * 9 = chinesetrad (zh-TW)
 * 10 = japanese (ja-JP)
 * 11 = mexican (es-MX)
 * 12 = chinesesimp (zh-CN)
 *

 * @return {number}
 */
global.GetCurrentLanguage = function () {
  return _in(0xdb917da5, 0xc6835fcc, _r, _ri);
};

/**
 * LOCALIZATION_GET_SYSTEM_DATE_TYPE
 * 0 = DATE_FORMAT_DMY
 * 1 = DATE_FORMAT_MDY
 * 2 = DATE_FORMAT_YMD
 * 
 * Old name: _LOCALIZATION_GET_SYSTEM_DATE_FORMAT
 *

 * @return {number}
 */
global.LocalizationGetSystemDateType = function () {
  return _in(0x76e30b79, 0x9ebeea0f, _r, _ri);
};

/**
 * LOCALIZATION_GET_SYSTEM_LANGUAGE
 * Same return values as GET_CURRENT_LANGUAGE
 *

 * @return {number}
 */
global.LocalizationGetSystemLanguage = function () {
  return _in(0x3c1a05f8, 0x6ae6acb5, _r, _ri);
};

/**
 * _DOES_CURRENT_LANGUAGE_SUPPORT_CONDENSED_STYLE
 * Returns true if the current language is american, french, german, italian, spanish, brazilian or mexican.
 * _DOES_*
 *

 * @return {boolean}
 */
global.DoesCurrentLanguageSupportCondensedStyle = function () {
  return _in(0x45d50415, 0xe4d885ff, _r);
};

/**
 * ADD_POINT_TO_GPS_MULTI_ROUTE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} p3
 * @return {void}
 */
global.AddPointToGpsMultiRoute = function (x, y, z, p3) {
  return _in(0x64c59dd6, 0x834fa942, _fv(x), _fv(y), _fv(z), p3);
};

/**
 * ALLOW_SONAR_BLIPS
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.AllowSonarBlips = function (toggle) {
  return _in(0x6e6e6478, 0x8c07d2e0, toggle);
};

/**
 * BLIP_ADD_FOR_COORDS
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips_mp
 *
 * @param {number} blipHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.BlipAddForCoords = function (blipHash, x, y, z) {
  return _in(0x554d9d53, 0xf696d002, _ch(blipHash), _fv(x), _fv(y), _fv(z), _r, _ri);
};

/**
 * BLIP_ADD_FOR_ENTITY
 *
 * @param {number} blipHash
 * @param {number} entity
 * @return {number}
 */
global.BlipAddForEntity = function (blipHash, entity) {
  return _in(0x23f74c2f, 0xda6e7c61, _ch(blipHash), entity, _r, _ri);
};

/**
 * BLIP_ADD_FOR_PICKUP_PLACEMENT
 *
 * @param {number} blipHash
 * @param {number} pickup
 * @return {number}
 */
global.BlipAddForPickupPlacement = function (blipHash, pickup) {
  return _in(0xa4860088, 0x92065fb9, _ch(blipHash), pickup, _r, _ri);
};

/**
 * BLIP_ADD_FOR_RADIUS
 *
 * @param {number} blipHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {number}
 */
global.BlipAddForRadius = function (blipHash, x, y, z, radius) {
  return _in(0x45f13b7e, 0x0a15c880, _ch(blipHash), _fv(x), _fv(y), _fv(z), _fv(radius), _r, _ri);
};

/**
 * BLIP_ADD_MODIFIER
 * https://alloc8or.re/rdr3/doc/enums/eBlipModifier.txt
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_modifiers
 * 
 * Old name: _BLIP_SET_MODIFIER
 *
 * @param {number} blip
 * @param {number} modifierHash
 * @return {boolean}
 */
global.BlipAddModifier = function (blip, modifierHash) {
  return _in(0x662d364a, 0xbf16de2f, blip, _ch(modifierHash), _r);
};

/**
 * BLIP_REMOVE_MODIFIER
 * If modifierHash is 0, ALL modifiers will be removed.
 *
 * @param {number} blip
 * @param {number} modifierHash
 * @return {boolean}
 */
global.BlipRemoveModifier = function (blip, modifierHash) {
  return _in(0xb059d7bd, 0x3d78c16f, blip, _ch(modifierHash), _r);
};

/**
 * CLEAR_GPS_CUSTOM_ROUTE
 *

 * @return {void}
 */
global.ClearGpsCustomRoute = function () {
  return _in(0x1eaa5674, 0xb4d181c5);
};

/**
 * CLEAR_GPS_FLAGS
 * Clears the GPS flags.
 *

 * @return {void}
 */
global.ClearGpsFlags = function () {
  return _in(0x4d377123, 0x7c79ff41);
};

/**
 * CLEAR_GPS_MULTI_ROUTE
 * Does the same as SET_GPS_MULTI_ROUTE_RENDER(false);
 *

 * @return {void}
 */
global.ClearGpsMultiRoute = function () {
  return _in(0x9e0ab9aa, 0xee87ce28);
};

/**
 * CLEAR_GPS_PLAYER_WAYPOINT
 *

 * @return {void}
 */
global.ClearGpsPlayerWaypoint = function () {
  return _in(0x08fdc6f7, 0x96e350d1);
};

/**
 * DISPLAY_RADAR
 * If Minimap / Radar should be displayed.
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.DisplayRadar = function (toggle) {
  return _in(0x1b3da717, 0xb9aff828, toggle);
};

/**
 * DOES_BLIP_EXIST
 *
 * @param {number} blip
 * @return {boolean}
 */
global.DoesBlipExist = function (blip) {
  return _in(0xcd82fa17, 0x4080b3b1, blip, _r);
};

/**
 * FORCE_SONAR_BLIPS_THIS_FRAME
 * Doesn't actually return anything.
 *

 * @return {any}
 */
global.ForceSonarBlipsThisFrame = function () {
  return _in(0xee1c7ba6, 0x9bb74b08, _r);
};

/**
 * GET_BLIP_COORDS
 *
 * @param {number} blip
 * @return {Vector3}
 */
global.GetBlipCoords = function (blip) {
  return _in(0x201c3197, 0x97bda603, blip, _r, _rv);
};

/**
 * GET_BLIP_FROM_ENTITY
 * Returns the Blip handle of given Entity.
 *
 * @param {number} entity
 * @return {number}
 */
global.GetBlipFromEntity = function (entity) {
  return _in(0x6d2c41a8, 0xbd6d6fd0, entity, _r, _ri);
};

/**
 * GET_MAIN_PLAYER_BLIP_ID
 *

 * @return {number}
 */
global.GetMainPlayerBlipId = function () {
  return _in(0x5cd2889b, 0x2b381d45, _r, _ri);
};

/**
 * IS_BLIP_ON_MINIMAP
 *
 * @param {number} blip
 * @return {boolean}
 */
global.IsBlipOnMinimap = function (blip) {
  return _in(0x46534526, 0xb9cd2d17, blip, _r);
};

/**
 * IS_WAYPOINT_ACTIVE
 *

 * @return {boolean}
 */
global.IsWaypointActive = function () {
  return _in(0x202b1bbf, 0xc6ab5ee4, _r);
};

/**
 * LOCK_MINIMAP_ANGLE
 * Locks the minimap to the specified angle in integer degrees.
 * 
 * angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
 *
 * @param {number} angle
 * @return {void}
 */
global.LockMinimapAngle = function (angle) {
  return _in(0x0bfd145e, 0xf819fb3a, angle);
};

/**
 * REMOVE_BLIP
 *

 * @return {number}
 */
global.RemoveBlip = function () {
  return _in(0xf2c3c9da, 0x47aaa54a, _i);
};

/**
 * RESET_MINIMAP_FOW
 *
 * @param {number} hash
 * @return {void}
 */
global.ResetMinimapFow = function (hash) {
  return _in(0xeb3cb338, 0x6c775d72, _ch(hash));
};

/**
 * SET_BLIP_COORDS
 *
 * @param {number} blip
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @return {void}
 */
global.SetBlipCoords = function (blip, posX, posY, posZ) {
  return _in(0x4ff674f5, 0xe23d49ce, blip, _fv(posX), _fv(posY), _fv(posZ));
};

/**
 * SET_BLIP_FLASHES
 *
 * @param {number} blip
 * @return {[boolean, number, number]}
 */
global.SetBlipFlashes = function (blip) {
  return _in(0x0df2b55f, 0x717ddb10, blip, _i, _i, _r);
};

/**
 * SET_BLIP_FLASH_TIMER
 *
 * @param {number} blip
 * @param {number} blipType
 * @param {number} blipHash
 * @return {void}
 */
global.SetBlipFlashTimer = function (blip, blipType, blipHash) {
  return _in(0x02ff4cf4, 0x3b7209d1, blip, blipType, _ch(blipHash));
};

/**
 * SET_BLIP_NAME_FROM_TEXT_FILE
 *
 * @param {number} blip
 * @param {string | number} textLabel
 * @return {void}
 */
global.SetBlipNameFromTextFile = function (blip, textLabel) {
  return _in(0x0a062d6d, 0x7c0b2c2c, blip, _ts(textLabel));
};

/**
 * SET_BLIP_NAME_TO_PLAYER_NAME
 *
 * @param {number} blip
 * @param {number} player
 * @return {void}
 */
global.SetBlipNameToPlayerName = function (blip, player) {
  return _in(0x093dd5a3, 0x1bc2b459, blip, player);
};

/**
 * SET_BLIP_ROTATION
 *
 * @param {number} blip
 * @param {number} rotation
 * @return {void}
 */
global.SetBlipRotation = function (blip, rotation) {
  return _in(0x6049966a, 0x94fbe706, blip, rotation);
};

/**
 * SET_BLIP_SCALE
 *
 * @param {number} blip
 * @param {number} scale
 * @return {void}
 */
global.SetBlipScale = function (blip, scale) {
  return _in(0xd3874416, 0x7b2fa257, blip, _fv(scale));
};

/**
 * SET_BLIP_SPRITE
 *
 * @param {number} blip
 * @param {number} hash
 * @param {boolean} p2
 * @return {void}
 */
global.SetBlipSprite = function (blip, hash, p2) {
  return _in(0x74f74d32, 0x07ed525c, blip, _ch(hash), p2);
};

/**
 * SET_GPS_CUSTOM_ROUTE_RENDER
 *
 * @param {boolean} p0
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.SetGpsCustomRouteRender = function (p0, p1, p2) {
  return _in(0xf6cef599, 0xfc470b33, p0, p1, p2);
};

/**
 * SET_GPS_FLAGS
 * https://alloc8or.re/rdr3/doc/enums/rage__eGpsFlags.txt
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.SetGpsFlags = function (p0, p1) {
  return _in(0x5de61c90, 0xddecfa2d, p0, _fv(p1));
};

/**
 * SET_GPS_MULTI_ROUTE_RENDER
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetGpsMultiRouteRender = function (toggle) {
  return _in(0x4426d65e, 0x029a4dc0, toggle);
};

/**
 * SET_MINIMAP_FOW_REVEAL_COORDINATE
 * Up to eight coordinates may be revealed per frame
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @return {void}
 */
global.SetMinimapFowRevealCoordinate = function (x, y, z, p3) {
  return _in(0x73348402, 0x566ecb6e, _fv(x), _fv(y), _fv(z), _ch(p3));
};

/**
 * SET_MINIMAP_FOW_REVEAL_VOLUME
 *
 * @param {number} volume
 * @param {number} p1
 * @return {void}
 */
global.SetMinimapFowRevealVolume = function (volume, p1) {
  return _in(0x63cbbd6c, 0xa6f321f9, volume, _ch(p1));
};

/**
 * SET_MINIMAP_HIDE_FOW
 * Reveals the entire minimap (FOW = Fog of War)
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetMinimapHideFow = function (toggle) {
  return _in(0x4b8f743a, 0x4a6d2ff8, toggle);
};

/**
 * SET_RADAR_AS_EXTERIOR_THIS_FRAME
 *

 * @return {void}
 */
global.SetRadarAsExteriorThisFrame = function () {
  return _in(0xa8ebbae9, 0x86fb5457);
};

/**
 * SET_RADAR_ZOOM
 *
 * @param {number} zoomLevel
 * @return {void}
 */
global.SetRadarZoom = function (zoomLevel) {
  return _in(0xcaf6489d, 0xa2c8dd9e, zoomLevel);
};

/**
 * SET_WAYPOINT_OFF
 *

 * @return {void}
 */
global.SetWaypointOff = function () {
  return _in(0xfa8c41e8, 0x020d3439);
};

/**
 * START_GPS_MULTI_ROUTE
 *
 * @param {number} colorNameHash
 * @param {boolean} onFoot
 * @param {boolean} inVehicle
 * @return {void}
 */
global.StartGpsMultiRoute = function (colorNameHash, onFoot, inVehicle) {
  return _in(0x3d3d15af, 0x7bcaaf83, _ch(colorNameHash), onFoot, inVehicle);
};

/**
 * TRIGGER_SONAR_BLIP
 *
 * @param {number} typeHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.TriggerSonarBlip = function (typeHash, x, y, z) {
  return _in(0x72dd432f, 0x3cdfc0ee, _ch(typeHash), _fv(x), _fv(y), _fv(z));
};

/**
 * UNLOCK_MINIMAP_ANGLE
 *

 * @return {void}
 */
global.UnlockMinimapAngle = function () {
  return _in(0x5373de8e, 0x179bc2a0);
};

/**
 * _0x01B928CA2E198B01
 * _CLEAR*
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x01B928CA2E198B01 = function (p0) {
  return _in(0x01b928ca, 0x2e198b01, p0, _r);
};

/**
 * _0x1726963E6049DB53
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x1726963E6049DB53 = function (p0) {
  return _in(0x1726963e, 0x6049db53, p0);
};

/**
 * _BLIP_DETACH_FROM_ENTITY
 * Not official native name
 * Removes the blip from an entity and makes it static on the map, try it on GetMainPlayerBlipId() for a demonstration
 *
 * @param {number} blip
 * @return {void}
 */
global.BlipDetachFromEntity = function (blip) {
  return _in(0x250c75eb, 0x1728cc0d, blip);
};

/**
 * _0x3CB8859F04763C78
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x3CB8859F04763C78 = function (p0, p1) {
  return _in(0x3cb8859f, 0x04763c78, p0, p1, _r);
};

/**
 * _0x44813684F72B563C
 * _CLEAR*
 *
 * @param {number} entity
 * @param {any} p1
 * @return {void}
 */
global.N_0x44813684F72B563C = function (entity, p1) {
  return _in(0x44813684, 0xf72b563c, entity, p1);
};

/**
 * _0x7563CBCA99253D1A
 * FM_CLIENT_SETUP_EAGLE_EYE - setting up eagle eye for entity
 *
 * @param {number} entity
 * @param {number} blip
 * @return {void}
 */
global.N_0x7563CBCA99253D1A = function (entity, blip) {
  return _in(0x7563cbca, 0x99253d1a, entity, _ch(blip));
};

/**
 * _0x7C9F4CDF402CA82A
 *

 * @return {void}
 */
global.N_0x7C9F4CDF402CA82A = function () {
  return _in(0x7c9f4cdf, 0x402ca82a);
};

/**
 * _0x97F6F158CC5B5CA2
 *
 * @param {number} entity
 * @param {any} p1
 * @return {void}
 */
global.N_0x97F6F158CC5B5CA2 = function (entity, p1) {
  return _in(0x97f6f158, 0xcc5b5ca2, entity, p1);
};

/**
 * _0xBB68D4D3CA3DE402
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xBB68D4D3CA3DE402 = function (p0, p1) {
  return _in(0xbb68d4d3, 0xca3de402, p0, p1);
};

/**
 * _0xD3F58E9316B7FC2A
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xD3F58E9316B7FC2A = function (p0) {
  return _in(0xd3f58e93, 0x16b7fc2a, p0);
};

/**
 * _0xF08E42BFA46BDFF8
 *
 * @param {any} p0
 * @param {any} p1
 * @return {boolean}
 */
global.N_0xF08E42BFA46BDFF8 = function (p0, p1) {
  return _in(0xf08e42bf, 0xa46bdff8, p0, p1, _r);
};

/**
 * _0xF47A1EB2A538A3A3
 *

 * @return {any}
 */
global.N_0xF47A1EB2A538A3A3 = function () {
  return _in(0xf47a1eb2, 0xa538a3a3, _r);
};

/**
 * _ABANDON_BLIP
 * It's unclear what exactly this does, but I assume it marks the blip as "no longer needed"
 *
 * @param {number} blip
 * @return {void}
 */
global.AbandonBlip = function (blip) {
  return _in(0xdeede7c4, 0x1742e011, blip);
};

/**
 * _ADD_PROP_TO_MINIMAP
 * list of minimap props: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/minimapObjects
 * variations parameter are the interior locations you see on the map like these bellow
 * variation 0 https://i.imgur.com/jkLhn3Z.png
 * variation 2  https://i.imgur.com/eKV0Tcm.png
 * variation 4 https://i.imgur.com/rjwOgEH.png
 * there are more and you can find them in the decompiles
 *
 * @param {number} minimapProp
 * @param {number} x
 * @param {number} y
 * @param {number} rotation
 * @param {number} variation
 * @return {void}
 */
global.AddPropToMinimap = function (minimapProp, x, y, rotation, variation) {
  return _in(0x1392105d, 0xa88bbffb, _ch(minimapProp), _fv(x), _fv(y), _fv(rotation), variation);
};

/**
 * _BLIP_ADD_FOR_AREA
 *
 * @param {number} blipHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @param {number} p7
 * @return {number}
 */
global.BlipAddForArea = function (blipHash, x, y, z, scaleX, scaleY, scaleZ, p7) {
  return _in(0xec174adb, 0xcb611ecc, _ch(blipHash), _fv(x), _fv(y), _fv(z), _fv(scaleX), _fv(scaleY), _fv(scaleZ), p7, _r, _ri);
};

/**
 * _BLIP_ADD_FOR_STYLE
 *
 * @param {number} styleHash
 * @return {number}
 */
global.BlipAddForStyle = function (styleHash) {
  return _in(0x3e593df9, 0xc2962ec6, _ch(styleHash), _r, _ri);
};

/**
 * _BLIP_ADD_FOR_VOLUME
 *
 * @param {number} blipHash
 * @param {number} volume
 * @return {number}
 */
global.BlipAddForVolume = function (blipHash, volume) {
  return _in(0xa6ef0c54, 0xa3443e70, _ch(blipHash), volume, _r, _ri);
};

/**
 * _BLIP_ADD_STYLE
 *
 * @param {number} blip
 * @param {number} styleHash
 * @return {boolean}
 */
global.BlipAddStyle = function (blip, styleHash) {
  return _in(0xbd62d987, 0x99a3daf0, blip, _ch(styleHash), _r);
};

/**
 * _BLIP_SET_STYLE
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_styles
 * Removes any existing modifiers and sets the style.
 *
 * @param {number} blip
 * @param {number} styleHash
 * @return {boolean}
 */
global.BlipSetStyle = function (blip, styleHash) {
  return _in(0xedd964b7, 0x984ac291, blip, _ch(styleHash), _r);
};

/**
 * _DOES_ENTITY_HAVE_BLIP
 *
 * @param {number} entity
 * @return {boolean}
 */
global.DoesEntityHaveBlip = function (entity) {
  return _in(0x9fa00e2f, 0xc134a9d0, entity, _r);
};

/**
 * _FIND_CLOSEST_GPS_POSITION
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {[boolean, Vector3]}
 */
global.FindClosestGpsPosition = function (x, y, z) {
  return _in(0x3fda2b79, 0xaeee351c, _fv(x), _fv(y), _fv(z), _v, _r);
};

/**
 * _GET_WAYPOINT_COORDS
 *

 * @return {Vector3}
 */
global.GetWaypointCoords = function () {
  return _in(0x29b30d07, 0xc3f7873b, _r, _rv);
};

/**
 * _HIDE_ACTIVE_POINTS_OF_INTEREST
 *

 * @return {void}
 */
global.HideActivePointsOfInterest = function () {
  return _in(0xa1b4052c, 0x2a3dcc1e);
};

/**
 * _IS_BLIP_ATTACHED_TO_ANY_ENTITY
 *
 * @param {number} blip
 * @return {boolean}
 */
global.IsBlipAttachedToAnyEntity = function (blip) {
  return _in(0xe9f67678, 0x8f8d5e1e, blip, _r);
};

/**
 * _MAP_DISABLE_REGION_BLIP
 *
 * @param {number} regionHash
 * @return {void}
 */
global.MapDisableRegionBlip = function (regionHash) {
  return _in(0x6786d7af, 0xac3162b3, _ch(regionHash));
};

/**
 * _MAP_DISCOVERY_SET_ENABLED
 *
 * @param {number} discoveryHash
 * @return {void}
 */
global.MapDiscoverySetEnabled = function (discoveryHash) {
  return _in(0xda98246c, 0x7a3c2189, _ch(discoveryHash));
};

/**
 * _MAP_DISCOVER_REGION
 *
 * @param {number} discoveryHash
 * @return {void}
 */
global.MapDiscoverRegion = function (discoveryHash) {
  return _in(0xd8c7162a, 0xb2e2af45, _ch(discoveryHash));
};

/**
 * _MAP_ENABLE_REGION_BLIP
 * regionHash: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/wanted_regions
 *
 * @param {number} regionHash
 * @param {number} styleHash
 * @return {void}
 */
global.MapEnableRegionBlip = function (regionHash, styleHash) {
  return _in(0x563fcb66, 0x20523917, _ch(regionHash), _ch(styleHash));
};

/**
 * _MAP_IS_DISCOVERY_ACTIVE
 *
 * @param {number} discoveryHash
 * @return {boolean}
 */
global.MapIsDiscoveryActive = function (discoveryHash) {
  return _in(0x3f81ea42, 0x75d39d6f, _ch(discoveryHash), _r);
};

/**
 * _MAP_IS_REGION_HIGHLIGHTED_WITH_STYLE
 *
 * @param {number} regionHash
 * @param {number} styleHash
 * @return {boolean}
 */
global.MapIsRegionHighlightedWithStyle = function (regionHash, styleHash) {
  return _in(0xe38450db, 0xcbc70e3d, _ch(regionHash), _ch(styleHash), _r);
};

/**
 * _REMOVE_PROP_FROM_MINIMAP
 *
 * @param {number} minimapProp
 * @return {void}
 */
global.RemovePropFromMinimap = function (minimapProp) {
  return _in(0xe057fea9, 0xa22eb3ee, _ch(minimapProp));
};

/**
 * _REVEAL_MINIMAP_FOW
 *
 * @param {number} hash
 * @return {void}
 */
global.RevealMinimapFow = function (hash) {
  return _in(0xf8096df9, 0xb87246e3, _ch(hash));
};

/**
 * _SET_BLIP_NAME
 *
 * @param {number} blip
 * @param {string | number} name
 * @return {void}
 */
global.SetBlipName = function (blip, name) {
  return _in(0x9cb1a162, 0x3062f402, blip, _ts(name));
};

/**
 * _SET_FOW_UPDATE_PLAYER_OVERRIDE
 * Used for GUARMA MODE; Enabled: toggle = false, 0; Disabled: toggle = true, 0
 * Hash p1 seems to be unused, always 0
 *
 * @param {boolean} toggle
 * @param {number} p1
 * @return {void}
 */
global.SetFowUpdatePlayerOverride = function (toggle, p1) {
  return _in(0x63e7279d, 0x04160477, toggle, _ch(p1));
};

/**
 * _SET_MINIMAP_FOW_OVERRIDE_REVEAL_SCALE
 *
 * @param {number} scale
 * @param {number} p1
 * @return {void}
 */
global.SetMinimapFowOverrideRevealScale = function (scale, p1) {
  return _in(0xe5a7f70b, 0x7c0f3271, _fv(scale), _ch(p1));
};

/**
 * _SET_MINIMAP_FOW_SHOULD_UPDATE
 *
 * @param {boolean} toggle
 * @param {number} p1
 * @return {void}
 */
global.SetMinimapFowShouldUpdate = function (toggle, p1) {
  return _in(0x632aa10b, 0xf7ea53d3, toggle, _ch(p1));
};

/**
 * _SET_MINIMAP_ZONE
 * hash can be the hash of "guarma" or "world".
 *
 * @param {number} zone
 * @return {void}
 */
global.SetMinimapZone = function (zone) {
  return _in(0xa657ec9d, 0xbc6cc900, _ch(zone));
};

/**
 * _SET_PAUSEMAP_COORDS_WITH_RADIUS
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {void}
 */
global.SetPausemapCoordsWithRadius = function (x, y, z, radius) {
  return _in(0xe0884c18, 0x4728c75b, _fv(x), _fv(y), _fv(z), _fv(radius));
};

/**
 * _SET_RADAR_CONFIG_TYPE
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/minimap/radar/radar_configs.lua
 * configHash: -1943724816, 347777538, -117986897, -789269373, -547506804, -1986542417, 2080113112
 * p1: usually 898171178 or 0 in R* scripts (doesn't seems to have any effect)
 *
 * @param {number} configHash
 * @param {number} p1
 * @return {void}
 */
global.SetRadarConfigType = function (configHash, p1) {
  return _in(0x9c113883, 0x487fd53c, _ch(configHash), _ch(p1));
};

/**
 * _SHOW_ACTIVE_POINTS_OF_INTEREST
 *

 * @return {void}
 */
global.ShowActivePointsOfInterest = function () {
  return _in(0x3fbb838a, 0xea30c1d8);
};

/**
 * _START_GPS_CUSTOM_ROUTE_FROM_WAYPOINT_RECORDING_ROUTE
 *
 * @param {string | number} waypointRecording
 * @param {number} point
 * @param {number} numPoints
 * @param {number} colorNameHash
 * @param {boolean} p4
 * @param {boolean} p5
 * @return {void}
 */
global.StartGpsCustomRouteFromWaypointRecordingRoute = function (waypointRecording, point, numPoints, colorNameHash, p4, p5) {
  return _in(0x6b44f13d, 0x888f770d, _ts(waypointRecording), point, numPoints, _ch(colorNameHash), p4, p5);
};

/**
 * _TRIGGER_SONAR_BLIP_ON_ENTITY
 *
 * @param {number} typeHash
 * @param {number} entity
 * @return {void}
 */
global.TriggerSonarBlipOnEntity = function (typeHash, entity) {
  return _in(0x0c7a2289, 0xa5c4d7c9, _ch(typeHash), entity);
};

/**
 * _0x012027C28F421F46
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x012027C28F421F46 = function (p0, p1) {
  return _in(0x012027c2, 0x8f421f46, p0, p1, _r);
};

/**
 * _0x0876326238914A3F
 *

 * @return {void}
 */
global.N_0x0876326238914A3F = function () {
  return _in(0x08763262, 0x38914a3f);
};

/**
 * _0x10342CC82E8356E9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x10342CC82E8356E9 = function (p0, p1) {
  return _in(0x10342cc8, 0x2e8356e9, p0, p1, _r);
};

/**
 * _0x15E90B6A993017AA
 *

 * @return {any}
 */
global.N_0x15E90B6A993017AA = function () {
  return _in(0x15e90b6a, 0x993017aa, _r);
};

/**
 * _0x18A0D48DF9211C07
 *

 * @return {void}
 */
global.N_0x18A0D48DF9211C07 = function () {
  return _in(0x18a0d48d, 0xf9211c07);
};

/**
 * _0x32A7C216344D623B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x32A7C216344D623B = function (p0, p1, p2) {
  return _in(0x32a7c216, 0x344d623b, p0, p1, p2, _r);
};

/**
 * _0x39654E1F68B78287
 *

 * @return {any}
 */
global.N_0x39654E1F68B78287 = function () {
  return _in(0x39654e1f, 0x68b78287, _r);
};

/**
 * _0x398066F893149856
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x398066F893149856 = function (p0, p1, p2) {
  return _in(0x398066f8, 0x93149856, p0, p1, p2, _r);
};

/**
 * _0x3AE451860F03CA8A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x3AE451860F03CA8A = function (p0, p1) {
  return _in(0x3ae45186, 0x0f03ca8a, p0, p1, _r);
};

/**
 * _0x3B31732FADE5BAF3
 *

 * @return {any}
 */
global.N_0x3B31732FADE5BAF3 = function () {
  return _in(0x3b31732f, 0xade5baf3, _r);
};

/**
 * _0x3DF7EE3A76185108
 *

 * @return {void}
 */
global.N_0x3DF7EE3A76185108 = function () {
  return _in(0x3df7ee3a, 0x76185108);
};

/**
 * _0x3EECAADAB0D9FE29
 *

 * @return {any}
 */
global.N_0x3EECAADAB0D9FE29 = function () {
  return _in(0x3eecaada, 0xb0d9fe29, _r);
};

/**
 * _0x3F4FD4BED07AB8C4
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x3F4FD4BED07AB8C4 = function (p0) {
  return _in(0x3f4fd4be, 0xd07ab8c4, p0, _r);
};

/**
 * _0x3FFE60DD8A936551
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x3FFE60DD8A936551 = function (p0, p1) {
  return _in(0x3ffe60dd, 0x8a936551, p0, p1, _r);
};

/**
 * _0x455ECCA0715C507F
 *

 * @return {void}
 */
global.N_0x455ECCA0715C507F = function () {
  return _in(0x455ecca0, 0x715c507f);
};

/**
 * _0x578907F59BA01B6D
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x578907F59BA01B6D = function (p0) {
  return _in(0x578907f5, 0x9ba01b6d, p0, _r);
};

/**
 * _0x580F34C726387226
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x580F34C726387226 = function (p0, p1) {
  return _in(0x580f34c7, 0x26387226, p0, p1, _r);
};

/**
 * _0x58521E6DCDE97D74
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x58521E6DCDE97D74 = function (p0, p1, p2) {
  return _in(0x58521e6d, 0xcde97d74, p0, p1, p2);
};

/**
 * _0x644439B5387EE57E
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x644439B5387EE57E = function (p0, p1) {
  return _in(0x644439b5, 0x387ee57e, p0, p1, _r);
};

/**
 * _0x6480723D3BE535B6
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6480723D3BE535B6 = function (p0) {
  return _in(0x6480723d, 0x3be535b6, p0);
};

/**
 * _0x910B088E51A511AC
 *

 * @return {any}
 */
global.N_0x910B088E51A511AC = function () {
  return _in(0x910b088e, 0x51a511ac, _r);
};

/**
 * _0x9DD95B405AB4983E
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x9DD95B405AB4983E = function (p0, p1) {
  return _in(0x9dd95b40, 0x5ab4983e, p0, p1, _r);
};

/**
 * _0xA2DB3C6270C122E3
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xA2DB3C6270C122E3 = function (p0, p1) {
  return _in(0xa2db3c62, 0x70c122e3, p0, p1, _r);
};

/**
 * _0xBEA7D3CB47E1479C
 *

 * @return {any}
 */
global.N_0xBEA7D3CB47E1479C = function () {
  return _in(0xbea7d3cb, 0x47e1479c, _r);
};

/**
 * _0xD39D32EB3B52DD83
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xD39D32EB3B52DD83 = function (p0) {
  return _in(0xd39d32eb, 0x3b52dd83, p0, _r);
};

/**
 * _0xDF728C5AE137FC14
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xDF728C5AE137FC14 = function (p0, p1, p2) {
  return _in(0xdf728c5a, 0xe137fc14, p0, p1, p2, _r);
};

/**
 * _0xE1F365C4C8F259D8
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xE1F365C4C8F259D8 = function (p0, p1, p2) {
  return _in(0xe1f365c4, 0xc8f259d8, p0, p1, p2, _r);
};

/**
 * _0xE53A308AC35877A8
 *

 * @return {any}
 */
global.N_0xE53A308AC35877A8 = function () {
  return _in(0xe53a308a, 0xc35877a8, _r);
};

/**
 * _0xEC819D612038EF4B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {any}
 */
global.N_0xEC819D612038EF4B = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xec819d61, 0x2038ef4b, p0, p1, p2, p3, p4, p5, p6, p7, _r);
};

/**
 * _0xF6DE98516FD3AC9B
 *

 * @return {void}
 */
global.N_0xF6DE98516FD3AC9B = function () {
  return _in(0xf6de9851, 0x6fd3ac9b);
};

/**
 * _DOMINOES_BUY_IN
 * Hardcoded to return zero/false.
 *
 * @param {any} p0
 * @return {any}
 */
global.DominoesBuyIn = function (p0) {
  return _in(0x399e6cd1, 0x2fc8ca89, p0, _r);
};

/**
 * _DOMINOES_PLACE_DOMINO
 * Hardcoded to return zero/false.
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.DominoesPlaceDomino = function (p0, p1) {
  return _in(0xb79a29b3, 0x3bf29ba5, p0, p1, _r);
};

/**
 * _DOMINOES_REQUEST_VALID_PLACEMENTS
 * Hardcoded to return zero/false.
 *
 * @param {any} p0
 * @return {any}
 */
global.DominoesRequestValidPlacements = function (p0) {
  return _in(0xe26aee7e, 0x67d9e21d, p0, _r);
};

/**
 * _MINIGAME_GET_NEXT_EVENT
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.MinigameGetNextEvent = function (p0, p1) {
  return _in(0xdf728c5a, 0xe137fc13, p0, p1, _r);
};

/**
 * _MINIGAME_GET_NEXT_EVENT_TYPE
 *

 * @return {any}
 */
global.MinigameGetNextEventType = function () {
  return _in(0x578907f5, 0x9ba01b6c, _r);
};

/**
 * _MINIGAME_IS_CONNECTED_TO_SERVER
 *
 * @param {any} p0
 * @return {any}
 */
global.MinigameIsConnectedToServer = function (p0) {
  return _in(0x2a0c4736, 0xac5af0ce, p0, _r);
};

/**
 * _MINIGAME_IS_REQUEST_PENDING
 *
 * @param {any} p0
 * @return {any}
 */
global.MinigameIsRequestPending = function (p0) {
  return _in(0x9105a4a2, 0x556fa937, p0, _r);
};

/**
 * _MINIGAME_IS_SEAT_OCCUPIED
 *
 * @param {any} p0
 * @return {boolean}
 */
global.MinigameIsSeatOccupied = function (p0) {
  return _in(0x8593a8cb, 0x0ed2c3b4, p0, _r);
};

/**
 * _MINIGAME_LEAVE_TABLE
 *
 * @param {any} p0
 * @return {any}
 */
global.MinigameLeaveTable = function (p0) {
  return _in(0xf5446e47, 0x941e654c, p0, _r);
};

/**
 * _MINIGAME_POP_NEXT_EVENT
 *

 * @return {void}
 */
global.MinigamePopNextEvent = function () {
  return _in(0x833e03ba, 0xebadc4b0);
};

/**
 * _MINIGAME_REQUEST_SEAT_AT_TABLE
 *
 * @param {DataView} data
 * @return {boolean}
 */
global.MinigameRequestSeatAtTable = function (data) {
  return _in(0xf6ac6085, 0xd8d6c004, data, _r);
};

/**
 * _POKER_BUY_IN
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.PokerBuyIn = function (p0, p1) {
  return _in(0xb4d610ea, 0x5a1fde74, p0, p1, _r);
};

/**
 * _POKER_CALL
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.PokerCall = function (p0, p1) {
  return _in(0x8ded681b, 0x161ebd78, p0, p1, _r);
};

/**
 * _POKER_CHECK
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.PokerCheck = function (p0, p1) {
  return _in(0x49a04562, 0x8d9b1b86, p0, p1, _r);
};

/**
 * _POKER_FOLD
 *
 * @param {any} p0
 * @return {any}
 */
global.PokerFold = function (p0) {
  return _in(0x3dfab7d9, 0xbb45b5be, p0, _r);
};

/**
 * _POKER_GET_GAME_SETTINGS_FOR_ID
 *
 * @param {any} p0
 * @return {any}
 */
global.PokerGetGameSettingsForId = function (p0) {
  return _in(0x2d20e12e, 0x1990d584, p0, _r);
};

/**
 * _POKER_RAISE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.PokerRaise = function (p0, p1) {
  return _in(0xeccf45a7, 0x9a17bb96, p0, p1, _r);
};

/**
 * _POKER_REVEAL
 *
 * @param {any} p0
 * @return {any}
 */
global.PokerReveal = function (p0) {
  return _in(0x2f2131db, 0x0a8b02dc, p0, _r);
};

/**
 * ABSF
 *
 * @param {number} value
 * @return {number}
 */
global.Absf = function (value) {
  return _in(0x134549b3, 0x88167cbf, _fv(value), _r, _rf);
};

/**
 * ABSI
 *
 * @param {number} value
 * @return {number}
 */
global.Absi = function (value) {
  return _in(0x0c214d5b, 0x8a38c828, value, _r, _ri);
};

/**
 * ACOS
 *
 * @param {number} p0
 * @return {number}
 */
global.Acos = function (p0) {
  return _in(0x586690f0, 0x176dc575, _fv(p0), _r, _rf);
};

/**
 * ACTION_MANAGER_ENABLE_ACTION
 * Appears to remove stealth kill action from memory (?)
 *
 * @param {number} hash
 * @param {boolean} enable
 * @return {void}
 */
global.ActionManagerEnableAction = function (hash, enable) {
  return _in(0x7acf124c, 0x12a2b045, _ch(hash), enable);
};

/**
 * ACTION_MANAGER_IS_ACTION_ENABLED
 *
 * @param {number} hash
 * @return {boolean}
 */
global.ActionManagerIsActionEnabled = function (hash) {
  return _in(0xfd075965, 0x8268fd8e, _ch(hash), _r);
};

/**
 * ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE
 * nullsub, doesn't do anything
 *
 * @param {string | number} p0
 * @param {string | number} p1
 * @return {void}
 */
global.ActivityFeedActionStartWithCommandLine = function (p0, p1) {
  return _in(0x91d65723, 0x0bc208d2, _ts(p0), _ts(p1));
};

/**
 * ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE_ADD
 * nullsub, doesn't do anything
 *
 * @param {string | number} p0
 * @return {void}
 */
global.ActivityFeedActionStartWithCommandLineAdd = function (p0) {
  return _in(0x1694a053, 0xdfb61a34, _ts(p0));
};

/**
 * ACTIVITY_FEED_ADD_SUBSTRING_TO_CAPTION
 * nullsub, doesn't do anything
 *
 * @param {string | number} p0
 * @return {void}
 */
global.ActivityFeedAddSubstringToCaption = function (p0) {
  return _in(0x9935f764, 0x07c32539, _ts(p0));
};

/**
 * ACTIVITY_FEED_CREATE
 * nullsub, doesn't do anything
 *
 * @param {string | number} p0
 * @param {string | number} p1
 * @return {void}
 */
global.ActivityFeedCreate = function (p0, p1) {
  return _in(0xcc7fc854, 0xb956a128, _ts(p0), _ts(p1));
};

/**
 * ACTIVITY_FEED_POST
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.ActivityFeedPost = function () {
  return _in(0xb16fc7b3, 0x64d86585);
};

/**
 * ADD_POP_MULTIPLIER_AREA
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} pedDensity
 * @param {number} trafficDensity
 * @param {boolean} p8
 * @param {boolean} p9
 * @return {number}
 */
global.AddPopMultiplierArea = function (x1, y1, z1, x2, y2, z2, pedDensity, trafficDensity, p8, p9) {
  return _in(0x5ebda1a3, 0xb8cb5ef7, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _fv(pedDensity), _fv(trafficDensity), p8, p9, _r, _ri);
};

/**
 * ADD_TACTICAL_NAV_MESH_POINT
 * Params: p3 is 0 in R* Script utopia2
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @return {void}
 */
global.AddTacticalNavMeshPoint = function (x, y, z, p3) {
  return _in(0xe4ee55e6, 0x3fa9af45, _fv(x), _fv(y), _fv(z), p3);
};

/**
 * ARE_STRINGS_EQUAL
 *
 * @param {string | number} string1
 * @param {string | number} string2
 * @return {boolean}
 */
global.AreStringsEqual = function (string1, string2) {
  return _in(0xd3852f22, 0xab713a1f, _ts(string1), _ts(string2), _r);
};

/**
 * ASIN
 *
 * @param {number} p0
 * @return {number}
 */
global.Asin = function (p0) {
  return _in(0x6e3c15d2, 0x96c15583, _fv(p0), _r, _rf);
};

/**
 * ATAN
 *
 * @param {number} p0
 * @return {number}
 */
global.Atan = function (p0) {
  return _in(0x503054de, 0xd0b78027, _fv(p0), _r, _rf);
};

/**
 * ATAN2
 *
 * @param {number} p0
 * @param {number} p1
 * @return {number}
 */
global.Atan2 = function (p0, p1) {
  return _in(0x965b220a, 0x066e3f07, _fv(p0), _fv(p1), _r, _rf);
};

/**
 * BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION
 * dispatchService: see ENABLE_DISPATCH_SERVICE
 *
 * @param {number} dispatchService
 * @param {boolean} toggle
 * @return {void}
 */
global.BlockDispatchServiceResourceCreation = function (dispatchService, toggle) {
  return _in(0x66947e61, 0xa44de2c6, dispatchService, toggle);
};

/**
 * CANCEL_ONSCREEN_KEYBOARD
 * Old name: _CANCEL_ONSCREEN_KEYBOARD
 *

 * @return {void}
 */
global.CancelOnscreenKeyboard = function () {
  return _in(0x58a39be5, 0x97ce99cd);
};

/**
 * CLEAR_ANGLED_AREA_OF_VEHICLES
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.ClearAngledAreaOfVehicles = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xa4d83115, 0xc1e02f8a, p0, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * CLEAR_AREA
 * flag |= 1 | 1048576 | 524288
 * ALL_BASE, PROJECTILES, AMBIENT_POPULATION, BROADCAST
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} flag
 * @return {void}
 */
global.ClearArea = function (x, y, z, radius, flag) {
  return _in(0x3b882a96, 0xea77d5b1, _fv(x), _fv(y), _fv(z), _fv(radius), flag);
};

/**
 * CLEAR_BIT
 *
 * @param {number} offset
 * @return {number}
 */
global.ClearBit = function (offset) {
  return _in(0x7d1d4a36, 0x02b6ad4e, _i, offset);
};

/**
 * CLEAR_OVERRIDE_WEATHER
 *

 * @return {void}
 */
global.ClearOverrideWeather = function () {
  return _in(0x80a398f1, 0x6ffe3cc3);
};

/**
 * CLEAR_TACTICAL_NAV_MESH_POINTS
 *

 * @return {void}
 */
global.ClearTacticalNavMeshPoints = function () {
  return _in(0xd93b6516, 0xc6878267);
};

/**
 * CLEAR_WEATHER_TYPE_PERSIST
 *

 * @return {void}
 */
global.ClearWeatherTypePersist = function () {
  return _in(0xd85dfe5c, 0x131e4ae9);
};

/**
 * COMPARE_STRINGS
 *
 * @param {string | number} str1
 * @param {string | number} str2
 * @param {boolean} matchCase
 * @param {number} maxLength
 * @return {number}
 */
global.CompareStrings = function (str1, str2, matchCase, maxLength) {
  return _in(0xbfbb74a1, 0x5efc149b, _ts(str1), _ts(str2), matchCase, maxLength, _r, _ri);
};

/**
 * COPY_SCRIPT_STRUCT
 * Old name: _COPY_MEMORY
 *
 * @param {DataView} dst
 * @param {DataView} src
 * @param {number} size
 * @return {void}
 */
global.CopyScriptStruct = function (dst, src, size) {
  return _in(0xf7ac7dc0, 0xdee7c9be, dst, src, size);
};

/**
 * CREATE_INCIDENT
 * dispatchService: see ENABLE_DISPATCH_SERVICE
 *
 * @param {number} dispatchService
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} numUnits
 * @param {number} radius
 * @param {any} p7
 * @param {any} p8
 * @return {[boolean, number]}
 */
global.CreateIncident = function (dispatchService, x, y, z, numUnits, radius, p7, p8) {
  return _in(0x3f892caf, 0x67444ae7, dispatchService, _fv(x), _fv(y), _fv(z), numUnits, _fv(radius), _i, p7, p8, _r);
};

/**
 * DELETE_INCIDENT
 * Delete an incident with a given id.
 *
 * @param {number} incidentId
 * @return {void}
 */
global.DeleteIncident = function (incidentId) {
  return _in(0x5cfd0f0d, 0x6aae0aee, incidentId);
};

/**
 * DISABLE_LOOTING_COMPOSITE_LOOTABLE_THIS_FRAME
 *
 * @param {number} compositeId
 * @param {boolean} p1
 * @return {void}
 */
global.DisableLootingCompositeLootableThisFrame = function (compositeId, p1) {
  return _in(0x40d72189, 0xf46d2e15, compositeId, p1);
};

/**
 * DISPLAY_ONSCREEN_KEYBOARD
 * enum eOnscreenKeyboardTextType
 * {
 *   KTEXTTYPE_INVALID = -1,
 *   KTEXTTYPE_DEFAULT,
 *   KTEXTTYPE_EMAIL,
 *   KTEXTTYPE_PASSWORD,
 *   KTEXTTYPE_NUMERIC,
 *   KTEXTTYPE_ALPHABET,
 *   KTEXTTYPE_GAMERTAG,
 *   KTEXTTYPE_FILENAME,
 *   KTEXTTYPE_COUNT
 * };
 *
 * @param {number} textType
 * @param {string | number} windowTitle
 * @param {string | number} p2
 * @param {string | number} defaultText
 * @param {string | number} defaultConcat1
 * @param {string | number} defaultConcat2
 * @param {string | number} defaultConcat3
 * @param {number} maxInputLength
 * @return {void}
 */
global.DisplayOnscreenKeyboard = function (textType, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength) {
  return _in(0x04413111, 0x8d8db3cd, textType, _ts(windowTitle), _ts(p2), _ts(defaultText), _ts(defaultConcat1), _ts(defaultConcat2), _ts(defaultConcat3), maxInputLength);
};

/**
 * DOES_POP_MULTIPLIER_AREA_EXIST
 *
 * @param {number} id
 * @return {boolean}
 */
global.DoesPopMultiplierAreaExist = function (id) {
  return _in(0x03ba619c, 0x81a646b3, id, _r);
};

/**
 * ENABLE_DISPATCH_SERVICE
 * enum DispatchType
 * {
 *   DT_Invalid,
 *   DT_PoliceAutomobile,
 *   DT_PoliceHelicopter,
 *   DT_FireDepartment,
 *   DT_SwatAutomobile,
 *   DT_AmbulanceDepartment,
 *   DT_PoliceRiders,
 *   DT_PoliceVehicleRequest,
 *   DT_PoliceRoadBlock,
 *   DT_PoliceAutomobileWaitPulledOver,
 *   DT_PoliceAutomobileWaitCruising,
 *   DT_Gangs,
 *   DT_SwatHelicopter,
 *   DT_PoliceBoat,
 *   DT_ArmyVehicle,
 *   DT_OnFoot,
 *   DT_PoliceDogs
 * };
 *
 * @param {number} dispatchService
 * @param {boolean} toggle
 * @return {void}
 */
global.EnableDispatchService = function (dispatchService, toggle) {
  return _in(0x50e52637, 0xef70ef77, dispatchService, toggle);
};

/**
 * FIRE_SINGLE_BULLET
 *
 * @param {DataView} args
 * @return {void}
 */
global.FireSingleBullet = function (args) {
  return _in(0xcbc9a21f, 0x6a2a679c, args);
};

/**
 * FORCE_LIGHTNING_FLASH
 * creates single lightning+thunder at random position
 *

 * @return {void}
 */
global.ForceLightningFlash = function () {
  return _in(0x369db5b2, 0x510fa080);
};

/**
 * GAME_FRAMEWORK_MANAGER_INIT
 *
 * @param {number} transitionMode
 * @return {boolean}
 */
global.GameFrameworkManagerInit = function (transitionMode) {
  return _in(0x4cabe596, 0xd632e4b0, _ch(transitionMode), _r);
};

/**
 * GET_ANGLE_BETWEEN_2D_VECTORS
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @return {number}
 */
global.GetAngleBetween_2DVectors = function (x1, y1, x2, y2) {
  return _in(0xd0dfe1c4, 0x86097bbb, _fv(x1), _fv(y1), _fv(x2), _fv(y2), _r, _rf);
};

/**
 * GET_BENCHMARK_ITERATIONS
 * Returns value of the '-benchmarkIterations' command line option.
 * 
 * Old name: _GET_BENCHMARK_ITERATIONS_FROM_COMMAND_LINE
 *

 * @return {number}
 */
global.GetBenchmarkIterations = function () {
  return _in(0x22fc52cf, 0x470cc98d, _r, _ri);
};

/**
 * GET_BENCHMARK_PASS
 * Returns value of the '-benchmarkPass' command line option.
 * 
 * Old name: _GET_BENCHMARK_PASS_FROM_COMMAND_LINE
 *

 * @return {number}
 */
global.GetBenchmarkPass = function () {
  return _in(0x9297dacf, 0x3a2cdff7, _r, _ri);
};

/**
 * GET_BITS_IN_RANGE
 *
 * @param {number} value
 * @param {number} rangeStart
 * @param {number} rangeEnd
 * @return {number}
 */
global.GetBitsInRange = function (value, rangeStart, rangeEnd) {
  return _in(0x68e1352a, 0xf48f905d, value, rangeStart, rangeEnd, _r, _ri);
};

/**
 * GET_CLOSEST_POINT_ON_LINE
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {boolean} p9
 * @return {Vector3}
 */
global.GetClosestPointOnLine = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x83acc65d, 0x9acec5ef, _fv(p0), _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _fv(p8), p9, _r, _rv);
};

/**
 * GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} distance
 * @param {boolean} p4
 * @param {boolean} mustBeOwnedByThisPed
 * @return {[boolean, Vector3]}
 */
global.GetCoordsOfProjectileTypeWithinDistance = function (ped, weaponHash, distance, p4, mustBeOwnedByThisPed) {
  return _in(0xd73c960a, 0x681052df, ped, _ch(weaponHash), _fv(distance), _v, p4, mustBeOwnedByThisPed, _r);
};

/**
 * GET_CURR_WEATHER_STATE
 * Params: percentWeather2: 0f - 0.75f in R* Scripts
 * 
 * Old name: _GET_WEATHER_TYPE_TRANSITION
 *

 * @return {[number, number, number]}
 */
global.GetCurrWeatherState = function () {
  return _in(0x0ac679b2, 0x342f14f2, _i, _i, _f);
};

/**
 * GET_DISTANCE_BETWEEN_COORDS
 * If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
 * 
 * Consider using this faster native instead: BUILTIN::VDIST - DVIST always takes in consideration the 3D coordinates.
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {boolean} useZ
 * @return {number}
 */
global.GetDistanceBetweenCoords = function (x1, y1, z1, x2, y2, z2, useZ) {
  return _in(0x0be7f4e3, 0xcdbafb28, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), useZ, _r, _rf);
};

/**
 * GET_FRAME_COUNT
 *

 * @return {number}
 */
global.GetFrameCount = function () {
  return _in(0x77dfa958, 0xfcf100c1, _r, _ri);
};

/**
 * GET_FRAME_TIME
 *

 * @return {number}
 */
global.GetFrameTime = function () {
  return _in(0x5e720229, 0x14ce3c38, _r, _rf);
};

/**
 * GET_GAME_TIMER
 *

 * @return {number}
 */
global.GetGameTimer = function () {
  return _in(0x4f67e8ec, 0xa7d3f667, _r, _ri);
};

/**
 * GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {[boolean, number, Vector3]}
 */
global.GetGroundZAndNormalFor_3DCoord = function (x, y, z) {
  return _in(0x2a29ca9a, 0x6319e6ab, _fv(x), _fv(y), _fv(z), _f, _v, _r);
};

/**
 * GET_GROUND_Z_FOR_3D_COORD
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} p4
 * @return {[boolean, number]}
 */
global.GetGroundZFor_3DCoord = function (x, y, z, p4) {
  return _in(0x24fa4267, 0xbb8d2431, _fv(x), _fv(y), _fv(z), _f, p4, _r);
};

/**
 * GET_HASH_KEY
 * Computes a hash for the given string. It is hashed using Jenkins' One-at-a-Time hash algorithm (https://en.wikipedia.org/wiki/Jenkins_hash_function)
 * Note: this implementation is case-insensitive.
 *
 * @param {string | number} string
 * @return {number}
 */
global.GetHashKey = function (string) {
  return _in(0xfd340785, 0xadf8cfb7, _ts(string), _r, _ri);
};

/**
 * GET_HEADING_FROM_VECTOR_2D
 * dx = x1 - x2
 * dy = y1 - y2
 *
 * @param {number} dx
 * @param {number} dy
 * @return {number}
 */
global.GetHeadingFromVector_2D = function (dx, dy) {
  return _in(0x38d5202f, 0xf9271c62, _fv(dx), _fv(dy), _r, _rf);
};

/**
 * GET_LINE_PLANE_INTERSECTION
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {number} p9
 * @param {number} p10
 * @param {number} p11
 * @return {[boolean, number]}
 */
global.GetLinePlaneIntersection = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
  return _in(0xab6a04ce, 0xc428258b, _fv(p0), _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _fv(p8), _fv(p9), _fv(p10), _fv(p11), _f, _r);
};

/**
 * GET_MISSION_FLAG
 *

 * @return {boolean}
 */
global.GetMissionFlag = function () {
  return _in(0xb15cd1cf, 0x58771de1, _r);
};

/**
 * GET_MODEL_DIMENSIONS
 *
 * @param {number} modelHash
 * @return {[Vector3, Vector3]}
 */
global.GetModelDimensions = function (modelHash) {
  return _in(0xdcb8ddd5, 0xd054a7e7, _ch(modelHash), _v, _v);
};

/**
 * GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE
 *
 * @param {number} stackSize
 * @return {number}
 */
global.GetNumberOfFreeStacksOfThisSize = function (stackSize) {
  return _in(0x40dc2907, 0xa9697ef7, stackSize, _r, _ri);
};

/**
 * GET_NUMBER_OF_MICROSECONDS_SINCE_LAST_CALL
 *

 * @return {number}
 */
global.GetNumberOfMicrosecondsSinceLastCall = function () {
  return _in(0xb0ce5e5e, 0xd8bb3581, _r, _ri);
};

/**
 * GET_ONSCREEN_KEYBOARD_RESULT
 * Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
 *

 * @return {string | number}
 */
global.GetOnscreenKeyboardResult = function () {
  return _in(0xafb4cf58, 0xa4a292b1, _r, _s);
};

/**
 * GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} distance
 * @param {boolean} p5
 * @param {boolean} mustBeOwnedByThisPed
 * @return {[boolean, Vector3, number]}
 */
global.GetProjectileOfProjectileTypeWithinDistance = function (ped, weaponHash, distance, p5, mustBeOwnedByThisPed) {
  return _in(0x9578986a, 0x6105a6ad, ped, _ch(weaponHash), _fv(distance), _v, _i, p5, mustBeOwnedByThisPed, _r);
};

/**
 * GET_RAIN_LEVEL
 *

 * @return {number}
 */
global.GetRainLevel = function () {
  return _in(0x931b5f4c, 0xc130224b, _r, _rf);
};

/**
 * GET_RANDOM_EVENT_FLAG
 *

 * @return {boolean}
 */
global.GetRandomEventFlag = function () {
  return _in(0x924d54e5, 0x698ae3e0, _r);
};

/**
 * GET_RANDOM_FLOAT_IN_RANGE
 *
 * @param {number} startRange
 * @param {number} endRange
 * @return {number}
 */
global.GetRandomFloatInRange = function (startRange, endRange) {
  return _in(0xe29f927a, 0x961f8aaa, _fv(startRange), _fv(endRange), _r, _rf);
};

/**
 * GET_RANDOM_INT_IN_RANGE
 *
 * @param {number} startRange
 * @param {number} endRange
 * @return {number}
 */
global.GetRandomIntInRange = function (startRange, endRange) {
  return _in(0xd53343aa, 0x4fb7dd28, startRange, endRange, _r, _ri);
};

/**
 * GET_REAL_WORLD_TIME
 * Returns GET_GAME_TIMER() / 1000
 * Only used in rcm_pearson1.ysc
 *

 * @return {number}
 */
global.GetRealWorldTime = function () {
  return _in(0x2e036f04, 0x80b8bf02, _r, _ri);
};

/**
 * GET_SCRIPT_TIME_WITHIN_FRAME_IN_MICROSECONDS
 *

 * @return {number}
 */
global.GetScriptTimeWithinFrameInMicroseconds = function () {
  return _in(0x63219768, 0xc586667c, _r, _ri);
};

/**
 * GET_SNOW_LEVEL
 *

 * @return {number}
 */
global.GetSnowLevel = function () {
  return _in(0x1e5d7270, 0x41be1709, _r, _rf);
};

/**
 * GET_SYSTEM_TIME
 *

 * @return {number}
 */
global.GetSystemTime = function () {
  return _in(0xbe7f2254, 0x17e35a7c, _r, _ri);
};

/**
 * GET_SYSTEM_TIME_STEP
 * Old name: _GET_BENCHMARK_TIME
 *

 * @return {number}
 */
global.GetSystemTimeStep = function () {
  return _in(0x3f3172fe, 0xae3afe1c, _r, _rf);
};

/**
 * GET_WIND_DIRECTION
 *

 * @return {Vector3}
 */
global.GetWindDirection = function () {
  return _in(0xf703e82f, 0x3fe14a5f, _r, _rv);
};

/**
 * GET_WIND_SPEED
 *

 * @return {number}
 */
global.GetWindSpeed = function () {
  return _in(0xffb7e74e, 0x041150a4, _r, _rf);
};

/**
 * HAS_BULLET_IMPACTED_IN_AREA
 * p3 - possibly radius?
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @param {boolean} p4
 * @param {boolean} p5
 * @return {boolean}
 */
global.HasBulletImpactedInArea = function (x, y, z, p3, p4, p5) {
  return _in(0xc153e5bc, 0xcf411814, _fv(x), _fv(y), _fv(z), _fv(p3), p4, p5, _r);
};

/**
 * HAS_BULLET_IMPACTED_IN_BOX
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {boolean} p6
 * @param {boolean} p7
 * @return {boolean}
 */
global.HasBulletImpactedInBox = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0x3b6a4c05, 0xfb2b33ac, _fv(p0), _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), p6, p7, _r);
};

/**
 * IGNORE_NEXT_RESTART
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.IgnoreNextRestart = function (toggle) {
  return _in(0x6c9ff40f, 0xf1b69f8f, toggle);
};

/**
 * INFORM_CODE_OF_CONTENT_ID_OF_CURRENT_UGC_MISSION
 *
 * @param {string | number} p0
 * @return {void}
 */
global.InformCodeOfContentIdOfCurrentUgcMission = function (p0) {
  return _in(0x708df841, 0xb8f27aa2, _ts(p0));
};

/**
 * IS_BIT_SET
 *
 * @param {number} address
 * @param {number} offset
 * @return {boolean}
 */
global.IsBitSet = function (address, offset) {
  return _in(0x4ed6cfdf, 0xe8d4131a, address, offset, _r);
};

/**
 * IS_BULLET_IN_ANGLED_AREA
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {boolean} p7
 * @return {boolean}
 */
global.IsBulletInAngledArea = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0x9d09d849, 0x3747cf02, _fv(p0), _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), p7, _r);
};

/**
 * IS_BULLET_IN_AREA
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {boolean} p4
 * @return {boolean}
 */
global.IsBulletInArea = function (p0, p1, p2, p3, p4) {
  return _in(0xc652fd30, 0x8772d79e, _fv(p0), _fv(p1), _fv(p2), _fv(p3), p4, _r);
};

/**
 * IS_BULLET_IN_BOX
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {boolean} p6
 * @return {boolean}
 */
global.IsBulletInBox = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xc128137c, 0x52152741, _fv(p0), _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), p6, _r);
};

/**
 * IS_DURANGO_VERSION
 * Hardcoded to return false.
 * Checks for XBOXONE Game Build.
 *

 * @return {boolean}
 */
global.IsDurangoVersion = function () {
  return _in(0xd1ccc2a2, 0x639d325f, _r);
};

/**
 * IS_GAME_SESSION_STATE_MACHINE_IDLE
 *

 * @return {boolean}
 */
global.IsGameSessionStateMachineIdle = function () {
  return _in(0xf9e7dbb3, 0x9080640b, _r);
};

/**
 * IS_INCIDENT_VALID
 *
 * @param {number} incidentId
 * @return {boolean}
 */
global.IsIncidentValid = function (incidentId) {
  return _in(0x39f2b1ba, 0xd412246a, incidentId, _r);
};

/**
 * IS_MAG_DEMO_1_ACTIVE
 * magdemo = magazine demo, i. e. for magazines such as IGN, pre play phases to prepare articles etc. - example 2012 builds for V
 * Hardcoded to return false.
 *

 * @return {boolean}
 */
global.IsMagDemo_1Active = function () {
  return _in(0x5fc9357c, 0x26daefce, _r);
};

/**
 * IS_MINIGAME_IN_PROGRESS
 *

 * @return {boolean}
 */
global.IsMinigameInProgress = function () {
  return _in(0xf4d8bcd0, 0x52e7ea1b, _r);
};

/**
 * IS_ORBIS_VERSION
 * Hardcoded to return false.
 * Checks for PS4 Game Build.
 *

 * @return {boolean}
 */
global.IsOrbisVersion = function () {
  return _in(0x88cfae25, 0x0d3e0c71, _r);
};

/**
 * IS_PC_VERSION
 * Hardcoded to return true.
 *

 * @return {boolean}
 */
global.IsPcVersion = function () {
  return _in(0xb0fb6cfa, 0xa5a1c833, _r);
};

/**
 * IS_POSITION_OCCUPIED
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} range
 * @param {boolean} p4
 * @param {boolean} p5
 * @param {boolean} p6
 * @param {boolean} p7
 * @param {boolean} p8
 * @param {any} p9
 * @param {boolean} p10
 * @return {boolean}
 */
global.IsPositionOccupied = function (x, y, z, range, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0x825ca3ed, 0x43831015, _fv(x), _fv(y), _fv(z), _fv(range), p4, p5, p6, p7, p8, p9, p10, _r);
};

/**
 * IS_PROJECTILE_IN_AREA
 * Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
 * 
 * ownedByPlayer = only projectiles fired by the player will be detected.
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {boolean} ownedByPlayer
 * @return {boolean}
 */
global.IsProjectileInArea = function (x1, y1, z1, x2, y2, z2, ownedByPlayer) {
  return _in(0x05b0061e, 0xfdfc8941, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), ownedByPlayer, _r);
};

/**
 * IS_PROJECTILE_TYPE_IN_ANGLED_AREA
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {any} p7
 * @param {boolean} p8
 * @return {boolean}
 */
global.IsProjectileTypeInAngledArea = function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0x928431f4, 0x133cd3d4, _fv(p0), _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), p7, p8, _r);
};

/**
 * IS_PROJECTILE_TYPE_IN_AREA
 * Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a rectangle.
 *
 * @param {number} xMin
 * @param {number} yMin
 * @param {number} zMin
 * @param {number} xMax
 * @param {number} yMax
 * @param {number} zMax
 * @param {number} weaponType
 * @param {boolean} isPlayer
 * @return {boolean}
 */
global.IsProjectileTypeInArea = function (xMin, yMin, zMin, xMax, yMax, zMax, weaponType, isPlayer) {
  return _in(0x04965fb9, 0xe14235c7, _fv(xMin), _fv(yMin), _fv(zMin), _fv(xMax), _fv(yMax), _fv(zMax), _ch(weaponType), isPlayer, _r);
};

/**
 * IS_PROJECTILE_TYPE_WITHIN_DISTANCE
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {any} p3
 * @param {number} p4
 * @param {boolean} p5
 * @return {boolean}
 */
global.IsProjectileTypeWithinDistance = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xf51c9baa, 0xd9ed64c4, _fv(p0), _fv(p1), _fv(p2), p3, _fv(p4), p5, _r);
};

/**
 * IS_STADIA_VERSION
 * Hardcoded to return false.
 *

 * @return {boolean}
 */
global.IsStadiaVersion = function () {
  return _in(0x268ab842, 0x0a9e4ed7, _r);
};

/**
 * IS_STRING_NULL
 *
 * @param {string | number} string
 * @return {boolean}
 */
global.IsStringNull = function (string) {
  return _in(0x60210232, 0x4604d96b, _ts(string), _r);
};

/**
 * IS_STRING_NULL_OR_EMPTY
 *
 * @param {string | number} string
 * @return {boolean}
 */
global.IsStringNullOrEmpty = function (string) {
  return _in(0x2cf12f9a, 0xcf18f048, _ts(string), _r);
};

/**
 * IS_STRING_NULL_OR_EMPTY_OR_SPACES
 * Returns true if the entire string consists only of space characters.
 *
 * @param {string | number} string
 * @return {boolean}
 */
global.IsStringNullOrEmptyOrSpaces = function (string) {
  return _in(0x375f5870, 0xa7b8bec1, _ts(string), _r);
};

/**
 * NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME
 *

 * @return {void}
 */
global.NetworkSetScriptIsSafeForNetworkGame = function () {
  return _in(0x3d0eac63, 0x85dd6100);
};

/**
 * NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS
 *
 * @param {number} fontBitField
 * @return {void}
 */
global.NextOnscreenKeyboardResultWillDisplayUsingTheseFonts = function (fontBitField) {
  return _in(0x5cb71eaa, 0x1429a358, fontBitField);
};

/**
 * OVERRIDE_SAVE_HOUSE
 *
 * @param {boolean} override
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {boolean} isAutosave
 * @return {[boolean, Vector3, number]}
 */
global.OverrideSaveHouse = function (override, x, y, z, heading, isAutosave) {
  return _in(0xb2c69e11, 0xa37b5af0, override, _fv(x), _fv(y), _fv(z), _fv(heading), isAutosave, _v, _f, _r);
};

/**
 * PAUSE_DEATH_ARREST_RESTART
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.PauseDeathArrestRestart = function (toggle) {
  return _in(0x66ab6b6c, 0x7e72f393, toggle);
};

/**
 * POPULATE_NOW
 * spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
 *

 * @return {void}
 */
global.PopulateNow = function () {
  return _in(0xea6dc3a8, 0xadd2005f);
};

/**
 * REGISTER_INTERACTION_LOCKON_PROMPT
 * p3 is usually the same value of radius
 * p8 determines whether the ILO prompt is a lock on prompt with RMB
 *
 * @param {number} entity
 * @param {string | number} text
 * @param {number} radius
 * @param {number} p3
 * @param {number} flag
 * @param {number} p5
 * @param {number} p6
 * @param {number} prompt
 * @param {boolean} p8
 * @param {number} p9
 * @return {boolean}
 */
global.RegisterInteractionLockonPrompt = function (entity, text, radius, p3, flag, p5, p6, prompt, p8, p9) {
  return _in(0x870708a6, 0xe147a9ad, entity, _ts(text), _fv(radius), _fv(p3), flag, _fv(p5), _fv(p6), prompt, p8, p9, _r);
};

/**
 * REMOVE_DISPATCH_SPAWN_BLOCKING_AREA
 *
 * @param {any} p0
 * @return {void}
 */
global.RemoveDispatchSpawnBlockingArea = function (p0) {
  return _in(0x49f751f6, 0x868ddc5b, p0);
};

/**
 * REMOVE_POP_MULTIPLIER_AREA
 *
 * @param {number} id
 * @param {boolean} p1
 * @return {void}
 */
global.RemovePopMultiplierArea = function (id, p1) {
  return _in(0x88cb4843, 0x64efb37a, id, p1);
};

/**
 * RESET_DISPATCH_IDEAL_SPAWN_DISTANCE
 *

 * @return {void}
 */
global.ResetDispatchIdealSpawnDistance = function () {
  return _in(0xc7817264, 0xbc4b6377);
};

/**
 * RESET_END_USER_BENCHMARK
 * Begins with RESET_*. Next character in the name is either D or E.
 * 
 * Old name: _RESET_BENCHMARK_RECORDING
 *

 * @return {void}
 */
global.ResetEndUserBenchmark = function () {
  return _in(0xecbabd03, 0x07fb216f);
};

/**
 * RESET_SCRIPT_TIME_WITHIN_FRAME
 *

 * @return {void}
 */
global.ResetScriptTimeWithinFrame = function () {
  return _in(0x1411a7cb, 0xc3a6eb7b);
};

/**
 * RESET_WANTED_RESPONSE_NUM_PEDS_TO_SPAWN
 *

 * @return {void}
 */
global.ResetWantedResponseNumPedsToSpawn = function () {
  return _in(0xef42f56f, 0x69877125);
};

/**
 * SAVE_END_USER_BENCHMARK
 * Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\Red Dead Redemption 2\Benchmarks and submits some metrics.
 * 
 * Old name: _SAVE_BENCHMARK_RECORDING
 *

 * @return {void}
 */
global.SaveEndUserBenchmark = function () {
  return _in(0xf4743e2e, 0xcc02b3da);
};

/**
 * SCRIPT_RACE_GET_PLAYER_SPLIT_TIME
 *
 * @param {any} p0
 * @param {DataView} p1
 * @param {DataView} p2
 * @return {boolean}
 */
global.ScriptRaceGetPlayerSplitTime = function (p0, p1, p2) {
  return _in(0x769e848c, 0x66e3c2bb, p0, p1, p2, _r);
};

/**
 * SCRIPT_RACE_INIT
 *
 * @param {number} numCheckpoints
 * @param {number} numLaps
 * @param {number} numPlayers
 * @param {any} p3
 * @return {void}
 */
global.ScriptRaceInit = function (numCheckpoints, numLaps, numPlayers, p3) {
  return _in(0x8ae059f4, 0x7158417e, numCheckpoints, numLaps, numPlayers, p3);
};

/**
 * SCRIPT_RACE_PLAYER_HIT_CHECKPOINT
 *
 * @param {number} part
 * @param {number} checkpoint
 * @param {number} lap
 * @param {number} time
 * @return {void}
 */
global.ScriptRacePlayerHitCheckpoint = function (part, checkpoint, lap, time) {
  return _in(0xba62b4d8, 0x0fa66bd6, part, checkpoint, lap, time);
};

/**
 * SCRIPT_RACE_SHUTDOWN
 *

 * @return {void}
 */
global.ScriptRaceShutdown = function () {
  return _in(0x334ce0da, 0x4faf330c);
};

/**
 * SET_BIT
 *
 * @param {number} offset
 * @return {number}
 */
global.SetBit = function (offset) {
  return _in(0xf73fbe48, 0x45c43b5b, _i, offset);
};

/**
 * SET_BITS_IN_RANGE
 *
 * @param {number} rangeStart
 * @param {number} rangeEnd
 * @param {number} p3
 * @return {number}
 */
global.SetBitsInRange = function (rangeStart, rangeEnd, p3) {
  return _in(0x324dc1ce, 0xf57f31e6, _i, rangeStart, rangeEnd, p3);
};

/**
 * SET_CHEAT_ACTIVE
 * Cheats are GTA IV cheats:
 * 
 * 0 = unknown
 * 1 = unknown (same as 0)
 * 2 = Max Health and Armor
 * 3 = Raise Wanted Level
 * 4 = Lower Wanted Level
 * 5 = unknown (does nothing)
 * 6 = Change Weather
 * 7 = Spawn Annihilator
 * 8 = Spawn NRG 900
 * 9 = Spawn FBI
 * 10 = Spawn Jetmax
 * 11 = Spawn Comet
 * 12 = Spawn Turismo
 * 13 = Spawn Cognoscenti
 * 14 = Spawn Super GT
 * 15 = Spawn Sanchez
 * 
 * Initially used in Max Payne 3, that's why we know the name.
 *
 * @param {number} cheatId
 * @return {void}
 */
global.SetCheatActive = function (cheatId) {
  return _in(0xd4958e8c, 0xf0de0dd0, cheatId);
};

/**
 * SET_CREDITS_ACTIVE
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetCreditsActive = function (toggle) {
  return _in(0xd37becf8, 0x62da726f, toggle);
};

/**
 * SET_CURR_WEATHER_STATE
 * Params: BOOL p3 is always true
 * 
 * Old name: _SET_WEATHER_TYPE_TRANSITION
 *
 * @param {number} weatherType1
 * @param {number} weatherType2
 * @param {number} percentWeather2
 * @param {boolean} enabled
 * @return {void}
 */
global.SetCurrWeatherState = function (weatherType1, weatherType2, percentWeather2, enabled) {
  return _in(0xfa3e3ca8, 0xa1de6d5d, _ch(weatherType1), _ch(weatherType2), _fv(percentWeather2), enabled);
};

/**
 * SET_DISPATCH_IDEAL_SPAWN_DISTANCE
 *
 * @param {number} fIdealSpawnDistance
 * @return {void}
 */
global.SetDispatchIdealSpawnDistance = function (fIdealSpawnDistance) {
  return _in(0xeab6823b, 0x82fbd283, _fv(fIdealSpawnDistance));
};

/**
 * SET_FADE_IN_AFTER_DEATH_ARREST
 * Sets whether the game should fade in after the player dies or is arrested.
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetFadeInAfterDeathArrest = function (toggle) {
  return _in(0xdf3b5846, 0xde5904af, toggle);
};

/**
 * SET_FADE_IN_AFTER_LOAD
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetFadeInAfterLoad = function (toggle) {
  return _in(0xac806c4c, 0xab973517, toggle);
};

/**
 * SET_GAME_PAUSED
 * Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused.
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetGamePaused = function (toggle) {
  return _in(0xfaec088d, 0x28b1de4a, toggle);
};

/**
 * SET_MISSION_FLAG
 * If true, the player can't save the game.
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetMissionFlag = function (toggle) {
  return _in(0x36694b45, 0x6be80d0a, toggle);
};

/**
 * SET_PED_DECOMPOSED
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedDecomposed = function (ped, toggle) {
  return _in(0x674b90be, 0x1115846d, ped, toggle);
};

/**
 * SET_RAIN
 * Old name: _SET_RAIN_LEVEL
 *
 * @param {number} intensity
 * @return {void}
 */
global.SetRain = function (intensity) {
  return _in(0x193dfc05, 0x26830fd6, _fv(intensity));
};

/**
 * SET_RANDOM_EVENT_FLAG
 * If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
 * Does nothing if the mission flag is set.
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetRandomEventFlag = function (toggle) {
  return _in(0xb1adccc4, 0x150c6473, toggle);
};

/**
 * SET_RANDOM_SEED
 *
 * @param {number} seed
 * @return {void}
 */
global.SetRandomSeed = function (seed) {
  return _in(0x5cd7a491, 0x04afcb6b, seed);
};

/**
 * SET_RANDOM_WEATHER_TYPE
 *
 * @param {boolean} p0
 * @param {boolean} p1
 * @return {void}
 */
global.SetRandomWeatherType = function (p0, p1) {
  return _in(0x6e5a7fbe, 0xecab3c72, p0, p1);
};

/**
 * SET_SUPER_JUMP_THIS_FRAME
 *
 * @param {number} player
 * @return {void}
 */
global.SetSuperJumpThisFrame = function (player) {
  return _in(0xb3e9be96, 0x3f10c445, player);
};

/**
 * SET_THIS_SCRIPT_CAN_BE_PAUSED
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetThisScriptCanBePaused = function (toggle) {
  return _in(0x3215376e, 0x79f6ea18, toggle);
};

/**
 * SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetThisScriptCanRemoveBlipsCreatedByAnyScript = function (toggle) {
  return _in(0x8abd939c, 0x2e5d00ed, toggle);
};

/**
 * SET_TIME_SCALE
 * Maximum value is 1.0f
 * At a value of 0.0f the game will still run at a minimum time scale.
 *
 * @param {number} timeScale
 * @return {void}
 */
global.SetTimeScale = function (timeScale) {
  return _in(0x9682af60, 0x50854856, _fv(timeScale));
};

/**
 * SET_WEATHER_TYPE
 * https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_types.lua
 *
 * @param {number} weatherType
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} transition
 * @param {number} transitionTime
 * @param {boolean} p5
 * @return {void}
 */
global.SetWeatherType = function (weatherType, p1, p2, transition, transitionTime, p5) {
  return _in(0x59174f1a, 0xfe095b5a, _ch(weatherType), p1, p2, transition, _fv(transitionTime), p5);
};

/**
 * SET_WIND_DIRECTION
 *
 * @param {number} direction
 * @return {void}
 */
global.SetWindDirection = function (direction) {
  return _in(0xb56c4f5f, 0x57a45600, _fv(direction));
};

/**
 * SET_WIND_SPEED
 *
 * @param {number} speed
 * @return {void}
 */
global.SetWindSpeed = function (speed) {
  return _in(0xd00c2d82, 0xdc04a99f, _fv(speed));
};

/**
 * SHOOT_SINGLE_BULLET_BETWEEN_COORDS
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} damage
 * @param {boolean} p7
 * @param {number} weaponHash
 * @param {number} ownerPed
 * @param {boolean} isAudible
 * @param {boolean} isInvisible
 * @param {number} speed
 * @param {boolean} p13
 * @return {void}
 */
global.ShootSingleBulletBetweenCoords = function (x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, p13) {
  return _in(0x867654cb, 0xc7606f2c, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), damage, p7, _ch(weaponHash), ownerPed, isAudible, isInvisible, _fv(speed), p13);
};

/**
 * SHOULD_USE_METRIC_MEASUREMENTS
 * Returns whether the game's measurement system is set to metric.
 *

 * @return {boolean}
 */
global.ShouldUseMetricMeasurements = function () {
  return _in(0x4fb556ac, 0xefa93098, _r);
};

/**
 * START_END_USER_BENCHMARK
 * Begins with START_*. Next character in the name is either D or E.
 * 
 * Old name: _START_BENCHMARK_RECORDING
 *

 * @return {void}
 */
global.StartEndUserBenchmark = function () {
  return _in(0x29d1f6df, 0x864a094e);
};

/**
 * STOP_CURRENT_LOADING_PROGRESS_TIMER
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.StopCurrentLoadingProgressTimer = function () {
  return _in(0xa565fac2, 0x15cbc77d);
};

/**
 * STOP_END_USER_BENCHMARK
 * Begins with STOP_*. Next character in the name is either D or E.
 * 
 * Old name: _STOP_BENCHMARK_RECORDING
 *

 * @return {void}
 */
global.StopEndUserBenchmark = function () {
  return _in(0xb89aec71, 0xaff2b599);
};

/**
 * STRING_TO_INT
 * Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
 *
 * @param {string | number} string
 * @return {[boolean, number]}
 */
global.StringToInt = function (string) {
  return _in(0xf2dd2298, 0xb3af23e2, _ts(string), _i, _r);
};

/**
 * TAN
 *
 * @param {number} p0
 * @return {number}
 */
global.Tan = function (p0) {
  return _in(0x8c13db96, 0x497b7abf, _fv(p0), _r, _rf);
};

/**
 * UI_STARTED_END_USER_BENCHMARK
 * Hardcoded to return false.
 * 
 * Old name: _UI_IS_SINGLEPLAYER_PAUSE_MENU_ACTIVE
 *

 * @return {boolean}
 */
global.UiStartedEndUserBenchmark = function () {
  return _in(0x4ffa0386, 0xa6216113, _r);
};

/**
 * UNREGISTER_INTERACTION_LOCKON_PROMPT
 *
 * @param {number} entity
 * @return {boolean}
 */
global.UnregisterInteractionLockonPrompt = function (entity) {
  return _in(0xe98d55c5, 0x983f2509, entity, _r);
};

/**
 * UPDATE_ONSCREEN_KEYBOARD
 * Returns the current status of the onscreen keyboard, and updates the output.
 * 
 * Status Codes:
 * 
 * 0 - User still editing
 * 1 - User has finished editing
 * 2 - User has canceled editing
 * 3 - Keyboard isn't active
 *

 * @return {number}
 */
global.UpdateOnscreenKeyboard = function () {
  return _in(0x37df360f, 0x235a3893, _r, _ri);
};

/**
 * VAR_STRING
 * Note: The first bit in 'flags' must not be set.
 * It is also required to pass at least one extra argument (this must be a text label string or hash).
 * When passing a hash, flags should be 0.
 *
 * @param {number} flags
 * @param {string | number} stringType
 * @param {string} value
 * @return {string | number}
 */
global.VarString = function (flags, stringType, value) {
  return _in(0xfa925ac0, 0x0eb830b9, flags, _ts(stringType), value, _r, _rl);
};

/**
 * WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE
 * Only used in smuggler2 script
 *
 * @param {number} maxAmplitude
 * @return {void}
 */
global.WaterOverrideSetOceanwavemaxamplitude = function (maxAmplitude) {
  return _in(0xf06c5b66, 0xde20b2b8, _fv(maxAmplitude));
};

/**
 * WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE
 * Only used in smuggler2 script
 *
 * @param {number} amplitude
 * @return {void}
 */
global.WaterOverrideSetShorewaveamplitude = function (amplitude) {
  return _in(0x55123d5a, 0x7d9d3c42, _fv(amplitude));
};

/**
 * _0x0358B8A41916C613
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0x0358B8A41916C613 = function (p0, p1, p2, p3) {
  return _in(0x0358b8a4, 0x1916c613, p0, p1, p2, p3, _r);
};

/**
 * _0x0730E518486DEEC3
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0730E518486DEEC3 = function (p0) {
  return _in(0x0730e518, 0x486deec3, p0);
};

/**
 * _0x082C043C7AFC3747
 *
 * @param {number} compositeId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x082C043C7AFC3747 = function (compositeId, p1) {
  return _in(0x082c043c, 0x7afc3747, compositeId, p1);
};

/**
 * _0x0A487CC74A517FB5
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0A487CC74A517FB5 = function (p0) {
  return _in(0x0a487cc7, 0x4a517fb5, p0);
};

/**
 * _0x0D0AE5081F88CFE1
 *
 * @param {number} p0
 * @return {boolean}
 */
global.N_0x0D0AE5081F88CFE1 = function (p0) {
  return _in(0x0d0ae508, 0x1f88cfe1, _ch(p0), _r);
};

/**
 * _0x1096603B519C905F
 * _SET_MISSION_NAME_*(FOR_ACTIVITY?/MINIGAME?)
 *
 * @param {string | number} name
 * @return {void}
 */
global.N_0x1096603B519C905F = function (name) {
  return _in(0x1096603b, 0x519c905f, _ts(name));
};

/**
 * _0x154340E87D8CC178
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x154340E87D8CC178 = function (p0) {
  return _in(0x154340e8, 0x7d8cc178, p0);
};

/**
 * _0x183672FE838A661B
 *
 * @param {DataView} data
 * @return {void}
 */
global.N_0x183672FE838A661B = function (data) {
  return _in(0x183672fe, 0x838a661b, data);
};

/**
 * _0x243CEDE8F916B994
 *

 * @return {void}
 */
global.N_0x243CEDE8F916B994 = function () {
  return _in(0x243cede8, 0xf916b994);
};

/**
 * _0x2916B30DC6C41179
 *
 * @param {number} weatherType
 * @return {void}
 */
global.N_0x2916B30DC6C41179 = function (weatherType) {
  return _in(0x2916b30d, 0xc6c41179, _ch(weatherType));
};

/**
 * _0x33982467B1E349EF
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {any}
 */
global.N_0x33982467B1E349EF = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x33982467, 0xb1e349ef, p0, p1, p2, p3, p4, p5, p6, _r);
};

/**
 * _0x35165C658077CD0B
 *

 * @return {any}
 */
global.N_0x35165C658077CD0B = function () {
  return _in(0x35165c65, 0x8077cd0b, _r);
};

/**
 * _0x38C0C9CAE1544500
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x38C0C9CAE1544500 = function (p0) {
  return _in(0x38c0c9ca, 0xe1544500, _ch(p0));
};

/**
 * _0x38C2BF94D15F464D
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x38C2BF94D15F464D = function (p0) {
  return _in(0x38c2bf94, 0xd15f464d, p0, _r);
};

/**
 * _0x3A87FDA8F1B6CDFB
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x3A87FDA8F1B6CDFB = function (p0, p1, p2) {
  return _in(0x3a87fda8, 0xf1b6cdfb, p0, p1, p2);
};

/**
 * _0x3C3C7B1B5EC08764
 *

 * @return {void}
 */
global.N_0x3C3C7B1B5EC08764 = function () {
  return _in(0x3c3c7b1b, 0x5ec08764);
};

/**
 * _0x4647842FE8F31C1E
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x4647842FE8F31C1E = function (p0, p1) {
  return _in(0x4647842f, 0xe8f31c1e, p0, p1);
};

/**
 * _0x49C44FE78A135A1D
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x49C44FE78A135A1D = function (p0) {
  return _in(0x49c44fe7, 0x8a135a1d, p0);
};

/**
 * _0x49F3241C28EBBFBC
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x49F3241C28EBBFBC = function (p0) {
  return _in(0x49f3241c, 0x28ebbfbc, p0);
};

/**
 * _0x4B0501A468B749F8
 *

 * @return {void}
 */
global.N_0x4B0501A468B749F8 = function () {
  return _in(0x4b0501a4, 0x68b749f8);
};

/**
 * _0x4B101DBCC9482F2D
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x4B101DBCC9482F2D = function (ped) {
  return _in(0x4b101dbc, 0xc9482f2d, ped, _r);
};

/**
 * _0x4D5C9CC7E7E23E09
 *

 * @return {void}
 */
global.N_0x4D5C9CC7E7E23E09 = function () {
  return _in(0x4d5c9cc7, 0xe7e23e09);
};

/**
 * _0x553D67295DDD2309
 * UPDATE_PICKUP_COLLECTIBLE: set Eagle Eye fountain
 * _J*, _K*, _L*
 *
 * @param {number} entity
 * @return {void}
 */
global.N_0x553D67295DDD2309 = function (entity) {
  return _in(0x553d6729, 0x5ddd2309, entity);
};

/**
 * _0x5801BE2DF2AF07EC
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x5801BE2DF2AF07EC = function (p0) {
  return _in(0x5801be2d, 0xf2af07ec, p0);
};

/**
 * _0x5B4A8121A47D844D
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x5B4A8121A47D844D = function (p0) {
  return _in(0x5b4a8121, 0xa47d844d, p0, _r);
};

/**
 * _0x627B68D9CE6EE8DE
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x627B68D9CE6EE8DE = function (p0) {
  return _in(0x627b68d9, 0xce6ee8de, p0, _r);
};

/**
 * _0x68319452C5064ABA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x68319452C5064ABA = function (p0, p1) {
  return _in(0x68319452, 0xc5064aba, p0, p1);
};

/**
 * _0x6BCF7B5CD338281A
 * _SET_DISPATCH_*, unused
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x6BCF7B5CD338281A = function (p0, p1, p2) {
  return _in(0x6bcf7b5c, 0xd338281a, p0, p1, p2);
};

/**
 * _0x6BED40493A1AFDB8
 *
 * @param {DataView} p0
 * @param {number} p1
 * @return {void}
 */
global.N_0x6BED40493A1AFDB8 = function (p0, p1) {
  return _in(0x6bed4049, 0x3a1afdb8, p0, _fv(p1));
};

/**
 * _0x6C7B68D3CE60E8DE
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x6C7B68D3CE60E8DE = function (p0) {
  return _in(0x6c7b68d3, 0xce60e8de, p0, _r);
};

/**
 * _0x6F02B5E50511721E
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x6F02B5E50511721E = function (p0) {
  return _in(0x6f02b5e5, 0x0511721e, p0, _r);
};

/**
 * _0x745808BB01CEC6B9
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x745808BB01CEC6B9 = function (p0) {
  return _in(0x745808bb, 0x01cec6b9, _fv(p0));
};

/**
 * _0x74ACA66484CEBAF0
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x74ACA66484CEBAF0 = function (p0) {
  return _in(0x74aca664, 0x84cebaf0, p0);
};

/**
 * _0x7A76104CC2CC69E8
 *
 * @param {number} entity
 * @param {number} p1
 * @param {number} p2
 * @return {any}
 */
global.N_0x7A76104CC2CC69E8 = function (entity, p1, p2) {
  return _in(0x7a76104c, 0xc2cc69e8, entity, p1, p2, _r);
};

/**
 * _0x7CF96F1250EF3221
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x7CF96F1250EF3221 = function (p0) {
  return _in(0x7cf96f12, 0x50ef3221, p0, _r);
};

/**
 * _0x7FA58CED69405F9A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x7FA58CED69405F9A = function (p0, p1) {
  return _in(0x7fa58ced, 0x69405f9a, p0, p1);
};

/**
 * _0x8314FC2013ECE2DA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x8314FC2013ECE2DA = function (p0, p1, p2) {
  return _in(0x8314fc20, 0x13ece2da, p0, p1, p2, _r);
};

/**
 * _0x8BB99B85444544D9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x8BB99B85444544D9 = function (p0, p1) {
  return _in(0x8bb99b85, 0x444544d9, p0, p1, _r);
};

/**
 * _0x8C0F6A3D7236DEEB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x8C0F6A3D7236DEEB = function (p0, p1) {
  return _in(0x8c0f6a3d, 0x7236deeb, p0, p1);
};

/**
 * _0x8DB104CCEBCD58C5
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x8DB104CCEBCD58C5 = function (p0, p1) {
  return _in(0x8db104cc, 0xebcd58c5, p0, p1, _r);
};

/**
 * _0x94E8CA3DEE952789
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x94E8CA3DEE952789 = function (p0, p1) {
  return _in(0x94e8ca3d, 0xee952789, p0, p1, _r);
};

/**
 * _0x94FCADCF9F0C368E
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x94FCADCF9F0C368E = function (p0) {
  return _in(0x94fcadcf, 0x9f0c368e, p0);
};

/**
 * _0x96282005C5C6801F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x96282005C5C6801F = function (p0, p1) {
  return _in(0x96282005, 0xc5c6801f, p0, p1);
};

/**
 * _0x970339EFA4FDE518
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x970339EFA4FDE518 = function (p0, p1, p2) {
  return _in(0x970339ef, 0xa4fde518, p0, p1, p2, _r);
};

/**
 * _0x9A252AA23D7098F2
 *

 * @return {void}
 */
global.N_0x9A252AA23D7098F2 = function () {
  return _in(0x9a252aa2, 0x3d7098f2);
};

/**
 * _0x9BF2C0C568C61641
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9BF2C0C568C61641 = function (p0) {
  return _in(0x9bf2c0c5, 0x68c61641, p0);
};

/**
 * _0xA08111B053D84B4D
 * _CLEAR*
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xA08111B053D84B4D = function (p0) {
  return _in(0xa08111b0, 0x53d84b4d, p0);
};

/**
 * _0xA3A8926951471C82
 *

 * @return {void}
 */
global.N_0xA3A8926951471C82 = function () {
  return _in(0xa3a89269, 0x51471c82);
};

/**
 * _0xA9342743B634A462
 * nullsub, doesn't do anything
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xA9342743B634A462 = function (p0) {
  return _in(0xa9342743, 0xb634a462, p0);
};

/**
 * _0xAB26DEEE120FD3FD
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xAB26DEEE120FD3FD = function (p0, p1) {
  return _in(0xab26deee, 0x120fd3fd, p0, p1);
};

/**
 * _0xAD44856A1CD29635
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xAD44856A1CD29635 = function (p0, p1, p2) {
  return _in(0xad44856a, 0x1cd29635, p0, p1, p2);
};

/**
 * _0xAF3A84C7DE6A1DC5
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xAF3A84C7DE6A1DC5 = function (p0, p1) {
  return _in(0xaf3a84c7, 0xde6a1dc5, p0, p1);
};

/**
 * _0xAF530E56505D1BD6
 * Hardcoded to return one/true.
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xAF530E56505D1BD6 = function (p0) {
  return _in(0xaf530e56, 0x505d1bd6, p0, _r);
};

/**
 * _0xB08C4FA25BC29DB9
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xB08C4FA25BC29DB9 = function (p0) {
  return _in(0xb08c4fa2, 0x5bc29db9, p0);
};

/**
 * _0xB1F6665AA54DCD5C
 *
 * @param {number} p0
 * @return {any}
 */
global.N_0xB1F6665AA54DCD5C = function (p0) {
  return _in(0xb1f6665a, 0xa54dcd5c, _ch(p0), _r);
};

/**
 * _0xB711EB4BC8D06013
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.N_0xB711EB4BC8D06013 = function () {
  return _in(0xb711eb4b, 0xc8d06013);
};

/**
 * _0xBB282CF5D2333FB8
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xBB282CF5D2333FB8 = function (p0, p1) {
  return _in(0xbb282cf5, 0xd2333fb8, p0, p1);
};

/**
 * _0xBBE5B63EFFB08E68
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {any}
 */
global.N_0xBBE5B63EFFB08E68 = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xbbe5b63e, 0xffb08e68, p0, p1, p2, p3, p4, p5, p6, _r);
};

/**
 * _0xCC1BAF72D571DB8D
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xCC1BAF72D571DB8D = function (p0, p1, p2) {
  return _in(0xcc1baf72, 0xd571db8d, p0, p1, p2, _r);
};

/**
 * _0xCC3EDC5614B03F61
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0xCC3EDC5614B03F61 = function (p0) {
  return _in(0xcc3edc56, 0x14b03f61, p0);
};

/**
 * _0xD3F943B88F55376A
 *
 * @param {number} weatherType
 * @return {void}
 */
global.N_0xD3F943B88F55376A = function (weatherType) {
  return _in(0xd3f943b8, 0x8f55376a, _ch(weatherType));
};

/**
 * _0xDA4D8EB04E8E2928
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xDA4D8EB04E8E2928 = function (p0) {
  return _in(0xda4d8eb0, 0x4e8e2928, p0);
};

/**
 * _0xDBDA48EC456ED908
 *

 * @return {void}
 */
global.N_0xDBDA48EC456ED908 = function () {
  return _in(0xdbda48ec, 0x456ed908);
};

/**
 * _0xDC057B86FC157031
 * Hardcoded to return one/true.
 *

 * @return {any}
 */
global.N_0xDC057B86FC157031 = function () {
  return _in(0xdc057b86, 0xfc157031, _r);
};

/**
 * _0xDC416CA762BC4F43
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {any}
 */
global.N_0xDC416CA762BC4F43 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xdc416ca7, 0x62bc4f43, p0, p1, p2, p3, p4, p5, _r);
};

/**
 * _0xDE2C3B74D2B3705C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xDE2C3B74D2B3705C = function (p0, p1) {
  return _in(0xde2c3b74, 0xd2b3705c, p0, p1);
};

/**
 * _0xEB946B9E579729AD
 * Not implemented.
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.N_0xEB946B9E579729AD = function (ped, p1) {
  return _in(0xeb946b9e, 0x579729ad, ped, p1);
};

/**
 * _0xF569E33FB72ED28E
 *

 * @return {void}
 */
global.N_0xF569E33FB72ED28E = function () {
  return _in(0xf569e33f, 0xb72ed28e);
};

/**
 * _0xF63FA29D4A9ACA86
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xF63FA29D4A9ACA86 = function (p0, p1) {
  return _in(0xf63fa29d, 0x4a9aca86, p0, p1);
};

/**
 * _0xF650DCF5D6F312C1
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xF650DCF5D6F312C1 = function (p0) {
  return _in(0xf650dcf5, 0xd6f312c1, p0);
};

/**
 * _0xF81C53561D15F330
 *

 * @return {string | number}
 */
global.N_0xF81C53561D15F330 = function () {
  return _in(0xf81c5356, 0x1d15f330, _r, _s);
};

/**
 * _0xFC6ECB9170145ECE
 *

 * @return {void}
 */
global.N_0xFC6ECB9170145ECE = function () {
  return _in(0xfc6ecb91, 0x70145ece);
};

/**
 * _0xFF252E2BAFB7330F
 * nullsub, doesn't do anything
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xFF252E2BAFB7330F = function (p0) {
  return _in(0xff252e2b, 0xafb7330f, p0);
};

/**
 * _ADD_DISPATCH_SPAWN_BLOCKING_AREA
 *
 * @param {number} volume
 * @return {any}
 */
global.AddDispatchSpawnBlockingArea = function (volume) {
  return _in(0xa2d5a262, 0x08421426, volume, _r);
};

/**
 * _ADD_POP_MULTIPLIER_VOLUME
 * Only used in script function PROCESS_ZONE_CREATION
 * Returns Pop multiplier volume ID
 *
 * @param {number} volume
 * @param {number} pedDensity
 * @param {number} vehicleDensity
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {number}
 */
global.AddPopMultiplierVolume = function (volume, pedDensity, vehicleDensity, p3, p4) {
  return _in(0x3233c4ec, 0x0514c7ec, volume, _fv(pedDensity), _fv(vehicleDensity), p3, p4, _r, _ri);
};

/**
 * _CLEAR_ALL_BIT_FLAGS
 *
 * @param {DataView} bitFlags
 * @return {void}
 */
global.ClearAllBitFlags = function (bitFlags) {
  return _in(0xd2d74f89, 0xdf844a50, bitFlags);
};

/**
 * _CLEAR_BIT_FLAG
 *
 * @param {DataView} bitFlags
 * @param {number} flag
 * @return {void}
 */
global.ClearBitFlag = function (bitFlags, flag) {
  return _in(0xb909149f, 0x2bb5f6da, bitFlags, flag);
};

/**
 * _CLEAR_VOLUME_AREA
 *
 * @param {number} volume
 * @param {number} flag
 * @return {void}
 */
global.ClearVolumeArea = function (volume, flag) {
  return _in(0x2fcd528a, 0x397e5c88, volume, flag);
};

/**
 * _CLEAR_WEATHER_TYPE_PERSIST_OVERTIME
 *
 * @param {number} milliseconds
 * @return {void}
 */
global.ClearWeatherTypePersistOvertime = function (milliseconds) {
  return _in(0xce7690c0, 0xa0d1c36d, milliseconds);
};

/**
 * _CLEAR_WEATHER_VARIATION
 *
 * @param {string | number} weatherType
 * @param {boolean} p1
 * @return {void}
 */
global.ClearWeatherVariation = function (weatherType, p1) {
  return _in(0x0e71c80f, 0xa4ec8147, _ts(weatherType), p1);
};

/**
 * _COUNT_BIT_FLAGS
 *
 * @param {DataView} bitFlags
 * @return {number}
 */
global.CountBitFlags = function (bitFlags) {
  return _in(0xe704838f, 0x36f93b7b, bitFlags, _r, _ri);
};

/**
 * _CREATE_AI_MEMORY
 * aiMemoryType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/_CREATE_AI_MEMORY
 *
 * @param {DataView} args
 * @param {number} aiMemoryType
 * @return {void}
 */
global.CreateAiMemory = function (args, aiMemoryType) {
  return _in(0x88bc5f4a, 0xef77fc4e, args, aiMemoryType);
};

/**
 * _CREATE_COLOR_STRING
 * Returns a formatted string (0x%x)
 *
 * @param {number} rgb
 * @return {string | number}
 */
global.CreateColorString = function (rgb) {
  return _in(0xbcc2cfad, 0xea1aea6c, rgb, _r, _s);
};

/**
 * _CREATE_INCIDENT_WITH_ENTITIES
 * dispatchService: see ENABLE_DISPATCH_SERVICE
 * 
 * The entities must be added to itemSet.
 *
 * @param {number} dispatchService
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} itemSet
 * @param {number} radius
 * @return {[boolean, number]}
 */
global.CreateIncidentWithEntities = function (dispatchService, x, y, z, itemSet, radius) {
  return _in(0xab3d3f45, 0x436db1d8, dispatchService, _fv(x), _fv(y), _fv(z), itemSet, _fv(radius), _i, _r);
};

/**
 * _DOES_ITEM_HAVE_VALID_BASE
 *
 * @param {number} item
 * @return {boolean}
 */
global.DoesItemHaveValidBase = function (item) {
  return _in(0xbdc6e364, 0xc9c78178, item, _r);
};

/**
 * _DOES_POP_MULTIPLIER_AREA_EXIST_FOR_VOLUME
 *
 * @param {number} volume
 * @return {boolean}
 */
global.DoesPopMultiplierAreaExistForVolume = function (volume) {
  return _in(0x39d6dace, 0x323a20b6, volume, _r);
};

/**
 * _DOES_STRING_EXIST_IN_STRING
 *
 * @param {string | number} string1
 * @param {string | number} string2
 * @return {boolean}
 */
global.DoesStringExistInString = function (string1, string2) {
  return _in(0x9382d5d4, 0x3d2aa6ff, _ts(string1), _ts(string2), _r);
};

/**
 * _FORCE_LIGHTNING_FLASH_AT_COORDS
 * p3 is always -1.0f in the scripts
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @return {void}
 */
global.ForceLightningFlashAtCoords = function (x, y, z, p3) {
  return _in(0x67943537, 0xd179597c, _fv(x), _fv(y), _fv(z), _fv(p3));
};

/**
 * _GAME_FRAMEWORK_MANAGER_GET_MODE
 *

 * @return {number}
 */
global.GameFrameworkManagerGetMode = function () {
  return _in(0xfaed234c, 0x7f53abeb, _r, _ri);
};

/**
 * _GAME_FRAMEWORK_MANAGER_SHUTDOWN
 *

 * @return {void}
 */
global.GameFrameworkManagerShutdown = function () {
  return _in(0xaff2fd8a, 0xdd927585);
};

/**
 * _GET_AI_PED_DOES_HAVE_EVENT_MEMORY
 *
 * @param {DataView} args
 * @param {number} p1
 * @return {boolean}
 */
global.GetAiPedDoesHaveEventMemory = function (args, p1) {
  return _in(0xfdf38e2b, 0x711bf78e, args, p1, _r);
};

/**
 * _GET_EASING_CURVE_VALUE
 * https://easings.net/
 * 
 * enum class eEasingCurveType
 * {
 *   TYPE_LINEAR,
 *   TYPE_QUADRATIC_IN,
 *   TYPE_QUADRATIC_OUT,
 *   TYPE_QUADRATIC_INOUT,
 *   TYPE_CUBIC_IN,
 *   TYPE_CUBIC_OUT,
 *   TYPE_CUBIC_INOUT,
 *   TYPE_QUARTIC_IN,
 *   TYPE_QUARTIC_OUT,
 *   TYPE_QUARTIC_INOUT,
 *   TYPE_QUINTIC_IN,
 *   TYPE_QUINTIC_OUT,
 *   TYPE_QUINTIC_INOUT,
 *   TYPE_EXPONENTIAL_IN,
 *   TYPE_EXPONENTIAL_OUT,
 *   TYPE_EXPONENTIAL_INOUT,
 *   TYPE_SINE_IN,
 *   TYPE_SINE_OUT,
 *   TYPE_SINE_INOUT,
 *   TYPE_CIRCULAR_IN,
 *   TYPE_CIRCULAR_OUT,
 *   TYPE_CIRCULAR_INOUT,
 *   TYPE_BOUNCE_IN,
 *   TYPE_BOUNCE_OUT,
 *   TYPE_BOUNCE_INOUT,
 *   TYPE_CUSTOM
 * };
 *
 * @param {number} t
 * @param {number} b
 * @param {number} d
 * @param {number} easingCurveType
 * @return {number}
 */
global.GetEasingCurveValue = function (t, b, d, easingCurveType) {
  return _in(0xef50e344, 0xa8f93784, _fv(t), _fv(b), _fv(d), easingCurveType, _r, _rf);
};

/**
 * _GET_ENTITY_FROM_ITEM
 *
 * @param {number} item
 * @return {number}
 */
global.GetEntityFromItem = function (item) {
  return _in(0xee04c0af, 0xd4efaf0e, item, _r, _ri);
};

/**
 * _GET_FORCED_WEATHER
 * Returns the weather type that has been set by a script
 *

 * @return {[number, number]}
 */
global.GetForcedWeather = function () {
  return _in(0xdd560abe, 0xf5d3784c, _i, _i);
};

/**
 * _GET_GAME_TIMER_NON_SCALED_CLIPPED
 * Returns rage::fwTimer::sm_nonScaledClippedTime
 *

 * @return {number}
 */
global.GetGameTimerNonScaledClipped = function () {
  return _in(0x483b8c54, 0x2103ad72, _r, _ri);
};

/**
 * _GET_ITEM_TYPE
 * 0 = invalid
 * 1 = CEntity
 * 2 = rage::volBase
 * 3 = rage::volSphere
 * 4 = rage::volBox
 * 5 = rage::volAggregate
 * 6 = rage::volCylinder
 * 7 = CScriptedCoverPoint
 * 8 = rage::ptfxScriptInfo
 * 9 = CPed
 * 10 = CVehicle
 * 11 = CObject
 * 12 = CItemSet
 * 13 = CPersistentCharacter
 *
 * @param {number} handle
 * @return {number}
 */
global.GetItemType = function (handle) {
  return _in(0xdc8d2ff4, 0x78df9553, handle, _r, _ri);
};

/**
 * _GET_LOOTING_EVENT_HAS_FIRED
 * Event names in the scripts: MGBegin, MGEnd, ReadyForCut
 *
 * @param {number} ped
 * @param {string | number} eventName
 * @return {boolean}
 */
global.GetLootingEventHasFired = function (ped, eventName) {
  return _in(0xf9b91c51, 0x29eabc08, ped, _ts(eventName), _r);
};

/**
 * _GET_MAX_NUM_INSTRUCTIONS
 *

 * @return {number}
 */
global.GetMaxNumInstructions = function () {
  return _in(0xc43cd266, 0x8b204419, _r, _ri);
};

/**
 * _GET_NEXT_WEATHER_TYPE_HASH_NAME
 *

 * @return {number}
 */
global.GetNextWeatherTypeHashName = function () {
  return _in(0x51021d36, 0xf62aaa83, _r, _ri);
};

/**
 * _GET_NUMBER_OF_INSTRUCTIONS
 *

 * @return {number}
 */
global.GetNumberOfInstructions = function () {
  return _in(0x72904d3d, 0x62af5839, _r, _ri);
};

/**
 * _GET_OBJECT_FROM_INDEXED_ITEM
 *
 * @param {number} item
 * @return {number}
 */
global.GetObjectFromIndexedItem = function (item) {
  return _in(0x18013392, 0x501ce5dc, item, _r, _ri);
};

/**
 * _GET_PED_FROM_INDEXED_ITEM
 *
 * @param {number} item
 * @return {number}
 */
global.GetPedFromIndexedItem = function (item) {
  return _in(0x3ffb1553, 0x4067dcd4, item, _r, _ri);
};

/**
 * _GET_PREV_WEATHER_TYPE_HASH_NAME
 *

 * @return {number}
 */
global.GetPrevWeatherTypeHashName = function () {
  return _in(0x4beb42ae, 0xbca732e9, _r, _ri);
};

/**
 * _GET_RANDOM_WEATHER_TYPE
 *

 * @return {number}
 */
global.GetRandomWeatherType = function () {
  return _in(0x1359c181, 0xbc625503, _r, _ri);
};

/**
 * _GET_RANDOM_WEATHER_TYPE_INDEX
 *

 * @return {number}
 */
global.GetRandomWeatherTypeIndex = function () {
  return _in(0x7f4ce164, 0xd9a11dfe, _r, _ri);
};

/**
 * _GET_STATUS_OF_SAVEGAME_OPERATION
 * Only 0 and 1 are valid for p0, higher values causes the native to return 2.
 *
 * @param {number} p0
 * @return {number}
 */
global.GetStatusOfSavegameOperation = function (p0) {
  return _in(0x1b065a2b, 0xf7953815, p0, _r, _ri);
};

/**
 * _GET_STRING_FROM_BOOL
 *
 * @param {boolean} value
 * @return {string | number}
 */
global.GetStringFromBool = function (value) {
  return _in(0xf216f741, 0x01968db0, value, _r, _s);
};

/**
 * _GET_STRING_FROM_FLOAT
 *
 * @param {number} value
 * @param {number} digits
 * @return {string | number}
 */
global.GetStringFromFloat = function (value, digits) {
  return _in(0x2b684640, 0x1d68e563, _fv(value), digits, _r, _s);
};

/**
 * _GET_STRING_FROM_VECTOR
 * Returns a string in the following format: <<%.4f,%.4f,%.4f>>
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {string | number}
 */
global.GetStringFromVector = function (x, y, z) {
  return _in(0x6c4dbf55, 0x3885f9eb, _fv(x), _fv(y), _fv(z), _r, _s);
};

/**
 * _GET_TEMPERATURE_AT_COORDS
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.GetTemperatureAtCoords = function (x, y, z) {
  return _in(0xb98b78c3, 0x768af6e0, _fv(x), _fv(y), _fv(z), _r, _rf);
};

/**
 * _GET_VEHICLE_FROM_INDEXED_ITEM
 *
 * @param {number} item
 * @return {number}
 */
global.GetVehicleFromIndexedItem = function (item) {
  return _in(0xe578c8ae, 0x173719b3, item, _r, _ri);
};

/**
 * _GET_VOLUME_FROM_INDEXED_ITEM
 *
 * @param {number} item
 * @return {number}
 */
global.GetVolumeFromIndexedItem = function (item) {
  return _in(0xf18af483, 0xdf70bbde, item, _r, _ri);
};

/**
 * _INT_TO_STRING
 * Note: the buffer should be exactly 32 bytes long
 *
 * @param {number} value
 * @param {string | number} format
 * @return {string}
 */
global.IntToString = function (value, format) {
  return _in(0xcf11c0ce, 0xb40c401b, value, _ts(format), buffer);
};

/**
 * _IS_ANY_BIT_FLAG_SET
 *
 * @param {DataView} bitFlags
 * @return {boolean}
 */
global.IsAnyBitFlagSet = function (bitFlags) {
  return _in(0x80e9c316, 0xef84dd81, bitFlags, _r);
};

/**
 * _IS_BASE_A_COVER_POINT
 *
 * @param {number} handle
 * @return {boolean}
 */
global.IsBaseACoverPoint = function (handle) {
  return _in(0xfec1d4b5, 0xc82c176f, handle, _r);
};

/**
 * _IS_BASE_A_PERSISTENT_CHARACTER
 *
 * @param {number} handle
 * @return {boolean}
 */
global.IsBaseAPersistentCharacter = function (handle) {
  return _in(0x716f17f8, 0xa0419f95, handle, _r);
};

/**
 * _IS_BIT_FLAG_SET
 *
 * @param {DataView} bitFlags
 * @param {number} flag
 * @return {boolean}
 */
global.IsBitFlagSet = function (bitFlags, flag) {
  return _in(0x8f4f0500, 0x54005c27, bitFlags, flag, _r);
};

/**
 * _IS_GLOBAL_BLOCK_VALID
 *
 * @param {number} index
 * @return {boolean}
 */
global.IsGlobalBlockValid = function (index) {
  return _in(0xacb7e141, 0x8a8b6e32, index, _r);
};

/**
 * _IS_MISSION_CREATOR_ACTIVE
 *

 * @return {boolean}
 */
global.IsMissionCreatorActive = function () {
  return _in(0xf236c84c, 0x6adfcb2f, _r);
};

/**
 * _IS_PED_DECOMPOSED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedDecomposed = function (ped) {
  return _in(0x5170dda6, 0xd63acaaa, ped, _r);
};

/**
 * _IS_PLAYER_OWNING_STANDALONE_SP
 *

 * @return {boolean}
 */
global.IsPlayerOwningStandaloneSp = function () {
  return _in(0x36040772, 0xdf5e59a0, _r);
};

/**
 * _LOOT_TABLES_GET_INFO
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {number} lootTableKey
 * @param {DataView} p4
 * @param {any} p5
 * @return {void}
 */
global.LootTablesGetInfo = function (ped, p1, p2, lootTableKey, p4, p5) {
  return _in(0x48e4d50f, 0x87a96aa5, ped, p1, p2, _ch(lootTableKey), p4, p5);
};

/**
 * _QUEUE_SAVEGAME_OPERATION
 * p0 must be < 2
 *
 * @param {number} p0
 * @return {boolean}
 */
global.QueueSavegameOperation = function (p0) {
  return _in(0x279b0696, 0xda4657eb, p0, _r);
};

/**
 * _READ_INT_AS_FLOAT
 * Reads the passed value as floating point value and returns it.
 * Example: _READ_INT_AS_FLOAT(0x3F800000) returns 1.0f because 0x3F800000 is the hexadecimal representation of 1.0f.
 *
 * @param {number} value
 * @return {number}
 */
global.ReadIntAsFloat = function (value) {
  return _in(0xd2c91264, 0x10dfa1b2, value, _r, _rf);
};

/**
 * _REMOVE_POP_MULTIPLIER_AREA_FOR_VOLUME
 *
 * @param {number} volume
 * @param {number} p1
 * @return {void}
 */
global.RemovePopMultiplierAreaForVolume = function (volume, p1) {
  return _in(0xbd090f5b, 0x1db82189, volume, p1);
};

/**
 * _RESET_DISPATCH_MAX_SPAWN_DISTANCE
 *

 * @return {void}
 */
global.ResetDispatchMaxSpawnDistance = function () {
  return _in(0x54ec7b6b, 0xc72bad69);
};

/**
 * _RESET_DISPATCH_MIN_SPAWN_DISTANCE
 *

 * @return {void}
 */
global.ResetDispatchMinSpawnDistance = function () {
  return _in(0x96498d92, 0x2d8d0d0a);
};

/**
 * _SET_AI_MEMORY_REACTIONS_ENABLED
 * Used in CAIConditionAmbientAIMemoryReactionsEnabled
 *
 * @param {boolean} enabled
 * @return {void}
 */
global.SetAiMemoryReactionsEnabled = function (enabled) {
  return _in(0x6ac4af46, 0xa6b8dfb2, enabled);
};

/**
 * _SET_BIT_FLAG
 * Similar to SET_BIT but specifically designed for large (>32 flags) bit flag sets.
 * The flags are stored in an int array where each int has the ability to hold 32 flags.
 * Flags 0-31 would be stored in the first int, flags 32-63 in the second int, etc.
 *
 * @param {DataView} bitFlags
 * @param {number} flag
 * @return {void}
 */
global.SetBitFlag = function (bitFlags, flag) {
  return _in(0xe84aac1b, 0x22a73e99, bitFlags, flag);
};

/**
 * _SET_DISPATCH_MAX_SPAWN_DISTANCE
 *
 * @param {number} maxSpawnDistance
 * @return {void}
 */
global.SetDispatchMaxSpawnDistance = function (maxSpawnDistance) {
  return _in(0x89314fb3, 0x463e28de, _fv(maxSpawnDistance));
};

/**
 * _SET_DISPATCH_MIN_SPAWN_DISTANCE
 *
 * @param {number} minSpawnDistance
 * @return {void}
 */
global.SetDispatchMinSpawnDistance = function (minSpawnDistance) {
  return _in(0x27a1b170, 0xaa8af84c, _fv(minSpawnDistance));
};

/**
 * _SET_GAME_LOGIC_PAUSED
 * Note: this native was added in build 1232.56
 *

 * @return {void}
 */
global.SetGameLogicPaused = function () {
  return _in(0x550f05cf, 0xfbd63c8c);
};

/**
 * _SET_GLOBAL_BLOCK_IS_LOADED
 *
 * @param {number} index
 * @param {boolean} toggle
 * @return {void}
 */
global.SetGlobalBlockIsLoaded = function (index, toggle) {
  return _in(0xe9724006, 0x5406cb80, index, toggle);
};

/**
 * _SET_INCIDENT_UNK
 *
 * @param {number} incidentId
 * @return {void}
 */
global.SetIncidentUnk = function (incidentId) {
  return _in(0x9617b6e5, 0xf6537b63, incidentId);
};

/**
 * _SET_LOOT_PELT_SATCHEL_ITEM
 *
 * @param {number} ped
 * @param {any} item
 * @return {void}
 */
global.SetLootPeltSatchelItem = function (ped, item) {
  return _in(0x9b479712, 0x34169990, ped, item);
};

/**
 * _SET_OVERRIDE_WEATHER
 *
 * @param {number} weatherType
 * @return {void}
 */
global.SetOverrideWeather = function (weatherType) {
  return _in(0xbe83cae8, 0xed77a94f, _ch(weatherType));
};

/**
 * _SET_SNOW_LEVEL
 *
 * @param {number} level
 * @return {void}
 */
global.SetSnowLevel = function (level) {
  return _in(0xf6bee7e8, 0x0ec5ca40, _fv(level));
};

/**
 * _SET_WEATHER_TYPE_2
 *
 * @param {number} weatherType
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {boolean} p4
 * @return {void}
 */
global.SetWeatherType_2 = function (weatherType, p1, p2, p3, p4) {
  return _in(0x2c6a07af, 0x9aedabd8, _ch(weatherType), p1, p2, p3, p4);
};

/**
 * _SET_WEATHER_TYPE_FROZEN
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetWeatherTypeFrozen = function (toggle) {
  return _in(0xd74acdf7, 0xdb8114af, toggle);
};

/**
 * _SET_WEATHER_VARIATION
 * https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_variations.lua
 *
 * @param {string | number} weatherType
 * @param {string | number} variation
 * @return {void}
 */
global.SetWeatherVariation = function (weatherType, variation) {
  return _in(0x3373779b, 0xaf7caf48, _ts(weatherType), _ts(variation));
};

/**
 * _SHOULD_USE_24_HOUR_CLOCK
 *

 * @return {boolean}
 */
global.ShouldUse_24HourClock = function () {
  return _in(0x0177cf20, 0x345f44dd, _r);
};

/**
 * _SHOULD_USE_METRIC_MEASUREMENTS_2
 * Same as SHOULD_USE_METRIC_MEASUREMENTS
 *

 * @return {boolean}
 */
global.ShouldUseMetricMeasurements_2 = function () {
  return _in(0x58bcdc75, 0xba52110a, _r);
};

/**
 * _SHOULD_USE_METRIC_TEMPERATURE
 *

 * @return {boolean}
 */
global.ShouldUseMetricTemperature = function () {
  return _in(0xff4aaf32, 0x75baab4f, _r);
};

/**
 * _SHOULD_USE_METRIC_WEIGHT
 *

 * @return {boolean}
 */
global.ShouldUseMetricWeight = function () {
  return _in(0x8f24157f, 0xedb85ea2, _r);
};

/**
 * MISSIONDATA_GET_CATAGORY
 *
 * @param {number} missionId
 * @return {number}
 */
global.MissiondataGetCatagory = function (missionId) {
  return _in(0x57e798b6, 0x5c45ee17, _ch(missionId), _r, _ri);
};

/**
 * MISSIONDATA_GET_HIGH_SCORE
 *
 * @param {number} missionId
 * @return {number}
 */
global.MissiondataGetHighScore = function (missionId) {
  return _in(0x9aababf8, 0x313c3516, _ch(missionId), _r, _ri);
};

/**
 * MISSIONDATA_GET_RATING
 *
 * @param {number} missionId
 * @return {number}
 */
global.MissiondataGetRating = function (missionId) {
  return _in(0x57e798b5, 0x4c45ee1a, _ch(missionId), _r, _ri);
};

/**
 * MISSIONDATA_GET_REPLAY_STATE
 *
 * @param {any} p0
 * @return {number}
 */
global.MissiondataGetReplayState = function (p0) {
  return _in(0x8c32d86e, 0x9556ed86, p0, _r, _ri);
};

/**
 * MISSIONDATA_GET_TEXTURE_NAME
 *
 * @param {number} missionId
 * @return {number}
 */
global.MissiondataGetTextureName = function (missionId) {
  return _in(0x57e798b5, 0x6c45ee15, _ch(missionId), _r, _ri);
};

/**
 * MISSIONDATA_GET_TEXTURE_TXD
 *
 * @param {number} missionId
 * @return {number}
 */
global.MissiondataGetTextureTxd = function (missionId) {
  return _in(0x57e798b5, 0x7c45ee16, _ch(missionId), _r, _ri);
};

/**
 * MISSIONDATA_IS_REQUIRED_STORY_MISSION
 *
 * @param {number} missionId
 * @return {boolean}
 */
global.MissiondataIsRequiredStoryMission = function (missionId) {
  return _in(0xe824ce7d, 0x13fcb35e, _ch(missionId), _r);
};

/**
 * MISSIONDATA_IS_VALID
 *
 * @param {any} p0
 * @return {boolean}
 */
global.MissiondataIsValid = function (p0) {
  return _in(0xe54dc275, 0x71d5edc5, p0, _r);
};

/**
 * MISSIONDATA_SET_HIGH_SCORE
 *
 * @param {number} missionId
 * @param {number} score
 * @return {void}
 */
global.MissiondataSetHighScore = function (missionId, score) {
  return _in(0x3a04f016, 0x9da87a9d, _ch(missionId), score);
};

/**
 * MISSIONDATA_SET_RATING_SCORES
 *
 * @param {number} missionId
 * @param {number} bronzeScore
 * @param {number} silverScore
 * @param {number} goldScore
 * @return {void}
 */
global.MissiondataSetRatingScores = function (missionId, bronzeScore, silverScore, goldScore) {
  return _in(0x12f65317, 0x708749a5, _ch(missionId), bronzeScore, silverScore, goldScore);
};

/**
 * MISSIONDATA_SET_REPLAY_LOCKED_FOR_CATEGORY
 *
 * @param {number} category
 * @param {boolean} locked
 * @return {void}
 */
global.MissiondataSetReplayLockedForCategory = function (category, locked) {
  return _in(0x957a830c, 0x9b4b99ea, _ch(category), locked);
};

/**
 * MISSIONDATA_WAS_COMPLETED
 * see: missions.meta
 *
 * @param {number} missionId
 * @return {boolean}
 */
global.MissiondataWasCompleted = function (missionId) {
  return _in(0xe54dc275, 0x71d5edc4, _ch(missionId), _r);
};

/**
 * _MISSIONDATA_IS_REPLAY_CATEGORY_LOCKED
 *
 * @param {number} category
 * @return {boolean}
 */
global.MissiondataIsReplayCategoryLocked = function (category) {
  return _in(0xe145864d, 0xecc34219, _ch(category), _r);
};

/**
 * _MISSIONDATA_SET_MISSION_RATING
 * MISSION_RATING_INCOMPLETE = 0,
 * MISSION_RATING_SKIPPED,
 * MISSION_RATING_COMPLETE,
 * MISSION_RATING_BRONZE,
 * MISSION_RATING_SILVER,
 * MISSION_RATING_GOLD,
 *
 * @param {number} missionId
 * @param {number} rating
 * @return {void}
 */
global.MissiondataSetMissionRating = function (missionId, rating) {
  return _in(0xe824ce7d, 0x13fcb300, _ch(missionId), rating);
};

/**
 * _MISSIONDATA_SET_REPLAY_STATE_LOCKED
 * replayState: MISSIONDATA_GET_REPLAY_STATE
 *
 * @param {number} missionId
 * @param {number} replayState
 * @return {void}
 */
global.MissiondataSetReplayStateLocked = function (missionId, replayState) {
  return _in(0xe4e2c581, 0xf127a11c, _ch(missionId), replayState);
};

/**
 * _MISSIONDATA_TIMECYCLE_BOX_DELETE
 *

 * @return {void}
 */
global.MissiondataTimecycleBoxDelete = function () {
  return _in(0x7f89e15a, 0x8fb8de97);
};

/**
 * _MISSIONDATA_TIMECYCLE_BOX_EXISTS
 *

 * @return {boolean}
 */
global.MissiondataTimecycleBoxExists = function () {
  return _in(0x7e8f86a4, 0xfa33033c, _r);
};

/**
 * _MISSIONDATA_TIMECYCLE_BOX_SET_MODIFIER
 *
 * @param {string | number} timecycleName
 * @return {void}
 */
global.MissiondataTimecycleBoxSetModifier = function (timecycleName) {
  return _in(0x25855b15, 0x74bf8cd5, _ts(timecycleName));
};

/**
 * _0x07AD9E43FD478527
 *
 * @param {any} p0
 * @param {any} p1
 * @return {boolean}
 */
global.N_0x07AD9E43FD478527 = function (p0, p1) {
  return _in(0x07ad9e43, 0xfd478527, p0, p1, _r);
};

/**
 * _0xA46FD001D1BE896C
 *

 * @return {string | number}
 */
global.N_0xA46FD001D1BE896C = function () {
  return _in(0xa46fd001, 0xd1be896c, _r, _s);
};

/**
 * _MONEY_DECREMENT_CASH_BALANCE
 *
 * @param {number} amount
 * @return {boolean}
 */
global.MoneyDecrementCashBalance = function (amount) {
  return _in(0x466bc876, 0x9cf26a7a, amount, _r);
};

/**
 * _MONEY_GET_CASH_BALANCE
 *

 * @return {number}
 */
global.MoneyGetCashBalance = function () {
  return _in(0x0c02dabf, 0xa3b98176, _r, _ri);
};

/**
 * _MONEY_INCREMENT_CASH_BALANCE
 *
 * @param {number} amount
 * @param {number} addReason
 * @return {boolean}
 */
global.MoneyIncrementCashBalance = function (amount, addReason) {
  return _in(0xbc3422dc, 0x91667621, amount, _ch(addReason), _r);
};

/**
 * _NETWORK_GET_CASH_BALANCE
 *

 * @return {number}
 */
global.NetworkGetCashBalance = function () {
  return _in(0x8a67120d, 0xbc299525, _r, _ri);
};

/**
 * _NETWORK_GET_STRING_CASH_BALANCE
 *

 * @return {string | number}
 */
global.NetworkGetStringCashBalance = function () {
  return _in(0x282d36ff, 0x103d78df, _r, _s);
};

/**
 * _NETWORK_IS_MONEY_BALANCE_NOT_LESS_THAN
 *
 * @param {number} cashBalance
 * @param {number} goldBarBalance
 * @return {boolean}
 */
global.NetworkIsMoneyBalanceNotLessThan = function (cashBalance, goldBarBalance) {
  return _in(0xaec5f011, 0x9867e457, cashBalance, goldBarBalance, _r);
};

/**
 * CASHINVENTORY_INIT_SESSION_STATUS
 *

 * @return {[boolean, number, number]}
 */
global.CashinventoryInitSessionStatus = function () {
  return _in(0xc019112f, 0x8995dc1c, _i, _i, _r);
};

/**
 * CASHINVENTORY_IS_CONNECTION_FAULTED
 *

 * @return {boolean}
 */
global.CashinventoryIsConnectionFaulted = function () {
  return _in(0x6ce9fb63, 0x32b5e46e, _r);
};

/**
 * _0x38640A8C2DEF011B
 *
 * @param {number} p0
 * @return {number}
 */
global.N_0x38640A8C2DEF011B = function (p0) {
  return _in(0x38640a8c, 0x2def011b, p0, _r, _ri);
};

/**
 * _0x3FA09DD57B93C0DE
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {any} p3
 * @param {number} p4
 * @return {boolean}
 */
global.N_0x3FA09DD57B93C0DE = function (p0, p1, p2, p3, p4) {
  return _in(0x3fa09dd5, 0x7b93c0de, _ch(p0), p1, p2, p3, p4, _r);
};

/**
 * _0x92A32BA29622763F
 *
 * @param {number} id
 * @param {number} index
 * @param {DataView} p2
 * @return {boolean}
 */
global.N_0x92A32BA29622763F = function (id, index, p2) {
  return _in(0x92a32ba2, 0x9622763f, id, index, p2, _r);
};

/**
 * _0xA0B7094629724974
 *
 * @param {number} p0
 * @param {any} p1
 * @return {boolean}
 */
global.N_0xA0B7094629724974 = function (p0, p1) {
  return _in(0xa0b70946, 0x29724974, _ch(p0), p1, _r);
};

/**
 * _0xA3B8D31C13CB4239
 *
 * @param {number} p0
 * @param {number} p1
 * @param {DataView} p2
 * @param {number} p3
 * @param {DataView} p4
 * @param {number} p5
 * @return {boolean}
 */
global.N_0xA3B8D31C13CB4239 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xa3b8d31c, 0x13cb4239, p0, _ch(p1), p2, p3, p4, p5, _r);
};

/**
 * _0xB6F4557060EF0FB4
 *
 * @param {number} p0
 * @param {number} p1
 * @return {number}
 */
global.N_0xB6F4557060EF0FB4 = function (p0, p1) {
  return _in(0xb6f45570, 0x60ef0fb4, p0, p1, _r, _ri);
};

/**
 * _0xCE54C9ABE6FBC6DB
 *
 * @param {number} p0
 * @return {boolean}
 */
global.N_0xCE54C9ABE6FBC6DB = function (p0) {
  return _in(0xce54c9ab, 0xe6fbc6db, _ch(p0), _r);
};

/**
 * _0xD1555FBC96C88444
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {any} p3
 * @param {number} p4
 * @return {boolean}
 */
global.N_0xD1555FBC96C88444 = function (p0, p1, p2, p3, p4) {
  return _in(0xd1555fbc, 0x96c88444, _ch(p0), p1, p2, p3, p4, _r);
};

/**
 * _CASHINVENTORY_INIT_SESSION_IS_FAULTED
 *

 * @return {boolean}
 */
global.CashinventoryInitSessionIsFaulted = function () {
  return _in(0xd1ce92d1, 0xd9be170a, _r);
};

/**
 * _CASHINVENTORY_IS_SESSION_READY
 *

 * @return {boolean}
 */
global.CashinventoryIsSessionReady = function () {
  return _in(0xfcc24220, 0xfddac929, _r);
};

/**
 * _CASHINVENTORY_TRANSACTION_ADD_AWARD
 *
 * @param {number} id
 * @param {number} hash
 * @param {DataView} p2
 * @param {DataView} p3
 * @return {boolean}
 */
global.CashinventoryTransactionAddAward = function (id, hash, p2, p3) {
  return _in(0x52bde32f, 0x21ba3b6d, id, _ch(hash), p2, p3, _r);
};

/**
 * _CASHINVENTORY_TRANSACTION_CHECKOUT
 *
 * @param {number} id
 * @return {boolean}
 */
global.CashinventoryTransactionCheckout = function (id) {
  return _in(0x592bc00b, 0xf6629be7, id, _r);
};

/**
 * _CASHINVENTORY_TRANSACTION_CHECKOUT_STATUS
 *
 * @param {number} id
 * @return {[boolean, number]}
 */
global.CashinventoryTransactionCheckoutStatus = function (id) {
  return _in(0x26c00879, 0x1d066f37, id, _i, _r);
};

/**
 * _CASHINVENTORY_TRANSACTION_DELETE
 *
 * @param {number} id
 * @return {boolean}
 */
global.CashinventoryTransactionDelete = function (id) {
  return _in(0x59ef5d51, 0x6e2d96b9, id, _r);
};

/**
 * _CASHINVENTORY_TRANSACTION_FIRE_AND_FORGET_ITEM
 *
 * @param {number} actionHash
 * @param {DataView} item
 * @param {number} p3
 * @return {[boolean, number]}
 */
global.CashinventoryTransactionFireAndForgetItem = function (actionHash, item, p3) {
  return _in(0xffea09cc, 0xec4af32f, _ch(actionHash), _i, item, p3, _r);
};

/**
 * _CASHINVENTORY_TRANSACTION_GET_ACTION
 *
 * @param {number} id
 * @return {number}
 */
global.CashinventoryTransactionGetAction = function (id) {
  return _in(0xbd2d520c, 0x51ccff52, id, _r, _ri);
};

/**
 * _CASHINVENTORY_TRANSACTION_GET_BASKET_IS_VALID
 *
 * @param {number} id
 * @return {boolean}
 */
global.CashinventoryTransactionGetBasketIsValid = function (id) {
  return _in(0x52a226ad, 0xf4a270d2, id, _r);
};

/**
 * _CASHINVENTORY_TRANSACTION_GET_ITEM_INFO
 *
 * @param {number} id
 * @param {number} index
 * @param {DataView} itemInfo
 * @return {boolean}
 */
global.CashinventoryTransactionGetItemInfo = function (id, index, itemInfo) {
  return _in(0x7616b5f0, 0x895c2d99, id, index, itemInfo, _r);
};

/**
 * _CASHINVENTORY_TRANSACTION_GET_NUM_OF_ITEMS
 *
 * @param {number} id
 * @return {number}
 */
global.CashinventoryTransactionGetNumOfItems = function (id) {
  return _in(0xcf2d04d0, 0x76847478, id, _r, _ri);
};

/**
 * _CASHINVENTORY_TRANSACTION_RESPONSE_GET_ITEM_INFO
 *
 * @param {number} id
 * @param {number} index
 * @param {DataView} itemInfo
 * @return {boolean}
 */
global.CashinventoryTransactionResponseGetItemInfo = function (id, index, itemInfo) {
  return _in(0x98412398, 0xbbe73f61, id, index, itemInfo, _r);
};

/**
 * _CASHINVENTORY_TRANSACTION_START
 *
 * @param {number} type
 * @param {number} actionHash
 * @return {[boolean, number]}
 */
global.CashinventoryTransactionStart = function (type, actionHash) {
  return _in(0xf039ec27, 0xf4490e96, _i, _ch(type), _ch(actionHash), _r);
};

/**
 * _CASHINVENTORY_TRANSACTION_VALIDATE_ITEM
 *
 * @param {number} p0
 * @param {DataView} p1
 * @return {number}
 */
global.CashinventoryTransactionValidateItem = function (p0, p1) {
  return _in(0x6c9f1270, 0x0bce69f4, _ch(p0), p1, _r, _ri);
};

/**
 * ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID
 *
 * @param {number} netId
 * @param {boolean} toggle
 * @return {void}
 */
global.ActivateDamageTrackerOnNetworkId = function (netId, toggle) {
  return _in(0xd45b1ffc, 0xcd52ff19, netId, toggle);
};

/**
 * CAN_REGISTER_MISSION_ENTITIES
 *
 * @param {number} pedAmt
 * @param {number} vehicleAmt
 * @param {number} objectAmt
 * @param {number} pickupAmt
 * @return {boolean}
 */
global.CanRegisterMissionEntities = function (pedAmt, vehicleAmt, objectAmt, pickupAmt) {
  return _in(0x69778e75, 0x64bade6d, pedAmt, vehicleAmt, objectAmt, pickupAmt, _r);
};

/**
 * CAN_REGISTER_MISSION_OBJECTS
 *
 * @param {number} amount
 * @return {boolean}
 */
global.CanRegisterMissionObjects = function (amount) {
  return _in(0x800dd472, 0x1a8b008b, amount, _r);
};

/**
 * CAN_REGISTER_MISSION_PEDS
 *
 * @param {number} amount
 * @return {boolean}
 */
global.CanRegisterMissionPeds = function (amount) {
  return _in(0xbcbf4fef, 0x9fa5d781, amount, _r);
};

/**
 * CAN_REGISTER_MISSION_PICKUPS
 *
 * @param {number} amount
 * @return {boolean}
 */
global.CanRegisterMissionPickups = function (amount) {
  return _in(0xf0460c7b, 0xf80011ea, amount, _r);
};

/**
 * CAN_REGISTER_MISSION_VEHICLES
 *
 * @param {number} amount
 * @return {boolean}
 */
global.CanRegisterMissionVehicles = function (amount) {
  return _in(0x7277f1f2, 0xe085ee74, amount, _r);
};

/**
 * CLEAR_SERVICE_EVENT_ARGUMENTS
 * Old name: _CLEAR_LAUNCH_PARAMS
 *

 * @return {void}
 */
global.ClearServiceEventArguments = function () {
  return _in(0x966dd84f, 0xb6a46017);
};

/**
 * CLOUD_DID_REQUEST_SUCCEED
 *
 * @param {number} id
 * @return {boolean}
 */
global.CloudDidRequestSucceed = function (id) {
  return _in(0x3a3d5568, 0xaf297cd5, id, _r);
};

/**
 * CLOUD_HAS_REQUEST_COMPLETED
 *
 * @param {number} id
 * @return {boolean}
 */
global.CloudHasRequestCompleted = function (id) {
  return _in(0x4c61b399, 0x30d045da, id, _r);
};

/**
 * CONVERT_POSIX_TIME
 * Takes the specified time and writes it to the structure specified in the second argument.
 * 
 * struct date_time
 * {
 *     int year;
 *     int PADDING1;
 *     int month;
 *     int PADDING2;
 *     int day;
 *     int PADDING3;
 *     int hour;
 *     int PADDING4;
 *     int minute;
 *     int PADDING5;
 *     int second;
 *     int PADDING6;
 * };
 *
 * @param {number} posixTime
 * @param {DataView} timeStructure
 * @return {void}
 */
global.ConvertPosixTime = function (posixTime, timeStructure) {
  return _in(0xac97af97, 0xfa68e5d5, posixTime, timeStructure);
};

/**
 * GET_CLOUD_TIME_AS_INT
 *

 * @return {number}
 */
global.GetCloudTimeAsInt = function () {
  return _in(0x9a73240b, 0x49945c76, _r, _ri);
};

/**
 * GET_LAUNCH_PARAM_VALUE
 *
 * @param {string | number} paramName
 * @return {string | number}
 */
global.GetLaunchParamValue = function (paramName) {
  return _in(0x65e65ca6, 0xa0fe59d4, _ts(paramName), _r, _s);
};

/**
 * GET_MAX_NUM_NETWORK_OBJECTS
 * Always returns 60
 *

 * @return {number}
 */
global.GetMaxNumNetworkObjects = function () {
  return _in(0xc7be3352, 0x16b5ec7c, _r, _ri);
};

/**
 * GET_MAX_NUM_NETWORK_PEDS
 * Always returns 110
 *

 * @return {number}
 */
global.GetMaxNumNetworkPeds = function () {
  return _in(0x0c1f7d49, 0xc39d2289, _r, _ri);
};

/**
 * GET_MAX_NUM_NETWORK_PICKUPS
 * Always returns 80
 *

 * @return {number}
 */
global.GetMaxNumNetworkPickups = function () {
  return _in(0xa7283506, 0x4dd63e4c, _r, _ri);
};

/**
 * GET_MAX_NUM_NETWORK_VEHICLES
 * Always returns 40
 *

 * @return {number}
 */
global.GetMaxNumNetworkVehicles = function () {
  return _in(0x0afce529, 0xf69b21ff, _r, _ri);
};

/**
 * GET_NETWORK_TIME
 *

 * @return {number}
 */
global.GetNetworkTime = function () {
  return _in(0x7a5487fe, 0x9faa6b48, _r, _ri);
};

/**
 * GET_NETWORK_TIME_ACCURATE
 *

 * @return {number}
 */
global.GetNetworkTimeAccurate = function () {
  return _in(0x89023fbb, 0xf9200e9f, _r, _ri);
};

/**
 * GET_NUM_CREATED_MISSION_OBJECTS
 *
 * @param {boolean} p0
 * @return {number}
 */
global.GetNumCreatedMissionObjects = function (p0) {
  return _in(0x12b6281b, 0x6c6706c0, p0, _r, _ri);
};

/**
 * GET_NUM_CREATED_MISSION_PEDS
 *
 * @param {boolean} p0
 * @return {number}
 */
global.GetNumCreatedMissionPeds = function (p0) {
  return _in(0xcb215c4b, 0x56a7fae7, p0, _r, _ri);
};

/**
 * GET_NUM_CREATED_MISSION_VEHICLES
 *
 * @param {boolean} p0
 * @return {number}
 */
global.GetNumCreatedMissionVehicles = function (p0) {
  return _in(0x0cd9ab83, 0x489430ea, p0, _r, _ri);
};

/**
 * GET_NUM_RESERVED_MISSION_OBJECTS
 * p0 appears to be for MP
 *
 * @param {boolean} p0
 * @return {number}
 */
global.GetNumReservedMissionObjects = function (p0) {
  return _in(0xaa81b5f1, 0x0bc43ac2, p0, _r, _ri);
};

/**
 * GET_NUM_RESERVED_MISSION_PEDS
 * p0 appears to be for MP
 *
 * @param {boolean} p0
 * @return {number}
 */
global.GetNumReservedMissionPeds = function (p0) {
  return _in(0x1f13d5ae, 0x5cb17e17, p0, _r, _ri);
};

/**
 * GET_NUM_RESERVED_MISSION_VEHICLES
 * p0 appears to be for MP
 *
 * @param {boolean} p0
 * @return {number}
 */
global.GetNumReservedMissionVehicles = function (p0) {
  return _in(0xcf3a9659, 0x06452031, p0, _r, _ri);
};

/**
 * GET_RESERVED_MISSION_ENTITIES_IN_AREA
 * Used in Script Function NET_ACE_CLIENT_VERIFY_ENTITY_RESERVATIONS
 * Coords: Slot world position
 * 
 * Old name: _GET_RESERVATIONS_FOR_SLOT_WORLD_POSITION
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} p3
 * @return {[number, number, number, number]}
 */
global.GetReservedMissionEntitiesInArea = function (x, y, z, p3) {
  return _in(0x5e71e72a, 0x94985214, _fv(x), _fv(y), _fv(z), p3, _i, _i, _i, _i);
};

/**
 * GET_STATUS_OF_TEXTURE_DOWNLOAD
 * 0 = succeeded
 * 1 = pending
 * 2 = failed
 *
 * @param {number} textureDownloadId
 * @return {number}
 */
global.GetStatusOfTextureDownload = function (textureDownloadId) {
  return _in(0x8bd6c6de, 0xa20e82c6, textureDownloadId, _r, _ri);
};

/**
 * GET_TIME_DIFFERENCE
 * Subtracts the second argument from the first.
 *
 * @param {number} timeA
 * @param {number} timeB
 * @return {number}
 */
global.GetTimeDifference = function (timeA, timeB) {
  return _in(0xa2c6fc03, 0x1d46fff0, timeA, timeB, _r, _ri);
};

/**
 * GET_TIME_OFFSET
 * Adds the first argument to the second.
 *
 * @param {number} timeA
 * @param {number} timeB
 * @return {number}
 */
global.GetTimeOffset = function (timeA, timeB) {
  return _in(0x017008cc, 0xdad48503, timeA, timeB, _r, _ri);
};

/**
 * GET_UNIQUE_INT_FOR_PLAYER
 *
 * @param {number} player
 * @return {number}
 */
global.GetUniqueIntForPlayer = function (player) {
  return _in(0x07f72340, 0x1b9d921c, player, _r, _ri);
};

/**
 * HAS_NETWORK_TIME_STARTED
 *

 * @return {boolean}
 */
global.HasNetworkTimeStarted = function () {
  return _in(0x46718ace, 0xedeafc84, _r);
};

/**
 * IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID
 *
 * @param {number} netId
 * @return {boolean}
 */
global.IsDamageTrackerActiveOnNetworkId = function (netId) {
  return _in(0x6e192e33, 0xad436366, netId, _r);
};

/**
 * IS_ENTITY_A_GHOST
 * Old name: _IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityAGhost = function (entity) {
  return _in(0x21d04d7b, 0xc538c146, entity, _r);
};

/**
 * IS_NETWORK_ID_OWNED_BY_PARTICIPANT
 *
 * @param {number} netId
 * @return {boolean}
 */
global.IsNetworkIdOwnedByParticipant = function (netId) {
  return _in(0xa1607996, 0x431332df, netId, _r);
};

/**
 * IS_OBJECT_REASSIGNMENT_IN_PROGRESS
 * Note: this native was added in build 1311.16
 *

 * @return {boolean}
 */
global.IsObjectReassignmentInProgress = function () {
  return _in(0x8fe9eb11, 0xec9cc23a, _r);
};

/**
 * IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {boolean}
 */
global.IsSphereVisibleToAnotherMachine = function (p0, p1, p2, p3, p4) {
  return _in(0xd82cf8e6, 0x4c8729d8, p0, p1, p2, p3, p4, _r);
};

/**
 * IS_SPHERE_VISIBLE_TO_PLAYER
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {boolean}
 */
global.IsSphereVisibleToPlayer = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xdc3a3102, 0x19e5da62, p0, p1, p2, p3, p4, p5, _r);
};

/**
 * IS_TIME_LESS_THAN
 * Subtracts the second argument from the first, then returns whether the result is negative.
 *
 * @param {number} timeA
 * @param {number} timeB
 * @return {boolean}
 */
global.IsTimeLessThan = function (timeA, timeB) {
  return _in(0xcb2cf514, 0x8012c8d0, timeA, timeB, _r);
};

/**
 * IS_TIME_MORE_THAN
 * Subtracts the first argument from the second, then returns whether the result is negative.
 *
 * @param {number} timeA
 * @param {number} timeB
 * @return {boolean}
 */
global.IsTimeMoreThan = function (timeA, timeB) {
  return _in(0xde350f86, 0x51e4346c, timeA, timeB, _r);
};

/**
 * KEEP_NETWORK_ID_IN_FAST_INSTANCE
 *
 * @param {number} netId
 * @param {boolean} p1
 * @param {number} p2
 * @return {void}
 */
global.KeepNetworkIdInFastInstance = function (netId, p1, p2) {
  return _in(0xe1bc73d6, 0x815ba361, netId, p1, p2);
};

/**
 * NETWORK_ACCEPT_RS_INVITE
 *
 * @param {number} p0
 * @return {boolean}
 */
global.NetworkAcceptRsInvite = function (p0) {
  return _in(0xb2cea510, 0x5aac8dde, p0, _r);
};

/**
 * NETWORK_ACCESS_TUNABLE_BOOL
 *
 * @param {number} tunableContext
 * @param {number} tunableName
 * @return {boolean}
 */
global.NetworkAccessTunableBool = function (tunableContext, tunableName) {
  return _in(0xaa6a47a5, 0x73abb75a, _ch(tunableContext), _ch(tunableName), _r);
};

/**
 * NETWORK_ACCESS_TUNABLE_INT
 *
 * @param {number} tunableContext
 * @param {number} tunableName
 * @return {[boolean, number]}
 */
global.NetworkAccessTunableInt = function (tunableContext, tunableName) {
  return _in(0x8be1146d, 0xfd5d4468, _ch(tunableContext), _ch(tunableName), _i, _r);
};

/**
 * NETWORK_ACTION_PLATFORM_INVITE
 *

 * @return {boolean}
 */
global.NetworkActionPlatformInvite = function () {
  return _in(0x3b82acc3, 0xf4b6240c, _r);
};

/**
 * NETWORK_ACTIVITY_RESET_TO_IDLE
 *

 * @return {void}
 */
global.NetworkActivityResetToIdle = function () {
  return _in(0x3fe141fd, 0xb990e3d1);
};

/**
 * NETWORK_ACTIVITY_SET_CURRENT
 *
 * @param {number} netPlaylistActivity
 * @return {void}
 */
global.NetworkActivitySetCurrent = function (netPlaylistActivity) {
  return _in(0x9adac065, 0xd9f6706f, netPlaylistActivity);
};

/**
 * NETWORK_ADD_FRIEND
 *
 * @param {DataView} gamerHandle
 * @param {string | number} message
 * @return {boolean}
 */
global.NetworkAddFriend = function (gamerHandle, message) {
  return _in(0x8e02d739, 0x14064223, gamerHandle, _ts(message), _r);
};

/**
 * NETWORK_ALLOW_ALL_ENTITY_FADING_FOR_INSTANCES
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkAllowAllEntityFadingForInstances = function (toggle) {
  return _in(0x4b05b97b, 0xa46f419d, toggle);
};

/**
 * NETWORK_ALLOW_ENTITY_FADING_FOR_INSTANCES
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkAllowEntityFadingForInstances = function (entity, toggle) {
  return _in(0xf3354d6c, 0xa46f419d, entity, toggle);
};

/**
 * NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION
 * Old name: _NETWORK_ALLOW_LOCAL_ENTITY_ATTACHMENT
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkAllowRemoteAttachmentModification = function (entity, toggle) {
  return _in(0x267c78c6, 0x0e806b9a, entity, toggle);
};

/**
 * NETWORK_ARE_HANDLES_THE_SAME
 *
 * @param {DataView} gamerHandle1
 * @param {DataView} gamerHandle2
 * @return {boolean}
 */
global.NetworkAreHandlesTheSame = function (gamerHandle1, gamerHandle2) {
  return _in(0x57dba049, 0xe110f217, gamerHandle1, gamerHandle2, _r);
};

/**
 * NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION
 * Old name: _NETWORK_IS_PLAYER_EQUAL_TO_INDEX
 *
 * @param {number} player
 * @param {number} index
 * @return {boolean}
 */
global.NetworkArePlayersInSameTutorialSession = function (player, index) {
  return _in(0x9de986fc, 0x9a87c474, player, index, _r);
};

/**
 * NETWORK_AUTO_SESSION_CAN_SPLIT_SESSION
 *

 * @return {[boolean, number]}
 */
global.NetworkAutoSessionCanSplitSession = function () {
  return _in(0xe404bff0, 0xaba23cdc, _i, _r);
};

/**
 * NETWORK_AUTO_SESSION_FINISH_INSTANCE
 *

 * @return {void}
 */
global.NetworkAutoSessionFinishInstance = function () {
  return _in(0xbb512991, 0x66b844f3);
};

/**
 * NETWORK_AUTO_SESSION_IS_ALLOWED_TO_MERGE
 *

 * @return {boolean}
 */
global.NetworkAutoSessionIsAllowedToMerge = function () {
  return _in(0xaaded99a, 0x6b268a27, _r);
};

/**
 * NETWORK_AUTO_SESSION_IS_OBJECT_CREATION_PAUSED
 *

 * @return {boolean}
 */
global.NetworkAutoSessionIsObjectCreationPaused = function () {
  return _in(0x0e2c3aee, 0x6ce603b7, _r);
};

/**
 * NETWORK_AUTO_SESSION_SPLIT_SESSION
 *
 * @param {number} playersToTake
 * @param {number} maxInstancePlayers
 * @param {number} sessionFlags
 * @param {number} bucketId
 * @return {boolean}
 */
global.NetworkAutoSessionSplitSession = function (playersToTake, maxInstancePlayers, sessionFlags, bucketId) {
  return _in(0xc223d299, 0xc670413d, playersToTake, maxInstancePlayers, sessionFlags, bucketId, _r);
};

/**
 * NETWORK_AWARD_HAS_REACHED_MAXCLAIM
 *
 * @param {any} p0
 * @return {boolean}
 */
global.NetworkAwardHasReachedMaxclaim = function (p0) {
  return _in(0xfbe782b3, 0x165ac8ec, p0, _r);
};

/**
 * NETWORK_CAN_ACCESS_MULTIPLAYER
 *

 * @return {[boolean, number]}
 */
global.NetworkCanAccessMultiplayer = function () {
  return _in(0xaf50da1a, 0x3f8b1ba4, _i, _r);
};

/**
 * NETWORK_CAN_REFRESH_FRIEND_PAGE
 *

 * @return {boolean}
 */
global.NetworkCanRefreshFriendPage = function () {
  return _in(0x1af5e28e, 0x64a76a9f, _r);
};

/**
 * NETWORK_CAN_SESSION_END
 *

 * @return {boolean}
 */
global.NetworkCanSessionEnd = function () {
  return _in(0x4eebc369, 0x4e49c572, _r);
};

/**
 * NETWORK_CAN_VIEW_GAMER_USER_CONTENT
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkCanViewGamerUserContent = function (gamerHandle) {
  return _in(0x246545c3, 0x7c27a717, gamerHandle, _r);
};

/**
 * NETWORK_CHECK_ACCESS_AND_ALERT_IF_FAIL
 *

 * @return {boolean}
 */
global.NetworkCheckAccessAndAlertIfFail = function () {
  return _in(0x2a8112a9, 0x74de1ef6, _r);
};

/**
 * NETWORK_CHECK_COMMUNICATION_PRIVILEGES
 *
 * @param {number} p0
 * @return {boolean}
 */
global.NetworkCheckCommunicationPrivileges = function (p0) {
  return _in(0x83f28ce4, 0x9fbbffba, p0, _r);
};

/**
 * NETWORK_CHECK_USER_CONTENT_PRIVILEGES
 *
 * @param {number} p0
 * @return {boolean}
 */
global.NetworkCheckUserContentPrivileges = function (p0) {
  return _in(0x595f0286, 0x98072dd9, p0, _r);
};

/**
 * NETWORK_CLEAR_CLOCK_TIME_OVERRIDE
 *

 * @return {void}
 */
global.NetworkClearClockTimeOverride = function () {
  return _in(0xd972df67, 0x326f966e);
};

/**
 * NETWORK_CLEAR_FOUND_GAMERS
 *

 * @return {void}
 */
global.NetworkClearFoundGamers = function () {
  return _in(0x6d14ccee, 0x1b40381a);
};

/**
 * NETWORK_CLEAR_GET_GAMER_STATUS
 *

 * @return {void}
 */
global.NetworkClearGetGamerStatus = function () {
  return _in(0x86e0660e, 0x4f5c956d);
};

/**
 * NETWORK_CLEAR_PLATFORM_INVITE
 *

 * @return {void}
 */
global.NetworkClearPlatformInvite = function () {
  return _in(0xa4484173, 0x759749b1);
};

/**
 * NETWORK_CONCEAL_PLAYER
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkConcealPlayer = function (player, toggle) {
  return _in(0xbbdf0662, 0x52829606, player, toggle);
};

/**
 * NETWORK_DID_FIND_GAMERS_SUCCEED
 *

 * @return {boolean}
 */
global.NetworkDidFindGamersSucceed = function () {
  return _in(0xf9b83b77, 0x929d8863, _r);
};

/**
 * NETWORK_DID_GET_GAMER_STATUS_SUCCEED
 *

 * @return {boolean}
 */
global.NetworkDidGetGamerStatusSucceed = function () {
  return _in(0x5ae17c6b, 0x0134b7f1, _r);
};

/**
 * NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkDisableLeaveRemotePedBehind = function (toggle) {
  return _in(0xc505036a, 0x35afd01b, toggle);
};

/**
 * NETWORK_DISABLE_PROXIMITY_MIGRATION
 *
 * @param {number} netId
 * @return {void}
 */
global.NetworkDisableProximityMigration = function (netId) {
  return _in(0x407091cf, 0x6037118e, netId);
};

/**
 * NETWORK_DISABLE_REALTIME_MULTIPLAYER
 *

 * @return {void}
 */
global.NetworkDisableRealtimeMultiplayer = function () {
  return _in(0x236905c7, 0x00fdb54d);
};

/**
 * NETWORK_DISPLAYNAMES_FROM_HANDLES_START
 * Hardcoded to return -1.
 *
 * @param {DataView} p0
 * @param {any} p1
 * @return {number}
 */
global.NetworkDisplaynamesFromHandlesStart = function (p0, p1) {
  return _in(0xd66c9e72, 0xb3cc4982, p0, p1, _r, _ri);
};

/**
 * NETWORK_DOES_NETWORK_ID_EXIST
 *
 * @param {number} netId
 * @return {boolean}
 */
global.NetworkDoesNetworkIdExist = function (netId) {
  return _in(0x38ce16c9, 0x6bd11344, netId, _r);
};

/**
 * NETWORK_DOES_TUNABLE_EXIST
 *
 * @param {number} tunableContext
 * @param {number} tunableName
 * @return {boolean}
 */
global.NetworkDoesTunableExist = function (tunableContext, tunableName) {
  return _in(0x85e5f8b9, 0xb898b20a, _ch(tunableContext), _ch(tunableName), _r);
};

/**
 * NETWORK_DUMP_NET_IF_CONFIG
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.NetworkDumpNetIfConfig = function () {
  return _in(0xaedf1bc1, 0xc133d6e3);
};

/**
 * NETWORK_END_TUTORIAL_SESSION
 *

 * @return {void}
 */
global.NetworkEndTutorialSession = function () {
  return _in(0xd0afaff5, 0xa51d72f7);
};

/**
 * NETWORK_GET_ASSISTED_DAMAGE_OF_ENTITY
 *
 * @param {number} player
 * @param {number} entity
 * @return {[boolean, number]}
 */
global.NetworkGetAssistedDamageOfEntity = function (player, entity) {
  return _in(0x4caca844, 0x40fa26f6, player, entity, _i, _r);
};

/**
 * NETWORK_GET_AVERAGE_LATENCY
 * Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER
 *
 * @param {number} player
 * @return {number}
 */
global.NetworkGetAverageLatency = function (player) {
  return _in(0xd414be12, 0x9bb81b32, player, _r, _rf);
};

/**
 * NETWORK_GET_AVERAGE_PACKET_LOSS
 * Old name: _NETWORK_GET_AVERAGE_PACKET_LOSS_FOR_PLAYER
 *
 * @param {number} player
 * @return {number}
 */
global.NetworkGetAveragePacketLoss = function (player) {
  return _in(0x350c2394, 0x9e43686c, player, _r, _rf);
};

/**
 * NETWORK_GET_AVERAGE_PING
 * Same as NETWORK_GET_AVERAGE_LATENCY (0xD414BE129BB81B32)
 * 
 * Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_2
 *
 * @param {number} player
 * @return {number}
 */
global.NetworkGetAveragePing = function (player) {
  return _in(0x0e3a041e, 0xd6ac2b45, player, _r, _rf);
};

/**
 * NETWORK_GET_DESTROYER_OF_NETWORK_ID
 *
 * @param {number} netId
 * @return {[number, number]}
 */
global.NetworkGetDestroyerOfNetworkId = function (netId) {
  return _in(0x7a1adeef, 0x01740a24, netId, _i, _r, _ri);
};

/**
 * NETWORK_GET_DISPLAYNAMES_FROM_HANDLES
 * Hardcoded to return zero.
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {number}
 */
global.NetworkGetDisplaynamesFromHandles = function (p0, p1, p2) {
  return _in(0x58cc1817, 0x19256197, p0, p1, p2, _r, _ri);
};

/**
 * NETWORK_GET_ENTITY_FROM_NETWORK_ID
 *
 * @param {number} netId
 * @return {number}
 */
global.NetworkGetEntityFromNetworkId = function (netId) {
  return _in(0xce4e5d9b, 0x0a4ff560, netId, _r, _ri);
};

/**
 * NETWORK_GET_ENTITY_IS_NETWORKED
 *
 * @param {number} entity
 * @return {boolean}
 */
global.NetworkGetEntityIsNetworked = function (entity) {
  return _in(0xc7827959, 0x479dcc78, entity, _r);
};

/**
 * NETWORK_GET_ENTITY_KILLER_OF_PLAYER
 *
 * @param {number} player
 * @return {[Entity, number]}
 */
global.NetworkGetEntityKillerOfPlayer = function (player) {
  return _in(0x42b2daa6, 0xb596f5f8, player, _i, _r, _ri);
};

/**
 * NETWORK_GET_GAMERTAG_FROM_HANDLE
 * Always returns a null string.
 *
 * @param {DataView} gamerHandle
 * @return {string | number}
 */
global.NetworkGetGamertagFromHandle = function (gamerHandle) {
  return _in(0x42614116, 0x2ebe5cdb, gamerHandle, _r, _s);
};

/**
 * NETWORK_GET_GAME_MODE
 *

 * @return {number}
 */
global.NetworkGetGameMode = function () {
  return _in(0x225640e0, 0x9effdc3f, _r, _ri);
};

/**
 * NETWORK_GET_GLOBAL_CLOCK
 *

 * @return {[boolean, number, number, number]}
 */
global.NetworkGetGlobalClock = function () {
  return _in(0x11a7adcd, 0x629e170f, _i, _i, _i, _r);
};

/**
 * NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK
 *

 * @return {[number, number, number]}
 */
global.NetworkGetGlobalMultiplayerClock = function () {
  return _in(0x6d03bfbd, 0x643b2a02, _i, _i, _i);
};

/**
 * NETWORK_GET_HIGHEST_RELIABLE_RESEND_COUNT
 * Old name: _NETWORK_GET_OLDEST_RESEND_COUNT_FOR_PLAYER
 *
 * @param {number} player
 * @return {number}
 */
global.NetworkGetHighestReliableResendCount = function (player) {
  return _in(0x52c1eada, 0xf7b10302, player, _r, _ri);
};

/**
 * NETWORK_GET_HOST_OF_SCRIPT
 *
 * @param {string | number} scriptName
 * @param {number} p1
 * @param {number} p2
 * @return {number}
 */
global.NetworkGetHostOfScript = function (scriptName, p1, p2) {
  return _in(0x1d6a14f1, 0xf9a736fc, _ts(scriptName), p1, p2, _r, _ri);
};

/**
 * NETWORK_GET_HOST_OF_THIS_SCRIPT
 *

 * @return {number}
 */
global.NetworkGetHostOfThisScript = function () {
  return _in(0xc7b4d79b, 0x01fa7a5c, _r, _ri);
};

/**
 * NETWORK_GET_HOST_OF_THREAD
 *
 * @param {number} threadId
 * @return {number}
 */
global.NetworkGetHostOfThread = function (threadId) {
  return _in(0xb4a25351, 0xd79b444c, threadId, _r, _ri);
};

/**
 * NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT
 *

 * @return {number}
 */
global.NetworkGetInstanceIdOfThisScript = function () {
  return _in(0x638a3a81, 0x733086db, _r, _ri);
};

/**
 * NETWORK_GET_LOCAL_HANDLE
 *
 * @param {DataView} gamerHandle
 * @return {void}
 */
global.NetworkGetLocalHandle = function (gamerHandle) {
  return _in(0xe8605178, 0x6b66cd8e, gamerHandle);
};

/**
 * NETWORK_GET_MAX_NUM_PARTICIPANTS
 * Seems to always return 0, but it's used in quite a few loops.
 * 
 * for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)
 *     {
 *         if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)
 *         {
 *             var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));
 *

 * @return {number}
 */
global.NetworkGetMaxNumParticipants = function () {
  return _in(0xa6c90fbc, 0x38e395ee, _r, _ri);
};

/**
 * NETWORK_GET_NETWORK_ID_FROM_ENTITY
 *
 * @param {number} entity
 * @return {number}
 */
global.NetworkGetNetworkIdFromEntity = function (entity) {
  return _in(0xa1170068, 0x2f3ad45c, entity, _r, _ri);
};

/**
 * NETWORK_GET_NETWORK_ID_FROM_ROPE_ID
 *
 * @param {number} ropeId
 * @return {number}
 */
global.NetworkGetNetworkIdFromRopeId = function (ropeId) {
  return _in(0x42871327, 0x315edae8, ropeId, _r, _ri);
};

/**
 * NETWORK_GET_NET_STATISTICS_INFO
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.NetworkGetNetStatisticsInfo = function () {
  return _in(0x6fd992c4, 0xa1c1b986);
};

/**
 * NETWORK_GET_NP_UNAVAILABLE_REASON
 * Hardcoded to return zero.
 * 
 * ==== PS4 specific info ====
 * 
 * Returns some sort of unavailable reason:
 * -1 = REASON_INVALID
 *  0 = REASON_OTHER
 *  1 = REASON_SYSTEM_UPDATE
 *  2 = REASON_GAME_UPDATE
 *  3 = REASON_SIGNED_OUT
 *  4 = REASON_AGE
 *  5 = REASON_CONNECTION
 * 
 * =================================
 *

 * @return {number}
 */
global.NetworkGetNpUnavailableReason = function () {
  return _in(0x74fb3e29, 0xe6d10fa9, _r, _ri);
};

/**
 * NETWORK_GET_NUM_CONNECTED_PLAYERS
 * Returns the amount of players connected in the current session. Only works when connected to a session/server.
 *

 * @return {number}
 */
global.NetworkGetNumConnectedPlayers = function () {
  return _in(0xa4a79dd2, 0xd9600654, _r, _ri);
};

/**
 * NETWORK_GET_NUM_PARTICIPANTS
 *

 * @return {number}
 */
global.NetworkGetNumParticipants = function () {
  return _in(0x18d0456e, 0x86604654, _r, _ri);
};

/**
 * NETWORK_GET_NUM_SCRIPT_PARTICIPANTS
 *
 * @param {string | number} scriptName
 * @param {number} instanceId
 * @param {number} position
 * @return {number}
 */
global.NetworkGetNumScriptParticipants = function (scriptName, instanceId, position) {
  return _in(0x3658e8cd, 0x94fc121a, _ts(scriptName), instanceId, _ch(position), _r, _ri);
};

/**
 * NETWORK_GET_NUM_UNACKED_RELIABLES
 * Old name: _NETWORK_GET_NUM_UNACKED_FOR_PLAYER
 *
 * @param {number} player
 * @return {number}
 */
global.NetworkGetNumUnackedReliables = function (player) {
  return _in(0xff8fcf9f, 0xfc458a1c, player, _r, _ri);
};

/**
 * NETWORK_GET_PARTICIPANT_INDEX
 *
 * @param {number} index
 * @return {number}
 */
global.NetworkGetParticipantIndex = function (index) {
  return _in(0x1b84df6a, 0xf2a46938, index, _r, _ri);
};

/**
 * NETWORK_GET_PLAYER_FROM_GAMER_HANDLE
 *
 * @param {DataView} gamerHandle
 * @return {number}
 */
global.NetworkGetPlayerFromGamerHandle = function (gamerHandle) {
  return _in(0xce5f689c, 0xf5a0a49d, gamerHandle, _r, _ri);
};

/**
 * NETWORK_GET_PLAYER_INDEX
 *
 * @param {number} player
 * @return {number}
 */
global.NetworkGetPlayerIndex = function (player) {
  return _in(0x24fb80d1, 0x07371267, player, _r, _ri);
};

/**
 * NETWORK_GET_PLAYER_INDEX_FROM_PED
 * Returns the Player associated to a given Ped when in an online session.
 *
 * @param {number} ped
 * @return {number}
 */
global.NetworkGetPlayerIndexFromPed = function (ped) {
  return _in(0x6c0e2e01, 0x25610278, ped, _r, _ri);
};

/**
 * NETWORK_GET_PROMOTION_DLG_SEEN_COUNT
 * Hardcoded to return zero.
 *

 * @return {number}
 */
global.NetworkGetPromotionDlgSeenCount = function () {
  return _in(0x2fb53c63, 0x1a49be92, _r, _ri);
};

/**
 * NETWORK_GET_RANDOM_INT_RANGED
 *
 * @param {number} rangeStart
 * @param {number} rangeEnd
 * @return {number}
 */
global.NetworkGetRandomIntRanged = function (rangeStart, rangeEnd) {
  return _in(0xe30cf56f, 0x1efa5f43, rangeStart, rangeEnd, _r, _ri);
};

/**
 * NETWORK_GET_RECENT_GAMER_NAMES
 *
 * @param {number} p0
 * @param {number} p1
 * @param {DataView} outData
 * @param {number} dataSize
 * @return {boolean}
 */
global.NetworkGetRecentGamerNames = function (p0, p1, outData, dataSize) {
  return _in(0xfefcc345, 0xce357453, p0, p1, outData, dataSize, _r);
};

/**
 * NETWORK_GET_ROPE_ID_FROM_NETWORK_ID
 *
 * @param {number} netId
 * @return {number}
 */
global.NetworkGetRopeIdFromNetworkId = function (netId) {
  return _in(0xeb1a4dd8, 0x352ec828, netId, _r, _ri);
};

/**
 * NETWORK_GET_SCRIPT_STATUS
 *

 * @return {number}
 */
global.NetworkGetScriptStatus = function () {
  return _in(0x57d15864, 0x7a6bfabf, _r, _ri);
};

/**
 * NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT
 *

 * @return {boolean}
 */
global.NetworkGetThisScriptIsNetworkScript = function () {
  return _in(0x29106699, 0x69e9535e, _r);
};

/**
 * NETWORK_GET_TIMEOUT_TIME
 *

 * @return {number}
 */
global.NetworkGetTimeoutTime = function () {
  return _in(0x5ed0356a, 0x0ce3a34f, _r, _ri);
};

/**
 * NETWORK_GET_TOTAL_NUM_FRIENDS
 *

 * @return {number}
 */
global.NetworkGetTotalNumFriends = function () {
  return _in(0xdb7abdd2, 0x03fa3704, _r, _ri);
};

/**
 * NETWORK_GET_TOTAL_NUM_PLAYERS
 *

 * @return {number}
 */
global.NetworkGetTotalNumPlayers = function () {
  return _in(0xcf61d4b4, 0x702ee9eb, _r, _ri);
};

/**
 * NETWORK_GET_TUNABLE_CLOUD_CRC
 *

 * @return {number}
 */
global.NetworkGetTunableCloudCrc = function () {
  return _in(0x10bd227a, 0x753b0d84, _r, _ri);
};

/**
 * NETWORK_GET_UNRELIABLE_RESEND_COUNT
 * Old name: _NETWORK_GET_UNRELIABLE_RESEND_COUNT_FOR_PLAYER
 *
 * @param {number} player
 * @return {number}
 */
global.NetworkGetUnreliableResendCount = function (player) {
  return _in(0x3765c3a3, 0xe8192e10, player, _r, _ri);
};

/**
 * NETWORK_HANDLE_FROM_FRIEND
 *
 * @param {number} friendIndex
 * @param {DataView} gamerHandle
 * @return {void}
 */
global.NetworkHandleFromFriend = function (friendIndex, gamerHandle) {
  return _in(0xd45cb817, 0xd7e177d2, friendIndex, gamerHandle);
};

/**
 * NETWORK_HANDLE_FROM_PLAYER
 *
 * @param {number} player
 * @param {DataView} gamerHandle
 * @return {void}
 */
global.NetworkHandleFromPlayer = function (player, gamerHandle) {
  return _in(0x388eb2b8, 0x6c73b6b3, player, gamerHandle);
};

/**
 * NETWORK_HASH_FROM_PLAYER_HANDLE
 *
 * @param {number} player
 * @return {number}
 */
global.NetworkHashFromPlayerHandle = function (player) {
  return _in(0xbc1d768f, 0x2f5d6c05, player, _r, _ri);
};

/**
 * NETWORK_HAS_CONTROL_OF_ENTITY
 *
 * @param {number} entity
 * @return {boolean}
 */
global.NetworkHasControlOfEntity = function (entity) {
  return _in(0x01bf60a5, 0x00e28887, entity, _r);
};

/**
 * NETWORK_HAS_CONTROL_OF_NETWORK_ID
 *
 * @param {number} netId
 * @return {boolean}
 */
global.NetworkHasControlOfNetworkId = function (netId) {
  return _in(0x4d36070f, 0xe0215186, netId, _r);
};

/**
 * NETWORK_HAS_CONTROL_OF_PICKUP
 *
 * @param {number} pickup
 * @return {boolean}
 */
global.NetworkHasControlOfPickup = function (pickup) {
  return _in(0x5bc9495f, 0x0b3b6fa6, pickup, _r);
};

/**
 * NETWORK_HAS_CONTROL_OF_PICKUP_PLACEMENT
 *
 * @param {any} p0
 * @return {boolean}
 */
global.NetworkHasControlOfPickupPlacement = function (p0) {
  return _in(0x51eabcf2, 0x786515ab, p0, _r);
};

/**
 * NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD
 *
 * @param {number} entity
 * @return {boolean}
 */
global.NetworkHasEntityBeenRegisteredWithThisThread = function (entity) {
  return _in(0xb07d3185, 0xe11657a5, entity, _r);
};

/**
 * NETWORK_HAS_PENDING_INVITE_FAILURE
 *

 * @return {boolean}
 */
global.NetworkHasPendingInviteFailure = function () {
  return _in(0xd0498ad3, 0x0e16b6bd, _r);
};

/**
 * NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA
 *

 * @return {boolean}
 */
global.NetworkHasReceivedHostBroadcastData = function () {
  return _in(0x5d10b379, 0x5f3fc886, _r);
};

/**
 * NETWORK_HAS_ROS_PRIVILEGE
 *
 * @param {number} index
 * @return {boolean}
 */
global.NetworkHasRosPrivilege = function (index) {
  return _in(0xa699957e, 0x60d80214, index, _r);
};

/**
 * NETWORK_HAS_SOCIAL_CLUB_ACCOUNT
 *

 * @return {boolean}
 */
global.NetworkHasSocialClubAccount = function () {
  return _in(0x67a55896, 0x28e0cff6, _r);
};

/**
 * NETWORK_HAS_VALID_ROS_CREDENTIALS
 * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
 *

 * @return {boolean}
 */
global.NetworkHasValidRosCredentials = function () {
  return _in(0x85443ff4, 0xc328f53b, _r);
};

/**
 * NETWORK_HAVE_ONLINE_PRIVILEGES
 *

 * @return {boolean}
 */
global.NetworkHaveOnlinePrivileges = function () {
  return _in(0x25cb5a9f, 0x37bfd063, _r);
};

/**
 * NETWORK_HAVE_ROS_BANNED_PRIV
 *

 * @return {boolean}
 */
global.NetworkHaveRosBannedPriv = function () {
  return _in(0x8020a738, 0x47e0ca7d, _r);
};

/**
 * NETWORK_IS_AIM_CAM_ACTIVE
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsAimCamActive = function (player) {
  return _in(0x8e7ce192, 0x19669aeb, player, _r);
};

/**
 * NETWORK_IS_CLOCK_TIME_OVERRIDDEN
 *

 * @return {boolean}
 */
global.NetworkIsClockTimeOverridden = function () {
  return _in(0xd7c95d32, 0x2ff57522, _r);
};

/**
 * NETWORK_IS_CLOUD_AVAILABLE
 *

 * @return {boolean}
 */
global.NetworkIsCloudAvailable = function () {
  return _in(0x9a4cf4f4, 0x8ad77302, _r);
};

/**
 * NETWORK_IS_CONNECTED_VIA_RELAY
 * Old name: _NETWORK_IS_CONNECTION_ENDPOINT_RELAY_SERVER
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsConnectedViaRelay = function (player) {
  return _in(0x16d3d499, 0x02f697bb, player, _r);
};

/**
 * NETWORK_IS_CUSTOM_UPSELL_ENABLED
 * Hardcoded to return false.
 *

 * @return {boolean}
 */
global.NetworkIsCustomUpsellEnabled = function () {
  return _in(0x78a9535a, 0xf83715c6, _r);
};

/**
 * NETWORK_IS_FEATURE_SUPPORTED
 *
 * @param {number} featureId
 * @return {boolean}
 */
global.NetworkIsFeatureSupported = function (featureId) {
  return _in(0x9c725d14, 0x9622bfde, featureId, _r);
};

/**
 * NETWORK_IS_FINDING_GAMERS
 *

 * @return {boolean}
 */
global.NetworkIsFindingGamers = function () {
  return _in(0xdddf64c9, 0x1bfcf0aa, _r);
};

/**
 * NETWORK_IS_FRIEND
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkIsFriend = function (gamerHandle) {
  return _in(0x1a24a179, 0xf9b31654, gamerHandle, _r);
};

/**
 * NETWORK_IS_GAMER_IN_MY_SESSION
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkIsGamerInMySession = function (gamerHandle) {
  return _in(0x0f10b05d, 0xdf8d16e9, gamerHandle, _r);
};

/**
 * NETWORK_IS_GAME_IN_PROGRESS
 *

 * @return {boolean}
 */
global.NetworkIsGameInProgress = function () {
  return _in(0x10fab354, 0x28ccc9d7, _r);
};

/**
 * NETWORK_IS_HANDLE_VALID
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkIsHandleValid = function (gamerHandle) {
  return _in(0x6f79b93b, 0x0a8e4133, gamerHandle, _r);
};

/**
 * NETWORK_IS_HOST
 * If you are host, returns true else returns false.
 *

 * @return {boolean}
 */
global.NetworkIsHost = function () {
  return _in(0x8db296b8, 0x14edda07, _r);
};

/**
 * NETWORK_IS_HOST_OF_THIS_SCRIPT
 *

 * @return {boolean}
 */
global.NetworkIsHostOfThisScript = function () {
  return _in(0x83cd99a1, 0xe6061ab5, _r);
};

/**
 * NETWORK_IS_IN_MP_CUTSCENE
 *

 * @return {boolean}
 */
global.NetworkIsInMpCutscene = function () {
  return _in(0x6cc27c9f, 0xa2040220, _r);
};

/**
 * NETWORK_IS_IN_PLATFORM_PARTY
 * Hardcoded to return false.
 *

 * @return {boolean}
 */
global.NetworkIsInPlatformParty = function () {
  return _in(0x2fc5650b, 0x0271cb57, _r);
};

/**
 * NETWORK_IS_IN_PLATFORM_PARTY_CHAT
 * Hardcoded to return false.
 *

 * @return {boolean}
 */
global.NetworkIsInPlatformPartyChat = function () {
  return _in(0xfd8b834a, 0x8ba05048, _r);
};

/**
 * NETWORK_IS_IN_SESSION
 *

 * @return {boolean}
 */
global.NetworkIsInSession = function () {
  return _in(0xca972461, 0x03b63917, _r);
};

/**
 * NETWORK_IS_IN_SPECTATOR_MODE
 *

 * @return {boolean}
 */
global.NetworkIsInSpectatorMode = function () {
  return _in(0x048746e3, 0x88762e11, _r);
};

/**
 * NETWORK_IS_IN_TUTORIAL_SESSION
 *

 * @return {boolean}
 */
global.NetworkIsInTutorialSession = function () {
  return _in(0xada24309, 0xfe08dacf, _r);
};

/**
 * NETWORK_IS_PARTICIPANT_ACTIVE
 *
 * @param {number} p0
 * @return {boolean}
 */
global.NetworkIsParticipantActive = function (p0) {
  return _in(0x6ff8ff40, 0xb6357d45, p0, _r);
};

/**
 * NETWORK_IS_PENDING_FRIEND
 * Hardcoded to return false.
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkIsPendingFriend = function (gamerHandle) {
  return _in(0x0be73da6, 0x984a6e33, gamerHandle, _r);
};

/**
 * NETWORK_IS_PLATFORM_INVITE_PENDING
 *

 * @return {boolean}
 */
global.NetworkIsPlatformInvitePending = function () {
  return _in(0xfc4165c9, 0x165c166f, _r);
};

/**
 * NETWORK_IS_PLAYER_ACTIVE
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsPlayerActive = function (player) {
  return _in(0xb8dfd30d, 0x6973e135, player, _r);
};

/**
 * NETWORK_IS_PLAYER_A_PARTICIPANT
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsPlayerAParticipant = function (player) {
  return _in(0x3ca58f6c, 0xb7cbd784, player, _r);
};

/**
 * NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT
 *
 * @param {number} p0
 * @param {DataView} p1
 * @param {any} p2
 * @return {boolean}
 */
global.NetworkIsPlayerAParticipantOnScript = function (p0, p1, p2) {
  return _in(0x1ad5b715, 0x86b94820, p0, p1, p2, _r);
};

/**
 * NETWORK_IS_PLAYER_CONCEALED
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsPlayerConcealed = function (player) {
  return _in(0x919b3c98, 0xed8292f9, player, _r);
};

/**
 * NETWORK_IS_PLAYER_CONNECTED
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsPlayerConnected = function (player) {
  return _in(0x93dc1be4, 0xe1abe9d1, player, _r);
};

/**
 * NETWORK_IS_PLAYER_INDEX_VALID
 * Returns true if the passed value is less than 32.
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsPlayerIndexValid = function (player) {
  return _in(0x255a5ef6, 0x5eda9167, player, _r);
};

/**
 * NETWORK_IS_PLAYER_IN_MP_CUTSCENE
 * Note: scripts seem to indicate that this was renamed to NETWORK_IS_PLAYER_IN_MP_FAST_INSTANCE
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsPlayerInMpCutscene = function (player) {
  return _in(0x63f9ee20, 0x3c3619f2, player, _r);
};

/**
 * NETWORK_IS_PROMOTION_ENABLED
 * Hardcoded to return false.
 *

 * @return {boolean}
 */
global.NetworkIsPromotionEnabled = function () {
  return _in(0x8ff6059d, 0xa26e688a, _r);
};

/**
 * NETWORK_IS_RESETTING_POPULATION
 *

 * @return {boolean}
 */
global.NetworkIsResettingPopulation = function () {
  return _in(0x1bb50cd3, 0x40a996e6, _r);
};

/**
 * NETWORK_IS_SCRIPT_ACTIVE
 *
 * @param {string | number} scriptName
 * @param {number} p1
 * @param {boolean} p2
 * @param {number} p3
 * @return {boolean}
 */
global.NetworkIsScriptActive = function (scriptName, p1, p2, p3) {
  return _in(0x9d40df90, 0xfad26098, _ts(scriptName), p1, p2, p3, _r);
};

/**
 * NETWORK_IS_SCRIPT_ACTIVE_BY_HASH
 *
 * @param {number} scriptHash
 * @param {number} p1
 * @param {boolean} p2
 * @param {number} p3
 * @return {boolean}
 */
global.NetworkIsScriptActiveByHash = function (scriptHash, p1, p2, p3) {
  return _in(0x1b89bc43, 0xb6e69107, _ch(scriptHash), p1, p2, p3, _r);
};

/**
 * NETWORK_IS_SESSION_ACTIVE
 *

 * @return {boolean}
 */
global.NetworkIsSessionActive = function () {
  return _in(0xd83c2b94, 0xe7508980, _r);
};

/**
 * NETWORK_IS_SESSION_STARTED
 *

 * @return {boolean}
 */
global.NetworkIsSessionStarted = function () {
  return _in(0x9de624d2, 0xfc4b603f, _r);
};

/**
 * NETWORK_IS_SIGNED_ONLINE
 *

 * @return {boolean}
 */
global.NetworkIsSignedOnline = function () {
  return _in(0x1077788e, 0x268557c2, _r);
};

/**
 * NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING
 *

 * @return {boolean}
 */
global.NetworkIsTunableCloudRequestPending = function () {
  return _in(0x0467c11e, 0xd88b7d28, _r);
};

/**
 * NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING
 *

 * @return {boolean}
 */
global.NetworkIsTutorialSessionChangePending = function () {
  return _in(0x35f0b98a, 0x8387274d, _r);
};

/**
 * NETWORK_PREVENT_SCRIPT_HOST_MIGRATION
 *

 * @return {void}
 */
global.NetworkPreventScriptHostMigration = function () {
  return _in(0x2302c026, 0x4ea58d31);
};

/**
 * NETWORK_REFRESH_CURRENT_FRIEND_PAGE
 *

 * @return {boolean}
 */
global.NetworkRefreshCurrentFriendPage = function () {
  return _in(0x1f51f367, 0xb710a832, _r);
};

/**
 * NETWORK_REGISTER_ENTITY_AS_NETWORKED
 *
 * @param {number} entity
 * @return {void}
 */
global.NetworkRegisterEntityAsNetworked = function (entity) {
  return _in(0x06faacd6, 0x25d80caa, entity);
};

/**
 * NETWORK_REGISTER_HOST_BROADCAST_VARIABLES
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.NetworkRegisterHostBroadcastVariables = function (p0, p1, p2) {
  return _in(0x3e9b2f01, 0xc50df595, p0, p1, p2);
};

/**
 * NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.NetworkRegisterPlayerBroadcastVariables = function (p0, p1, p2) {
  return _in(0x3364aa97, 0x340ca215, p0, p1, p2);
};

/**
 * NETWORK_REQUEST_CLOUD_TUNABLES
 * Note: this native was added in build 1311.23, but was only used after build 1436.25
 *

 * @return {void}
 */
global.NetworkRequestCloudTunables = function () {
  return _in(0x42fb3b53, 0x2d526e6c);
};

/**
 * NETWORK_REQUEST_CONTROL_OF_ENTITY
 *
 * @param {number} entity
 * @return {boolean}
 */
global.NetworkRequestControlOfEntity = function (entity) {
  return _in(0xb69317bf, 0x5e782347, entity, _r);
};

/**
 * NETWORK_REQUEST_CONTROL_OF_NETWORK_ID
 *
 * @param {number} netId
 * @return {boolean}
 */
global.NetworkRequestControlOfNetworkId = function (netId) {
  return _in(0xa670b366, 0x2faffbd0, netId, _r);
};

/**
 * NETWORK_REQUEST_CONTROL_OF_PICKUP_PLACEMENT
 *
 * @param {any} p0
 * @return {boolean}
 */
global.NetworkRequestControlOfPickupPlacement = function (p0) {
  return _in(0x56ed2c48, 0x558dab78, p0, _r);
};

/**
 * NETWORK_REQUEST_JOIN
 *
 * @param {any} p0
 * @return {number}
 */
global.NetworkRequestJoin = function (p0) {
  return _in(0xe483bb6b, 0xe686f632, p0, _r, _ri);
};

/**
 * NETWORK_REQUEST_RECENT_GAMER_NAMES
 *
 * @param {number} p0
 * @param {number} playerCount
 * @return {boolean}
 */
global.NetworkRequestRecentGamerNames = function (p0, playerCount) {
  return _in(0x6d206d38, 0x3bb5f6b1, p0, playerCount, _r);
};

/**
 * NETWORK_REQUEST_SESSION_SEAMLESS
 * flags:
 * enum eSessionRequestOptionFlags
 * {
 *   SESSION_REQUEST_OPTION_FLAG_INCLUDE_GANG_MEMBERS = (1 << 1),
 *   SESSION_REQUEST_OPTION_FLAG_LEADER_KEEPS_GANG = (1 << 7),
 * };
 * 
 * seamlessType:
 * enum eSeamlessType
 * {
 *   SEAMLESS_TYPE_NORMAL,
 *   SEAMLESS_TYPE_PVE,
 *   SEAMLESS_TYPE_DEV,
 *   SEAMLESS_TYPE_NO_SEAMLESS
 * };
 *
 * @param {number} flags
 * @param {number} seamlessType
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkRequestSessionSeamless = function (flags, seamlessType, sessionRequestId) {
  return _in(0x04019ae4, 0x956d4393, flags, seamlessType, sessionRequestId, _r);
};

/**
 * NETWORK_RESET_POPULATION
 *
 * @param {boolean} p0
 * @param {number} p1
 * @return {boolean}
 */
global.NetworkResetPopulation = function (p0, p1) {
  return _in(0x101f538c, 0x25abb39a, p0, p1, _r);
};

/**
 * NETWORK_RESURRECT_LOCAL_PLAYER
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {number} p4
 * @param {boolean} p5
 * @param {any} p6
 * @param {boolean} p7
 * @return {void}
 */
global.NetworkResurrectLocalPlayer = function (x, y, z, heading, p4, p5, p6, p7) {
  return _in(0xea23c49e, 0xaa83acfb, _fv(x), _fv(y), _fv(z), _fv(heading), p4, p5, p6, p7);
};

/**
 * NETWORK_SEED_RANDOM_NUMBER_GENERATOR
 *
 * @param {number} seed
 * @return {void}
 */
global.NetworkSeedRandomNumberGenerator = function (seed) {
  return _in(0xf1b84178, 0xf8674195, seed);
};

/**
 * NETWORK_SESSION_GET_SESSION_FLAGS
 *

 * @return {number}
 */
global.NetworkSessionGetSessionFlags = function () {
  return _in(0x51f33dbc, 0x1a41cbfd, _r, _ri);
};

/**
 * NETWORK_SESSION_GET_SESSION_TYPE
 *

 * @return {number}
 */
global.NetworkSessionGetSessionType = function () {
  return _in(0xf0c0c94b, 0x404206fa, _r, _ri);
};

/**
 * NETWORK_SESSION_IS_ANY_REQUEST_IN_PROGRESS
 *

 * @return {boolean}
 */
global.NetworkSessionIsAnyRequestInProgress = function () {
  return _in(0xbaffde5f, 0x953720d9, _r);
};

/**
 * NETWORK_SESSION_IS_PRIVATE
 * Checks for session flag 'SF_PRIVATE'
 *

 * @return {boolean}
 */
global.NetworkSessionIsPrivate = function () {
  return _in(0xcef70aa5, 0xb3f89ba1, _r);
};

/**
 * NETWORK_SESSION_IS_REQUEST_IN_PROGRESS
 *
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionIsRequestInProgress = function (sessionRequestId) {
  return _in(0x8fb7c254, 0xcfcbf78e, sessionRequestId, _r);
};

/**
 * NETWORK_SESSION_IS_REQUEST_PENDING_TRANSITION
 *
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionIsRequestPendingTransition = function (sessionRequestId) {
  return _in(0xccf878d5, 0x0f8ab10d, sessionRequestId, _r);
};

/**
 * NETWORK_SESSION_IS_SESSION_REQUEST_ID_VALID
 *
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionIsSessionRequestIdValid = function (sessionRequestId) {
  return _in(0x2f54b146, 0xd3edce4d, sessionRequestId, _r);
};

/**
 * NETWORK_SESSION_IS_TRANSITIONING
 *

 * @return {boolean}
 */
global.NetworkSessionIsTransitioning = function () {
  return _in(0xf2cbc969, 0xc4f090c7, _r);
};

/**
 * NETWORK_SESSION_LEAVE_SESSION
 *

 * @return {boolean}
 */
global.NetworkSessionLeaveSession = function () {
  return _in(0x17c21b73, 0x19a05047, _r);
};

/**
 * NETWORK_SESSION_LEFT_QUEUE_OR_REQUESTED_SESSION
 *
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionLeftQueueOrRequestedSession = function (sessionRequestId) {
  return _in(0xece6a0c1, 0xb59cd8be, sessionRequestId, _r);
};

/**
 * NETWORK_SESSION_REMOVE_SESSION_FLAGS
 * See _NETWORK_SESSION_ADD_SESSION_FLAGS
 *
 * @param {number} flags
 * @return {boolean}
 */
global.NetworkSessionRemoveSessionFlags = function (flags) {
  return _in(0x78335e12, 0xdb0bf961, flags, _r);
};

/**
 * NETWORK_SESSION_REQUEST_SESSION_COMPETITIVE
 * matchType:
 * enum eMatchType
 * {
 *   MATCHTYPE_DEPRECATED,
 *   MATCHTYPE_UGCPLAYLIST,
 *   MATCHTYPE_UGCMISSION,
 *   MATCHTYPE_MINIGAME,
 *   MATCHTYPE_SEAMLESS,
 *   MATCHTYPE_PRIVATE_DO_NOT_USE
 * };
 *
 * @param {number} flags
 * @param {number} matchType
 * @param {number} userHash
 * @param {number} p3
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionRequestSessionCompetitive = function (flags, matchType, userHash, p3, sessionRequestId) {
  return _in(0x309bbebe, 0xa8a3986c, flags, matchType, userHash, p3, sessionRequestId, _r);
};

/**
 * NETWORK_SESSION_REQUEST_SESSION_PRIVATE
 * Session flag 'SF_PRIVATE' is set internally
 * p1 represents max amount of players in private session
 *
 * @param {number} flags
 * @param {number} numPlayers
 * @param {number} userHash
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionRequestSessionPrivate = function (flags, numPlayers, userHash, sessionRequestId) {
  return _in(0x39a8ef7a, 0xf29a192c, flags, numPlayers, userHash, sessionRequestId, _r);
};

/**
 * NETWORK_SESSION_REQUEST_SESSION_SEAMLESS
 * Equivalent to NETWORK_REQUEST_SESSION_SEAMLESS if userHash == 0.
 * Otherwise it is equivalent to NETWORK_SESSION_REQUEST_SESSION_COMPETITIVE(flags, MATCHTYPE_SEAMLESS, userHash, 0, sessionRequestId);
 * 
 * p1 is unused
 *
 * @param {number} flags
 * @param {number} seamlessType
 * @param {number} userHash
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionRequestSessionSeamless = function (flags, seamlessType, userHash, sessionRequestId) {
  return _in(0x2989e131, 0xfde37e97, flags, seamlessType, userHash, sessionRequestId, _r);
};

/**
 * NETWORK_SET_COMPLETED_MP_INTRO_FLOW_ON_CURRENT_SLOT
 *
 * @param {boolean} completed
 * @return {boolean}
 */
global.NetworkSetCompletedMpIntroFlowOnCurrentSlot = function (completed) {
  return _in(0x2c5bd9a4, 0x3987aa27, completed, _r);
};

/**
 * NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS
 * if set to true other network players can't see it
 * if set to false other network player can see it
 * =========================================
 * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
 * 
 * pc or last gen?
 * 
 * ^^ last-gen
 * 
 * Old name: _NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkSetEntityOnlyExistsForParticipants = function (entity, toggle) {
  return _in(0xf1ca12b1, 0x8aef5298, entity, toggle);
};

/**
 * NETWORK_SET_ENTITY_REMAINS_WHEN_UNNETWORKED
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkSetEntityRemainsWhenUnnetworked = function (entity, toggle) {
  return _in(0xd7858647, 0x98258032, entity, toggle);
};

/**
 * NETWORK_SET_FRIENDLY_FIRE_OPTION
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkSetFriendlyFireOption = function (toggle) {
  return _in(0xf808475f, 0xa571d823, toggle);
};

/**
 * NETWORK_SET_IN_MP_CUTSCENE
 *
 * @param {boolean} p0
 * @param {boolean} p1
 * @param {number} p2
 * @param {boolean} p3
 * @return {void}
 */
global.NetworkSetInMpCutscene = function (p0, p1, p2, p3) {
  return _in(0x9ca5de65, 0x5269fec4, p0, p1, p2, p3);
};

/**
 * NETWORK_SET_IN_SPECTATOR_MODE
 *
 * @param {boolean} toggle
 * @param {number} playerPed
 * @return {void}
 */
global.NetworkSetInSpectatorMode = function (toggle, playerPed) {
  return _in(0x423de385, 0x4bb50894, toggle, playerPed);
};

/**
 * NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME
 *
 * @param {number} time
 * @return {void}
 */
global.NetworkSetLocalPlayerInvincibleTime = function (time) {
  return _in(0x2d95c7e2, 0xd7e07307, time);
};

/**
 * NETWORK_SET_LOCAL_PLAYER_PENDING_FAST_INSTANCE_ID
 *
 * @param {number} instanceId
 * @return {void}
 */
global.NetworkSetLocalPlayerPendingFastInstanceId = function (instanceId) {
  return _in(0x007ff852, 0xdcf49da4, instanceId);
};

/**
 * NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkSetLocalPlayerSyncLookAt = function (toggle) {
  return _in(0x524ff0ae, 0xff9c3973, toggle);
};

/**
 * NETWORK_SET_MISSION_FINISHED
 *

 * @return {void}
 */
global.NetworkSetMissionFinished = function () {
  return _in(0x3b3d11cd, 0x9ffcdfc9);
};

/**
 * NETWORK_SET_MP_MISSION_FLAG_ON_CURRENT_SLOT
 *
 * @param {boolean} enabled
 * @param {number} flagIndex
 * @return {boolean}
 */
global.NetworkSetMpMissionFlagOnCurrentSlot = function (enabled, flagIndex) {
  return _in(0x86fd1025, 0x1a7118a4, enabled, flagIndex, _r);
};

/**
 * NETWORK_SET_PLAYER_IS_PASSIVE
 * Old name: _NETWORK_SET_PASSIVE_MODE_OPTION
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkSetPlayerIsPassive = function (toggle) {
  return _in(0x9c25e8ec, 0x4c535fbd, toggle);
};

/**
 * NETWORK_SET_RECENT_GAMERS_ENABLED
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkSetRecentGamersEnabled = function (toggle) {
  return _in(0x29fe035d, 0x35b8589c, toggle);
};

/**
 * NETWORK_SET_RICH_PRESENCE
 *
 * @param {number} p0
 * @param {DataView} p1
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.NetworkSetRichPresence = function (p0, p1, p2, p3) {
  return _in(0x1dccacdc, 0xfc569362, p0, p1, p2, p3);
};

/**
 * NETWORK_SET_SCRIPT_READY_FOR_EVENTS
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkSetScriptReadyForEvents = function (toggle) {
  return _in(0x7ac75210, 0x3856fb20, toggle);
};

/**
 * NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT
 *
 * @param {number} maxNumMissionParticipants
 * @param {boolean} p1
 * @param {number} instanceId
 * @return {void}
 */
global.NetworkSetThisScriptIsNetworkScript = function (maxNumMissionParticipants, p1, instanceId) {
  return _in(0x1ca59e30, 0x6ecb80a5, maxNumMissionParticipants, p1, instanceId);
};

/**
 * NETWORK_SHOULD_SHOW_PROMOTION_DLG
 * Hardcoded to return false.
 *

 * @return {boolean}
 */
global.NetworkShouldShowPromotionDlg = function () {
  return _in(0xda4b1a47, 0x9c414fb2, _r);
};

/**
 * NETWORK_SHOW_ACCOUNT_UPGRADE_UI
 *

 * @return {void}
 */
global.NetworkShowAccountUpgradeUi = function () {
  return _in(0x83fe8d72, 0x29593017);
};

/**
 * NETWORK_SHOW_CHAT_RESTRICTION_MSC
 * nullsub, doesn't do anything
 *
 * @param {number} player
 * @return {void}
 */
global.NetworkShowChatRestrictionMsc = function (player) {
  return _in(0x6bff5f84, 0x102df80a, player);
};

/**
 * NETWORK_SHOW_PROFILE_UI
 *
 * @param {DataView} gamerHandle
 * @return {void}
 */
global.NetworkShowProfileUi = function (gamerHandle) {
  return _in(0x859ed1ce, 0xa343fca8, gamerHandle);
};

/**
 * NETWORK_SHOW_PSN_UGC_RESTRICTION
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.NetworkShowPsnUgcRestriction = function () {
  return _in(0x5c497525, 0xf803486b);
};

/**
 * NETWORK_SPAWN_CONFIG_SET_FLAGS
 *
 * @param {number} flags
 * @return {void}
 */
global.NetworkSpawnConfigSetFlags = function (flags) {
  return _in(0xf94a0d5b, 0x254375df, flags);
};

/**
 * NETWORK_SPAWN_CONFIG_SET_GROUND_TO_ROOT_OFFSET
 *
 * @param {number} offset
 * @return {void}
 */
global.NetworkSpawnConfigSetGroundToRootOffset = function (offset) {
  return _in(0x59577799, 0xf6ae2f34, _fv(offset));
};

/**
 * NETWORK_SPAWN_CONFIG_SET_TUNING_FLOAT
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.NetworkSpawnConfigSetTuningFloat = function (p0, p1) {
  return _in(0x0608326f, 0x7b98c08d, _ch(p0), _fv(p1));
};

/**
 * NETWORK_START_SOLO_TUTORIAL_SESSION
 *

 * @return {void}
 */
global.NetworkStartSoloTutorialSession = function () {
  return _in(0x17e0198b, 0x3882c2cb);
};

/**
 * NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK
 * Always returns -1. Seems to be XB1 specific.
 *
 * @param {DataView} gamerHandle
 * @return {number}
 */
global.NetworkStartUserContentPermissionsCheck = function (gamerHandle) {
  return _in(0xdeb2b99a, 0x1af1a2a6, gamerHandle, _r, _ri);
};

/**
 * NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_DAMAGE
 * Old name: _NETWORK_SET_VEHICLE_WHEELS_DESTRUCTIBLE
 *
 * @param {number} entity
 * @param {boolean} p1
 * @return {void}
 */
global.NetworkTriggerDamageEventForZeroDamage = function (entity, p1) {
  return _in(0x0c8bc052, 0xae87d744, entity, p1);
};

/**
 * NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH
 *
 * @param {number} tunableContext
 * @param {number} tunableName
 * @param {boolean} defaultValue
 * @return {boolean}
 */
global.NetworkTryAccessTunableBoolHash = function (tunableContext, tunableName, defaultValue) {
  return _in(0xb2ad5d29, 0xa99d4b26, _ch(tunableContext), _ch(tunableName), defaultValue, _r);
};

/**
 * NETWORK_TRY_ACCESS_TUNABLE_FLOAT_HASH
 *
 * @param {number} tunableContext
 * @param {number} tunableName
 * @param {number} defaultValue
 * @return {number}
 */
global.NetworkTryAccessTunableFloatHash = function (tunableContext, tunableName, defaultValue) {
  return _in(0xa1839308, 0x9c05e49c, _ch(tunableContext), _ch(tunableName), _fv(defaultValue), _r, _rf);
};

/**
 * NETWORK_TRY_ACCESS_TUNABLE_INT_HASH
 *
 * @param {number} tunableContext
 * @param {number} tunableName
 * @param {number} defaultValue
 * @return {number}
 */
global.NetworkTryAccessTunableIntHash = function (tunableContext, tunableName, defaultValue) {
  return _in(0xa25e006b, 0x36719774, _ch(tunableContext), _ch(tunableName), defaultValue, _r, _ri);
};

/**
 * NET_TO_ENT
 * gets the entity id of a network id
 *
 * @param {number} netHandle
 * @return {number}
 */
global.NetToEnt = function (netHandle) {
  return _in(0xbffeab45, 0xa9a9094a, netHandle, _r, _ri);
};

/**
 * NET_TO_OBJ
 * gets the object id of a network id
 *
 * @param {number} netHandle
 * @return {number}
 */
global.NetToObj = function (netHandle) {
  return _in(0xd8515f5f, 0xea14cb3f, netHandle, _r, _ri);
};

/**
 * NET_TO_PED
 * gets the ped id of a network id
 *
 * @param {number} netHandle
 * @return {number}
 */
global.NetToPed = function (netHandle) {
  return _in(0xbdcd95fc, 0x216a8b3e, netHandle, _r, _ri);
};

/**
 * NET_TO_VEH
 *
 * @param {number} netHandle
 * @return {number}
 */
global.NetToVeh = function (netHandle) {
  return _in(0x367b9366, 0x10ba360c, netHandle, _r, _ri);
};

/**
 * OBJ_TO_NET
 * Returns the network ID of the given object.
 *
 * @param {number} object
 * @return {number}
 */
global.ObjToNet = function (object) {
  return _in(0x99bfdc94, 0xa603e541, object, _r, _ri);
};

/**
 * PARTICIPANT_ID
 * Return the local Participant ID
 *

 * @return {number}
 */
global.ParticipantId = function () {
  return _in(0x90986e88, 0x76ce0a83, _r, _ri);
};

/**
 * PARTICIPANT_ID_TO_INT
 * Return the local Participant ID.
 * 
 * This native is exactly the same as 'PARTICIPANT_ID' native.
 *

 * @return {number}
 */
global.ParticipantIdToInt = function () {
  return _in(0x57a3bdda, 0xd8e5aa0a, _r, _ri);
};

/**
 * PED_TO_NET
 * Returns the network ID of the given ped.
 *
 * @param {number} ped
 * @return {number}
 */
global.PedToNet = function (ped) {
  return _in(0x0edec3c2, 0x76198689, ped, _r, _ri);
};

/**
 * PREVENT_MIGRATION_OF_ENTITIES_IN_FAST_INSTANCE_FOR_LOCAL_PLAYER
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.PreventMigrationOfEntitiesInFastInstanceForLocalPlayer = function (toggle) {
  return _in(0x89d803cd, 0x48622150, toggle);
};

/**
 * PREVENT_NETWORK_ID_MIGRATION
 *
 * @param {number} netId
 * @return {void}
 */
global.PreventNetworkIdMigration = function (netId) {
  return _in(0x7182edda, 0x1ee7db5a, netId);
};

/**
 * RESERVE_NETWORK_CLIENT_MISSION_OBJECTS
 *
 * @param {number} amount
 * @return {void}
 */
global.ReserveNetworkClientMissionObjects = function (amount) {
  return _in(0xe7dda8bd, 0x3bcf751c, amount);
};

/**
 * RESERVE_NETWORK_CLIENT_MISSION_PEDS
 *
 * @param {number} amount
 * @return {void}
 */
global.ReserveNetworkClientMissionPeds = function (amount) {
  return _in(0x807e119f, 0x80231732, amount);
};

/**
 * RESERVE_NETWORK_MISSION_OBJECTS
 *
 * @param {number} amount
 * @return {void}
 */
global.ReserveNetworkMissionObjects = function (amount) {
  return _in(0x4e5c93bd, 0x0c32fbf8, amount);
};

/**
 * RESERVE_NETWORK_MISSION_PEDS
 *
 * @param {number} amount
 * @return {void}
 */
global.ReserveNetworkMissionPeds = function (amount) {
  return _in(0xb60feba4, 0x5333d36f, amount);
};

/**
 * RESERVE_NETWORK_MISSION_PICKUPS
 *
 * @param {number} amount
 * @return {void}
 */
global.ReserveNetworkMissionPickups = function (amount) {
  return _in(0x4d40e7d7, 0x49bc6e6d, amount);
};

/**
 * RESERVE_NETWORK_MISSION_VEHICLES
 *
 * @param {number} amount
 * @return {void}
 */
global.ReserveNetworkMissionVehicles = function (amount) {
  return _in(0x76b02e21, 0xed27a469, amount);
};

/**
 * SET_ENTITY_VISIBLE_IN_CUTSCENE
 *
 * @param {number} entity
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {number} p3
 * @return {void}
 */
global.SetEntityVisibleInCutscene = function (entity, p1, p2, p3) {
  return _in(0xe0031d3c, 0x8f36ab82, entity, p1, p2, p3);
};

/**
 * SET_LOCAL_PLAYER_AS_GHOST
 * Old name: _SET_LOCAL_PLAYER_AS_GHOST
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetLocalPlayerAsGhost = function (toggle) {
  return _in(0x5ffe9b41, 0x44f9712f, toggle);
};

/**
 * SET_LOCAL_PLAYER_INVISIBLE_LOCALLY
 *
 * @param {boolean} p0
 * @return {void}
 */
global.SetLocalPlayerInvisibleLocally = function (p0) {
  return _in(0xe5f773c1, 0xa1d9d168, p0);
};

/**
 * SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE
 *
 * @param {boolean} local
 * @param {boolean} remote
 * @param {number} instanceId
 * @return {void}
 */
global.SetLocalPlayerVisibleInCutscene = function (local, remote, instanceId) {
  return _in(0xd1065d68, 0x947e7b6e, local, remote, instanceId);
};

/**
 * SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER
 *
 * @param {number} netId
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetNetworkIdAlwaysExistsForPlayer = function (netId, player, toggle) {
  return _in(0xa8a02458, 0x7329f36a, netId, player, toggle);
};

/**
 * SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES
 *
 * @param {number} netId
 * @param {boolean} toggle
 * @return {void}
 */
global.SetNetworkIdExistsOnAllMachines = function (netId, toggle) {
  return _in(0xe05e81a8, 0x88fa63c8, netId, toggle);
};

/**
 * SET_NETWORK_ID_STOP_CLONING
 *
 * @param {number} networkId
 * @param {boolean} bStopCloning
 * @return {void}
 */
global.SetNetworkIdStopCloning = function (networkId, bStopCloning) {
  return _in(0x9ed3108d, 0x6847760a, networkId, bStopCloning);
};

/**
 * SET_NETWORK_ID_VISIBLE_IN_CUTSCENE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.SetNetworkIdVisibleInCutscene = function (p0, p1, p2, p3) {
  return _in(0xa6928482, 0x543022b4, p0, p1, p2, p3);
};

/**
 * SET_PLAYER_INVISIBLE_LOCALLY
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPlayerInvisibleLocally = function (player, toggle) {
  return _in(0x12b37d54, 0x667db0b8, player, toggle);
};

/**
 * SET_PLAYER_VISIBLE_LOCALLY
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPlayerVisibleLocally = function (player, toggle) {
  return _in(0xfaa10f1f, 0xafb11af2, player, toggle);
};

/**
 * TEXTURE_DOWNLOAD_GET_NAME
 *
 * @param {number} textureDownloadId
 * @return {string | number}
 */
global.TextureDownloadGetName = function (textureDownloadId) {
  return _in(0x3448505b, 0x6e35262d, textureDownloadId, _r, _s);
};

/**
 * TEXTURE_DOWNLOAD_RELEASE
 *
 * @param {number} textureDownloadId
 * @return {void}
 */
global.TextureDownloadRelease = function (textureDownloadId) {
  return _in(0x487eb90b, 0x98e9fb19, textureDownloadId);
};

/**
 * TEXTURE_DOWNLOAD_REQUEST
 * Returns textureDownloadId
 *
 * @param {DataView} gamerHandle
 * @param {string | number} filePath
 * @param {string | number} name
 * @param {boolean} p3
 * @return {number}
 */
global.TextureDownloadRequest = function (gamerHandle, filePath, name, p3) {
  return _in(0x16160da7, 0x4a8e74a2, gamerHandle, _ts(filePath), _ts(name), p3, _r, _ri);
};

/**
 * UGC_CLEAR_QUERY_RESULTS
 *
 * @param {number} ugcRequestId
 * @return {void}
 */
global.UgcClearQueryResults = function (ugcRequestId) {
  return _in(0xe931354f, 0xea710038, ugcRequestId);
};

/**
 * UGC_DID_DESCRIPTION_REQUEST_SUCCEED
 *
 * @param {number} description
 * @return {boolean}
 */
global.UgcDidDescriptionRequestSucceed = function (description) {
  return _in(0x162c23ca, 0x83ed0a62, _ch(description), _r);
};

/**
 * UGC_DID_REQUEST_SUCCEED
 *
 * @param {number} ugcRequestId
 * @return {boolean}
 */
global.UgcDidRequestSucceed = function (ugcRequestId) {
  return _in(0x0b6009a9, 0x0b8495f1, ugcRequestId, _r);
};

/**
 * UGC_GET_CACHED_DESCRIPTION
 *
 * @param {number} description
 * @param {number} length
 * @return {string | number}
 */
global.UgcGetCachedDescription = function (description, length) {
  return _in(0x40f7e664, 0x72df3e5c, _ch(description), length, _r, _s);
};

/**
 * UGC_HAS_DESCRIPTION_REQUEST_FINISHED
 *
 * @param {number} description
 * @return {boolean}
 */
global.UgcHasDescriptionRequestFinished = function (description) {
  return _in(0xebfa8d50, 0xaddc54c4, _ch(description), _r);
};

/**
 * UGC_HAS_REQUEST_FINISHED
 *
 * @param {number} ugcRequestId
 * @return {boolean}
 */
global.UgcHasRequestFinished = function (ugcRequestId) {
  return _in(0xa9eb4d60, 0x6076615d, ugcRequestId, _r);
};

/**
 * UGC_IS_DESCRIPTION_REQUEST_IN_PROGRESS
 *
 * @param {number} description
 * @return {boolean}
 */
global.UgcIsDescriptionRequestInProgress = function (description) {
  return _in(0x2d5dc831, 0x176d0114, _ch(description), _r);
};

/**
 * UGC_IS_LANGUAGE_SUPPORTED
 *
 * @param {number} languageId
 * @return {boolean}
 */
global.UgcIsLanguageSupported = function (languageId) {
  return _in(0xf53e4846, 0x1b71eecb, languageId, _r);
};

/**
 * UGC_IS_REQUEST_PENDING
 *
 * @param {number} ugcRequestId
 * @return {boolean}
 */
global.UgcIsRequestPending = function (ugcRequestId) {
  return _in(0xf4ac4fa8, 0x44fd559a, ugcRequestId, _r);
};

/**
 * UGC_QUERY_GET_CONTENT_HAS_PLAYER_RECORD
 *
 * @param {any} p0
 * @param {number} index
 * @return {boolean}
 */
global.UgcQueryGetContentHasPlayerRecord = function (p0, index) {
  return _in(0xf7947653, 0x90a6dca5, p0, index, _r);
};

/**
 * UGC_QUERY_GET_CONTENT_NUM
 *
 * @param {number} ugcRequestId
 * @return {number}
 */
global.UgcQueryGetContentNum = function (ugcRequestId) {
  return _in(0x76160e03, 0x96142765, ugcRequestId, _r, _ri);
};

/**
 * UGC_QUERY_WAS_FORCE_CANCELLED
 *
 * @param {number} ugcRequestId
 * @return {boolean}
 */
global.UgcQueryWasForceCancelled = function (ugcRequestId) {
  return _in(0xf8f0705e, 0x77a0e705, ugcRequestId, _r);
};

/**
 * UGC_RELEASE_ALL_CACHED_DESCRIPTIONS
 *

 * @return {void}
 */
global.UgcReleaseAllCachedDescriptions = function () {
  return _in(0x68103e22, 0x47887242);
};

/**
 * UGC_RELEASE_CACHED_DESCRIPTION
 *
 * @param {number} description
 * @return {boolean}
 */
global.UgcReleaseCachedDescription = function (description) {
  return _in(0x5a34cd9c, 0x3c5bec44, _ch(description), _r);
};

/**
 * UGC_REQUEST_CACHED_DESCRIPTION
 *
 * @param {number} description
 * @return {number}
 */
global.UgcRequestCachedDescription = function (description) {
  return _in(0x5e016527, 0x8f6339ee, _ch(description), _r, _ri);
};

/**
 * UGC_REQUEST_CONTENT_DATA_FROM_PARAMS
 *
 * @param {string | number} contentTypeName
 * @param {string | number} contentId
 * @param {number} fileId
 * @param {number} fileVersion
 * @param {number} languageId
 * @return {number}
 */
global.UgcRequestContentDataFromParams = function (contentTypeName, contentId, fileId, fileVersion, languageId) {
  return _in(0x7fd2990a, 0xf016795e, _ts(contentTypeName), _ts(contentId), fileId, fileVersion, languageId, _r, _ri);
};

/**
 * UGC_SET_QUERY_DATA_FROM_OFFLINE
 *
 * @param {boolean} p0
 * @return {void}
 */
global.UgcSetQueryDataFromOffline = function (p0) {
  return _in(0xf98dde0a, 0x8ed09323, p0);
};

/**
 * UGC_TEXTURE_DOWNLOAD_REQUEST
 *
 * @param {DataView} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {DataView} p4
 * @param {boolean} p5
 * @return {number}
 */
global.UgcTextureDownloadRequest = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x308f9645, 0x8b7087cc, p0, p1, p2, p3, p4, p5, _r, _ri);
};

/**
 * VEH_TO_NET
 * Returns the network ID of the given vehicle.
 *
 * @param {number} vehicle
 * @return {number}
 */
global.VehToNet = function (vehicle) {
  return _in(0xb4c94523, 0xf023419c, vehicle, _r, _ri);
};

/**
 * _0x02B3CDD652B3CDD6
 * Note: this native was added in build 1311.16
 * 
 * GET_NUM_*
 *

 * @return {number}
 */
global.N_0x02B3CDD652B3CDD6 = function () {
  return _in(0x02b3cdd6, 0x52b3cdd6, _r, _ri);
};

/**
 * _0x02C4C6C2900D84DF
 * Only used in SP R* Script dominoes_sp: p1 = 0
 *
 * @param {number} player
 * @param {any} p1
 * @return {void}
 */
global.N_0x02C4C6C2900D84DF = function (player, p1) {
  return _in(0x02c4c6c2, 0x900d84df, player, p1);
};

/**
 * _0x039AD6B57D5179FF
 * Note: this native was added in build 1311.23
 *

 * @return {number}
 */
global.N_0x039AD6B57D5179FF = function () {
  return _in(0x039ad6b5, 0x7d5179ff, _r, _ri);
};

/**
 * _0x039B692B3318FAB6
 * Note: this native was added in build 1311.23
 *
 * @param {boolean} p0
 * @return {number}
 */
global.N_0x039B692B3318FAB6 = function (p0) {
  return _in(0x039b692b, 0x3318fab6, p0, _r, _ri);
};

/**
 * _0x062842D61D0D53FD
 * Note: this native was added in build 1311.23
 *

 * @return {boolean}
 */
global.N_0x062842D61D0D53FD = function () {
  return _in(0x062842d6, 0x1d0d53fd, _r);
};

/**
 * _0x0B6B4507AC5EA8B8
 *

 * @return {boolean}
 */
global.N_0x0B6B4507AC5EA8B8 = function () {
  return _in(0x0b6b4507, 0xac5ea8b8, _r);
};

/**
 * _0x0BF90CBB6B72977B
 *

 * @return {void}
 */
global.N_0x0BF90CBB6B72977B = function () {
  return _in(0x0bf90cbb, 0x6b72977b);
};

/**
 * _0x0CC28C08613BA9E5
 * nullsub, doesn't do anything
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x0CC28C08613BA9E5 = function (p0) {
  return _in(0x0cc28c08, 0x613ba9e5, p0);
};

/**
 * _0x0D183D8490EE4366
 * Note: this native was added in build 1311.23
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.N_0x0D183D8490EE4366 = function (p0, p1) {
  return _in(0x0d183d84, 0x90ee4366, p0, p1);
};

/**
 * _0x0E54D4DA6018FF8E
 *

 * @return {boolean}
 */
global.N_0x0E54D4DA6018FF8E = function () {
  return _in(0x0e54d4da, 0x6018ff8e, _r);
};

/**
 * _0x106CBDD5077DEDE1
 * Note: this native was added in build 1311.23
 *
 * @param {boolean} p0
 * @return {number}
 */
global.N_0x106CBDD5077DEDE1 = function (p0) {
  return _in(0x106cbdd5, 0x077dede1, p0, _r, _ri);
};

/**
 * _0x13F592FC3BF0EA84
 *
 * @param {number} volume
 * @param {boolean} p1
 * @param {number} originalWeight
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x13F592FC3BF0EA84 = function (volume, p1, originalWeight, p3, p4) {
  return _in(0x13f592fc, 0x3bf0ea84, volume, p1, _fv(originalWeight), p3, p4);
};

/**
 * _0x1413B6BF27AB7A95
 *

 * @return {number}
 */
global.N_0x1413B6BF27AB7A95 = function () {
  return _in(0x1413b6bf, 0x27ab7a95, _r, _ri);
};

/**
 * _0x160F0CE6D76A39C9
 * nullsub, doesn't do anything
 *

 * @return {any}
 */
global.N_0x160F0CE6D76A39C9 = function () {
  return _in(0x160f0ce6, 0xd76a39c9, _r);
};

/**
 * _0x16EFB123C4451032
 *
 * @param {number} p0
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.N_0x16EFB123C4451032 = function (p0, gamerHandle) {
  return _in(0x16efb123, 0xc4451032, p0, gamerHandle, _r);
};

/**
 * _0x18B94666CF610AEB
 *

 * @return {boolean}
 */
global.N_0x18B94666CF610AEB = function () {
  return _in(0x18b94666, 0xcf610aeb, _r);
};

/**
 * _0x19447FCAE97704DC
 * Note: this native was added in build 1311.23
 *
 * @param {number} ctx
 * @param {number} ec
 * @param {boolean} ex
 * @param {boolean} ro
 * @return {void}
 */
global.N_0x19447FCAE97704DC = function (ctx, ec, ex, ro) {
  return _in(0x19447fca, 0xe97704dc, _ch(ctx), ec, ex, ro);
};

/**
 * _0x19B52C20B5C4757C
 *

 * @return {void}
 */
global.N_0x19B52C20B5C4757C = function () {
  return _in(0x19b52c20, 0xb5c4757c);
};

/**
 * _0x1E4E097D71D449FB
 * Note: this native was added in build 1311.23
 *
 * @param {boolean} p0
 * @return {number}
 */
global.N_0x1E4E097D71D449FB = function (p0) {
  return _in(0x1e4e097d, 0x71d449fb, p0, _r, _ri);
};

/**
 * _0x232E1EB23CDB313C
 *

 * @return {boolean}
 */
global.N_0x232E1EB23CDB313C = function () {
  return _in(0x232e1eb2, 0x3cdb313c, _r);
};

/**
 * _0x236321F1178A5446
 * _NETWORK_GET_A* - _NETWORK_GET_D*
 *
 * @param {number} player
 * @param {number} ped
 * @param {DataView} p2
 * @return {boolean}
 */
global.N_0x236321F1178A5446 = function (player, ped, p2) {
  return _in(0x236321f1, 0x178a5446, player, ped, p2, _r);
};

/**
 * _0x2686BD9566B65EDA
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.N_0x2686BD9566B65EDA = function (x, y, z) {
  return _in(0x2686bd95, 0x66b65eda, _fv(x), _fv(y), _fv(z));
};

/**
 * _0x26A867C0B7A456D1
 * _GET_LAUNCH_PARAM_(RESPOT?)*
 * Name is probably invalid since this native only reads data from parsed entity.
 *
 * @param {number} entity
 * @return {boolean}
 */
global.N_0x26A867C0B7A456D1 = function (entity) {
  return _in(0x26a867c0, 0xb7a456d1, entity, _r);
};

/**
 * _0x271F95E55C663B8B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x271F95E55C663B8B = function (p0, p1) {
  return _in(0x271f95e5, 0x5c663b8b, p0, p1, _r);
};

/**
 * _0x273E04A3A7AD1F2D
 *

 * @return {boolean}
 */
global.N_0x273E04A3A7AD1F2D = function () {
  return _in(0x273e04a3, 0xa7ad1f2d, _r);
};

/**
 * _0x27B1AE4D8C652F08
 *
 * @param {number} p0
 * @return {number}
 */
global.N_0x27B1AE4D8C652F08 = function (p0) {
  return _in(0x27b1ae4d, 0x8c652f08, p0, _r, _ri);
};

/**
 * _0x2C4E98DDA475364F
 * nullsub, doesn't do anything
 *
 * @param {string | number} p0
 * @return {void}
 */
global.N_0x2C4E98DDA475364F = function (p0) {
  return _in(0x2c4e98dd, 0xa475364f, _ts(p0));
};

/**
 * _0x2CD41AC000E6F611
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.N_0x2CD41AC000E6F611 = function () {
  return _in(0x2cd41ac0, 0x00e6f611);
};

/**
 * _0x3034C77C79A58880
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x3034C77C79A58880 = function (p0) {
  return _in(0x3034c77c, 0x79a58880, p0);
};

/**
 * _0x316FD416C432C761
 * Note: this native was added in build 1311.23
 *

 * @return {boolean}
 */
global.N_0x316FD416C432C761 = function () {
  return _in(0x316fd416, 0xc432c761, _r);
};

/**
 * _0x335AF56613CA0F49
 * Note: this native was added in build 1311.23
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x335AF56613CA0F49 = function (p0) {
  return _in(0x335af566, 0x13ca0f49, p0);
};

/**
 * _0x34BC1E79546BA543
 * _NETWORK_A* - _NETWORK_C*
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x34BC1E79546BA543 = function (p0) {
  return _in(0x34bc1e79, 0x546ba543, p0);
};

/**
 * _0x3AA0CDC63696166D
 *
 * @param {number} p0
 * @return {boolean}
 */
global.N_0x3AA0CDC63696166D = function (p0) {
  return _in(0x3aa0cdc6, 0x3696166d, p0, _r);
};

/**
 * _0x3CBD6565D9C3B133
 * Note: this native was added in build 1311.23
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0x3CBD6565D9C3B133 = function (p0, p1, p2) {
  return _in(0x3cbd6565, 0xd9c3b133, p0, p1, _fv(p2));
};

/**
 * _0x3E4A16BC669E71B3
 *

 * @return {boolean}
 */
global.N_0x3E4A16BC669E71B3 = function () {
  return _in(0x3e4a16bc, 0x669e71b3, _r);
};

/**
 * _0x3E74A687A73979C6
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x3E74A687A73979C6 = function (p0) {
  return _in(0x3e74a687, 0xa73979c6, p0);
};

/**
 * _0x3E8CCE6769DB5F34
 * Stadia only; always returns -1 on other platforms. p0 may be a BOOL.
 *
 * @param {number} p0
 * @return {number}
 */
global.N_0x3E8CCE6769DB5F34 = function (p0) {
  return _in(0x3e8cce67, 0x69db5f34, p0, _r, _ri);
};

/**
 * _0x3F0ABAE38A0515AD
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.N_0x3F0ABAE38A0515AD = function (p0, p1) {
  return _in(0x3f0abae3, 0x8a0515ad, p0, p1);
};

/**
 * _0x3F2EE18A3E294801
 *
 * @param {number} p0
 * @return {number}
 */
global.N_0x3F2EE18A3E294801 = function (p0) {
  return _in(0x3f2ee18a, 0x3e294801, p0, _r, _ri);
};

/**
 * _0x405DDEFB1F531B18
 *
 * @param {number} volume
 * @param {boolean} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x405DDEFB1F531B18 = function (volume, p1, p2, p3) {
  return _in(0x405ddefb, 0x1f531b18, volume, p1, p2, p3);
};

/**
 * _0x40FEDB13870042F1
 * Note: this native was added in build 1355.30
 *

 * @return {void}
 */
global.N_0x40FEDB13870042F1 = function () {
  return _in(0x40fedb13, 0x870042f1);
};

/**
 * _0x41452E8A3B9C0C4B
 *

 * @return {number}
 */
global.N_0x41452E8A3B9C0C4B = function () {
  return _in(0x41452e8a, 0x3b9c0c4b, _r, _ri);
};

/**
 * _0x422F9D6D6C7BC290
 * Note: this native was added in build 1355.30
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x422F9D6D6C7BC290 = function (p0) {
  return _in(0x422f9d6d, 0x6c7bc290, p0);
};

/**
 * _0x43CF999205084B4B
 *

 * @return {void}
 */
global.N_0x43CF999205084B4B = function () {
  return _in(0x43cf9992, 0x05084b4b);
};

/**
 * _0x4538EE7C321590BC
 * Returns the entity associated with the given network ID.
 *
 * @param {number} networkId
 * @return {number}
 */
global.N_0x4538EE7C321590BC = function (networkId) {
  return _in(0x4538ee7c, 0x321590bc, networkId, _r, _ri);
};

/**
 * _0x455156F47DC6B78C
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x455156F47DC6B78C = function (p0) {
  return _in(0x455156f4, 0x7dc6b78c, p0);
};

/**
 * _0x4835413EA6F9C9CD
 * Note: this native was added in build 1311.23
 *
 * @param {boolean} p0
 * @return {number}
 */
global.N_0x4835413EA6F9C9CD = function (p0) {
  return _in(0x4835413e, 0xa6f9c9cd, p0, _r, _ri);
};

/**
 * _0x49CF17A564918E8D
 *

 * @return {void}
 */
global.N_0x49CF17A564918E8D = function () {
  return _in(0x49cf17a5, 0x64918e8d);
};

/**
 * _0x5133CF81924F1129
 * Hardcoded to return zero.
 *

 * @return {number}
 */
global.N_0x5133CF81924F1129 = function () {
  return _in(0x5133cf81, 0x924f1129, _r, _ri);
};

/**
 * _0x51951DE06C0D1C40
 *
 * @param {number} player
 * @param {number} type
 * @return {void}
 */
global.N_0x51951DE06C0D1C40 = function (player, type) {
  return _in(0x51951de0, 0x6c0d1c40, player, type);
};

/**
 * _0x564552C6AF1EEAB1
 *

 * @return {void}
 */
global.N_0x564552C6AF1EEAB1 = function () {
  return _in(0x564552c6, 0xaf1eeab1);
};

/**
 * _0x5759160AC17C13CE
 *
 * @param {DataView} gamerHandle
 * @param {string | number} message
 * @return {void}
 */
global.N_0x5759160AC17C13CE = function (gamerHandle, message) {
  return _in(0x5759160a, 0xc17c13ce, gamerHandle, _ts(message));
};

/**
 * _0x5A91BCEF74944E93
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.N_0x5A91BCEF74944E93 = function (player, p1) {
  return _in(0x5a91bcef, 0x74944e93, player, _fv(p1));
};

/**
 * _0x5B9C6AC118FD4774
 *

 * @return {void}
 */
global.N_0x5B9C6AC118FD4774 = function () {
  return _in(0x5b9c6ac1, 0x18fd4774);
};

/**
 * _0x5CB8B0C846D0F30B
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x5CB8B0C846D0F30B = function (p0) {
  return _in(0x5cb8b0c8, 0x46d0f30b, p0);
};

/**
 * _0x5CD3AAD8FF9ED121
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x5CD3AAD8FF9ED121 = function (p0) {
  return _in(0x5cd3aad8, 0xff9ed121, p0);
};

/**
 * _0x5D3C528B7A7DF836
 * _NETWORK_SPAWN_CONFIG_*
 *
 * @param {number} nsctf
 * @return {void}
 */
global.N_0x5D3C528B7A7DF836 = function (nsctf) {
  return _in(0x5d3c528b, 0x7a7df836, _ch(nsctf));
};

/**
 * _0x5ED39DA62BEB1330
 *
 * @param {number} p0
 * @return {any}
 */
global.N_0x5ED39DA62BEB1330 = function (p0) {
  return _in(0x5ed39da6, 0x2beb1330, p0, _r);
};

/**
 * _0x5F0E99071582DECA
 *
 * @param {any} p0
 * @param {number} index
 * @param {number} p2
 * @return {any}
 */
global.N_0x5F0E99071582DECA = function (p0, index, p2) {
  return _in(0x5f0e9907, 0x1582deca, p0, index, p2, _r);
};

/**
 * _0x5F328FC909F0E0FF
 * Note: this native was added in build 1311.23
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @return {boolean}
 */
global.N_0x5F328FC909F0E0FF = function (p0, p1, p2, p3) {
  return _in(0x5f328fc9, 0x09f0e0ff, p0, p1, p2, p3, _r);
};

/**
 * _0x603469298A4308AF
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x603469298A4308AF = function (p0) {
  return _in(0x60346929, 0x8a4308af, p0);
};

/**
 * _0x61BFBAA795E712AD
 *

 * @return {void}
 */
global.N_0x61BFBAA795E712AD = function () {
  return _in(0x61bfbaa7, 0x95e712ad);
};

/**
 * _0x64A36BA85CE01A81
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0x64A36BA85CE01A81 = function (p0, p1, p2, p3) {
  return _in(0x64a36ba8, 0x5ce01a81, p0, p1, p2, p3, _r);
};

/**
 * _0x67CCDF74C4DF7169
 *

 * @return {boolean}
 */
global.N_0x67CCDF74C4DF7169 = function () {
  return _in(0x67ccdf74, 0xc4df7169, _r);
};

/**
 * _0x691E4DE5309EAEFC
 *
 * @param {any} p0
 * @param {DataView} p1
 * @return {void}
 */
global.N_0x691E4DE5309EAEFC = function (p0, p1) {
  return _in(0x691e4de5, 0x309eaefc, p0, p1);
};

/**
 * _0x6C27442A225A241A
 *
 * @param {number} p0
 * @return {number}
 */
global.N_0x6C27442A225A241A = function (p0) {
  return _in(0x6c27442a, 0x225a241a, p0, _r, _ri);
};

/**
 * _0x6C7E04E9DE451789
 *

 * @return {void}
 */
global.N_0x6C7E04E9DE451789 = function () {
  return _in(0x6c7e04e9, 0xde451789);
};

/**
 * _0x6CEE2E30021DAEC6
 * _NETWORK_SPAWN_CONFIG_*
 *

 * @return {void}
 */
global.N_0x6CEE2E30021DAEC6 = function () {
  return _in(0x6cee2e30, 0x021daec6);
};

/**
 * _0x6CF82A7F65A5AD5F
 * _NETWORK_GET_A* - _NETWORK_GET_D*
 *
 * @param {number} ped
 * @param {DataView} p1
 * @return {number}
 */
global.N_0x6CF82A7F65A5AD5F = function (ped, p1) {
  return _in(0x6cf82a7f, 0x65a5ad5f, ped, p1, _r, _ri);
};

/**
 * _0x704F92B3AF20D857
 *
 * @param {boolean} setting
 * @return {void}
 */
global.N_0x704F92B3AF20D857 = function (setting) {
  return _in(0x704f92b3, 0xaf20d857, setting);
};

/**
 * _0x71FA2D1880C48032
 * Only used in R* Script fm_race_controller
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x71FA2D1880C48032 = function (p0) {
  return _in(0x71fa2d18, 0x80c48032, p0);
};

/**
 * _0x744BFBB0CA908161
 * Note: this native was added in build 1311.23
 *
 * @param {boolean} p0
 * @return {number}
 */
global.N_0x744BFBB0CA908161 = function (p0) {
  return _in(0x744bfbb0, 0xca908161, p0, _r, _ri);
};

/**
 * _0x75FC34A2BA345BD1
 *
 * @param {number} entity
 * @param {number} player
 * @param {DataView} p2
 * @return {boolean}
 */
global.N_0x75FC34A2BA345BD1 = function (entity, player, p2) {
  return _in(0x75fc34a2, 0xba345bd1, entity, player, p2, _r);
};

/**
 * _0x7673C0D2C5CDAC55
 * Note: this native was added in build 1311.23
 *

 * @return {void}
 */
global.N_0x7673C0D2C5CDAC55 = function () {
  return _in(0x7673c0d2, 0xc5cdac55);
};

/**
 * _0x77B299E8799B1332
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x77B299E8799B1332 = function (p0, p1, p2) {
  return _in(0x77b299e8, 0x799b1332, p0, p1, p2, _r);
};

/**
 * _0x780A13F780A13F1B
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0x780A13F780A13F1B = function (toggle) {
  return _in(0x780a13f7, 0x80a13f1b, toggle);
};

/**
 * _0x78271BC02AE9AF83
 * Note: this native was added in build 1436.31
 *
 * @param {number} p0
 * @return {number}
 */
global.N_0x78271BC02AE9AF83 = function (p0) {
  return _in(0x78271bc0, 0x2ae9af83, p0, _r, _ri);
};

/**
 * _0x7A8E8DF782B47EB0
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x7A8E8DF782B47EB0 = function (p0, p1, p2) {
  return _in(0x7a8e8df7, 0x82b47eb0, p0, p1, p2, _r);
};

/**
 * _0x7B3FF2D193628126
 *
 * @param {number} player
 * @return {void}
 */
global.N_0x7B3FF2D193628126 = function (player) {
  return _in(0x7b3ff2d1, 0x93628126, player);
};

/**
 * _0x7BCA0A3972708436
 *
 * @param {DataView} outData
 * @param {number} p1
 * @return {number}
 */
global.N_0x7BCA0A3972708436 = function (outData, p1) {
  return _in(0x7bca0a39, 0x72708436, outData, p1, _r, _ri);
};

/**
 * _0x7E300B5B86AB1D1A
 *
 * @param {DataView} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {number} p9
 * @param {number} p10
 * @param {number} p11
 * @param {number} p12
 * @param {number} p13
 * @param {number} p14
 * @return {void}
 */
global.N_0x7E300B5B86AB1D1A = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
  return _in(0x7e300b5b, 0x86ab1d1a, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
};

/**
 * _0x814729078AED6D30
 *

 * @return {void}
 */
global.N_0x814729078AED6D30 = function () {
  return _in(0x81472907, 0x8aed6d30);
};

/**
 * _0x862C5040F4888741
 *
 * @param {number} player1
 * @param {number} player2
 * @return {boolean}
 */
global.N_0x862C5040F4888741 = function (player1, player2) {
  return _in(0x862c5040, 0xf4888741, player1, player2, _r);
};

/**
 * _0x880A7202301E282B
 * Params: p5 = 50.f, p6 = 0 in R* Script net_fetch (NET_FETCH_CLIENT_UPDATE_PED_ROLE_CLUE_IDLE)
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p5
 * @param {any} p6
 * @return {boolean}
 */
global.N_0x880A7202301E282B = function (p0, p1, x, y, z, p5, p6) {
  return _in(0x880a7202, 0x301e282b, p0, p1, _fv(x), _fv(y), _fv(z), _fv(p5), p6, _r);
};

/**
 * _0x894B5ECAB45D2342
 *
 * @param {number} netHandle
 * @param {any} p1
 * @return {void}
 */
global.N_0x894B5ECAB45D2342 = function (netHandle, p1) {
  return _in(0x894b5eca, 0xb45d2342, netHandle, p1);
};

/**
 * _0x917AD74BDCF8B6E9
 * Note: this native was added in build 1311.23
 *
 * @param {boolean} p0
 * @return {number}
 */
global.N_0x917AD74BDCF8B6E9 = function (p0) {
  return _in(0x917ad74b, 0xdcf8b6e9, p0, _r, _ri);
};

/**
 * _0x923346025512DFB7
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x923346025512DFB7 = function (p0) {
  return _in(0x92334602, 0x5512dfb7, p0, _r);
};

/**
 * _0x950ACD8F05B7B9DF
 * Related to container entity (RANSACK_ATTACHED_LOCKBOX / RANSACK_ATTACHED_CHEST)
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x950ACD8F05B7B9DF = function (p0) {
  return _in(0x950acd8f, 0x05b7b9df, p0, _r);
};

/**
 * _0x979765465A6F25FC
 * Must be called from a background script, otherwise it will do nothing.
 *
 * @param {number} entity
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x979765465A6F25FC = function (entity, p1) {
  return _in(0x97976546, 0x5a6f25fc, entity, p1);
};

/**
 * _0x97BCE4C4B3191228
 *

 * @return {void}
 */
global.N_0x97BCE4C4B3191228 = function () {
  return _in(0x97bce4c4, 0xb3191228);
};

/**
 * _0x981146E5C9CE9250
 *
 * @param {number} inviteIndex
 * @return {boolean}
 */
global.N_0x981146E5C9CE9250 = function (inviteIndex) {
  return _in(0x981146e5, 0xc9ce9250, inviteIndex, _r);
};

/**
 * _0x982D7AD755B8F62C
 * Note: this native was added in build 1311.23
 *
 * @param {boolean} p0
 * @return {number}
 */
global.N_0x982D7AD755B8F62C = function (p0) {
  return _in(0x982d7ad7, 0x55b8f62c, p0, _r, _ri);
};

/**
 * _0x9B39B0555CC692B5
 *

 * @return {void}
 */
global.N_0x9B39B0555CC692B5 = function () {
  return _in(0x9b39b055, 0x5cc692b5);
};

/**
 * _0x9E5A47744C0F0376
 * Note: this native was added in build 1311.23
 *
 * @param {number} p0
 * @return {boolean}
 */
global.N_0x9E5A47744C0F0376 = function (p0) {
  return _in(0x9e5a4774, 0x4c0f0376, p0, _r);
};

/**
 * _0xA2837A5E21FB5A58
 *
 * @param {any} p0
 * @return {boolean}
 */
global.N_0xA2837A5E21FB5A58 = function (p0) {
  return _in(0xa2837a5e, 0x21fb5a58, p0, _r);
};

/**
 * _0xA47D48D06AA5A188
 *

 * @return {boolean}
 */
global.N_0xA47D48D06AA5A188 = function () {
  return _in(0xa47d48d0, 0x6aa5a188, _r);
};

/**
 * _0xA63E4F050F20021F
 *

 * @return {void}
 */
global.N_0xA63E4F050F20021F = function () {
  return _in(0xa63e4f05, 0x0f20021f);
};

/**
 * _0xA6F1BAABFF6AD7B9
 *
 * @param {DataView} p0
 * @return {void}
 */
global.N_0xA6F1BAABFF6AD7B9 = function (p0) {
  return _in(0xa6f1baab, 0xff6ad7b9, p0);
};

/**
 * _0xA7670F7991099680
 * Note: this native was added in build 1311.23
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0xA7670F7991099680 = function (p0) {
  return _in(0xa7670f79, 0x91099680, p0);
};

/**
 * _0xA94ECE191D90637A
 *

 * @return {number}
 */
global.N_0xA94ECE191D90637A = function () {
  return _in(0xa94ece19, 0x1d90637a, _r, _ri);
};

/**
 * _0xA95470DA137587F5
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0xA95470DA137587F5 = function (p0) {
  return _in(0xa95470da, 0x137587f5, p0);
};

/**
 * _0xACC44768AF229042
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.N_0xACC44768AF229042 = function () {
  return _in(0xacc44768, 0xaf229042);
};

/**
 * _0xAFA14F98327791CE
 *
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.N_0xAFA14F98327791CE = function (sessionRequestId) {
  return _in(0xafa14f98, 0x327791ce, sessionRequestId, _r);
};

/**
 * _0xB131E686BD97B3F8
 *

 * @return {void}
 */
global.N_0xB131E686BD97B3F8 = function () {
  return _in(0xb131e686, 0xbd97b3f8);
};

/**
 * _0xB389289F031F059A
 *

 * @return {number}
 */
global.N_0xB389289F031F059A = function () {
  return _in(0xb389289f, 0x031f059a, _r, _ri);
};

/**
 * _0xBAF7E2979442B29F
 * Note: this native was added in build 1311.23
 *
 * @param {boolean} p0
 * @return {number}
 */
global.N_0xBAF7E2979442B29F = function (p0) {
  return _in(0xbaf7e297, 0x9442b29f, p0, _r, _ri);
};

/**
 * _0xBB1EC8C2EEF33BAA
 *
 * @param {number} entity
 * @return {void}
 */
global.N_0xBB1EC8C2EEF33BAA = function (entity) {
  return _in(0xbb1ec8c2, 0xeef33baa, entity);
};

/**
 * _0xBB697756309D77EE
 *
 * @param {boolean} p0
 * @return {any}
 */
global.N_0xBB697756309D77EE = function (p0) {
  return _in(0xbb697756, 0x309d77ee, p0, _r);
};

/**
 * _0xBC7D36946D19E60E
 * Only used in fm_race_controller R* Script (PROCESS_LOCAL_PLAYER_INIT)
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0xBC7D36946D19E60E = function (p0) {
  return _in(0xbc7d3694, 0x6d19e60e, p0);
};

/**
 * _0xBF8276E51761F9DA
 *

 * @return {number}
 */
global.N_0xBF8276E51761F9DA = function () {
  return _in(0xbf8276e5, 0x1761f9da, _r, _ri);
};

/**
 * _0xC028B3F52C707C49
 *
 * @param {any} p0
 * @return {boolean}
 */
global.N_0xC028B3F52C707C49 = function (p0) {
  return _in(0xc028b3f5, 0x2c707c49, p0, _r);
};

/**
 * _0xC0CFFDA87C2C163D
 *
 * @param {number} p0
 * @param {any} p1
 * @param {number} p2
 * @return {any}
 */
global.N_0xC0CFFDA87C2C163D = function (p0, p1, p2) {
  return _in(0xc0cffda8, 0x7c2c163d, p0, p1, p2, _r);
};

/**
 * _0xC1968045EEB563B7
 * Note: this native was added in build 1311.23
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0xC1968045EEB563B7 = function (p0) {
  return _in(0xc1968045, 0xeeb563b7, p0);
};

/**
 * _0xC8B6D18E22484643
 *

 * @return {void}
 */
global.N_0xC8B6D18E22484643 = function () {
  return _in(0xc8b6d18e, 0x22484643);
};

/**
 * _0xC964FCD3D1720697
 * nullsub, doesn't do anything
 *

 * @return {any}
 */
global.N_0xC964FCD3D1720697 = function () {
  return _in(0xc964fcd3, 0xd1720697, _r);
};

/**
 * _0xCA58D4FD20D70F24
 *
 * @param {any} p0
 * @return {number}
 */
global.N_0xCA58D4FD20D70F24 = function (p0) {
  return _in(0xca58d4fd, 0x20d70f24, p0, _r, _ri);
};

/**
 * _0xCC4E72C339461ED1
 *

 * @return {any}
 */
global.N_0xCC4E72C339461ED1 = function () {
  return _in(0xcc4e72c3, 0x39461ed1, _r);
};

/**
 * _0xCD53E6CBF609C012
 *
 * @param {number} ugcRequestId
 * @return {boolean}
 */
global.N_0xCD53E6CBF609C012 = function (ugcRequestId) {
  return _in(0xcd53e6cb, 0xf609c012, ugcRequestId, _r);
};

/**
 * _0xCF23AB5BD47B384D
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xCF23AB5BD47B384D = function (p0) {
  return _in(0xcf23ab5b, 0xd47b384d, p0);
};

/**
 * _0xD1FFB246F4E088AC
 *
 * @param {number} p0
 * @return {boolean}
 */
global.N_0xD1FFB246F4E088AC = function (p0) {
  return _in(0xd1ffb246, 0xf4e088ac, p0, _r);
};

/**
 * _0xD39A72AE5EBD57E5
 *

 * @return {void}
 */
global.N_0xD39A72AE5EBD57E5 = function () {
  return _in(0xd39a72ae, 0x5ebd57e5);
};

/**
 * _0xD3A3C8B9F3BDEF81
 *

 * @return {any}
 */
global.N_0xD3A3C8B9F3BDEF81 = function () {
  return _in(0xd3a3c8b9, 0xf3bdef81, _r);
};

/**
 * _0xD3B6EBC6C3D77D44
 * Note: this native was added in build 1311.23
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0xD3B6EBC6C3D77D44 = function (p0) {
  return _in(0xd3b6ebc6, 0xc3d77d44, p0);
};

/**
 * _0xD4022C7286B0DFA2
 *
 * @param {string | number} p0
 * @param {number} p1
 * @param {number} p2
 * @return {any}
 */
global.N_0xD4022C7286B0DFA2 = function (p0, p1, p2) {
  return _in(0xd4022c72, 0x86b0dfa2, _ts(p0), p1, p2, _r);
};

/**
 * _0xD42C543F73233041
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0xD42C543F73233041 = function (p0) {
  return _in(0xd42c543f, 0x73233041, p0);
};

/**
 * _0xD637D327080CD86E
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0xD637D327080CD86E = function (p0) {
  return _in(0xd637d327, 0x080cd86e, p0);
};

/**
 * _0xD78A26024BB13E08
 *
 * @param {number} player
 * @return {void}
 */
global.N_0xD78A26024BB13E08 = function (player) {
  return _in(0xd78a2602, 0x4bb13e08, player);
};

/**
 * _0xD7BAD4062074B9C1
 *
 * @param {any} p0
 * @return {boolean}
 */
global.N_0xD7BAD4062074B9C1 = function (p0) {
  return _in(0xd7bad406, 0x2074b9c1, p0, _r);
};

/**
 * _0xD7D0DF27CB1765B5
 *
 * @param {number} p0
 * @return {boolean}
 */
global.N_0xD7D0DF27CB1765B5 = function (p0) {
  return _in(0xd7d0df27, 0xcb1765b5, p0, _r);
};

/**
 * _0xDA1BFED8582F61F0
 *

 * @return {boolean}
 */
global.N_0xDA1BFED8582F61F0 = function () {
  return _in(0xda1bfed8, 0x582f61f0, _r);
};

/**
 * _0xDBDF80673BBA3D65
 * Note: this native was added in build 1491.50
 *
 * @param {number} p0
 * @return {boolean}
 */
global.N_0xDBDF80673BBA3D65 = function (p0) {
  return _in(0xdbdf8067, 0x3bba3d65, p0, _r);
};

/**
 * _0xDC6AD5C046F33AB4
 *
 * @param {boolean} p0
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xDC6AD5C046F33AB4 = function (p0, p1) {
  return _in(0xdc6ad5c0, 0x46f33ab4, p0, p1);
};

/**
 * _0xDCA4A74135E1DEA5
 *
 * @param {any} p0
 * @return {boolean}
 */
global.N_0xDCA4A74135E1DEA5 = function (p0) {
  return _in(0xdca4a741, 0x35e1dea5, p0, _r);
};

/**
 * _0xE10F2D7715ABABEC
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xE10F2D7715ABABEC = function (p0) {
  return _in(0xe10f2d77, 0x15ababec, p0, _r);
};

/**
 * _0xE31A04513237DC89
 *
 * @param {number} entity
 * @return {void}
 */
global.N_0xE31A04513237DC89 = function (entity) {
  return _in(0xe31a0451, 0x3237dc89, entity);
};

/**
 * _0xE39600E50D608693
 *
 * @param {any} p0
 * @param {any} p1
 * @return {boolean}
 */
global.N_0xE39600E50D608693 = function (p0, p1) {
  return _in(0xe39600e5, 0x0d608693, p0, p1, _r);
};

/**
 * _0xE3AB5EEFCB6671A2
 *
 * @param {number} setting
 * @return {void}
 */
global.N_0xE3AB5EEFCB6671A2 = function (setting) {
  return _in(0xe3ab5eef, 0xcb6671a2, setting);
};

/**
 * _0xE5634491A58C2703
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0xE5634491A58C2703 = function (p0) {
  return _in(0xe5634491, 0xa58c2703, _fv(p0));
};

/**
 * _0xE59F4924BD3A718D
 *
 * @param {number} p0
 * @return {string | number}
 */
global.N_0xE59F4924BD3A718D = function (p0) {
  return _in(0xe59f4924, 0xbd3a718d, p0, _r, _s);
};

/**
 * _0xE5FF65CFF5160752
 *

 * @return {void}
 */
global.N_0xE5FF65CFF5160752 = function () {
  return _in(0xe5ff65cf, 0xf5160752);
};

/**
 * _0xE79BA3BC265895DA
 *
 * @param {number} p0
 * @return {string | number}
 */
global.N_0xE79BA3BC265895DA = function (p0) {
  return _in(0xe79ba3bc, 0x265895da, p0, _r, _s);
};

/**
 * _0xE8E633215471BB5D
 *
 * @param {any} p0
 * @return {number}
 */
global.N_0xE8E633215471BB5D = function (p0) {
  return _in(0xe8e63321, 0x5471bb5d, p0, _r, _ri);
};

/**
 * _0xEC089F84A9C16C62
 * nullsub, doesn't do anything
 *

 * @return {any}
 */
global.N_0xEC089F84A9C16C62 = function () {
  return _in(0xec089f84, 0xa9c16c62, _r);
};

/**
 * _0xF23A6D6C11D8EC15
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.N_0xF23A6D6C11D8EC15 = function (gamerHandle) {
  return _in(0xf23a6d6c, 0x11d8ec15, gamerHandle, _r);
};

/**
 * _0xF260AF6F43953316
 * Same Native Handler as VEH_TO_NET, PED_TO_NET, OBJ_TO_NET and NETWORK_GET_NETWORK_ID_FROM_ENTITY
 *
 * @param {number} handle
 * @return {number}
 */
global.N_0xF260AF6F43953316 = function (handle) {
  return _in(0xf260af6f, 0x43953316, handle, _r, _ri);
};

/**
 * _0xF302AB9D978352EE
 * Returns the entity's network ID.
 *
 * @param {number} entity
 * @return {number}
 */
global.N_0xF302AB9D978352EE = function (entity) {
  return _in(0xf302ab9d, 0x978352ee, entity, _r, _ri);
};

/**
 * _0xF342F6BD0A8287D5
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xF342F6BD0A8287D5 = function (p0) {
  return _in(0xf342f6bd, 0x0a8287d5, p0);
};

/**
 * _0xF8DC69DC1AD19072
 * Note: this native was added in build 1311.23
 *
 * @param {boolean} p0
 * @return {number}
 */
global.N_0xF8DC69DC1AD19072 = function (p0) {
  return _in(0xf8dc69dc, 0x1ad19072, p0, _r, _ri);
};

/**
 * _0xFB3205788F8AFA3F
 * Note: this native was added in build 1311.23
 *

 * @return {number}
 */
global.N_0xFB3205788F8AFA3F = function () {
  return _in(0xfb320578, 0x8f8afa3f, _r, _ri);
};

/**
 * _0xFC6FCF4C03F1BBF6
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.N_0xFC6FCF4C03F1BBF6 = function () {
  return _in(0xfc6fcf4c, 0x03f1bbf6);
};

/**
 * _0xFD4272A137703449
 * Only used in R* Script startup_clip
 *

 * @return {void}
 */
global.N_0xFD4272A137703449 = function () {
  return _in(0xfd4272a1, 0x37703449);
};

/**
 * _0xFD8112109A96877C
 * Note: this native was added in build 1311.23
 *

 * @return {void}
 */
global.N_0xFD8112109A96877C = function () {
  return _in(0xfd811210, 0x9a96877c);
};

/**
 * _0xFE53B1F8D43F19BF
 *
 * @param {number} player1
 * @param {number} player2
 * @return {number}
 */
global.N_0xFE53B1F8D43F19BF = function (player1, player2) {
  return _in(0xfe53b1f8, 0xd43f19bf, player1, player2, _r, _ri);
};

/**
 * _0xFF36F36B07E69059
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xFF36F36B07E69059 = function (p0) {
  return _in(0xff36f36b, 0x07e69059, p0);
};

/**
 * _ANIM_SCENE_TO_NET
 *
 * @param {number} animScene
 * @return {number}
 */
global.AnimSceneToNet = function (animScene) {
  return _in(0xe0d73cdd, 0xea79ddcd, animScene, _r, _ri);
};

/**
 * _CLEAR_LAUNCH_PARAM
 *
 * @param {string | number} paramName
 * @return {void}
 */
global.ClearLaunchParam = function (paramName) {
  return _in(0x782c94db, 0x6469634d, _ts(paramName));
};

/**
 * _COMMERCE_STORE_IS_ENABLED
 *

 * @return {boolean}
 */
global.CommerceStoreIsEnabled = function () {
  return _in(0xdbc754cb, 0x6ccb9378, _r);
};

/**
 * _COMMERCE_STORE_IS_OPEN
 *

 * @return {boolean}
 */
global.CommerceStoreIsOpen = function () {
  return _in(0xce5e79d9, 0xe303628e, _r);
};

/**
 * _GET_LAUNCH_PARAM_EXISTS
 *
 * @param {string | number} paramName
 * @return {boolean}
 */
global.GetLaunchParamExists = function (paramName) {
  return _in(0x02e97ce2, 0x83648cd9, _ts(paramName), _r);
};

/**
 * _GET_LAUNCH_PARAM_STRING
 *

 * @return {string | number}
 */
global.GetLaunchParamString = function () {
  return _in(0xc59ab6a0, 0x4333c502, _r, _s);
};

/**
 * _GET_NUM_CREATED_MISSION_PICKUPS
 *
 * @param {boolean} p0
 * @return {number}
 */
global.GetNumCreatedMissionPickups = function (p0) {
  return _in(0xd2ba051b, 0x94ca9bcc, p0, _r, _ri);
};

/**
 * _GET_NUM_PEER_NEGOTIATION_RESPONSES
 * Note: this native was added in build 1311.16
 *

 * @return {number}
 */
global.GetNumPeerNegotiationResponses = function () {
  return _in(0x4fe932e8, 0x4fe932e8, _r, _ri);
};

/**
 * _GET_NUM_RESERVED_MISSION_PICKUPS
 *
 * @param {boolean} p0
 * @return {number}
 */
global.GetNumReservedMissionPickups = function (p0) {
  return _in(0x62be3ecc, 0x79fbd004, p0, _r, _ri);
};

/**
 * _GET_PLAYER_WAYPOINT_IS_ACTIVE
 *
 * @param {number} player
 * @return {boolean}
 */
global.GetPlayerWaypointIsActive = function (player) {
  return _in(0xdcc4b7f7, 0x112e8ab7, player, _r);
};

/**
 * _GET_RESERVED_MISSION_ENTITIES_FOR_THREAD
 * Only used in R* Script net_stable_manager
 *
 * @param {number} threadId
 * @return {[number, number, number, number, number, number]}
 */
global.GetReservedMissionEntitiesForThread = function (threadId) {
  return _in(0x99aac89c, 0x510deb0d, threadId, _i, _i, _i, _i, _i, _i);
};

/**
 * _GET_SOCIAL_MATCHMAKING_ALLOWED
 *

 * @return {boolean}
 */
global.GetSocialMatchmakingAllowed = function () {
  return _in(0xd0541ef2, 0x8e9c4783, _r);
};

/**
 * _LOCAL_PLAYER_PEDSHOT_TEXTURE_DOWNLOAD_REQUEST
 *
 * @param {number} playerSlot
 * @param {number} personaPhotoLocalCacheType
 * @return {number}
 */
global.LocalPlayerPedshotTextureDownloadRequest = function (playerSlot, personaPhotoLocalCacheType) {
  return _in(0x6e2fd8cf, 0x7eb10e53, playerSlot, personaPhotoLocalCacheType, _r, _ri);
};

/**
 * _MUGSHOT_TEXTURE_DOWNLOAD_REQUEST
 * Returns textureDownloadId
 *
 * @param {DataView} gamerHandle
 * @param {number} p1
 * @param {string | number} name
 * @param {boolean} p3
 * @return {number}
 */
global.MugshotTextureDownloadRequest = function (gamerHandle, p1, name, p3) {
  return _in(0x9b5db6ce, 0xafaa10bb, gamerHandle, p1, _ts(name), p3, _r, _ri);
};

/**
 * _NETWORK_ADD_PLAYER_TO_RECENT_GAMERS_LIST
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.NetworkAddPlayerToRecentGamersList = function (player, p1) {
  return _in(0x157d8f3d, 0xe12b307f, player, p1);
};

/**
 * _NETWORK_ALERT
 *
 * @param {number} ctx
 * @param {number} lh
 * @param {number} ec
 * @param {number} h
 * @return {void}
 */
global.NetworkAlert = function (ctx, lh, ec, h) {
  return _in(0x1baa028f, 0x52eed310, _ch(ctx), _ch(lh), ec, h);
};

/**
 * _NETWORK_ARE_ONLINE_NOTIFICATIONS_SHOWN_IN_STORY_MODE
 * Returns value of fwuiCachedSetting "general.onlineNotificationsInStoryMode"
 *

 * @return {boolean}
 */
global.NetworkAreOnlineNotificationsShownInStoryMode = function () {
  return _in(0xf5c5929e, 0x07512f80, _r);
};

/**
 * _NETWORK_ARE_PLAYERS_IN_SAME_PLATFORM_PARTY
 *
 * @param {DataView} gamerHandle1
 * @param {DataView} gamerHandle2
 * @return {boolean}
 */
global.NetworkArePlayersInSamePlatformParty = function (gamerHandle1, gamerHandle2) {
  return _in(0x11820d1a, 0xe80dea39, gamerHandle1, gamerHandle2, _r);
};

/**
 * _NETWORK_AUTO_SESSION_IS_AUTO_WARP_DISABLED
 *

 * @return {boolean}
 */
global.NetworkAutoSessionIsAutoWarpDisabled = function () {
  return _in(0xe258570e, 0x0c116a66, _r);
};

/**
 * _NETWORK_AUTO_SESSION_IS_INSTANCED_SESSION
 *

 * @return {boolean}
 */
global.NetworkAutoSessionIsInstancedSession = function () {
  return _in(0x277865a7, 0x34918ae6, _r);
};

/**
 * _NETWORK_AUTO_SESSION_IS_PROCESSING_SESSION_SPLIT
 *

 * @return {boolean}
 */
global.NetworkAutoSessionIsProcessingSessionSplit = function () {
  return _in(0xa021095c, 0x983f20d8, _r);
};

/**
 * _NETWORK_AUTO_SESSION_SET_ALLOWED_TO_MERGE
 *
 * @param {boolean} toggle
 * @param {DataView} p1
 * @param {number} p2
 * @return {void}
 */
global.NetworkAutoSessionSetAllowedToMerge = function (toggle, p1, p2) {
  return _in(0x63246a24, 0xf5747510, toggle, p1, p2);
};

/**
 * _NETWORK_AUTO_SESSION_SET_ALLOWED_TO_SPLIT
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkAutoSessionSetAllowedToSplit = function (toggle) {
  return _in(0x0a428058, 0x079ee65c, toggle);
};

/**
 * _NETWORK_AUTO_SESSION_SET_AUTO_WARP_ENABLED
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.NetworkAutoSessionSetAutoWarpEnabled = function (toggle) {
  return _in(0x4440fee3, 0xefe78f54, toggle);
};

/**
 * _NETWORK_AUTO_SESSION_SPLIT_SESSION_SUCCESSFUL
 *

 * @return {boolean}
 */
global.NetworkAutoSessionSplitSessionSuccessful = function () {
  return _in(0x6d87ba8e, 0xf15226cd, _r);
};

/**
 * _NETWORK_CAN_ADD_FRIEND
 * On PC this returns true if gamerHandle is a valid handle.
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkCanAddFriend = function (gamerHandle) {
  return _in(0x99abe9bf, 0x9dada162, gamerHandle, _r);
};

/**
 * _NETWORK_CAN_RECEIVE_INVITE_FROM_HANDLE
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkCanReceiveInviteFromHandle = function (gamerHandle) {
  return _in(0xf23d6475, 0x640d29eb, gamerHandle, _r);
};

/**
 * _NETWORK_CLEAR_CLOCK_OVERRIDE_OVERTIME
 *
 * @param {number} milliseconds
 * @return {void}
 */
global.NetworkClearClockOverrideOvertime = function (milliseconds) {
  return _in(0x65f040d9, 0x1001ed4b, milliseconds);
};

/**
 * _NETWORK_CLOCK_TIME_OVERRIDE
 *
 * @param {number} hour
 * @param {number} minute
 * @param {number} second
 * @param {number} transitionTime
 * @param {boolean} pauseClock
 * @return {void}
 */
global.NetworkClockTimeOverride = function (hour, minute, second, transitionTime, pauseClock) {
  return _in(0x669e223e, 0x64b1903c, hour, minute, second, transitionTime, pauseClock);
};

/**
 * _NETWORK_CLOCK_TIME_OVERRIDE_2
 *
 * @param {number} hour
 * @param {number} minute
 * @param {number} second
 * @param {number} transitionTime
 * @param {boolean} pauseClock
 * @param {boolean} clockwise
 * @return {void}
 */
global.NetworkClockTimeOverride_2 = function (hour, minute, second, transitionTime, pauseClock, clockwise) {
  return _in(0xe28c13ec, 0xc36ff14e, hour, minute, second, transitionTime, pauseClock, clockwise);
};

/**
 * _NETWORK_DEBUG_REQUEST_ENTITY_POSITION
 * Must be called from a background script, otherwise it will do nothing.
 *
 * @param {DataView} p0
 * @return {void}
 */
global.NetworkDebugRequestEntityPosition = function (p0) {
  return _in(0xfa38b52f, 0x91b59075, p0);
};

/**
 * _NETWORK_DID_RECENT_GAMER_NAMES_REQUEST_SUCCEED
 *

 * @return {boolean}
 */
global.NetworkDidRecentGamerNamesRequestSucceed = function () {
  return _in(0x12aeb56b, 0x489415c5, _r);
};

/**
 * _NETWORK_GET_CURRENT_FRIEND_PAGE_DATA
 *
 * @param {DataView} p0
 * @return {boolean}
 */
global.NetworkGetCurrentFriendPageData = function (p0) {
  return _in(0xa3eec0a5, 0xaff3fc5b, p0, _r);
};

/**
 * _NETWORK_GET_DISPLAY_NAME_FROM_HANDLE
 * Example:
 * 
 * char displayName[64];
 * if (_NETWORK_GET_DISPLAY_NAME_FROM_HANDLE(handle, displayName))
 * {
 *   // use displayName
 * }
 *
 * @param {DataView} gamerHandle
 * @return {[boolean, string]}
 */
global.NetworkGetDisplayNameFromHandle = function (gamerHandle) {
  return _in(0x7fee4f07, 0xc54b6b3c, gamerHandle, displayName, _r);
};

/**
 * _NETWORK_GET_GAMERTAG_FROM_FRIEND
 *
 * @param {DataView} gamerHandle
 * @return {string | number}
 */
global.NetworkGetGamertagFromFriend = function (gamerHandle) {
  return _in(0x5659d87b, 0xe674ab17, gamerHandle, _r, _s);
};

/**
 * _NETWORK_GET_GAMER_SESSION_FROM_HANDLE
 *
 * @param {DataView} data
 * @param {number} count
 * @return {boolean}
 */
global.NetworkGetGamerSessionFromHandle = function (data, count) {
  return _in(0xfbdfe1c1, 0x356e12e8, data, count, _r);
};

/**
 * _NETWORK_GET_GAMER_STATUS
 *
 * @param {DataView} gamerHandle
 * @param {number} p1
 * @return {number}
 */
global.NetworkGetGamerStatus = function (gamerHandle, p1) {
  return _in(0xddaeb478, 0xe58f8dea, gamerHandle, p1, _r, _ri);
};

/**
 * _NETWORK_GET_GLOBAL_ENTITY_FLAGS
 *
 * @param {number} entity
 * @return {number}
 */
global.NetworkGetGlobalEntityFlags = function (entity) {
  return _in(0xdd7806fd, 0x0543bc3d, entity, _r, _ri);
};

/**
 * _NETWORK_GET_INSTANCE_ID_OF_THREAD
 *
 * @param {number} threadId
 * @return {number}
 */
global.NetworkGetInstanceIdOfThread = function (threadId) {
  return _in(0xfb9eced5, 0xb68f3b78, threadId, _r, _ri);
};

/**
 * _NETWORK_GET_NUM_RECENT_GAMERS
 *

 * @return {number}
 */
global.NetworkGetNumRecentGamers = function () {
  return _in(0x37a834ae, 0xc6a4f74a, _r, _ri);
};

/**
 * _NETWORK_GET_PLATFORM_INVITE_ID
 *

 * @return {number}
 */
global.NetworkGetPlatformInviteId = function () {
  return _in(0x9bcf28fb, 0x5d65a9be, _r, _ri);
};

/**
 * _NETWORK_GET_PLAYER_FAST_INSTANCE_ID
 *
 * @param {number} player
 * @return {number}
 */
global.NetworkGetPlayerFastInstanceId = function (player) {
  return _in(0xd9267375, 0x834c5eab, player, _r, _ri);
};

/**
 * _NETWORK_GET_PLAYER_OWNER_OF_NETWORK_ID
 *
 * @param {number} netId
 * @return {number}
 */
global.NetworkGetPlayerOwnerOfNetworkId = function (netId) {
  return _in(0xa6c07874, 0x43c9583e, netId, _r, _ri);
};

/**
 * _NETWORK_GET_RANK
 *

 * @return {number}
 */
global.NetworkGetRank = function () {
  return _in(0x32c90cdf, 0xaf40514c, _r, _ri);
};

/**
 * _NETWORK_GET_ROS_TITLE_NAME
 * Returns CGameConfig->ConfigOnlineServices->RosTitleName (see gameconfig.xml)
 *

 * @return {string | number}
 */
global.NetworkGetRosTitleName = function () {
  return _in(0xac6153a0, 0x722f524c, _r, _s);
};

/**
 * _NETWORK_GET_SESSION_HOST
 *

 * @return {number}
 */
global.NetworkGetSessionHost = function () {
  return _in(0x8dc9aa3b, 0x508b1a85, _r, _ri);
};

/**
 * _NETWORK_GET_SIZE_OF_HOST_BROADCAST_DATA_STORAGE
 *

 * @return {[number, number]}
 */
global.NetworkGetSizeOfHostBroadcastDataStorage = function () {
  return _in(0xba24095e, 0xa96dfe17, _i, _r, _ri);
};

/**
 * _NETWORK_GET_SIZE_OF_PLAYER_BROADCAST_DATA_STORAGE
 *

 * @return {[number, number]}
 */
global.NetworkGetSizeOfPlayerBroadcastDataStorage = function () {
  return _in(0x690806bc, 0x83bc8ca2, _i, _r, _ri);
};

/**
 * _NETWORK_GET_XP
 *

 * @return {number}
 */
global.NetworkGetXp = function () {
  return _in(0xdb438cc9, 0xbc6f4022, _r, _ri);
};

/**
 * _NETWORK_HAS_COMPLETED_MP_INTRO_FLOW_ON_CURRENT_SLOT
 *

 * @return {boolean}
 */
global.NetworkHasCompletedMpIntroFlowOnCurrentSlot = function () {
  return _in(0xdd73c983, 0x8ce7181d, _r);
};

/**
 * _NETWORK_HAS_CONTROL_OF_ANIM_SCENE
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.NetworkHasControlOfAnimScene = function (animScene) {
  return _in(0x26a5c12f, 0xacff8724, animScene, _r);
};

/**
 * _NETWORK_HAS_CURRENT_GET_GAMER_STATUS_STARTED
 *

 * @return {boolean}
 */
global.NetworkHasCurrentGetGamerStatusStarted = function () {
  return _in(0x25189f99, 0x08e9cd65, _r);
};

/**
 * _NETWORK_IS_FRIEND_HANDLE_IN_SAME_TITLE
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkIsFriendHandleInSameTitle = function (gamerHandle) {
  return _in(0x665161d2, 0x50850a9f, gamerHandle, _r);
};

/**
 * _NETWORK_IS_FRIEND_HANDLE_ONLINE
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkIsFriendHandleOnline = function (gamerHandle) {
  return _in(0xe348d140, 0x4bd80146, gamerHandle, _r);
};

/**
 * _NETWORK_IS_IN_SESSION_LOBBY
 * Hardcoded to return false.
 *

 * @return {boolean}
 */
global.NetworkIsInSessionLobby = function () {
  return _in(0xc5196c42, 0xde19f646, _r);
};

/**
 * _NETWORK_IS_PLAYER_IN_SPECTATOR_MODE
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkIsPlayerInSpectatorMode = function (player) {
  return _in(0x5b709519, 0x997ecf0f, player, _r);
};

/**
 * _NETWORK_IS_PREVIOUS_UPLOAD_PENDING
 * _NETWORK_IS_T* - _NETWORK_RE*
 *

 * @return {boolean}
 */
global.NetworkIsPreviousUploadPending = function () {
  return _in(0xa21e3bad, 0x0a42d199, _r);
};

/**
 * _NETWORK_IS_RECENT_GAMER_NAMES_REQUEST_IN_PROGRESS
 *

 * @return {boolean}
 */
global.NetworkIsRecentGamerNamesRequestInProgress = function () {
  return _in(0x4664d213, 0xa0ccaf40, _r);
};

/**
 * _NETWORK_IS_THREAD_ACTIVE
 *
 * @param {number} threadId
 * @return {boolean}
 */
global.NetworkIsThreadActive = function (threadId) {
  return _in(0x31dad2cd, 0x6d49546e, threadId, _r);
};

/**
 * _NETWORK_IS_TRACKED_PLAYER_VISIBLE
 *
 * @param {number} player
 * @param {number} trackedPlayer
 * @return {boolean}
 */
global.NetworkIsTrackedPlayerVisible = function (player, trackedPlayer) {
  return _in(0xe525878a, 0x35b9eebd, player, trackedPlayer, _r);
};

/**
 * _NETWORK_PERSONA_PHOTO_WRITE_LOCAL
 * Returns false if pedshot push failed
 *
 * @param {string | number} texture
 * @param {number} playerSlot
 * @param {number} p2
 * @param {number} personaPhotoLocalCacheType
 * @return {boolean}
 */
global.NetworkPersonaPhotoWriteLocal = function (texture, playerSlot, p2, personaPhotoLocalCacheType) {
  return _in(0x2a48d956, 0x7940598f, _ts(texture), playerSlot, p2, personaPhotoLocalCacheType, _r);
};

/**
 * _NETWORK_PERSONA_PHOTO_WRITE_SC_PROFILE
 * Returns false if pedshot push failed
 *
 * @param {string | number} texture
 * @param {number} personaPhotoType
 * @param {number} formatIndex
 * @return {boolean}
 */
global.NetworkPersonaPhotoWriteScProfile = function (texture, personaPhotoType, formatIndex) {
  return _in(0xb72999d3, 0x120599df, _ts(texture), personaPhotoType, formatIndex, _r);
};

/**
 * _NETWORK_REMOVE_FRIEND
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.NetworkRemoveFriend = function (gamerHandle) {
  return _in(0x55f618f6, 0x8ab854d3, gamerHandle, _r);
};

/**
 * _NETWORK_REQUEST_CONTROL_OF_ANIM_SCENE
 *
 * @param {number} animScene
 * @return {boolean}
 */
global.NetworkRequestControlOfAnimScene = function (animScene) {
  return _in(0xaaa92b63, 0x1b13f614, animScene, _r);
};

/**
 * _NETWORK_RESURRECT_LOCAL_PLAYER_2
 *
 * @param {DataView} args
 * @return {void}
 */
global.NetworkResurrectLocalPlayer_2 = function (args) {
  return _in(0x4154b7d8, 0xc75e5dcf, args);
};

/**
 * _NETWORK_SEND_SESSION_INVITE
 *
 * @param {DataView} gamerHandle
 * @param {string | number} contentId
 * @param {DataView} data
 * @param {number} dataSize
 * @param {number} p4
 * @param {number} flags
 * @return {boolean}
 */
global.NetworkSendSessionInvite = function (gamerHandle, contentId, data, dataSize, p4, flags) {
  return _in(0xe47001b7, 0xcb8b98ae, gamerHandle, _ts(contentId), data, dataSize, p4, flags, _r);
};

/**
 * _NETWORK_SESSION_ADD_SESSION_FLAGS
 * enum eSessionFlags
 * {
 *   SESSION_FLAG_NONE = 0,
 *   SF_INSTANCE = (1 << 0),
 *   SF_MATCH = (1 << 1),
 *   SF_PRIVATE = (1 << 2),
 *   SF_BLOCK_INVITES = (1 << 3),
 *   SF_BLOCK_JOIN_VIA_PRESENCE = (1 << 4),
 *   SF_BLOCK_NON_HOST_INVITES = (1 << 5),
 *   SF_BLOCK_IN_PROGRESS_MATCHMAKING_BACKFILL = (1 << 6),
 *   SF_BLOCK_IN_GAMEPLAY_MATCHMAKING_BACKFILL = (1 << 7),
 *   SF_BLOCK_INVITES_TEMPORARY = (1 << 8),
 *   SF_IN_GAMEPLAY = (1 << 9),
 *   SF_COMPETITIVE = (1 << 10),
 *   SF_MATCHMAKING_BACKFILL_IS_BLOCKED = (1 << 11)
 * };
 *
 * @param {number} flags
 * @return {boolean}
 */
global.NetworkSessionAddSessionFlags = function (flags) {
  return _in(0xe546bda1, 0xb3e288ee, flags, _r);
};

/**
 * _NETWORK_SESSION_ARE_SESSION_IDS_EQUAL
 * Note: this native was added in build 1311.23
 *
 * @param {DataView} sessionId1
 * @param {DataView} sessionId2
 * @return {boolean}
 */
global.NetworkSessionAreSessionIdsEqual = function (sessionId1, sessionId2) {
  return _in(0x4dec5000, 0xf7b508f0, sessionId1, sessionId2, _r);
};

/**
 * _NETWORK_SESSION_CANCEL_REQUEST
 *
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionCancelRequest = function (sessionRequestId) {
  return _in(0xe72e5c12, 0x89bd1f40, sessionRequestId, _r);
};

/**
 * _NETWORK_SESSION_GET_SESSION_ID
 * Note: this native was added in build 1311.23
 *
 * @param {DataView} sessionId
 * @return {void}
 */
global.NetworkSessionGetSessionId = function (sessionId) {
  return _in(0xe9b356c3, 0x30c0a806, sessionId);
};

/**
 * _NETWORK_SESSION_GET_SESSION_REQUEST_RESULT
 * Returns result of session request:
 * 0 - NOT_FOUND
 * 1 - IN_PROGRESS
 * 2 - TIMEOUT
 * 3 - PLAYER_OFFLINE
 * 4 - GANG_MEMBERS_CHANGED
 * 5 - PLAYER_CANCELLED
 * 6 - PLAYER_SET_TOO_LARGE
 * 7 - MATCH_ACCEPTED
 * 8 - OTHER
 *
 * @param {DataView} sessionRequestId
 * @return {[number, number]}
 */
global.NetworkSessionGetSessionRequestResult = function (sessionRequestId) {
  return _in(0x0dd051b1, 0xbf4b8bd6, sessionRequestId, _i, _r, _ri);
};

/**
 * _NETWORK_SESSION_IS_NSRR_SUCCESS
 *
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionIsNsrrSuccess = function (sessionRequestId) {
  return _in(0x0f44a5c7, 0x8d114922, sessionRequestId, _r);
};

/**
 * _NETWORK_SESSION_IS_REQUEST_IN_PROGRESS_BY_QUEUE_GROUP
 *
 * @param {number} queueGroup
 * @return {boolean}
 */
global.NetworkSessionIsRequestInProgressByQueueGroup = function (queueGroup) {
  return _in(0x9e762a59, 0x5cf88e4a, queueGroup, _r);
};

/**
 * _NETWORK_SESSION_PLAYLIST_GET_UPCOMING_CONTENT
 * Only used in R* Script net_rolling_playlist
 *

 * @return {void}
 */
global.NetworkSessionPlaylistGetUpcomingContent = function () {
  return _in(0x8f9db6cd, 0x03b42b58);
};

/**
 * _NETWORK_SESSION_PLAYLIST_GO_TO_NEXT_CONTENT
 * Only used in R* Script net_rolling_playlist
 *

 * @return {void}
 */
global.NetworkSessionPlaylistGoToNextContent = function () {
  return _in(0xbde605f9, 0x25b07127);
};

/**
 * _NETWORK_SESSION_REMOVE_PLAYER_FLAGS
 *
 * @param {number} flags
 * @return {boolean}
 */
global.NetworkSessionRemovePlayerFlags = function (flags) {
  return _in(0x3215bbe3, 0x4d3418c5, flags, _r);
};

/**
 * _NETWORK_SESSION_REQUEST_SESSION_NOMINATED
 *
 * @param {number} flags
 * @param {number} userHash
 * @param {number} p2
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionRequestSessionNominated = function (flags, userHash, p2, sessionRequestId) {
  return _in(0x4f467245, 0x7ff597d1, flags, userHash, p2, sessionRequestId, _r);
};

/**
 * _NETWORK_SESSION_REQUEST_SESSION_ON_CALL
 * category:
 * enum eOnCallType
 * {
 *   NETWORK_SESSION_REQUEST_ON_CALL_TYPE_STORY = 2,
 *   NETWORK_SESSION_REQUEST_ON_CALL_TYPE_MATCH = 3
 * };
 *
 * @param {number} flags
 * @param {number} category
 * @param {DataView} p2
 * @param {number} userHash
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionRequestSessionOnCall = function (flags, category, p2, userHash, sessionRequestId) {
  return _in(0x23d9c1f2, 0xe4098edc, flags, category, p2, userHash, sessionRequestId, _r);
};

/**
 * _NETWORK_SESSION_SET_PLAYER_FLAGS
 *
 * @param {number} flags
 * @return {boolean}
 */
global.NetworkSessionSetPlayerFlags = function (flags) {
  return _in(0x0ae241a4, 0xa9adeeec, flags, _r);
};

/**
 * _NETWORK_SESSION_TRANSITION_TO_SESSION
 *
 * @param {DataView} sessionRequestId
 * @return {boolean}
 */
global.NetworkSessionTransitionToSession = function (sessionRequestId) {
  return _in(0xf20b18a3, 0x30e6db5c, sessionRequestId, _r);
};

/**
 * _NETWORK_SET_IN_STATIC_SPECTATOR_MODE
 *
 * @param {boolean} toggle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.NetworkSetInStaticSpectatorMode = function (toggle, x, y, z) {
  return _in(0xfbf1ecfb, 0x39a77b5f, toggle, _fv(x), _fv(y), _fv(z));
};

/**
 * _NETWORK_SPAWN_CONFIG_ADD_EXCLUSION_VOLUME
 *
 * @param {number} volume
 * @return {void}
 */
global.NetworkSpawnConfigAddExclusionVolume = function (volume) {
  return _in(0xeeb7818b, 0x1d307212, volume);
};

/**
 * _NETWORK_SPAWN_CONFIG_ADD_PROPERTY_PREFERENCE
 *
 * @param {number} configProperty
 * @param {boolean} include
 * @param {number} weight
 * @return {void}
 */
global.NetworkSpawnConfigAddPropertyPreference = function (configProperty, include, weight) {
  return _in(0xeb6027fd, 0x1b4600d5, configProperty, include, _fv(weight));
};

/**
 * _NETWORK_SPAWN_CONFIG_ADD_PROPERTY_SCRIPTED
 *
 * @param {number} configProperty
 * @param {boolean} include
 * @return {void}
 */
global.NetworkSpawnConfigAddPropertyScripted = function (configProperty, include) {
  return _in(0x44d59ec5, 0x97bbf348, configProperty, include);
};

/**
 * _NETWORK_SPAWN_CONFIG_ADD_SPAWN_POINT
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @return {void}
 */
global.NetworkSpawnConfigAddSpawnPoint = function (x, y, z, heading) {
  return _in(0xfd1ac0b3, 0x858f224c, _fv(x), _fv(y), _fv(z), _fv(heading));
};

/**
 * _NETWORK_SPAWN_CONFIG_REMOVE_EXCLUSION_VOLUME
 *
 * @param {number} volume
 * @return {void}
 */
global.NetworkSpawnConfigRemoveExclusionVolume = function (volume) {
  return _in(0xa35e7bf2, 0x0fa269e0, volume);
};

/**
 * _NETWORK_SPAWN_CONFIG_SEARCH_IN_PROGRESS
 *

 * @return {boolean}
 */
global.NetworkSpawnConfigSearchInProgress = function () {
  return _in(0x89ec2fc8, 0x9ecb1005, _r);
};

/**
 * _NETWORK_SPAWN_CONFIG_SET_CANCEL_SEARCH
 *

 * @return {void}
 */
global.NetworkSpawnConfigSetCancelSearch = function () {
  return _in(0x765e60a1, 0xdcb8b1ce);
};

/**
 * _NETWORK_SPAWN_CONFIG_SET_LEVEL_WATER_DEPTH
 *
 * @param {number} waterDepthLevel
 * @return {void}
 */
global.NetworkSpawnConfigSetLevelWaterDepth = function (waterDepthLevel) {
  return _in(0xbdcc671b, 0x911040f9, waterDepthLevel);
};

/**
 * _NET_TO_ANIM_SCENE
 *
 * @param {number} netId
 * @return {number}
 */
global.NetToAnimScene = function (netId) {
  return _in(0xd7f6781a, 0x0abaf6fb, netId, _r, _ri);
};

/**
 * _NET_TO_PROPSET
 *
 * @param {number} netId
 * @return {number}
 */
global.NetToPropset = function (netId) {
  return _in(0xd08066e0, 0x0d26c448, netId, _r, _ri);
};

/**
 * _PEDMUGSHOT_GET_STATUS
 *

 * @return {number}
 */
global.PedmugshotGetStatus = function () {
  return _in(0xcbac13f0, 0x65c47596, _r, _ri);
};

/**
 * _PEDMUGSHOT_REQUEST_SEND
 *

 * @return {any}
 */
global.PedmugshotRequestSend = function () {
  return _in(0xfbc30b70, 0xb3cdb87e, _r);
};

/**
 * _PEDMUGSHOT_TAKE
 *

 * @return {boolean}
 */
global.PedmugshotTake = function () {
  return _in(0xcd954f33, 0x0693f5f2, _r);
};

/**
 * _PROPSET_TO_NET
 *
 * @param {number} propSet
 * @return {number}
 */
global.PropsetToNet = function (propSet) {
  return _in(0x74f99ef7, 0xef503398, propSet, _r, _ri);
};

/**
 * _REPORT_PLAYER
 *
 * @param {number} player
 * @param {number} reportType
 * @param {string | number} description
 * @param {string | number} horseName
 * @return {void}
 */
global.ReportPlayer = function (player, reportType, description, horseName) {
  return _in(0xa197c35f, 0x73ac0f12, player, reportType, _ts(description), _ts(horseName));
};

/**
 * _REQUEST_PEDSHOT_TEXTURE_LOCAL_BACKUP_DOWNLOAD
 * Only used in R* SP Scripts
 *
 * @param {number} player
 * @param {number} personaPhotoLocalCacheType
 * @return {string | number}
 */
global.RequestPedshotTextureLocalBackupDownload = function (player, personaPhotoLocalCacheType) {
  return _in(0x356f9fb0, 0x698c1feb, player, personaPhotoLocalCacheType, _r, _s);
};

/**
 * _REQUEST_PEDSHOT_TEXTURE_LOCAL_DOWNLOAD
 * Only used in R* SP Script map_app_event_handler
 *
 * @param {DataView} gamerHandle
 * @param {number} p1
 * @return {string | number}
 */
global.RequestPedshotTextureLocalDownload = function (gamerHandle, p1) {
  return _in(0xcaf4ca2f, 0x87779f8f, gamerHandle, p1, _r, _s);
};

/**
 * _REQUEST_PEDSHOT_TEXTURE_MULTIPLAYER_DOWNLOAD
 *
 * @param {DataView} gamerHandle
 * @param {number} p1
 * @return {string | number}
 */
global.RequestPedshotTextureMultiplayerDownload = function (gamerHandle, p1) {
  return _in(0xb5c4b18b, 0x12a2af23, gamerHandle, p1, _r, _s);
};

/**
 * _SET_DOOR_NETWORKED
 *
 * @param {number} doorHash
 * @return {void}
 */
global.SetDoorNetworked = function (doorHash) {
  return _in(0x51d99497, 0xabf3f451, _ch(doorHash));
};

/**
 * _SET_DOOR_UNNETWORKED
 *
 * @param {any} p0
 * @param {boolean} toggle
 * @return {void}
 */
global.SetDoorUnnetworked = function (p0, toggle) {
  return _in(0xc1e1a3d5, 0xed7617b8, p0, toggle);
};

/**
 * _SET_ENTITY_GHOSTED_TO_LOCAL_PLAYER
 *
 * @param {number} entity
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEntityGhostedToLocalPlayer = function (entity, toggle) {
  return _in(0xee5ae995, 0x6743ba20, entity, toggle);
};

/**
 * _SET_LAUNCH_PARAM_STRING
 *
 * @param {string | number} params
 * @return {void}
 */
global.SetLaunchParamString = function (params) {
  return _in(0xdffc15aa, 0x63d04aab, _ts(params));
};

/**
 * _SET_LAUNCH_PARAM_VALUE
 *
 * @param {string | number} paramName
 * @param {string | number} value
 * @return {void}
 */
global.SetLaunchParamValue = function (paramName, value) {
  return _in(0x668af6e4, 0x933ac13f, _ts(paramName), _ts(value));
};

/**
 * _SET_LOCAL_PLAYER_DAMAGE_MULTIPLIER_FOR_PLAYER
 *
 * @param {number} player
 * @param {number} damageMultiplier
 * @return {void}
 */
global.SetLocalPlayerDamageMultiplierForPlayer = function (player, damageMultiplier) {
  return _in(0xd041a329, 0x92a55f84, player, _fv(damageMultiplier));
};

/**
 * _SET_NETWORK_RESPOT_TIMER
 *
 * @param {number} entity
 * @param {number} timer
 * @param {boolean} p2
 * @return {void}
 */
global.SetNetworkRespotTimer = function (entity, timer, p2) {
  return _in(0x442b4347, 0xb6ec36e8, entity, timer, p2);
};

/**
 * _SET_PLAYER_VISIBILITY_TO_LOCAL_PLAYER_DISABLED
 * _SET_PLAYER_V* - _SET_S*
 *
 * @param {number} player
 * @param {boolean} disabled
 * @return {void}
 */
global.SetPlayerVisibilityToLocalPlayerDisabled = function (player, disabled) {
  return _in(0xdca6abdb, 0x9288fbe4, player, disabled);
};

/**
 * _SET_SOCIAL_MATCHMAKING_ALLOWED
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetSocialMatchmakingAllowed = function (toggle) {
  return _in(0x777d0571, 0xa466b520, toggle);
};

/**
 * _TEXTURE_DOWNLOAD_RELEASE_BY_NAME
 *
 * @param {string | number} name
 * @return {void}
 */
global.TextureDownloadReleaseByName = function (name) {
  return _in(0x7a17b798, 0x1560ffa5, _ts(name));
};

/**
 * _TEXTURE_DOWNLOAD_TEXTURE_NAME_IS_VALID
 *
 * @param {string | number} name
 * @return {boolean}
 */
global.TextureDownloadTextureNameIsValid = function (name) {
  return _in(0xe2c3cec3, 0xc0903a00, _ts(name), _r);
};

/**
 * _UGC_HAS_PRIVILEGE
 * Checks if the user has ROS privilege 14.
 *

 * @return {boolean}
 */
global.UgcHasPrivilege = function () {
  return _in(0x6506bfa7, 0x55fb209c, _r);
};

/**
 * _UGC_IS_BOOK_MARKED
 *
 * @param {string | number} contentId
 * @return {boolean}
 */
global.UgcIsBookMarked = function (contentId) {
  return _in(0xe42d1042, 0xf09865fe, _ts(contentId), _r);
};

/**
 * _UGC_QUERY_BY_CATEGORY
 * Returns ugcRequestId
 *
 * @param {number} categoryType
 * @param {number} p1
 * @param {number} maxGet
 * @param {string | number} contentTypeName
 * @param {number} p4
 * @param {boolean} p5
 * @return {number}
 */
global.UgcQueryByCategory = function (categoryType, p1, maxGet, contentTypeName, p4, p5) {
  return _in(0x8c109958, 0xc9bb559d, categoryType, p1, maxGet, _ts(contentTypeName), p4, p5, _r, _ri);
};

/**
 * _UGC_QUERY_BY_CONTENT_ID
 * Returns ugcRequestId
 *
 * @param {string | number} contentId
 * @param {boolean} latestVersion
 * @param {string | number} contentTypeName
 * @return {number}
 */
global.UgcQueryByContentId = function (contentId, latestVersion, contentTypeName) {
  return _in(0x69d22e18, 0x3580113f, _ts(contentId), latestVersion, _ts(contentTypeName), _r, _ri);
};

/**
 * _UGC_QUERY_BY_CONTENT_TYPE
 * Returns ugcRequestId
 *
 * @param {number} p0
 * @param {number} maxGet
 * @param {string | number} contentTypeName
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @return {number}
 */
global.UgcQueryByContentType = function (p0, maxGet, contentTypeName, p3, p4, p5) {
  return _in(0xf40ef49b, 0x3099e98e, p0, maxGet, _ts(contentTypeName), p3, p4, p5, _r, _ri);
};

/**
 * _UGC_QUERY_GET_BOOK_MARKED
 *
 * @param {any} p0
 * @param {number} index
 * @return {boolean}
 */
global.UgcQueryGetBookMarked = function (p0, index) {
  return _in(0x98539fc4, 0x53aea639, p0, index, _r);
};

/**
 * _UGC_QUERY_GET_CREATOR_HANDLE
 *
 * @param {any} p0
 * @param {number} index
 * @param {DataView} gamerHandle
 * @return {any}
 */
global.UgcQueryGetCreatorHandle = function (p0, index, gamerHandle) {
  return _in(0xadb56322, 0xeedfbdc9, p0, index, gamerHandle, _r);
};

/**
 * _UGC_QUERY_GET_CREATOR_PHOTO
 * Returns string for GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO
 *
 * @param {any} p0
 * @param {number} p1
 * @param {any} p2
 * @return {string | number}
 */
global.UgcQueryGetCreatorPhoto = function (p0, p1, p2) {
  return _in(0x409fe0ca, 0x6a4d1d49, p0, p1, p2, _r, _s);
};

/**
 * _UGC_QUERY_GET_DATE
 *
 * @param {any} p0
 * @param {number} index
 * @param {DataView} p2
 * @return {void}
 */
global.UgcQueryGetDate = function (p0, index, p2) {
  return _in(0xe0cb4ab1, 0x5cb32710, p0, index, p2);
};

/**
 * _UGC_QUERY_GET_LANGUAGE
 *
 * @param {any} p0
 * @param {number} index
 * @return {number}
 */
global.UgcQueryGetLanguage = function (p0, index) {
  return _in(0x97764e8a, 0xc6487a9a, p0, index, _r, _ri);
};

/**
 * _UGC_QUERY_GET_MISSION_DESC_HASH
 *
 * @param {any} p0
 * @param {number} index
 * @return {number}
 */
global.UgcQueryGetMissionDescHash = function (p0, index) {
  return _in(0xa6bf5699, 0x56c60a60, p0, index, _r, _ri);
};

/**
 * _UGC_QUERY_GET_NAME
 *
 * @param {any} p0
 * @param {number} index
 * @return {string | number}
 */
global.UgcQueryGetName = function (p0, index) {
  return _in(0x2d053ea8, 0x15702dd1, p0, index, _r, _s);
};

/**
 * _UGC_QUERY_GET_OWNER_ID
 *
 * @param {any} p0
 * @param {number} index
 * @return {string | number}
 */
global.UgcQueryGetOwnerId = function (p0, index) {
  return _in(0xf9f0b302, 0x8431967b, p0, index, _r, _s);
};

/**
 * _UGC_QUERY_GET_PLAYLIST_NAME
 *
 * @param {any} p0
 * @param {number} index
 * @return {string | number}
 */
global.UgcQueryGetPlaylistName = function (p0, index) {
  return _in(0xcaf50048, 0xc8d0fba0, p0, index, _r, _s);
};

/**
 * _UGC_QUERY_GET_POSIX_PUBLISHED_DATE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {number}
 */
global.UgcQueryGetPosixPublishedDate = function (p0, p1) {
  return _in(0x104080ca, 0x9e519b00, p0, p1, _r, _ri);
};

/**
 * _UGC_QUERY_GET_POSIX_UPDATED_DATE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {number}
 */
global.UgcQueryGetPosixUpdatedDate = function (p0, p1) {
  return _in(0x21a99a72, 0xb00d8002, p0, p1, _r, _ri);
};

/**
 * _UGC_QUERY_GET_PUBLISHED
 *
 * @param {any} p0
 * @param {any} p1
 * @return {boolean}
 */
global.UgcQueryGetPublished = function (p0, p1) {
  return _in(0x9993f1e1, 0x1944a3dd, p0, p1, _r);
};

/**
 * _UGC_QUERY_GET_RATING
 *
 * @param {any} p0
 * @param {number} index
 * @param {number} p2
 * @return {number}
 */
global.UgcQueryGetRating = function (p0, index, p2) {
  return _in(0x24cd8fae, 0xa1368379, p0, index, p2, _r, _rf);
};

/**
 * _UGC_QUERY_GET_ROOT_CONTENT_ID
 *
 * @param {any} p0
 * @param {number} index
 * @return {string | number}
 */
global.UgcQueryGetRootContentId = function (p0, index) {
  return _in(0x566ceb05, 0x42ef5ecf, p0, index, _r, _s);
};

/**
 * _UGC_QUERY_GET_VERSION
 *
 * @param {any} p0
 * @param {number} index
 * @param {number} p2
 * @return {number}
 */
global.UgcQueryGetVersion = function (p0, index, p2) {
  return _in(0x63e9dcbc, 0x8b0931ed, p0, index, p2, _r, _ri);
};

/**
 * ALLOW_DAMAGE_EVENTS_FOR_NON_NETWORKED_OBJECTS
 *
 * @param {boolean} enabled
 * @return {void}
 */
global.AllowDamageEventsForNonNetworkedObjects = function (enabled) {
  return _in(0xe2b3b852, 0xb537c398, enabled);
};

/**
 * ATTACH_PORTABLE_PICKUP_TO_PED
 *
 * @param {number} pickupObject
 * @param {number} ped
 * @return {void}
 */
global.AttachPortablePickupToPed = function (pickupObject, ped) {
  return _in(0x8dc39368, 0xbdd57755, pickupObject, ped);
};

/**
 * BLOCK_PICKUP_FROM_PLAYER_COLLECTION
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.BlockPickupFromPlayerCollection = function (p0, p1) {
  return _in(0xb8f50620, 0x70bb6dbd, p0, p1);
};

/**
 * BREAK_ALL_OBJECT_FRAGMENT_BONES
 *
 * @param {number} object
 * @return {void}
 */
global.BreakAllObjectFragmentBones = function (object) {
  return _in(0x8462be23, 0x41a55b6f, object);
};

/**
 * BREAK_OBJECT_FRAGMENT_CHILD
 *
 * @param {number} object
 * @param {any} p1
 * @param {boolean} p2
 * @return {void}
 */
global.BreakObjectFragmentChild = function (object, p1, p2) {
  return _in(0xe7e4c198, 0xb0185900, object, p1, p2);
};

/**
 * CONVERT_OLD_PICKUP_TYPE_TO_NEW
 * Old name: _GET_PICKUP_HASH
 *
 * @param {number} pickupHash
 * @return {number}
 */
global.ConvertOldPickupTypeToNew = function (pickupHash) {
  return _in(0x5eaad83f, 0x8cfb4575, _ch(pickupHash), _r, _ri);
};

/**
 * CREATE_AMBIENT_PICKUP
 * flags: see CREATE_PICKUP
 *
 * @param {number} pickupHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} flags
 * @param {number} value
 * @param {number} modelHash
 * @param {boolean} p7
 * @param {boolean} p8
 * @param {number} p9
 * @param {number} p10
 * @return {number}
 */
global.CreateAmbientPickup = function (pickupHash, x, y, z, flags, value, modelHash, p7, p8, p9, p10) {
  return _in(0x673966a0, 0xc0fd7171, _ch(pickupHash), _fv(x), _fv(y), _fv(z), flags, value, _ch(modelHash), p7, p8, p9, _fv(p10), _r, _ri);
};

/**
 * CREATE_OBJECT
 *
 * @param {number} modelHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} isNetwork
 * @param {boolean} bScriptHostObj
 * @param {boolean} dynamic
 * @param {boolean} p7
 * @param {boolean} p8
 * @return {number}
 */
global.CreateObject = function (modelHash, x, y, z, isNetwork, bScriptHostObj, dynamic, p7, p8) {
  return _in(0x509d5878, 0xeb39e842, _ch(modelHash), _fv(x), _fv(y), _fv(z), isNetwork, bScriptHostObj, dynamic, p7, p8, _r, _ri);
};

/**
 * CREATE_OBJECT_NO_OFFSET
 *
 * @param {number} modelHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} isNetwork
 * @param {boolean} bScriptHostObj
 * @param {boolean} dynamic
 * @param {boolean} p7
 * @return {number}
 */
global.CreateObjectNoOffset = function (modelHash, x, y, z, isNetwork, bScriptHostObj, dynamic, p7) {
  return _in(0x9a294b21, 0x38abb884, _ch(modelHash), _fv(x), _fv(y), _fv(z), isNetwork, bScriptHostObj, dynamic, p7, _r, _ri);
};

/**
 * CREATE_OBJECT_SKELETON
 *
 * @param {number} object
 * @return {boolean}
 */
global.CreateObjectSkeleton = function (object) {
  return _in(0xb6cbd40f, 0x8ea69e8a, object, _r);
};

/**
 * CREATE_PICKUP
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Placement%20Flags
 * https://github.com/femga/rdr3_discoveries/blob/master/objects/pickup_list.lua
 *
 * @param {number} pickupHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} flags
 * @param {number} p5
 * @param {boolean} p6
 * @param {number} modelHash
 * @param {number} p8
 * @param {number} p9
 * @param {any} p10
 * @return {number}
 */
global.CreatePickup = function (pickupHash, x, y, z, flags, p5, p6, modelHash, p8, p9, p10) {
  return _in(0xfba08c50, 0x3dd5fa58, _ch(pickupHash), _fv(x), _fv(y), _fv(z), flags, p5, p6, _ch(modelHash), p8, _fv(p9), p10, _r, _ri);
};

/**
 * CREATE_PICKUP_ROTATE
 * flags: see CREATE_PICKUP
 *
 * @param {number} pickupHash
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} flags
 * @param {number} p8
 * @param {number} p9
 * @param {boolean} p10
 * @param {number} modelHash
 * @param {number} p12
 * @param {number} p13
 * @param {any} p14
 * @return {number}
 */
global.CreatePickupRotate = function (pickupHash, posX, posY, posZ, rotX, rotY, rotZ, flags, p8, p9, p10, modelHash, p12, p13, p14) {
  return _in(0x89180472, 0x7e0a98b7, _ch(pickupHash), _fv(posX), _fv(posY), _fv(posZ), _fv(rotX), _fv(rotY), _fv(rotZ), flags, p8, p9, p10, _ch(modelHash), p12, _fv(p13), p14, _r, _ri);
};

/**
 * CREATE_PORTABLE_PICKUP
 *
 * @param {number} pickupHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} placeOnGround
 * @param {number} modelHash
 * @return {number}
 */
global.CreatePortablePickup = function (pickupHash, x, y, z, placeOnGround, modelHash) {
  return _in(0x2eaf1fdb, 0x2fb55698, _ch(pickupHash), _fv(x), _fv(y), _fv(z), placeOnGround, _ch(modelHash), _r, _ri);
};

/**
 * DELETE_OBJECT
 * Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
 *

 * @return {number}
 */
global.DeleteObject = function () {
  return _in(0x93191426, 0x8722c263, _i);
};

/**
 * DETACH_PORTABLE_PICKUP_FROM_PED
 *
 * @param {number} pickupObject
 * @return {void}
 */
global.DetachPortablePickupFromPed = function (pickupObject) {
  return _in(0xcf463d1e, 0x9a0aecb1, pickupObject);
};

/**
 * DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} hash
 * @param {boolean} p5
 * @return {boolean}
 */
global.DoesObjectOfTypeExistAtCoords = function (x, y, z, radius, hash, p5) {
  return _in(0xbfa48e2f, 0xf417213f, _fv(x), _fv(y), _fv(z), _fv(radius), _ch(hash), p5, _r);
};

/**
 * DOES_PICKUP_EXIST
 *
 * @param {number} pickup
 * @return {boolean}
 */
global.DoesPickupExist = function (pickup) {
  return _in(0xafc1ca75, 0xad4074d1, pickup, _r);
};

/**
 * DOES_PICKUP_OBJECT_EXIST
 *
 * @param {number} pickupObject
 * @return {boolean}
 */
global.DoesPickupObjectExist = function (pickupObject) {
  return _in(0xd9efb6db, 0xf7daaea3, pickupObject, _r);
};

/**
 * DOES_PICKUP_OF_TYPE_EXIST_IN_AREA
 *
 * @param {number} pickupHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {boolean}
 */
global.DoesPickupOfTypeExistInArea = function (pickupHash, x, y, z, radius) {
  return _in(0xf9c36251, 0xf6e48e33, _ch(pickupHash), _fv(x), _fv(y), _fv(z), _fv(radius), _r);
};

/**
 * DOES_RAYFIRE_MAP_OBJECT_EXIST
 *
 * @param {number} object
 * @return {boolean}
 */
global.DoesRayfireMapObjectExist = function (object) {
  return _in(0x52af537a, 0x0c5b8aad, object, _r);
};

/**
 * DOOR_SYSTEM_GET_DOOR_STATE
 *
 * @param {number} doorHash
 * @return {number}
 */
global.DoorSystemGetDoorState = function (doorHash) {
  return _in(0x160aa1b3, 0x2f6139b8, _ch(doorHash), _r, _ri);
};

/**
 * DOOR_SYSTEM_GET_OPEN_RATIO
 *
 * @param {number} doorHash
 * @return {number}
 */
global.DoorSystemGetOpenRatio = function (doorHash) {
  return _in(0x65499865, 0xfca6e5ec, _ch(doorHash), _r, _rf);
};

/**
 * DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE
 *
 * @param {number} doorHash
 * @param {number} distance
 * @return {void}
 */
global.DoorSystemSetAutomaticDistance = function (doorHash, distance) {
  return _in(0x9ba001cb, 0x45cbf627, _ch(doorHash), _fv(distance));
};

/**
 * DOOR_SYSTEM_SET_AUTOMATIC_RATE
 *
 * @param {number} doorHash
 * @param {number} rate
 * @return {void}
 */
global.DoorSystemSetAutomaticRate = function (doorHash, rate) {
  return _in(0x03c27e13, 0xb42a0e82, _ch(doorHash), _fv(rate));
};

/**
 * DOOR_SYSTEM_SET_DOOR_STATE
 * Door lock states:
 * enum eDoorState
 * {
 *   DOORSTATE_INVALID = -1,
 *   DOORSTATE_UNLOCKED,
 *   DOORSTATE_LOCKED_UNBREAKABLE,
 *   DOORSTATE_LOCKED_BREAKABLE,
 *   DOORSTATE_HOLD_OPEN_POSITIVE,
 *   DOORSTATE_HOLD_OPEN_NEGATIVE
 * };
 *
 * @param {number} doorHash
 * @param {number} state
 * @return {void}
 */
global.DoorSystemSetDoorState = function (doorHash, state) {
  return _in(0x6bab9442, 0x830c7f53, _ch(doorHash), state);
};

/**
 * DOOR_SYSTEM_SET_OPEN_RATIO
 * Sets the ajar angle of a door.
 * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
 *
 * @param {number} doorHash
 * @param {number} ajar
 * @param {boolean} forceUpdate
 * @return {void}
 */
global.DoorSystemSetOpenRatio = function (doorHash, ajar, forceUpdate) {
  return _in(0xb6e6fba9, 0x5c7324ac, _ch(doorHash), _fv(ajar), forceUpdate);
};

/**
 * FIX_OBJECT_FRAGMENT
 *
 * @param {number} object
 * @return {void}
 */
global.FixObjectFragment = function (object) {
  return _in(0xf9c16813, 0x47c8bd15, object);
};

/**
 * FORCE_PICKUP_REGENERATE
 *
 * @param {any} p0
 * @return {void}
 */
global.ForcePickupRegenerate = function (p0) {
  return _in(0x758a5c1b, 0x3b1e1990, p0);
};

/**
 * GET_CLOSEST_OBJECT_OF_TYPE
 * missionScriptObject - if true won't return mission script objects
 * scriptHostObject - if true won't return script host objects
 * networkObject - if true won't return networked objects
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} modelHash
 * @param {boolean} missionScriptObject
 * @param {boolean} scriptHostObject
 * @param {boolean} networkObject
 * @return {number}
 */
global.GetClosestObjectOfType = function (x, y, z, radius, modelHash, missionScriptObject, scriptHostObject, networkObject) {
  return _in(0xe143fa22, 0x49364369, _fv(x), _fv(y), _fv(z), _fv(radius), _ch(modelHash), missionScriptObject, scriptHostObject, networkObject, _r, _ri);
};

/**
 * GET_OBJECT_FRAGMENT_DAMAGE_HEALTH
 *
 * @param {any} p0
 * @param {boolean} p1
 * @return {number}
 */
global.GetObjectFragmentDamageHealth = function (p0, p1) {
  return _in(0xb6fbfd07, 0x9b8d0596, p0, p1, _r, _rf);
};

/**
 * GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS
 * Old name: _GET_OBJECT_OFFSET_FROM_COORDS
 *
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {number} heading
 * @param {number} xOffset
 * @param {number} yOffset
 * @param {number} zOffset
 * @return {Vector3}
 */
global.GetOffsetFromCoordAndHeadingInWorldCoords = function (xPos, yPos, zPos, heading, xOffset, yOffset, zOffset) {
  return _in(0x163e252d, 0xe035a133, _fv(xPos), _fv(yPos), _fv(zPos), _fv(heading), _fv(xOffset), _fv(yOffset), _fv(zOffset), _r, _rv);
};

/**
 * GET_PICKUP_COORDS
 *
 * @param {number} pickup
 * @return {Vector3}
 */
global.GetPickupCoords = function (pickup) {
  return _in(0x225b8b35, 0xc88029b3, pickup, _r, _rv);
};

/**
 * GET_PICKUP_OBJECT
 *
 * @param {number} pickup
 * @return {number}
 */
global.GetPickupObject = function (pickup) {
  return _in(0x5099bc55, 0x630b25ae, pickup, _r, _ri);
};

/**
 * GET_RAYFIRE_MAP_OBJECT
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {string | number} name
 * @return {number}
 */
global.GetRayfireMapObject = function (x, y, z, radius, name) {
  return _in(0xb48fced8, 0x98292e52, _fv(x), _fv(y), _fv(z), _fv(radius), _ts(name), _r, _ri);
};

/**
 * GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE
 *
 * @param {number} object
 * @return {number}
 */
global.GetRayfireMapObjectAnimPhase = function (object) {
  return _in(0x260ee4fd, 0xbdf4db01, object, _r, _rf);
};

/**
 * GET_SAFE_PICKUP_COORDS
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {Vector3}
 */
global.GetSafePickupCoords = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x6e16bc25, 0x03ff1ff0, p0, p1, p2, p3, p4, p5, _r, _rv);
};

/**
 * GET_STATE_OF_RAYFIRE_MAP_OBJECT
 *
 * @param {number} object
 * @return {number}
 */
global.GetStateOfRayfireMapObject = function (object) {
  return _in(0x899ba936, 0x634a322e, object, _r, _ri);
};

/**
 * GET_WEAPON_TYPE_FROM_PICKUP_TYPE
 *
 * @param {number} pickupHash
 * @return {number}
 */
global.GetWeaponTypeFromPickupType = function (pickupHash) {
  return _in(0x08f96ca6, 0xc551ad51, _ch(pickupHash), _r, _ri);
};

/**
 * HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} modelHash
 * @param {any} p5
 * @return {boolean}
 */
global.HasClosestObjectOfTypeBeenBroken = function (p0, p1, p2, p3, modelHash, p5) {
  return _in(0x761b0e69, 0xac4d007e, _fv(p0), _fv(p1), _fv(p2), _fv(p3), _ch(modelHash), p5, _r);
};

/**
 * HAS_OBJECT_BEEN_BROKEN
 *
 * @param {any} p0
 * @return {boolean}
 */
global.HasObjectBeenBroken = function (p0) {
  return _in(0x8abfb70c, 0x49cc43e2, p0, _r);
};

/**
 * HAS_PICKUP_BEEN_COLLECTED
 *
 * @param {number} pickup
 * @return {boolean}
 */
global.HasPickupBeenCollected = function (pickup) {
  return _in(0x80ec48e6, 0x679313f9, pickup, _r);
};

/**
 * IS_DOOR_CLOSED
 *
 * @param {number} doorHash
 * @return {boolean}
 */
global.IsDoorClosed = function (doorHash) {
  return _in(0xc531ee8a, 0x1145a149, _ch(doorHash), _r);
};

/**
 * IS_DOOR_REGISTERED_WITH_SYSTEM
 *
 * @param {number} doorHash
 * @return {boolean}
 */
global.IsDoorRegisteredWithSystem = function (doorHash) {
  return _in(0xc153c43e, 0xa202c8c1, _ch(doorHash), _r);
};

/**
 * IS_OBJECT_A_PORTABLE_PICKUP
 *
 * @param {number} object
 * @return {boolean}
 */
global.IsObjectAPortablePickup = function (object) {
  return _in(0x0378c085, 0x04160d0d, object, _r);
};

/**
 * IS_OBJECT_VISIBLE
 *
 * @param {number} object
 * @return {boolean}
 */
global.IsObjectVisible = function (object) {
  return _in(0x8b32ace6, 0x326a7546, object, _r);
};

/**
 * IS_POINT_IN_ANGLED_AREA
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {number} p9
 * @param {boolean} p10
 * @param {boolean} p11
 * @return {boolean}
 */
global.IsPointInAngledArea = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
  return _in(0x2a70bae8, 0x883e4c81, _fv(p0), _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _fv(p8), _fv(p9), p10, p11, _r);
};

/**
 * ONLY_CLEAN_UP_OBJECT_WHEN_OUT_OF_RANGE
 * Old name: _MARK_OBJECT_FOR_DELETION
 *
 * @param {number} object
 * @return {void}
 */
global.OnlyCleanUpObjectWhenOutOfRange = function (object) {
  return _in(0xadbe4809, 0xf19f927a, object);
};

/**
 * PLACE_OBJECT_ON_GROUND_PROPERLY
 *
 * @param {number} object
 * @param {boolean} p1
 * @return {boolean}
 */
global.PlaceObjectOnGroundProperly = function (object, p1) {
  return _in(0x58a850ea, 0xee20faa3, object, p1, _r);
};

/**
 * PREVENT_COLLECTION_OF_PORTABLE_PICKUP
 *
 * @param {number} object
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.PreventCollectionOfPortablePickup = function (object, p1, p2) {
  return _in(0x92aefb5f, 0x6e294023, object, p1, p2);
};

/**
 * REMOVE_ALL_PICKUPS_OF_TYPE
 *
 * @param {number} pickupHash
 * @return {void}
 */
global.RemoveAllPickupsOfType = function (pickupHash) {
  return _in(0x27f9d613, 0x092159cf, _ch(pickupHash));
};

/**
 * REMOVE_DOOR_FROM_SYSTEM
 *
 * @param {number} doorHash
 * @return {void}
 */
global.RemoveDoorFromSystem = function (doorHash) {
  return _in(0x464d8e14, 0x27156fe4, _ch(doorHash));
};

/**
 * REMOVE_PICKUP
 *
 * @param {number} pickup
 * @return {void}
 */
global.RemovePickup = function (pickup) {
  return _in(0x3288d8ac, 0xaecd2ab2, pickup);
};

/**
 * SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN
 *
 * @param {number} object
 * @param {boolean} toggle
 * @return {void}
 */
global.SetActivateObjectPhysicsAsSoonAsItIsUnfrozen = function (object, toggle) {
  return _in(0x406137f8, 0xef90eaf5, object, toggle);
};

/**
 * SET_CUSTOM_TEXTURES_ON_OBJECT
 *
 * @param {number} object
 * @param {number} txdHash
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.SetCustomTexturesOnObject = function (object, txdHash, p2, p3) {
  return _in(0xe124889a, 0xe0521fcf, object, _ch(txdHash), p2, p3);
};

/**
 * SET_FORCE_OBJECT_THIS_FRAME
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @return {void}
 */
global.SetForceObjectThisFrame = function (x, y, z, p3) {
  return _in(0xf5380819, 0x86e49e9d, _fv(x), _fv(y), _fv(z), _fv(p3));
};

/**
 * SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetLocalPlayerCanCollectPortablePickups = function (toggle) {
  return _in(0x78857fc6, 0x5cadb909, toggle);
};

/**
 * SET_LOCAL_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_WITH_MODEL
 * Maximum amount of pickup models that can be disallowed is 10.
 * 
 * Old name: _SET_LOCAL_PLAYER_CAN_USE_PICKUPS_WITH_THIS_MODEL
 *
 * @param {number} modelHash
 * @param {boolean} toggle
 * @return {void}
 */
global.SetLocalPlayerPermittedToCollectPickupsWithModel = function (modelHash, toggle) {
  return _in(0x88eaec61, 0x7cd26926, _ch(modelHash), toggle);
};

/**
 * SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER
 *
 * @param {number} modelHash
 * @param {number} p1
 * @return {void}
 */
global.SetMaxNumPortablePickupsCarriedByPlayer = function (modelHash, p1) {
  return _in(0x0bf3b3bd, 0x47d79c08, _ch(modelHash), p1);
};

/**
 * SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY
 *
 * @param {number} object
 * @param {boolean} toggle
 * @return {void}
 */
global.SetObjectAllowLowLodBuoyancy = function (object, toggle) {
  return _in(0x4d89d607, 0xcb3dd1d2, object, toggle);
};

/**
 * SET_OBJECT_PHYSICS_PARAMS
 * Adjust the physics parameters of a prop, or otherwise known as "object". This is useful for simulated gravity.
 * 
 * Other parameters seem to be unknown.
 * 
 * p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
 * p3: seems similar to p2
 * p4: makes obj fall slower the higher the value
 * p5: similar to p4
 *
 * @param {number} object
 * @param {number} weight
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} gravity
 * @param {number} p7
 * @param {number} p8
 * @param {number} p9
 * @param {number} p10
 * @param {number} buoyancy
 * @return {void}
 */
global.SetObjectPhysicsParams = function (object, weight, p2, p3, p4, p5, gravity, p7, p8, p9, p10, buoyancy) {
  return _in(0xf6df6e90, 0xde7df90f, object, _fv(weight), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(gravity), _fv(p7), _fv(p8), _fv(p9), _fv(p10), _fv(buoyancy));
};

/**
 * SET_OBJECT_TAKES_DAMAGE_FROM_COLLIDING_WITH_BUILDINGS
 *
 * @param {number} object
 * @param {boolean} enabled
 * @return {void}
 */
global.SetObjectTakesDamageFromCollidingWithBuildings = function (object, enabled) {
  return _in(0xeb6f1a9b, 0x5510a5d2, object, enabled);
};

/**
 * SET_OBJECT_TARGETTABLE
 *
 * @param {number} object
 * @param {boolean} targettable
 * @return {void}
 */
global.SetObjectTargettable = function (object, targettable) {
  return _in(0x8a739169, 0x0f5afd81, object, targettable);
};

/**
 * SET_OBJECT_TINT_INDEX
 * Alt name: _SET_OBJECT_TINT
 * 
 * Old name: _SET_OBJECT_TEXTURE_VARIATION
 *
 * @param {number} object
 * @param {number} textureVariation
 * @return {void}
 */
global.SetObjectTintIndex = function (object, textureVariation) {
  return _in(0x971da005, 0x5324d033, object, textureVariation);
};

/**
 * SET_PICKUP_DO_NOT_AUTO_PLACE_ON_GROUND
 *
 * @param {number} pickupObject
 * @return {void}
 */
global.SetPickupDoNotAutoPlaceOnGround = function (pickupObject) {
  return _in(0x634c1952, 0x1485ab25, pickupObject);
};

/**
 * SET_PICKUP_GENERATION_RANGE_MULTIPLIER
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetPickupGenerationRangeMultiplier = function (multiplier) {
  return _in(0x318516e0, 0x2de3ece2, _fv(multiplier));
};

/**
 * SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.SetPickupHiddenWhenUncollectable = function (p0, p1) {
  return _in(0x81218ce0, 0x1b672219, p0, p1);
};

/**
 * SET_PICKUP_NOT_LOOTABLE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.SetPickupNotLootable = function (p0, p1) {
  return _in(0x92e87f60, 0xf21a0c3a, p0, p1);
};

/**
 * SET_PICKUP_PARTICLE_FX_HIGHLIGHT
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.SetPickupParticleFxHighlight = function (p0, p1) {
  return _in(0x1607c7d9, 0xb3021df5, p0, p1);
};

/**
 * SET_PICKUP_PARTICLE_FX_SPAWN
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.SetPickupParticleFxSpawn = function (p0, p1) {
  return _in(0xeb9740a3, 0x8fd6d634, p0, p1);
};

/**
 * SET_PICKUP_REGENERATION_TIME
 *
 * @param {number} pickup
 * @param {number} duration
 * @return {void}
 */
global.SetPickupRegenerationTime = function (pickup, duration) {
  return _in(0x78015c9b, 0x4b3ecc9d, pickup, duration);
};

/**
 * SET_PICKUP_UNCOLLECTABLE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.SetPickupUncollectable = function (p0, p1) {
  return _in(0x4a8cb328, 0xcd6f1c9b, p0, p1);
};

/**
 * SET_STATE_OF_RAYFIRE_MAP_OBJECT
 *
 * @param {number} object
 * @param {number} state
 * @return {void}
 */
global.SetStateOfRayfireMapObject = function (object, state) {
  return _in(0x5c29f698, 0xd404c5e1, object, state);
};

/**
 * SET_TEAM_PICKUP_OBJECT
 *
 * @param {number} object
 * @param {any} p1
 * @param {boolean} p2
 * @return {void}
 */
global.SetTeamPickupObject = function (object, p1, p2) {
  return _in(0x53e0df1a, 0x2a3cf0ca, object, p1, p2);
};

/**
 * SLIDE_OBJECT
 *
 * @param {number} object
 * @param {number} toX
 * @param {number} toY
 * @param {number} toZ
 * @param {number} speedX
 * @param {number} speedY
 * @param {number} speedZ
 * @param {boolean} collision
 * @return {boolean}
 */
global.SlideObject = function (object, toX, toY, toZ, speedX, speedY, speedZ, collision) {
  return _in(0x2fdff410, 0x7b8c1147, object, _fv(toX), _fv(toY), _fv(toZ), _fv(speedX), _fv(speedY), _fv(speedZ), collision, _r);
};

/**
 * SUPPRESS_PICKUP_REWARD_TYPE
 *
 * @param {number} rewardType
 * @param {boolean} suppress
 * @return {void}
 */
global.SuppressPickupRewardType = function (rewardType, suppress) {
  return _in(0xf9209952, 0x7db8e2a7, rewardType, suppress);
};

/**
 * TRACK_OBJECT_VISIBILITY
 *
 * @param {number} object
 * @return {void}
 */
global.TrackObjectVisibility = function (object) {
  return _in(0xb252bc03, 0x6b525623, object);
};

/**
 * _0x08C5825A2932EA7B
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x08C5825A2932EA7B = function (p0) {
  return _in(0x08c5825a, 0x2932ea7b, p0, _r);
};

/**
 * _0x0943113E02322164
 * Params: p1 = 23 in R* Scripts
 *
 * @param {number} object
 * @param {number} p1
 * @return {any}
 */
global.N_0x0943113E02322164 = function (object, p1) {
  return _in(0x0943113e, 0x02322164, object, p1, _r);
};

/**
 * _0x0C0A373D181BF900
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0C0A373D181BF900 = function (p0) {
  return _in(0x0c0a373d, 0x181bf900, p0);
};

/**
 * _0x1F5E07E14A86FAFC
 * _SET_A(MBIENT_PICKUP_?)*
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x1F5E07E14A86FAFC = function (p0) {
  return _in(0x1f5e07e1, 0x4a86fafc, p0);
};

/**
 * _0x20135AF9C10D2A3D
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x20135AF9C10D2A3D = function (p0) {
  return _in(0x20135af9, 0xc10d2a3d, p0, _r);
};

/**
 * _0x22031584496CFB70
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x22031584496CFB70 = function (p0, p1) {
  return _in(0x22031584, 0x496cfb70, p0, p1);
};

/**
 * _0x235C863DA77BD88D
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x235C863DA77BD88D = function (p0, p1, p2) {
  return _in(0x235c863d, 0xa77bd88d, p0, p1, p2, _r);
};

/**
 * _0x250EBB11E81A10BE
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x250EBB11E81A10BE = function (p0) {
  return _in(0x250ebb11, 0xe81a10be, p0, _r);
};

/**
 * _0x2BF1953C0C21AC88
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x2BF1953C0C21AC88 = function (p0) {
  return _in(0x2bf1953c, 0x0c21ac88, p0, _r);
};

/**
 * _0x3A77DAE8B4FD7586
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3A77DAE8B4FD7586 = function (p0, p1) {
  return _in(0x3a77dae8, 0xb4fd7586, p0, p1);
};

/**
 * _0x3DF1A0A58498E209
 *
 * @param {number} object
 * @param {any} p1
 * @return {void}
 */
global.N_0x3DF1A0A58498E209 = function (object, p1) {
  return _in(0x3df1a0a5, 0x8498e209, object, p1);
};

/**
 * _0x3E2616E7EA539480
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x3E2616E7EA539480 = function (p0) {
  return _in(0x3e2616e7, 0xea539480, p0, _r);
};

/**
 * _0x46CBCF0E98A4E156
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x46CBCF0E98A4E156 = function (p0, p1) {
  return _in(0x46cbcf0e, 0x98a4e156, p0, p1);
};

/**
 * _0x491439AEF410A2FC
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x491439AEF410A2FC = function (p0) {
  return _in(0x491439ae, 0xf410a2fc, p0);
};

/**
 * _0x4AE07EBA3462C5D5
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x4AE07EBA3462C5D5 = function (p0, p1) {
  return _in(0x4ae07eba, 0x3462c5d5, p0, p1);
};

/**
 * _0x4D8611DFE1126478
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x4D8611DFE1126478 = function (p0) {
  return _in(0x4d8611df, 0xe1126478, p0, _r);
};

/**
 * _0x5230BF34EB0EC645
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x5230BF34EB0EC645 = function (p0) {
  return _in(0x5230bf34, 0xeb0ec645, p0);
};

/**
 * _0x57C242543B7B8FB9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x57C242543B7B8FB9 = function (p0, p1) {
  return _in(0x57c24254, 0x3b7b8fb9, p0, p1);
};

/**
 * _0x58DE624FA7FB0E7F
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x58DE624FA7FB0E7F = function (p0) {
  return _in(0x58de624f, 0xa7fb0e7f, p0, _r);
};

/**
 * _0x614D0B4533F842D3
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x614D0B4533F842D3 = function (p0) {
  return _in(0x614d0b45, 0x33f842d3, p0, _r);
};

/**
 * _0x6579860A5558524A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x6579860A5558524A = function (p0, p1) {
  return _in(0x6579860a, 0x5558524a, p0, p1);
};

/**
 * _0x6E2AA80BB0C03728
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x6E2AA80BB0C03728 = function (p0, p1) {
  return _in(0x6e2aa80b, 0xb0c03728, p0, p1, _r);
};

/**
 * _0x7D4411D6736CD295
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x7D4411D6736CD295 = function (p0, p1) {
  return _in(0x7d4411d6, 0x736cd295, p0, p1, _r);
};

/**
 * _0x7F458B543006C8FE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x7F458B543006C8FE = function (p0, p1) {
  return _in(0x7f458b54, 0x3006c8fe, p0, p1);
};

/**
 * _0x7FCD49388BC9B775
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x7FCD49388BC9B775 = function (p0, p1) {
  return _in(0x7fcd4938, 0x8bc9b775, p0, p1);
};

/**
 * _0x9A74A9CADFA8A598
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9A74A9CADFA8A598 = function (p0) {
  return _in(0x9a74a9ca, 0xdfa8a598, p0);
};

/**
 * _0x9F52AD67D1A91BAD
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x9F52AD67D1A91BAD = function (p0, p1) {
  return _in(0x9f52ad67, 0xd1a91bad, p0, p1, _r);
};

/**
 * _0xA93F925F1942E434
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA93F925F1942E434 = function (p0, p1) {
  return _in(0xa93f925f, 0x1942e434, p0, p1);
};

/**
 * _0xAAACF33CBF9B990A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xAAACF33CBF9B990A = function (p0, p1) {
  return _in(0xaaacf33c, 0xbf9b990a, p0, p1);
};

/**
 * _0xACD4F9831DFAD7F5
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xACD4F9831DFAD7F5 = function (p0) {
  return _in(0xacd4f983, 0x1dfad7f5, p0, _r);
};

/**
 * _SET_OBJECT_PROMPT_NAME
 * Not official native name
 *
 * @param {number} object
 * @param {string | number} name
 * @return {void}
 */
global.SetObjectPromptName = function (object, name) {
  return _in(0xaee6c800, 0xe124cfe1, object, _ts(name));
};

/**
 * _0xB3B1546D23DF8DE1
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0xB3B1546D23DF8DE1 = function (p0, p1, p2, p3, p4) {
  return _in(0xb3b1546d, 0x23df8de1, p0, p1, p2, p3, p4);
};

/**
 * _0xC07B91B996C1DE89
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xC07B91B996C1DE89 = function (p0, p1) {
  return _in(0xc07b91b9, 0x96c1de89, p0, p1);
};

/**
 * _0xCAAF2BCCFEF37F77
 * _SET_OBJECT_*
 *
 * @param {number} object
 * @param {any} p1
 * @return {void}
 */
global.N_0xCAAF2BCCFEF37F77 = function (object, p1) {
  return _in(0xcaaf2bcc, 0xfef37f77, object, p1);
};

/**
 * _0xCBFBD38F2E0A263B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xCBFBD38F2E0A263B = function (p0, p1) {
  return _in(0xcbfbd38f, 0x2e0a263b, p0, p1);
};

/**
 * _0xCEAB54F4632C6EF6
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xCEAB54F4632C6EF6 = function (p0, p1) {
  return _in(0xceab54f4, 0x632c6ef6, p0, p1);
};

/**
 * _SET_OBJECT_PROMPT_NAME_FROM_GXT_ENTRY
 * Not official native name
 *
 * @param {number} object
 * @param {number} gxtEntryHash
 * @return {void}
 */
global.SetObjectPromptNameFromGxtEntry = function (object, gxtEntryHash) {
  return _in(0xd503d6f0, 0x986d58bc, object, _ch(gxtEntryHash));
};

/**
 * _0xD91E55B6C005EB09
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xD91E55B6C005EB09 = function (p0, p1) {
  return _in(0xd91e55b6, 0xc005eb09, p0, p1, _r);
};

/**
 * _0xDE116ECFFDD4B997
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xDE116ECFFDD4B997 = function (p0, p1) {
  return _in(0xde116ecf, 0xfdd4b997, p0, p1);
};

/**
 * _0xDFA1237F5228263F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xDFA1237F5228263F = function (p0, p1) {
  return _in(0xdfa1237f, 0x5228263f, p0, p1);
};

/**
 * _0xE157A8A336C7F04A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE157A8A336C7F04A = function (p0, p1) {
  return _in(0xe157a8a3, 0x36c7f04a, p0, p1);
};

/**
 * _0xEBA314768FB35D58
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xEBA314768FB35D58 = function (p0) {
  return _in(0xeba31476, 0x8fb35d58, p0, _r);
};

/**
 * _0xF65EDE5D02A7A760
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xF65EDE5D02A7A760 = function (p0, p1) {
  return _in(0xf65ede5d, 0x02a7a760, p0, p1);
};

/**
 * _0xF6E88489B4E6EBE5
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xF6E88489B4E6EBE5 = function (p0, p1) {
  return _in(0xf6e88489, 0xb4e6ebe5, p0, p1);
};

/**
 * _0xFA99E8E575F2FEF8
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xFA99E8E575F2FEF8 = function (p0) {
  return _in(0xfa99e8e5, 0x75f2fef8, p0, _r);
};

/**
 * _ADD_DOOR_TO_SYSTEM_NEW
 * Registers a door, hashes: https://github.com/femga/rdr3_discoveries/tree/master/doorHashes
 *
 * @param {number} doorHash
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {number} threadId
 * @param {number} p5
 * @param {boolean} p6
 * @return {void}
 */
global.AddDoorToSystemNew = function (doorHash, p1, p2, p3, threadId, p5, p6) {
  return _in(0xd99229fe, 0x93b46286, _ch(doorHash), p1, p2, p3, threadId, p5, p6);
};

/**
 * _DAMAGE_BONE_ON_PROP
 *
 * @param {number} object
 * @param {number} bone
 * @return {void}
 */
global.DamageBoneOnProp = function (object, bone) {
  return _in(0xe4efb315, 0xbcd2a838, object, bone);
};

/**
 * _DOOR_SYSTEM_CHANGE_SCRIPT_OWNER
 *
 * @param {number} doorHash
 * @return {void}
 */
global.DoorSystemChangeScriptOwner = function (doorHash) {
  return _in(0x985767f5, 0xfa45bc44, _ch(doorHash));
};

/**
 * _DOOR_SYSTEM_FORCE_SHUT
 *
 * @param {number} doorHash
 * @param {boolean} p1
 * @return {void}
 */
global.DoorSystemForceShut = function (doorHash, p1) {
  return _in(0x276aaf0f, 0x1c7f2494, _ch(doorHash), p1);
};

/**
 * _DOOR_SYSTEM_GET_AUTOMATIC_RATE
 *
 * @param {number} doorHash
 * @return {number}
 */
global.DoorSystemGetAutomaticRate = function (doorHash) {
  return _in(0x8433e195, 0x4be323fc, _ch(doorHash), _r, _rf);
};

/**
 * _DOOR_SYSTEM_SET_ABLE_TO_CHANGE_OPEN_RATIO_WHILE_LOCKED
 *
 * @param {number} doorHash
 * @param {boolean} p1
 * @return {void}
 */
global.DoorSystemSetAbleToChangeOpenRatioWhileLocked = function (doorHash, p1) {
  return _in(0x1f1fabfe, 0x9b2a1254, _ch(doorHash), p1);
};

/**
 * _DOOR_SYSTEM_SET_AUTOMATIC_STATE
 * _ALLOW_* - _ATTACH_*
 *
 * @param {number} doorHash
 * @param {boolean} disable
 * @return {void}
 */
global.DoorSystemSetAutomaticState = function (doorHash, disable) {
  return _in(0x1bc47a9d, 0xedc8df5d, _ch(doorHash), disable);
};

/**
 * _GET_AMMO_TYPE_FROM_PICKUP_TYPE
 *
 * @param {number} pickupHash
 * @return {number}
 */
global.GetAmmoTypeFromPickupType = function (pickupHash) {
  return _in(0x44b09a23, 0xd728045a, _ch(pickupHash), _r, _ri);
};

/**
 * _GET_LIGHT_INTENSITY_FROM_OBJECT
 *
 * @param {number} object
 * @return {number}
 */
global.GetLightIntensityFromObject = function (object) {
  return _in(0xfa3b61ec, 0x249b4674, object, _r, _rf);
};

/**
 * _GET_OBJECT_LIGHT_INTENSITY
 * Returns float value to be used with _SET_LIGHT_INTENSITY_FOR_OBJECT
 *
 * @param {number} object
 * @return {number}
 */
global.GetObjectLightIntensity = function (object) {
  return _in(0x3397cd4e, 0x0353dfba, object, _r, _rf);
};

/**
 * _HIDE_PICKUP_OBJECT
 *
 * @param {number} pickupObject
 * @param {boolean} toggle
 * @return {void}
 */
global.HidePickupObject = function (pickupObject, toggle) {
  return _in(0x2777150c, 0xc7d9365e, pickupObject, toggle);
};

/**
 * _IS_DOOR_REGISTERED_WITH_NETWORK
 *
 * @param {number} doorHash
 * @return {boolean}
 */
global.IsDoorRegisteredWithNetwork = function (doorHash) {
  return _in(0xb5ded7b6, 0x5c604fdf, _ch(doorHash), _r);
};

/**
 * _IS_DOOR_REGISTERED_WITH_OWNER
 * Returns true if door is alredy registered with owner
 *
 * @param {number} doorHash
 * @return {boolean}
 */
global.IsDoorRegisteredWithOwner = function (doorHash) {
  return _in(0x4f89dad4, 0x156ba145, _ch(doorHash), _r);
};

/**
 * _IS_PICKUP_TYPE_VALID
 *
 * @param {number} pickupHash
 * @return {boolean}
 */
global.IsPickupTypeValid = function (pickupHash) {
  return _in(0x007bd043, 0x587f7c82, _ch(pickupHash), _r);
};

/**
 * _MAKE_ITEM_CARRIABLE
 * _PRE* or _Q* or _RE*
 *
 * @param {number} object
 * @return {void}
 */
global.MakeItemCarriable = function (object) {
  return _in(0x1461df6d, 0xb886be3f, object);
};

/**
 * _RESET_OBJECT_VELOCITY
 *
 * @param {number} object
 * @return {void}
 */
global.ResetObjectVelocity = function (object) {
  return _in(0xf40ab58d, 0x83c35027, object);
};

/**
 * _SET_AMBIENT_PICKUP_LIFETIME
 *
 * @param {number} lifetime
 * @return {void}
 */
global.SetAmbientPickupLifetime = function (lifetime) {
  return _in(0xac9ae68f, 0x0a463752, lifetime);
};

/**
 * _SET_AUTO_JUMPABLE_BY_HORSE
 * Sets object as auto-jumpable by horse.
 *
 * @param {number} object
 * @param {boolean} p1
 * @return {void}
 */
global.SetAutoJumpableByHorse = function (object, p1) {
  return _in(0x98d2d9c0, 0x53a1f449, object, p1);
};

/**
 * _SET_LIGHT_INTENSITY_FOR_OBJECT
 *
 * @param {number} object
 * @param {number} lightIntensity
 * @return {void}
 */
global.SetLightIntensityForObject = function (object, lightIntensity) {
  return _in(0xf49574e2, 0x332a8f06, object, _fv(lightIntensity));
};

/**
 * _SET_LIGHT_SCATTERING_DISABLED_FOR_OBJECT
 *
 * @param {number} object
 * @param {boolean} disable
 * @return {void}
 */
global.SetLightScatteringDisabledForObject = function (object, disable) {
  return _in(0x04d1d4e4, 0x11ce52d0, object, disable);
};

/**
 * _SET_LIGHT_TRANSLUCENCY_FOR_OBJECT
 * Params: value = 0.0 - 586.67 (?)
 *
 * @param {number} object
 * @param {number} value
 * @return {void}
 */
global.SetLightTranslucencyForObject = function (object, value) {
  return _in(0x63e39f09, 0x310f481f, object, _fv(value));
};

/**
 * _SET_NETWORK_PICKUP_USABLE_FOR_PLAYER
 * Params: p2 controls whether to make pickups usable/collectable or not in networked games
 *
 * @param {number} player
 * @param {number} pickupHash
 * @param {boolean} isUsable
 * @return {void}
 */
global.SetNetworkPickupUsableForPlayer = function (player, pickupHash, isUsable) {
  return _in(0x94f3d956, 0xbfaeae18, player, _ch(pickupHash), isUsable);
};

/**
 * _SET_NOT_JUMPABLE_BY_HORSE
 * Sets object as not jumpable by horse.
 *
 * @param {number} object
 * @param {boolean} p1
 * @return {void}
 */
global.SetNotJumpableByHorse = function (object, p1) {
  return _in(0xe1c708ba, 0x4885796b, object, p1);
};

/**
 * _SET_OBJECT_BREAK_SCALE
 *
 * @param {number} object
 * @param {number} scale
 * @return {void}
 */
global.SetObjectBreakScale = function (object, scale) {
  return _in(0xffb99ffd, 0x17f65889, object, _fv(scale));
};

/**
 * _SET_OBJECT_BURN_INTENSITY
 *
 * @param {number} object
 * @param {number} intensity
 * @return {void}
 */
global.SetObjectBurnIntensity = function (object, intensity) {
  return _in(0xc8e21c16, 0x77dc5e6f, object, _fv(intensity));
};

/**
 * _SET_OBJECT_BURN_LEVEL
 * Seems to mostly have effect on wood-made objects https://imgur.com/a/32oQvOn
 *
 * @param {number} object
 * @param {number} burnLevel
 * @param {boolean} affectAsh
 * @return {void}
 */
global.SetObjectBurnLevel = function (object, burnLevel, affectAsh) {
  return _in(0x2797c633, 0xdcdbbac5, object, _fv(burnLevel), affectAsh);
};

/**
 * _SET_OBJECT_BURN_OPACITY
 *
 * @param {number} object
 * @param {number} opacity
 * @return {void}
 */
global.SetObjectBurnOpacity = function (object, opacity) {
  return _in(0x7d7285ef, 0xeab5af15, object, _fv(opacity));
};

/**
 * _SET_OBJECT_BURN_SPEED
 * p2 is usually the same as speed parameter
 *
 * @param {number} object
 * @param {number} speed
 * @param {number} p2
 * @return {void}
 */
global.SetObjectBurnSpeed = function (object, speed, p2) {
  return _in(0x646564a3, 0xb7df68f8, object, _fv(speed), _fv(p2));
};

/**
 * _SET_OBJECT_KICKABLE
 *
 * @param {number} object
 * @param {boolean} kickable
 * @return {void}
 */
global.SetObjectKickable = function (object, kickable) {
  return _in(0xb7017da4, 0xd498269f, object, kickable);
};

/**
 * _SET_OBJECT_TARGETTABLE_2
 *
 * @param {number} object
 * @param {boolean} targettable
 * @return {void}
 */
global.SetObjectTargettable_2 = function (object, targettable) {
  return _in(0x581edbe5, 0x6e8d62c9, object, targettable);
};

/**
 * _SET_OBJECT_TARGETTABLE_FOCUS
 * When p1 and p2 are true you can focus on the object (similar to when you focus a ped)
 *
 * @param {number} object
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.SetObjectTargettableFocus = function (object, p1, p2) {
  return _in(0xa22712e8, 0x471aa08e, object, p1, p2);
};

/**
 * _SET_PICKUP_COLLECTABLE_ON_MOUNT
 *
 * @param {number} object
 * @return {void}
 */
global.SetPickupCollectableOnMount = function (object) {
  return _in(0x00ee0860, 0x3eadee92, object);
};

/**
 * CLEAR_CONTROL_LIGHT_EFFECT
 * nullsub, doesn't do anything
 *
 * @param {number} control
 * @return {void}
 */
global.ClearControlLightEffect = function (control) {
  return _in(0xcb0360ef, 0xefb2580d, control);
};

/**
 * CLEAR_CONTROL_SHAKE_SUPPRESSED_ID
 * Old name: _CLEAR_SUPPRESSED_PAD_RUMBLE
 *
 * @param {number} control
 * @return {void}
 */
global.ClearControlShakeSuppressedId = function (control) {
  return _in(0xa0cefcea, 0x390aab9b, control);
};

/**
 * DISABLE_ALL_CONTROL_ACTIONS
 *
 * @param {number} control
 * @return {void}
 */
global.DisableAllControlActions = function (control) {
  return _in(0x5f4b6931, 0x816e599b, control);
};

/**
 * DISABLE_CONTROL_ACTION
 *
 * @param {number} control
 * @param {number} action
 * @param {boolean} disableRelatedActions
 * @return {void}
 */
global.DisableControlAction = function (control, action, disableRelatedActions) {
  return _in(0xfe99b66d, 0x079cf6bc, control, _ch(action), disableRelatedActions);
};

/**
 * ENABLE_CONTROL_ACTION
 *
 * @param {number} control
 * @param {number} action
 * @param {boolean} enableRelatedActions
 * @return {void}
 */
global.EnableControlAction = function (control, action, enableRelatedActions) {
  return _in(0x35122025, 0x5d64c155, control, _ch(action), enableRelatedActions);
};

/**
 * GET_CONTROL_HOW_LONG_AGO
 * Returns time in ms since last input.
 *
 * @param {number} control
 * @return {number}
 */
global.GetControlHowLongAgo = function (control) {
  return _in(0xd7d22f55, 0x92aed8ba, control, _r, _ri);
};

/**
 * GET_CONTROL_NORMAL
 *
 * @param {number} control
 * @param {number} action
 * @return {number}
 */
global.GetControlNormal = function (control, action) {
  return _in(0xec3c9b8d, 0x5327b563, control, _ch(action), _r, _rf);
};

/**
 * GET_CONTROL_UNBOUND_NORMAL
 *
 * @param {number} control
 * @param {number} action
 * @return {number}
 */
global.GetControlUnboundNormal = function (control, action) {
  return _in(0x5b84d09c, 0xec5209c5, control, _ch(action), _r, _rf);
};

/**
 * GET_CONTROL_VALUE
 *
 * @param {number} control
 * @param {number} action
 * @return {number}
 */
global.GetControlValue = function (control, action) {
  return _in(0xd95e79e8, 0x686d2c27, control, _ch(action), _r, _ri);
};

/**
 * GET_DISABLED_CONTROL_NORMAL
 *
 * @param {number} control
 * @param {number} action
 * @return {number}
 */
global.GetDisabledControlNormal = function (control, action) {
  return _in(0x11e65974, 0xa982637c, control, _ch(action), _r, _rf);
};

/**
 * GET_DISABLED_CONTROL_UNBOUND_NORMAL
 *
 * @param {number} control
 * @param {number} action
 * @return {number}
 */
global.GetDisabledControlUnboundNormal = function (control, action) {
  return _in(0x4f8a26a8, 0x90fd62fb, control, _ch(action), _r, _rf);
};

/**
 * HAVE_CONTROLS_CHANGED
 *
 * @param {number} control
 * @return {boolean}
 */
global.HaveControlsChanged = function (control) {
  return _in(0x6cd79468, 0xa1e595c6, control, _r);
};

/**
 * IS_CONTROL_ENABLED
 *
 * @param {number} control
 * @param {number} action
 * @return {boolean}
 */
global.IsControlEnabled = function (control, action) {
  return _in(0x1cea6bfd, 0xf248e5d9, control, _ch(action), _r);
};

/**
 * IS_CONTROL_JUST_PRESSED
 *
 * @param {number} control
 * @param {number} action
 * @return {boolean}
 */
global.IsControlJustPressed = function (control, action) {
  return _in(0x58041710, 0x1ddb492f, control, _ch(action), _r);
};

/**
 * IS_CONTROL_JUST_RELEASED
 *
 * @param {number} control
 * @param {number} action
 * @return {boolean}
 */
global.IsControlJustReleased = function (control, action) {
  return _in(0x50f94025, 0x9d3841e6, control, _ch(action), _r);
};

/**
 * IS_CONTROL_PRESSED
 *
 * @param {number} control
 * @param {number} action
 * @return {boolean}
 */
global.IsControlPressed = function (control, action) {
  return _in(0xf3a21bcd, 0x95725a4a, control, _ch(action), _r);
};

/**
 * IS_CONTROL_RELEASED
 *
 * @param {number} control
 * @param {number} action
 * @return {boolean}
 */
global.IsControlReleased = function (control, action) {
  return _in(0x648ee3e7, 0xf38877dd, control, _ch(action), _r);
};

/**
 * IS_DISABLED_CONTROL_JUST_PRESSED
 *
 * @param {number} control
 * @param {number} action
 * @return {boolean}
 */
global.IsDisabledControlJustPressed = function (control, action) {
  return _in(0x91aef906, 0xbca88877, control, _ch(action), _r);
};

/**
 * IS_DISABLED_CONTROL_JUST_RELEASED
 *
 * @param {number} control
 * @param {number} action
 * @return {boolean}
 */
global.IsDisabledControlJustReleased = function (control, action) {
  return _in(0x305c8dcd, 0x79da8b0f, control, _ch(action), _r);
};

/**
 * IS_DISABLED_CONTROL_PRESSED
 *
 * @param {number} control
 * @param {number} action
 * @return {boolean}
 */
global.IsDisabledControlPressed = function (control, action) {
  return _in(0xe2587f8c, 0xbbd87b1d, control, _ch(action), _r);
};

/**
 * IS_LOOK_INVERTED
 *

 * @return {boolean}
 */
global.IsLookInverted = function () {
  return _in(0x77b61253, 0x1280010d, _r);
};

/**
 * IS_USING_KEYBOARD_AND_MOUSE
 * padIndex is not used
 * 
 * Old name: _IS_USING_KEYBOARD
 *
 * @param {number} control
 * @return {boolean}
 */
global.IsUsingKeyboardAndMouse = function (control) {
  return _in(0xa571d467, 0x27e2b718, control, _r);
};

/**
 * SET_CONTROL_LIGHT_EFFECT_COLOR
 * nullsub, doesn't do anything
 * 
 * Old name: _SET_CONTROL_GROUP_COLOR
 *
 * @param {number} control
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @return {void}
 */
global.SetControlLightEffectColor = function (control, red, green, blue) {
  return _in(0x8290252f, 0xff36acb5, control, red, green, blue);
};

/**
 * SET_CONTROL_LIGHT_EFFECT_FLASHING_COLOR
 * nullsub, doesn't do anything
 *
 * @param {number} control
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @return {void}
 */
global.SetControlLightEffectFlashingColor = function (control, red, green, blue) {
  return _in(0xa45884db, 0x10ec7ee3, control, red, green, blue);
};

/**
 * SET_CONTROL_SHAKE
 * Old name: SET_PAD_SHAKE
 *
 * @param {number} control
 * @param {number} duration
 * @param {number} frequency
 * @return {void}
 */
global.SetControlShake = function (control, duration, frequency) {
  return _in(0x48b3886c, 0x1358d0d5, control, duration, frequency);
};

/**
 * SET_CONTROL_SHAKE_SUPPRESSED_ID
 * Old name: SET_PAD_SHAKE_SUPPRESSED_ID
 *
 * @param {number} control
 * @param {number} uniqueId
 * @return {void}
 */
global.SetControlShakeSuppressedId = function (control, uniqueId) {
  return _in(0xf239400e, 0x16c23e08, control, uniqueId);
};

/**
 * SET_CONTROL_TRIGGER_SHAKE
 * nullsub, doesn't do anything
 *
 * @param {number} control
 * @param {number} leftDuration
 * @param {number} leftFrequency
 * @param {number} rightDuration
 * @param {number} rightFrequency
 * @return {void}
 */
global.SetControlTriggerShake = function (control, leftDuration, leftFrequency, rightDuration, rightFrequency) {
  return _in(0x14d29bb1, 0x2d47f68c, control, leftDuration, leftFrequency, rightDuration, rightFrequency);
};

/**
 * SET_CONTROL_VALUE_NEXT_FRAME
 * This is for simulating player input.
 * value is a float value from 0 - 1
 * 
 * control: see IS_CONTROL_ENABLED
 * 
 * Old name: _SET_CONTROL_NORMAL
 *
 * @param {number} control
 * @param {number} action
 * @param {number} value
 * @return {boolean}
 */
global.SetControlValueNextFrame = function (control, action, value) {
  return _in(0xe8a25867, 0xfba3b05e, control, _ch(action), _fv(value), _r);
};

/**
 * SET_INPUT_EXCLUSIVE
 *
 * @param {number} control
 * @param {number} action
 * @return {void}
 */
global.SetInputExclusive = function (control, action) {
  return _in(0xede476e5, 0xee29edb1, control, _ch(action));
};

/**
 * STOP_CONTROL_SHAKE
 * Old name: STOP_PAD_SHAKE
 *
 * @param {number} control
 * @return {void}
 */
global.StopControlShake = function (control) {
  return _in(0x38c16a30, 0x5e8cdc8d, control);
};

/**
 * _0x1252C029FC8EBB4D
 * _IS_R* - _IS_S*
 *

 * @return {boolean}
 */
global.N_0x1252C029FC8EBB4D = function () {
  return _in(0x1252c029, 0xfc8ebb4d, _r);
};

/**
 * _0x43F35DDB2905D945
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x43F35DDB2905D945 = function (p0, p1) {
  return _in(0x43f35ddb, 0x2905d945, p0, p1, _r);
};

/**
 * _0x52C68E92D6E23ADD
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x52C68E92D6E23ADD = function (p0) {
  return _in(0x52c68e92, 0xd6e23add, p0);
};

/**
 * _0x5F217BC1190503D8
 * rumbleCurve: common_0/data/rumblecurves.meta
 *
 * @param {string | number} rumbleCurve
 * @param {number} p1
 * @return {void}
 */
global.N_0x5F217BC1190503D8 = function (rumbleCurve, p1) {
  return _in(0x5f217bc1, 0x190503d8, _ts(rumbleCurve), _fv(p1));
};

/**
 * _0x709BA8C08C5C008D
 *

 * @return {void}
 */
global.N_0x709BA8C08C5C008D = function () {
  return _in(0x709ba8c0, 0x8c5c008d);
};

/**
 * _0xBD629C1C4F501C80
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xBD629C1C4F501C80 = function (p0) {
  return _in(0xbd629c1c, 0x4f501c80, p0, _r);
};

/**
 * _GET_CURRENT_CONTROL_CONTEXT
 * Gets the current control context. See: _SET_CONTROL_CONTEXT
 *
 * @param {number} control
 * @return {number}
 */
global.GetCurrentControlContext = function (control) {
  return _in(0xddceb0f2, 0x6c89c00f, control, _r, _ri);
};

/**
 * _GET_DISABLED_CONTROL_HOW_LONG_AGO
 *
 * @param {number} control
 * @return {number}
 */
global.GetDisabledControlHowLongAgo = function (control) {
  return _in(0x771dfcb2, 0x4d19c2f6, control, _r, _ri);
};

/**
 * _IS_CONTROL_ACTION_VALID
 *
 * @param {number} action
 * @param {number} control
 * @return {boolean}
 */
global.IsControlActionValid = function (action, control) {
  return _in(0xbc0884bc, 0x590951c7, _ch(action), control, _r);
};

/**
 * _SET_CONTROL_CONTEXT
 * Sets the current control context. Must be called every frame.
 * 
 * context: https://alloc8or.re/rdr3/doc/misc/input_contexts.txt
 * For more information, see common:/data/control/settings.meta
 * https://github.com/femga/rdr3_discoveries/tree/master/Controls
 *
 * @param {number} control
 * @param {number} context
 * @return {void}
 */
global.SetControlContext = function (control, context) {
  return _in(0x2804658e, 0xb7d8a50b, control, _ch(context));
};

/**
 * ADD_NAVMESH_BLOCKING_OBJECT
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {boolean} p7
 * @param {any} p8
 * @return {any}
 */
global.AddNavmeshBlockingObject = function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0xfcd5c8e0, 0x6e502f5a, _fv(p0), _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), p7, p8, _r);
};

/**
 * ADD_NAVMESH_REQUIRED_REGION
 *
 * @param {number} x
 * @param {number} y
 * @param {number} radius
 * @return {void}
 */
global.AddNavmeshRequiredRegion = function (x, y, radius) {
  return _in(0x387ead7e, 0xe42f6685, _fv(x), _fv(y), _fv(radius));
};

/**
 * ARE_NODES_LOADED_FOR_AREA
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @return {boolean}
 */
global.AreNodesLoadedForArea = function (x1, y1, x2, y2) {
  return _in(0xf7b79a50, 0xb905a30d, _fv(x1), _fv(y1), _fv(x2), _fv(y2), _r);
};

/**
 * DOES_NAVMESH_BLOCKING_OBJECT_EXIST
 *
 * @param {any} p0
 * @return {boolean}
 */
global.DoesNavmeshBlockingObjectExist = function (p0) {
  return _in(0x0eaeb0db, 0x4b132399, p0, _r);
};

/**
 * GET_APPROX_FLOOR_FOR_POINT
 * Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
 *
 * @param {number} x
 * @param {number} y
 * @return {number}
 */
global.GetApproxFloorForPoint = function (x, y) {
  return _in(0x336511a3, 0x4f2e5185, _fv(x), _fv(y), _r, _rf);
};

/**
 * GET_CLOSEST_ROAD
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @param {number} p4
 * @param {DataView} p7
 * @param {DataView} p8
 * @param {boolean} p10
 * @return {[any, Vector3, Vector3, number]}
 */
global.GetClosestRoad = function (x, y, z, p3, p4, p7, p8, p10) {
  return _in(0x132f52bb, 0xa570fe92, _fv(x), _fv(y), _fv(z), _fv(p3), p4, _v, _v, p7, p8, _f, p10, _r);
};

/**
 * GET_CLOSEST_VEHICLE_NODE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} nodeType
 * @param {number} p5
 * @param {number} p6
 * @return {[boolean, Vector3]}
 */
global.GetClosestVehicleNode = function (x, y, z, nodeType, p5, p6) {
  return _in(0x240a1869, 0x0ae96513, _fv(x), _fv(y), _fv(z), _v, nodeType, _fv(p5), _fv(p6), _r);
};

/**
 * GET_CLOSEST_VEHICLE_NODE_WITH_HEADING
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} nodeType
 * @param {number} p6
 * @param {number} p7
 * @return {[boolean, Vector3, number]}
 */
global.GetClosestVehicleNodeWithHeading = function (x, y, z, nodeType, p6, p7) {
  return _in(0x23cffd4c, 0xcb243354, _fv(x), _fv(y), _fv(z), _v, _f, nodeType, _fv(p6), _fv(p7), _r);
};

/**
 * GET_GPS_BLIP_ROUTE_FOUND
 *

 * @return {boolean}
 */
global.GetGpsBlipRouteFound = function () {
  return _in(0x869daacb, 0xbe9fa006, _r);
};

/**
 * GET_GPS_BLIP_ROUTE_LENGTH
 *

 * @return {number}
 */
global.GetGpsBlipRouteLength = function () {
  return _in(0xbbb45c3c, 0xf5c8aa85, _r, _ri);
};

/**
 * GET_NTH_CLOSEST_VEHICLE_NODE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} nthClosest
 * @param {number} unknown1
 * @param {number} unknown2
 * @param {any} unknown3
 * @return {[boolean, Vector3]}
 */
global.GetNthClosestVehicleNode = function (x, y, z, nthClosest, unknown1, unknown2, unknown3) {
  return _in(0x5a6d8df6, 0xfbc5d0c4, _fv(x), _fv(y), _fv(z), nthClosest, _v, unknown1, _fv(unknown2), unknown3, _r);
};

/**
 * GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} desiredX
 * @param {number} desiredY
 * @param {number} desiredZ
 * @param {number} nthClosest
 * @param {number} nodetype
 * @param {any} p10
 * @param {any} p11
 * @return {[boolean, Vector3, number]}
 */
global.GetNthClosestVehicleNodeFavourDirection = function (x, y, z, desiredX, desiredY, desiredZ, nthClosest, nodetype, p10, p11) {
  return _in(0x2fac235a, 0x6062f14a, _fv(x), _fv(y), _fv(z), _fv(desiredX), _fv(desiredY), _fv(desiredZ), nthClosest, _v, _f, nodetype, p10, p11, _r);
};

/**
 * GET_NTH_CLOSEST_VEHICLE_NODE_ID
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} nth
 * @param {number} nodetype
 * @param {number} p5
 * @param {number} p6
 * @return {number}
 */
global.GetNthClosestVehicleNodeId = function (x, y, z, nth, nodetype, p5, p6) {
  return _in(0x11644300, 0x8e5cefc3, _fv(x), _fv(y), _fv(z), nth, nodetype, _fv(p5), _fv(p6), _r, _ri);
};

/**
 * GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING
 * Returns the nth closest vehicle node with a heading to a coord
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} nthClosest
 * @param {number} nodeFlags
 * @param {number} zMeasureMult
 * @param {number} zTolerance
 * @return {[number, number, number]}
 */
global.GetNthClosestVehicleNodeIdWithHeading = function (x, y, z, nthClosest, nodeFlags, zMeasureMult, zTolerance) {
  return _in(0x4114eaa8, 0xa7f7766d, _fv(x), _fv(y), _fv(z), nthClosest, _f, _i, nodeFlags, _fv(zMeasureMult), _fv(zTolerance), _r, _ri);
};

/**
 * GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} nthClosest
 * @param {DataView} unknown1
 * @param {number} unknown2
 * @param {number} unknown3
 * @param {number} unknown4
 * @return {[boolean, Vector3, number]}
 */
global.GetNthClosestVehicleNodeWithHeading = function (x, y, z, nthClosest, unknown1, unknown2, unknown3, unknown4) {
  return _in(0x591b40d4, 0x390db54a, _fv(x), _fv(y), _fv(z), nthClosest, _v, _f, unknown1, unknown2, _fv(unknown3), _fv(unknown4), _r);
};

/**
 * GET_NUM_NAVMESHES_EXISTING_IN_AREA
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @return {number}
 */
global.GetNumNavmeshesExistingInArea = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x01708e8d, 0xd3ff8c65, _fv(p0), _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _r, _ri);
};

/**
 * GET_RANDOM_VEHICLE_NODE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} minLanes
 * @param {boolean} avoidDeadEnds
 * @param {boolean} avoidHighways
 * @return {[boolean, Vector3, number]}
 */
global.GetRandomVehicleNode = function (x, y, z, radius, minLanes, avoidDeadEnds, avoidHighways) {
  return _in(0x93e0db84, 0x40b73a7d, _fv(x), _fv(y), _fv(z), _fv(radius), minLanes, avoidDeadEnds, avoidHighways, _v, _i, _r);
};

/**
 * GET_SAFE_COORD_FOR_PED
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} onGround
 * @param {number} flags
 * @return {[boolean, Vector3]}
 */
global.GetSafeCoordForPed = function (x, y, z, onGround, flags) {
  return _in(0xb61c8e87, 0x8a4199ca, _fv(x), _fv(y), _fv(z), onGround, _v, flags, _r);
};

/**
 * GET_VEHICLE_NODE_IS_SWITCHED_OFF
 *
 * @param {number} nodeId
 * @return {boolean}
 */
global.GetVehicleNodeIsSwitchedOff = function (nodeId) {
  return _in(0x28533dbd, 0xdf7c2c97, nodeId, _r);
};

/**
 * GET_VEHICLE_NODE_POSITION
 *
 * @param {number} nodeId
 * @return {Vector3}
 */
global.GetVehicleNodePosition = function (nodeId) {
  return _in(0x8e8d72ff, 0x24dee1fb, nodeId, _v);
};

/**
 * IS_NAVMESH_LOADED_IN_AREA
 * Returns whether navmesh for the region is loaded.
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @return {boolean}
 */
global.IsNavmeshLoadedInArea = function (x1, y1, z1, x2, y2, z2) {
  return _in(0xf813c7e6, 0x3f9062a5, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _r);
};

/**
 * IS_POINT_ON_ROAD
 * Gets a value indicating whether the specified position is on a road.
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsPointOnRoad = function (x, y, z, vehicle) {
  return _in(0x125bf4ab, 0xfc536b09, _fv(x), _fv(y), _fv(z), vehicle, _r);
};

/**
 * IS_VEHICLE_NODE_ID_VALID
 * Returns true if the id is non zero.
 *
 * @param {number} vehicleNodeId
 * @return {boolean}
 */
global.IsVehicleNodeIdValid = function (vehicleNodeId) {
  return _in(0x5829a02a, 0xf4f0b3cb, vehicleNodeId, _r);
};

/**
 * NAVMESH_REQUEST_PATH
 * Starts a nav mesh query for a path between coordinates with a given ped and returns a handle to be validated by _NAVMESH_REQUESTED_QUERY_STATUS and then _NAVMESH_REQUESTED_PATH_WAYPOINTS_FOUND
 * 
 * Only bit flag values used in scripts are 0, 23, and 29. 23 is used with dogs and horses. 29 with legendary animals.
 *
 * @param {number} ped
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} bitFlag
 * @return {number}
 */
global.NavmeshRequestPath = function (ped, x1, y1, z1, x2, y2, z2, bitFlag) {
  return _in(0x348f211c, 0xa2404039, ped, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), bitFlag, _r, _ri);
};

/**
 * REMOVE_NAVMESH_BLOCKING_OBJECT
 *
 * @param {any} p0
 * @return {void}
 */
global.RemoveNavmeshBlockingObject = function (p0) {
  return _in(0x46399a78, 0x95957c0e, p0);
};

/**
 * REQUEST_PATH_NODES_IN_AREA_THIS_FRAME
 * Old name: REQUEST_PATHS_PREFER_ACCURATE_BOUNDINGSTRUCT
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @return {boolean}
 */
global.RequestPathNodesInAreaThisFrame = function (x1, y1, x2, y2) {
  return _in(0x07fb139b, 0x592fa687, _fv(x1), _fv(y1), _fv(x2), _fv(y2), _r);
};

/**
 * RESET_ROADS_IN_VOLUME
 *
 * @param {number} volume
 * @param {boolean} p1
 * @return {void}
 */
global.ResetRoadsInVolume = function (volume, p1) {
  return _in(0xd1767244, 0x7692478e, volume, p1);
};

/**
 * SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetAmbientPedRangeMultiplierThisFrame = function (multiplier) {
  return _in(0x0b919e1f, 0xb47cc4e0, _fv(multiplier));
};

/**
 * SET_IGNORE_NO_GPS_FLAG
 * nullsub, doesn't do anything
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetIgnoreNoGpsFlag = function (toggle) {
  return _in(0x72751156, 0xe7678833, toggle);
};

/**
 * SET_PED_PATHS_BACK_TO_ORIGINAL
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.SetPedPathsBackToOriginal = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xe04b48f2, 0xcc926253, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * SET_PED_PATHS_IN_AREA
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {boolean} unknown
 * @param {any} p7
 * @return {void}
 */
global.SetPedPathsInArea = function (x1, y1, z1, x2, y2, z2, unknown, p7) {
  return _in(0x34f060f4, 0xbf92e018, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), unknown, p7);
};

/**
 * SET_ROADS_BACK_TO_ORIGINAL
 *
 * @param {number} xMin
 * @param {number} yMin
 * @param {number} zMin
 * @param {number} xMax
 * @param {number} yMax
 * @param {number} zMax
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.SetRoadsBackToOriginal = function (xMin, yMin, zMin, xMax, yMax, zMax, p6, p7) {
  return _in(0x1ee7063b, 0x80ffc77c, _fv(xMin), _fv(yMin), _fv(zMin), _fv(xMax), _fv(yMax), _fv(zMax), p6, p7);
};

/**
 * SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {void}
 */
global.SetRoadsBackToOriginalInAngledArea = function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0x0027501b, 0x9f3b407e, p0, p1, p2, p3, p4, p5, p6, p7, p8);
};

/**
 * SET_ROADS_IN_ANGLED_AREA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @return {void}
 */
global.SetRoadsInAngledArea = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0x1a5aa120, 0x8af5db59, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
};

/**
 * SET_ROADS_IN_AREA
 *
 * @param {number} xMin
 * @param {number} yMin
 * @param {number} zMin
 * @param {number} xMax
 * @param {number} yMax
 * @param {number} zMax
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {void}
 */
global.SetRoadsInArea = function (xMin, yMin, zMin, xMax, yMax, zMax, p6, p7, p8) {
  return _in(0xbf1a602b, 0x5ba52fee, _fv(xMin), _fv(yMin), _fv(zMin), _fv(xMax), _fv(yMax), _fv(zMax), p6, p7, p8);
};

/**
 * SET_ROADS_IN_VOLUME
 *
 * @param {number} volume
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {void}
 */
global.SetRoadsInVolume = function (volume, p1, p2, p3) {
  return _in(0xc1799faf, 0xd2fdf52b, volume, p1, p2, p3);
};

/**
 * SIMULATED_ROUTE_GET_ETA
 *
 * @param {any} p0
 * @return {number}
 */
global.SimulatedRouteGetEta = function (p0) {
  return _in(0x2dd5f78d, 0x73b24172, p0, _r, _rf);
};

/**
 * SIMULATED_ROUTE_IS_LOADED
 *
 * @param {any} p0
 * @return {boolean}
 */
global.SimulatedRouteIsLoaded = function (p0) {
  return _in(0x24091504, 0x3cb799d7, p0, _r);
};

/**
 * SIMULATED_ROUTE_TRAVEL_TO_POINT
 *
 * @param {any} p0
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.SimulatedRouteTravelToPoint = function (p0, p1, p2) {
  return _in(0xa1a3de1c, 0x215c7394, p0, _fv(p1), _fv(p2));
};

/**
 * _0x264E9A5CD78C338F
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x264E9A5CD78C338F = function (p0) {
  return _in(0x264e9a5c, 0xd78c338f, p0);
};

/**
 * _0x34C9AF25649172D0
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x34C9AF25649172D0 = function (p0) {
  return _in(0x34c9af25, 0x649172d0, p0);
};

/**
 * _0x4358BCF14C91761C
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @return {void}
 */
global.N_0x4358BCF14C91761C = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x4358bcf1, 0x4c91761c, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
};

/**
 * _0x4BDEBEA5702B97A9
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0x4BDEBEA5702B97A9 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x4bdebea5, 0x702b97a9, p0, p1, p2, p3, p4, p5);
};

/**
 * _0x54F4D7B6670FBB5A
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {any}
 */
global.N_0x54F4D7B6670FBB5A = function (p0, p1, p2, p3, p4) {
  return _in(0x54f4d7b6, 0x670fbb5a, p0, p1, p2, p3, p4, _r);
};

/**
 * _0x5A3B54ADDF5472A3
 *
 * @param {string | number} p0
 * @return {number}
 */
global.N_0x5A3B54ADDF5472A3 = function (p0) {
  return _in(0x5a3b54ad, 0xdf5472a3, _ts(p0), _r, _ri);
};

/**
 * _0x5A4E1A41E3A02AD0
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x5A4E1A41E3A02AD0 = function (p0, p1, p2) {
  return _in(0x5a4e1a41, 0xe3a02ad0, p0, p1, p2);
};

/**
 * _0x665B21666351CB37
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x665B21666351CB37 = function (p0, p1, p2) {
  return _in(0x665b2166, 0x6351cb37, p0, p1, p2, _r);
};

/**
 * _0x6C3F12ECEB6D2E2A
 *
 * @param {number} xMin
 * @param {number} yMin
 * @param {number} zMin
 * @param {number} xMax
 * @param {number} yMax
 * @param {number} zMax
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.N_0x6C3F12ECEB6D2E2A = function (xMin, yMin, zMin, xMax, yMax, zMax, p6, p7) {
  return _in(0x6c3f12ec, 0xeb6d2e2a, _fv(xMin), _fv(yMin), _fv(zMin), _fv(xMax), _fv(yMax), _fv(zMax), p6, p7);
};

/**
 * _0x6DAD6630AE4A74CB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x6DAD6630AE4A74CB = function (p0, p1) {
  return _in(0x6dad6630, 0xae4a74cb, p0, p1);
};

/**
 * _0x869A7015BD4606E9
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x869A7015BD4606E9 = function (p0) {
  return _in(0x869a7015, 0xbd4606e9, p0);
};

/**
 * _0xA33914B00CA55756
 *
 * @param {string | number} p0
 * @param {number} p1
 * @return {any}
 */
global.N_0xA33914B00CA55756 = function (p0, p1) {
  return _in(0xa33914b0, 0x0ca55756, _ts(p0), p1, _r);
};

/**
 * _0xAFE2AE66F6251C66
 *
 * @param {number} xMin
 * @param {number} yMin
 * @param {number} zMin
 * @param {number} xMax
 * @param {number} yMax
 * @param {number} zMax
 * @param {number} p6
 * @param {any} p7
 * @return {void}
 */
global.N_0xAFE2AE66F6251C66 = function (xMin, yMin, zMin, xMax, yMax, zMax, p6, p7) {
  return _in(0xafe2ae66, 0xf6251c66, _fv(xMin), _fv(yMin), _fv(zMin), _fv(xMax), _fv(yMax), _fv(zMax), p6, p7);
};

/**
 * _0xB03944057FD735BA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xB03944057FD735BA = function (p0, p1, p2) {
  return _in(0xb0394405, 0x7fd735ba, p0, p1, p2);
};

/**
 * _0xCA27A86CAA4E98ED
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {any}
 */
global.N_0xCA27A86CAA4E98ED = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xca27a86c, 0xaa4e98ed, p0, p1, p2, p3, p4, p5, p6, _r);
};

/**
 * _0xCF213A5FC3ABFC08
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xCF213A5FC3ABFC08 = function (p0, p1, p2) {
  return _in(0xcf213a5f, 0xc3abfc08, p0, p1, p2);
};

/**
 * _0xE5EF9DE716FF737E
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xE5EF9DE716FF737E = function (p0, p1, p2) {
  return _in(0xe5ef9de7, 0x16ff737e, p0, p1, p2);
};

/**
 * _0xEFC535C9FAF563B3
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xEFC535C9FAF563B3 = function (p0) {
  return _in(0xefc535c9, 0xfaf563b3, p0, _r);
};

/**
 * _0xF2A2177AC848B3A8
 * GPS disabled zone: p1 = 0
 * Clearing GPS disabled zone: p1 = 1
 *
 * @param {number} volume
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0xF2A2177AC848B3A8 = function (volume, p1, p2) {
  return _in(0xf2a2177a, 0xc848b3a8, volume, p1, p2);
};

/**
 * _ADD_NAVMESH_BLOCKING_VOLUME
 *
 * @param {number} volume
 * @param {number} flags
 * @return {boolean}
 */
global.AddNavmeshBlockingVolume = function (volume, flags) {
  return _in(0x19c7567d, 0x2f2287d6, volume, flags, _r);
};

/**
 * _DOES_NAVMESH_BLOCKING_VOLUME_EXIST
 *
 * @param {number} volume
 * @return {boolean}
 */
global.DoesNavmeshBlockingVolumeExist = function (volume) {
  return _in(0xde0ea444, 0x735c1368, volume, _r);
};

/**
 * _GET_SPAWN_DATA_FOR_ROAD_NODE
 *
 * @param {number} nodeId
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {[Vector3, number]}
 */
global.GetSpawnDataForRoadNode = function (nodeId, x, y, z) {
  return _in(0xa3791b91, 0x5b8b84c6, nodeId, _fv(x), _fv(y), _fv(z), _v, _f);
};

/**
 * _NAVMESH_ACTIVATE_SWAP
 *
 * @param {string | number} name
 * @return {boolean}
 */
global.NavmeshActivateSwap = function (name) {
  return _in(0x7c334ff4, 0xd9215912, _ts(name), _r);
};

/**
 * _NAVMESH_ASSIGN_NAVMESH_TO_VEHICLE
 *
 * @param {number} vehicle
 * @param {string | number} navMeshName
 * @return {boolean}
 */
global.NavmeshAssignNavmeshToVehicle = function (vehicle, navMeshName) {
  return _in(0x44026e3d, 0xb3ced602, vehicle, _ts(navMeshName), _r);
};

/**
 * _NAVMESH_CLEAR_REQUESTED_PATH
 * Called in scripts after finished with requested pathes. Immediately resets all values connected to the path handle except query status, which changes from 1 to 2 before eventually becoming fully invalidated to 0.
 *
 * @param {number} path
 * @return {boolean}
 */
global.NavmeshClearRequestedPath = function (path) {
  return _in(0x661bb1e1, 0xff77742d, path, _r);
};

/**
 * _NAVMESH_DEACTIVATE_SWAP
 *
 * @param {string | number} name
 * @return {boolean}
 */
global.NavmeshDeactivateSwap = function (name) {
  return _in(0x527b97c2, 0x03bb8606, _ts(name), _r);
};

/**
 * _NAVMESH_DOES_SWAP_EXIST
 *
 * @param {string | number} name
 * @return {boolean}
 */
global.NavmeshDoesSwapExist = function (name) {
  return _in(0x495cfab2, 0x924237c7, _ts(name), _r);
};

/**
 * _NAVMESH_IS_SWAP_ACTIVE
 *
 * @param {string | number} name
 * @return {boolean}
 */
global.NavmeshIsSwapActive = function (name) {
  return _in(0x5ac0944c, 0x156e5f44, _ts(name), _r);
};

/**
 * _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS
 * Returns the number of waypoints for a requested path (NAVMESH_REQUEST_PATH) if the query is completed (_NAVMESH_REQUESTED_QUERY_STATUS). For use with _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
 *
 * @param {number} path
 * @return {number}
 */
global.NavmeshRequestedPathNumWaypoints = function (path) {
  return _in(0xd470725e, 0x0703d22f, path, _r, _ri);
};

/**
 * _NAVMESH_REQUESTED_PATH_WAYPOINTS_FOUND
 * Returns true if a path of waypoints was found. Waypoints can be retrieved with _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS and _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
 *
 * @param {number} path
 * @return {boolean}
 */
global.NavmeshRequestedPathWaypointsFound = function (path) {
  return _in(0x8800776e, 0x410eb669, path, _r);
};

/**
 * _NAVMESH_REQUESTED_PATH_WAYPOINTS_TERRAIN
 * Returns a bit flag for seemingly terrain within the waypoints in the path. Checked against bit value 2 to match water in the path, seems to always contain at least 1 though regardless of location/ped.
 *
 * @param {number} path
 * @return {number}
 */
global.NavmeshRequestedPathWaypointsTerrain = function (path) {
  return _in(0xf61cfede, 0xab627bfa, path, _r, _ri);
};

/**
 * _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
 * Returns a vector3 waypoint at the specified index for a path. Use _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS to get available indexes.
 *
 * @param {number} path
 * @param {number} waypointIndex
 * @return {Vector3}
 */
global.NavmeshRequestedPathWaypointByIndex = function (path, waypointIndex) {
  return _in(0x430f8319, 0xae56c8a9, path, waypointIndex, _r, _rv);
};

/**
 * _NAVMESH_REQUESTED_QUERY_STATUS
 * Returns eNavMeshQueryStatus
 * enum eNavMeshQueryStatus
 * {
 *   QS_NOT_FOUND,
 *   QS_COMPLETE,
 *   QS_PENDING
 * };
 * 
 * It appears that the pending state of 2 is at least also used when cleaning up a request (_NAVMESH_CLEAR_REQUESTED_PATH) or if a request never completes. Eventually queries are invalidated and return 0.
 * 
 * Old name: _NAVMESH_QUERY_STATUS
 *
 * @param {number} path
 * @return {number}
 */
global.NavmeshRequestedQueryStatus = function (path) {
  return _in(0x3a0f82f6, 0xee2291c8, path, _r, _ri);
};

/**
 * _REMOVE_NAVMESH_BLOCKING_VOLUME
 *
 * @param {number} volume
 * @return {void}
 */
global.RemoveNavmeshBlockingVolume = function (volume) {
  return _in(0x2c87c3e1, 0xc7b96ee2, volume);
};

/**
 * _SIMULATED_ROUTE_CREATE
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} p6
 * @return {any}
 */
global.SimulatedRouteCreate = function (x1, y1, z1, x2, y2, z2, p6) {
  return _in(0xfd5bb35a, 0xab83fd48, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), p6, _r);
};

/**
 * _SIMULATED_ROUTE_DELETE
 *
 * @param {any} p0
 * @return {void}
 */
global.SimulatedRouteDelete = function (p0) {
  return _in(0x4907d0e4, 0xfb26ee65, p0);
};

/**
 * _SIMULATED_ROUTE_EXISTS
 *
 * @param {any} p0
 * @return {boolean}
 */
global.SimulatedRouteExists = function (p0) {
  return _in(0x65a8196b, 0x8d7f5e0b, p0, _r);
};

/**
 * ADD_ARMOUR_TO_PED
 * Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
 *
 * @param {number} ped
 * @param {number} amount
 * @return {void}
 */
global.AddArmourToPed = function (ped, amount) {
  return _in(0x5ba652a0, 0xcd14df2f, ped, amount);
};

/**
 * ADD_CUSTOM_FORMATION_LOCATION
 *
 * @param {number} groupId
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} position
 * @return {void}
 */
global.AddCustomFormationLocation = function (groupId, x, y, z, position) {
  return _in(0x4e23cd07, 0xbd161e06, groupId, _fv(x), _fv(y), _fv(z), position);
};

/**
 * ADD_FORMATION_LOCATION
 *
 * @param {number} groupId
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @return {boolean}
 */
global.AddFormationLocation = function (groupId, p1, p2, p3) {
  return _in(0xb05945c1, 0xe9e60d91, groupId, _fv(p1), _fv(p2), _fv(p3), _r);
};

/**
 * ADD_RELATIONSHIP_GROUP
 * The hash of the created relationship group is output in the second parameter.
 *
 * @param {string | number} name
 * @return {[boolean, number]}
 */
global.AddRelationshipGroup = function (name) {
  return _in(0xf372bc22, 0xfcb88606, _ts(name), _i, _r);
};

/**
 * ADD_SCENARIO_BLOCKING_AREA
 * blockingFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScenarioBlockingFlags
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {boolean} p6
 * @param {number} blockingFlags
 * @return {number}
 */
global.AddScenarioBlockingArea = function (x1, y1, z1, x2, y2, z2, p6, blockingFlags) {
  return _in(0x1b5c85c6, 0x12e5256e, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), p6, blockingFlags, _r, _ri);
};

/**
 * APPLY_DAMAGE_TO_PED
 * damages a ped with the given amount
 *
 * @param {number} ped
 * @param {number} damageAmount
 * @param {boolean} damageArmour
 * @param {number} boneId
 * @param {number} pedKiller
 * @return {void}
 */
global.ApplyDamageToPed = function (ped, damageAmount, damageArmour, boneId, pedKiller) {
  return _in(0x697157ce, 0xd63f18d4, ped, damageAmount, damageArmour, boneId, pedKiller);
};

/**
 * APPLY_PED_BLOOD_SPECIFIC
 *
 * @param {number} ped
 * @param {any} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {any} p6
 * @param {number} p7
 * @param {DataView} p8
 * @return {void}
 */
global.ApplyPedBloodSpecific = function (ped, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0xef0d582c, 0xbf2d9b0f, ped, p1, _fv(p2), _fv(p3), _fv(p4), _fv(p5), p6, _fv(p7), p8);
};

/**
 * APPLY_PED_DAMAGE_PACK
 * https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_decals.lua
 *
 * @param {number} ped
 * @param {string | number} damagePack
 * @param {number} damage
 * @param {number} mult
 * @return {void}
 */
global.ApplyPedDamagePack = function (ped, damagePack, damage, mult) {
  return _in(0x46df9187, 0x88cb093f, ped, _ts(damagePack), _fv(damage), _fv(mult));
};

/**
 * CAN_KNOCK_PED_OFF_VEHICLE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.CanKnockPedOffVehicle = function (ped) {
  return _in(0x51ac07a4, 0x4d4f5b8a, ped, _r);
};

/**
 * CAN_PED_BE_MOUNTED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.CanPedBeMounted = function (ped) {
  return _in(0x2d64376c, 0xf437363e, ped, _r);
};

/**
 * CAN_PED_IN_COMBAT_SEE_TARGET
 *
 * @param {number} ped
 * @param {number} target
 * @return {boolean}
 */
global.CanPedInCombatSeeTarget = function (ped, target) {
  return _in(0xead42de3, 0x610d0721, ped, target, _r);
};

/**
 * CAN_PED_RAGDOLL
 *
 * @param {number} ped
 * @return {boolean}
 */
global.CanPedRagdoll = function (ped) {
  return _in(0x128f79ed, 0xcece4fd5, ped, _r);
};

/**
 * CAN_PED_SEE_ENTITY
 * Returns:
 * 0 - CTR_CANNOT_TARGET
 * 1 - CTR_CAN_TARGET
 * 2 - CTR_NOT_SURE_YET
 *
 * @param {number} ped
 * @param {number} targetEntity
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {number}
 */
global.CanPedSeeEntity = function (ped, targetEntity, p2, p3) {
  return _in(0x7f9b9791, 0xd4cb71f6, ped, targetEntity, p2, p3, _r, _ri);
};

/**
 * CAN_PED_SEE_PED_CACHED
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {boolean} p2
 * @return {number}
 */
global.CanPedSeePedCached = function (ped, targetPed, p2) {
  return _in(0x9d9473cb, 0x82d83a30, ped, targetPed, p2, _r, _ri);
};

/**
 * CLEAR_FACIAL_IDLE_ANIM_OVERRIDE
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearFacialIdleAnimOverride = function (ped) {
  return _in(0x726256cc, 0x1eeb182f, ped);
};

/**
 * CLEAR_PED_BLOOD_DAMAGE
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearPedBloodDamage = function (ped) {
  return _in(0x8fe22675, 0xa5a45817, ped);
};

/**
 * CLEAR_PED_BLOOD_DAMAGE_BY_ZONE
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.ClearPedBloodDamageByZone = function (ped, p1) {
  return _in(0x56e3b78c, 0x5408d9f4, ped, p1);
};

/**
 * CLEAR_PED_DAMAGE_DECAL_BY_ZONE
 *
 * @param {number} ped
 * @param {number} p1
 * @param {string | number} p2
 * @return {void}
 */
global.ClearPedDamageDecalByZone = function (ped, p1, p2) {
  return _in(0x523c79ae, 0xefcc4a2a, ped, p1, _ts(p2));
};

/**
 * CLEAR_PED_DECORATIONS
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearPedDecorations = function (ped) {
  return _in(0x0e5173c1, 0x63976e38, ped);
};

/**
 * CLEAR_PED_ENV_DIRT
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearPedEnvDirt = function (ped) {
  return _in(0x6585d955, 0xa68452a5, ped);
};

/**
 * CLEAR_PED_LAST_DAMAGE_BONE
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearPedLastDamageBone = function (ped) {
  return _in(0x8ef6b7ac, 0x68e2f01b, ped);
};

/**
 * CLEAR_PED_NON_CREATION_AREA
 *

 * @return {void}
 */
global.ClearPedNonCreationArea = function () {
  return _in(0x2e052080, 0x86ba0651);
};

/**
 * CLEAR_PED_WETNESS
 * It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearPedWetness = function (ped) {
  return _in(0x9c720776, 0xdaa43e7e, ped);
};

/**
 * CLEAR_RAGDOLL_BLOCKING_FLAGS
 * flags: see SET_RAGDOLL_BLOCKING_FLAGS
 *
 * @param {number} ped
 * @param {number} flags
 * @return {void}
 */
global.ClearRagdollBlockingFlags = function (ped, flags) {
  return _in(0xd86d101f, 0xcfd00a4b, ped, flags);
};

/**
 * CLEAR_RELATIONSHIP_BETWEEN_GROUPS
 *
 * @param {number} relationship
 * @param {number} group1
 * @param {number} group2
 * @return {void}
 */
global.ClearRelationshipBetweenGroups = function (relationship, group1, group2) {
  return _in(0x5e29243f, 0xb56fc6d4, relationship, _ch(group1), _ch(group2));
};

/**
 * CLONE_PED
 *
 * @param {number} ped
 * @param {boolean} isNetwork
 * @param {boolean} bScriptHostPed
 * @param {boolean} copyHeadBlendFlag
 * @return {number}
 */
global.ClonePed = function (ped, isNetwork, bScriptHostPed, copyHeadBlendFlag) {
  return _in(0xef29a163, 0x37facadb, ped, isNetwork, bScriptHostPed, copyHeadBlendFlag, _r, _ri);
};

/**
 * CLONE_PED_TO_TARGET
 * Copies ped's components and props to targetPed.
 * Can be used to clear anything from a ped by cloning it, including bullet holes.
 *
 * @param {number} ped
 * @param {number} targetPed
 * @return {void}
 */
global.ClonePedToTarget = function (ped, targetPed) {
  return _in(0xe952d643, 0x1689ad9a, ped, targetPed);
};

/**
 * COMPUTE_SATCHEL_ITEM_FOR_PED_DAMAGE
 *
 * @param {any} p0
 * @param {number} pedAttached
 * @param {number} damageCleanliness
 * @return {boolean}
 */
global.ComputeSatchelItemForPedDamage = function (p0, pedAttached, damageCleanliness) {
  return _in(0x9e7738b2, 0x91706746, p0, pedAttached, damageCleanliness, _r);
};

/**
 * COUNT_PEDS_IN_COMBAT_WITH_TARGET
 *
 * @param {number} ped
 * @param {number} flag
 * @return {number}
 */
global.CountPedsInCombatWithTarget = function (ped, flag) {
  return _in(0x5407b728, 0x8d0478b7, ped, flag, _r, _ri);
};

/**
 * COUNT_PEDS_IN_COMBAT_WITH_TARGET_WITHIN_RADIUS
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} flag
 * @return {number}
 */
global.CountPedsInCombatWithTargetWithinRadius = function (ped, x, y, z, radius, flag) {
  return _in(0x336b3d20, 0x0ab007cb, ped, _fv(x), _fv(y), _fv(z), _fv(radius), flag, _r, _ri);
};

/**
 * CREATE_GROUP
 * Creates a new ped group.
 * Groups can contain up to 8 peds.
 * 
 * The parameter is unused.
 * 
 * Returns a handle to the created group, or 0 if a group couldn't be created.
 *
 * @param {number} taskAllocator
 * @return {number}
 */
global.CreateGroup = function (taskAllocator) {
  return _in(0x90370ebe, 0x0fee1a3d, taskAllocator, _r, _ri);
};

/**
 * CREATE_PED
 *
 * @param {number} modelHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {boolean} isNetwork
 * @param {boolean} bScriptHostPed
 * @param {boolean} p7
 * @param {boolean} p8
 * @return {number}
 */
global.CreatePed = function (modelHash, x, y, z, heading, isNetwork, bScriptHostPed, p7, p8) {
  return _in(0xd49f9b09, 0x55c367de, _ch(modelHash), _fv(x), _fv(y), _fv(z), _fv(heading), isNetwork, bScriptHostPed, p7, p8, _r, _ri);
};

/**
 * CREATE_PED_INSIDE_VEHICLE
 * seatIndex:
 * enum eVehicleSeat
 * {
 *   VS_ANY_PASSENGER = -2,
 *   VS_DRIVER,
 *   VS_FRONT_RIGHT,
 *   VS_BACK_LEFT,
 *   VS_BACK_RIGHT,
 *   VS_EXTRA_LEFT_1,
 *   VS_EXTRA_RIGHT_1,
 *   VS_EXTRA_LEFT_2,
 *   VS_EXTRA_RIGHT_2,
 *   VS_EXTRA_LEFT_3,
 *   VS_EXTRA_RIGHT_3,
 *   VS_NUM_SEATS
 * };
 *
 * @param {number} vehicle
 * @param {number} modelHash
 * @param {number} seatIndex
 * @param {boolean} p3
 * @param {boolean} p4
 * @param {boolean} p5
 * @return {number}
 */
global.CreatePedInsideVehicle = function (vehicle, modelHash, seatIndex, p3, p4, p5) {
  return _in(0x7dd95987, 0x4c1fd534, vehicle, _ch(modelHash), seatIndex, p3, p4, p5, _r, _ri);
};

/**
 * CREATE_PED_ON_MOUNT
 *
 * @param {number} mount
 * @param {number} modelHash
 * @param {number} index
 * @param {boolean} p3
 * @param {boolean} p4
 * @param {boolean} p5
 * @param {boolean} p6
 * @return {number}
 */
global.CreatePedOnMount = function (mount, modelHash, index, p3, p4, p5, p6) {
  return _in(0xf89aa2bd, 0x01fc06b7, mount, _ch(modelHash), index, p3, p4, p5, p6, _r, _ri);
};

/**
 * DELETE_PED
 * Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
 *

 * @return {number}
 */
global.DeletePed = function () {
  return _in(0xcc0ef140, 0xf99365c5, _i);
};

/**
 * DETACH_CARRIABLE_ENTITY
 *
 * @param {number} entity
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.DetachCarriableEntity = function (entity, p1, p2) {
  return _in(0xed00d72f, 0x81cf7278, entity, p1, p2);
};

/**
 * DISABLE_PED_INJURED_ON_GROUND_BEHAVIOUR
 *
 * @param {number} ped
 * @return {void}
 */
global.DisablePedInjuredOnGroundBehaviour = function (ped) {
  return _in(0x733c87d4, 0xce22bea2, ped);
};

/**
 * DOES_GROUP_EXIST
 *
 * @param {number} groupId
 * @return {boolean}
 */
global.DoesGroupExist = function (groupId) {
  return _in(0x7c6b0c22, 0xf9f40bbe, groupId, _r);
};

/**
 * EXPLODE_PED_HEAD
 * Forces the ped to fall back and kills it.
 * 
 * It doesn't really explode the ped's head but it kills the ped
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @return {void}
 */
global.ExplodePedHead = function (ped, weaponHash) {
  return _in(0x2d05ced3, 0xa38d0f3a, ped, _ch(weaponHash));
};

/**
 * FADE_AND_DESTROY_PED
 *

 * @return {number}
 */
global.FadeAndDestroyPed = function () {
  return _in(0x7043d068, 0x1285ba2d, _i);
};

/**
 * FIND_ALL_ATTACHED_CARRIABLE_ENTITIES
 *
 * @param {number} ped
 * @param {number} itemset
 * @return {void}
 */
global.FindAllAttachedCarriableEntities = function (ped, itemset) {
  return _in(0xb5ace8b2, 0x3a438ec0, ped, itemset);
};

/**
 * FORCE_ALL_HEADING_VALUES_TO_ALIGN
 * Old name: _FREEZE_PED_CAMERA_ROTATION
 *
 * @param {number} ped
 * @return {void}
 */
global.ForceAllHeadingValuesToAlign = function (ped) {
  return _in(0xff287323, 0xb0e2c69a, ped);
};

/**
 * FORCE_PED_AI_AND_ANIMATION_UPDATE
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.ForcePedAiAndAnimationUpdate = function (ped, p1, p2) {
  return _in(0x22084380, 0x12482a1a, ped, p1, p2);
};

/**
 * FORCE_PED_MOTION_STATE
 * motionStateHash: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/FORCE_PED_MOTION_STATE
 *
 * @param {number} ped
 * @param {number} motionStateHash
 * @param {boolean} p2
 * @param {number} p3
 * @param {boolean} p4
 * @return {boolean}
 */
global.ForcePedMotionState = function (ped, motionStateHash, p2, p3, p4) {
  return _in(0xf28965d0, 0x4f570dca, ped, _ch(motionStateHash), p2, p3, p4, _r);
};

/**
 * GET_ANIM_INITIAL_OFFSET_POSITION
 *
 * @param {string | number} animDict
 * @param {string | number} animName
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} p8
 * @param {number} p9
 * @return {Vector3}
 */
global.GetAnimInitialOffsetPosition = function (animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9) {
  return _in(0xbe22b26d, 0xd764c040, _ts(animDict), _ts(animName), _fv(x), _fv(y), _fv(z), _fv(xRot), _fv(yRot), _fv(zRot), _fv(p8), p9, _r, _rv);
};

/**
 * GET_ANIM_INITIAL_OFFSET_ROTATION
 *
 * @param {string | number} animDict
 * @param {string | number} animName
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} p8
 * @param {number} p9
 * @return {Vector3}
 */
global.GetAnimInitialOffsetRotation = function (animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9) {
  return _in(0x4b805e60, 0x46ee9e47, _ts(animDict), _ts(animName), _fv(x), _fv(y), _fv(z), _fv(xRot), _fv(yRot), _fv(zRot), _fv(p8), p9, _r, _rv);
};

/**
 * GET_CARRIED_ATTACHED_INFO_FOR_SLOT
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.GetCarriedAttachedInfoForSlot = function (p0, p1, p2, p3) {
  return _in(0x608bc6a6, 0xaacd5036, p0, p1, p2, p3, _r);
};

/**
 * GET_CLOSEST_PED
 * Gets the closest ped in a radius.
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {boolean} p4
 * @param {boolean} p5
 * @param {boolean} p7
 * @param {boolean} p8
 * @param {boolean} p9
 * @param {number} pedType
 * @return {[boolean, Ped]}
 */
global.GetClosestPed = function (x, y, z, radius, p4, p5, p7, p8, p9, pedType) {
  return _in(0xc33ab876, 0xa77f8164, _fv(x), _fv(y), _fv(z), _fv(radius), p4, p5, _i, p7, p8, p9, pedType, _r);
};

/**
 * GET_COMBAT_FLOAT
 *
 * @param {number} ped
 * @param {number} combatType
 * @return {number}
 */
global.GetCombatFloat = function (ped, combatType) {
  return _in(0x52dff8a1, 0x0508090a, ped, combatType, _r, _rf);
};

/**
 * GET_CURRENT_TARGET_FOR_PED
 *
 * @param {number} ped
 * @return {number}
 */
global.GetCurrentTargetForPed = function (ped) {
  return _in(0xcd66fea2, 0x9400a0b5, ped, _r, _ri);
};

/**
 * GET_DEAD_PED_PICKUP_COORDS
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {Vector3}
 */
global.GetDeadPedPickupCoords = function (ped, p1, p2) {
  return _in(0xcd5003b0, 0x97200f36, ped, _fv(p1), _fv(p2), _r, _rv);
};

/**
 * GET_GROUP_SIZE
 *
 * @param {number} groupId
 * @return {[boolean, number]}
 */
global.GetGroupSize = function (groupId) {
  return _in(0x8de69fe3, 0x5ca09a45, groupId, /* actually bool */ _i, _i);
};

/**
 * GET_IS_PED_RESPONDING_TO_NEGATIVE_INTERACTION
 *
 * @param {number} ped
 * @param {number} player
 * @return {boolean}
 */
global.GetIsPedRespondingToNegativeInteraction = function (ped, player) {
  return _in(0xa454d234, 0xe45bb6e5, ped, player, _r);
};

/**
 * GET_IS_PED_RESPONDING_TO_POSITIVE_INTERACTION
 *
 * @param {number} ped
 * @param {number} player
 * @return {boolean}
 */
global.GetIsPedRespondingToPositiveInteraction = function (ped, player) {
  return _in(0x9337183f, 0xda2e9035, ped, player, _r);
};

/**
 * GET_JACK_TARGET
 *
 * @param {number} ped
 * @return {number}
 */
global.GetJackTarget = function (ped) {
  return _in(0x5486a79d, 0x9fbd342d, ped, _r, _ri);
};

/**
 * GET_LOOTING_PICKUP_TARGET_ENTITY
 *
 * @param {number} ped
 * @return {number}
 */
global.GetLootingPickupTargetEntity = function (ped) {
  return _in(0x14169fa8, 0x23679e41, ped, _r, _ri);
};

/**
 * GET_MELEE_TARGET_FOR_PED
 *
 * @param {number} ped
 * @return {number}
 */
global.GetMeleeTargetForPed = function (ped) {
  return _in(0x18a3e9ee, 0x1297fd39, ped, _r, _ri);
};

/**
 * GET_META_PED_ASSET_GUIDS
 * This is a way to get what drawables a ped has equipped
 * Example: you are able to tell if the ped has the drawable PLAYER_ZERO_HAT_017 attached
 * Note: this works with non shop components, direct .ydd files.
 *
 * @param {number} ped
 * @param {number} index
 * @return {[boolean, number, number, number, number]}
 */
global.GetMetaPedAssetGuids = function (ped, index) {
  return _in(0xa9c28516, 0xa6dc9d56, ped, index, _i, _i, _i, _i, _r);
};

/**
 * GET_META_PED_ASSET_TINT
 *
 * @param {number} ped
 * @param {number} index
 * @return {[boolean, number, number, number, number]}
 */
global.GetMetaPedAssetTint = function (ped, index) {
  return _in(0xe7998fec, 0x53a33bbe, ped, index, _i, _i, _i, _i, _r);
};

/**
 * GET_MOUNT
 *
 * @param {number} ped
 * @return {number}
 */
global.GetMount = function (ped) {
  return _in(0xe7e11b8d, 0xcbed1058, ped, _r, _ri);
};

/**
 * GET_NUM_META_PED_OUTFITS
 *
 * @param {number} ped
 * @return {number}
 */
global.GetNumMetaPedOutfits = function (ped) {
  return _in(0x10c70a51, 0x5bc03707, ped, _r, _ri);
};

/**
 * GET_PEDS_JACKER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedsJacker = function (ped) {
  return _in(0x9b128dc3, 0x6c1e04cf, ped, _r, _ri);
};

/**
 * GET_PED_ACCURACY
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedAccuracy = function (ped) {
  return _in(0x37f4ad56, 0xecbc0cd6, ped, _r, _ri);
};

/**
 * GET_PED_AS_GROUP_LEADER
 *
 * @param {number} groupId
 * @return {number}
 */
global.GetPedAsGroupLeader = function (groupId) {
  return _in(0x5cce68db, 0xd5fe93ec, groupId, _r, _ri);
};

/**
 * GET_PED_AS_GROUP_MEMBER
 *
 * @param {number} groupId
 * @param {number} memberNumber
 * @return {number}
 */
global.GetPedAsGroupMember = function (groupId, memberNumber) {
  return _in(0x51455483, 0xcf23ed97, groupId, memberNumber, _r, _ri);
};

/**
 * GET_PED_BLACKBOARD_SCRIPT_BOOL
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @return {boolean}
 */
global.GetPedBlackboardScriptBool = function (ped, variableName) {
  return _in(0x4912dfe4, 0x92db98cd, ped, _ts(variableName), _r);
};

/**
 * GET_PED_BLACKBOARD_SCRIPT_FLOAT
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @return {number}
 */
global.GetPedBlackboardScriptFloat = function (ped, variableName) {
  return _in(0xa29fd00d, 0x45311eb7, ped, _ts(variableName), _r, _rf);
};

/**
 * GET_PED_BLACKBOARD_SCRIPT_INT
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @return {number}
 */
global.GetPedBlackboardScriptInt = function (ped, variableName) {
  return _in(0xb71b91b3, 0x98f8f067, ped, _ts(variableName), _r, _ri);
};

/**
 * GET_PED_BONE_COORDS
 * Gets the position of the specified bone of the specified ped.
 * 
 * ped: The ped to get the position of a bone from.
 * boneId: The ID of the bone to get the position from. This is NOT the index.
 * offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
 * offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
 * offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
 *
 * @param {number} ped
 * @param {number} boneId
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @return {Vector3}
 */
global.GetPedBoneCoords = function (ped, boneId, offsetX, offsetY, offsetZ) {
  return _in(0x17c07fc6, 0x40e86b4e, ped, boneId, _fv(offsetX), _fv(offsetY), _fv(offsetZ), _r, _rv);
};

/**
 * GET_PED_BONE_INDEX
 * no bone = -1
 *
 * @param {number} ped
 * @param {number} boneId
 * @return {number}
 */
global.GetPedBoneIndex = function (ped, boneId) {
  return _in(0x3f428d08, 0xbe5aae31, ped, boneId, _r, _ri);
};

/**
 * GET_PED_CAUSE_OF_DEATH
 * Returns the hash of the weapon/model/object that killed the ped.
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedCauseOfDeath = function (ped) {
  return _in(0x16ffe42a, 0xb2d2dc59, ped, _r, _ri);
};

/**
 * GET_PED_COMBAT_MOVEMENT
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedCombatMovement = function (ped) {
  return _in(0xdea92412, 0xfcaeb3f5, ped, _r, _ri);
};

/**
 * GET_PED_CONFIG_FLAG
 * flagId: see SET_PED_CONFIG_FLAG
 *
 * @param {number} ped
 * @param {number} flagId
 * @param {boolean} p2
 * @return {boolean}
 */
global.GetPedConfigFlag = function (ped, flagId, p2) {
  return _in(0x7ee53118, 0xc892b513, ped, flagId, p2, _r);
};

/**
 * GET_PED_CROUCH_MOVEMENT
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetPedCrouchMovement = function (ped) {
  return _in(0xd5fe956c, 0x70ff370b, ped, _r);
};

/**
 * GET_PED_CURRENT_MOVE_BLEND_RATIO
 * Old name: _GET_PED_CURRENT_MOVEMENT_SPEED
 *
 * @param {number} ped
 * @return {[boolean, number, number]}
 */
global.GetPedCurrentMoveBlendRatio = function (ped) {
  return _in(0xf60165e1, 0xd2c5370b, ped, _f, _f, _r);
};

/**
 * GET_PED_DEFENSIVE_AREA_POSITION
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {Vector3}
 */
global.GetPedDefensiveAreaPosition = function (ped, p1) {
  return _in(0x3c06b878, 0x6dd94cd1, ped, p1, _r, _rv);
};

/**
 * GET_PED_GRAPPLE_STATE
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedGrappleState = function (ped) {
  return _in(0x2311f15d, 0x971aa680, ped, _r, _ri);
};

/**
 * GET_PED_GROUP_INDEX
 * Returns the groupId of which the specified ped is a member of.
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedGroupIndex = function (ped) {
  return _in(0xf162e133, 0xb4e7a675, ped, _r, _ri);
};

/**
 * GET_PED_IS_BEING_GRAPPLED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetPedIsBeingGrappled = function (ped) {
  return _in(0x3bdfcf25, 0xb58b0415, ped, _r);
};

/**
 * GET_PED_IS_DOING_COMBAT_ROLL
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetPedIsDoingCombatRoll = function (ped) {
  return _in(0xc48a9eb0, 0xd499b3e5, ped, _r);
};

/**
 * GET_PED_IS_GRAPPLING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetPedIsGrappling = function (ped) {
  return _in(0x0e99e3bf, 0x11bb6367, ped, _r);
};

/**
 * GET_PED_LAST_DAMAGE_BONE
 *
 * @param {number} ped
 * @return {[boolean, number]}
 */
global.GetPedLastDamageBone = function (ped) {
  return _in(0xd75960f6, 0xbd9ea49c, ped, _i, _r);
};

/**
 * GET_PED_LOOT_STATUS_MP
 * enum ePedLootStatus
 * {
 *   PLS_NONE,
 *   PLS_PRE_LOOT,
 *   PLS_SAMPLING,
 *   PLS_SKINNING
 * };
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedLootStatusMp = function (ped) {
  return _in(0xc737697c, 0x41628340, ped, _r, _ri);
};

/**
 * GET_PED_MAX_HEALTH
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedMaxHealth = function (ped) {
  return _in(0x4700a416, 0xe8324ef3, ped, _r, _ri);
};

/**
 * GET_PED_MONEY
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedMoney = function (ped) {
  return _in(0x3f69145b, 0xba87bae7, ped, _r, _ri);
};

/**
 * GET_PED_MOTION_FOCUS_ENTITY
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedMotionFocusEntity = function (ped) {
  return _in(0x243e1b46, 0x07040057, ped, _r, _ri);
};

/**
 * GET_PED_NEARBY_PEDS
 *
 * @param {number} ped
 * @param {DataView} sizeAndPeds
 * @param {number} ignoredPedType
 * @param {number} p3
 * @return {number}
 */
global.GetPedNearbyPeds = function (ped, sizeAndPeds, ignoredPedType, p3) {
  return _in(0x23f8f5fc, 0x7e8c4a6b, ped, sizeAndPeds, ignoredPedType, p3, _r, _ri);
};

/**
 * GET_PED_NEARBY_VEHICLES
 *
 * @param {number} ped
 * @param {DataView} sizeAndVehs
 * @return {number}
 */
global.GetPedNearbyVehicles = function (ped, sizeAndVehs) {
  return _in(0xcff869cb, 0xfa210d82, ped, sizeAndVehs, _r, _ri);
};

/**
 * GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedRelationshipGroupDefaultHash = function (ped) {
  return _in(0x42fdd0f0, 0x17b1e38e, ped, _r, _ri);
};

/**
 * GET_PED_RELATIONSHIP_GROUP_HASH
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedRelationshipGroupHash = function (ped) {
  return _in(0x7dbdd048, 0x62d95f04, ped, _r, _ri);
};

/**
 * GET_PED_RESET_FLAG
 *
 * @param {number} ped
 * @param {number} flagId
 * @return {boolean}
 */
global.GetPedResetFlag = function (ped, flagId) {
  return _in(0xaf9e59b1, 0xb1fbf2a0, ped, flagId, _r);
};

/**
 * GET_PED_SOURCE_OF_DEATH
 * Returns the entity that killed the ped
 * 
 * It is best to check if the Ped is dead before asking for its killer.
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedSourceOfDeath = function (ped) {
  return _in(0x93c8b64d, 0xeb84728c, ped, _r, _ri);
};

/**
 * GET_PED_STEALTH_MOVEMENT
 * Returns whether the entity is in stealth mode
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetPedStealthMovement = function (ped) {
  return _in(0x7c2ac9ca, 0x66575fbf, ped, _r);
};

/**
 * GET_PED_TIME_OF_DEATH
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedTimeOfDeath = function (ped) {
  return _in(0x1e98817b, 0x311ae98a, ped, _r, _ri);
};

/**
 * GET_PED_TO_PLAYER_WEAPON_DAMAGE_MODIFIER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedToPlayerWeaponDamageModifier = function (ped) {
  return _in(0x936e7cad, 0x0ae2ee14, ped, _r, _rf);
};

/**
 * GET_PED_TYPE
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedType = function (ped) {
  return _in(0xff059e1e, 0x4c01e63c, ped, _r, _ri);
};

/**
 * GET_PLAYER_PED_IS_FOLLOWING
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPlayerPedIsFollowing = function (ped) {
  return _in(0x6a3975de, 0xa89f9a17, ped, _r, _ri);
};

/**
 * GET_RELATIONSHIP_BETWEEN_GROUPS
 *
 * @param {number} group1
 * @param {number} group2
 * @return {number}
 */
global.GetRelationshipBetweenGroups = function (group1, group2) {
  return _in(0x9e6b7006, 0x1662ae5c, _ch(group1), _ch(group2), _r, _ri);
};

/**
 * GET_RELATIONSHIP_BETWEEN_PEDS
 *
 * @param {number} ped1
 * @param {number} ped2
 * @return {number}
 */
global.GetRelationshipBetweenPeds = function (ped1, ped2) {
  return _in(0xeba5ad3a, 0x0eaf7121, ped1, ped2, _r, _ri);
};

/**
 * GET_SEAT_PED_IS_TRYING_TO_ENTER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetSeatPedIsTryingToEnter = function (ped) {
  return _in(0x6f4c85ac, 0xd641bcd2, ped, _r, _ri);
};

/**
 * GET_SEAT_PED_IS_USING
 *
 * @param {number} ped
 * @return {number}
 */
global.GetSeatPedIsUsing = function (ped) {
  return _in(0x4e76cb57, 0x222a00e5, ped, _r, _ri);
};

/**
 * GET_TRACKED_PED_PIXELCOUNT
 *
 * @param {number} ped
 * @return {number}
 */
global.GetTrackedPedPixelcount = function (ped) {
  return _in(0x511f1a68, 0x3387c7e2, ped, _r, _ri);
};

/**
 * GET_VEHICLE_PED_IS_ENTERING
 *
 * @param {number} ped
 * @return {number}
 */
global.GetVehiclePedIsEntering = function (ped) {
  return _in(0xf92691ae, 0xd837a5fc, ped, _r, _ri);
};

/**
 * GET_VEHICLE_PED_IS_IN
 * Gets the vehicle the specified Ped is in.
 * 
 * If the Ped is not in a vehicle and includeLastVehicle is true, the vehicle they were last in is returned.
 *
 * @param {number} ped
 * @param {boolean} lastVehicle
 * @return {number}
 */
global.GetVehiclePedIsIn = function (ped, lastVehicle) {
  return _in(0x9a9112a0, 0xfe9a4713, ped, lastVehicle, _r, _ri);
};

/**
 * GET_VEHICLE_PED_IS_USING
 *
 * @param {number} ped
 * @return {number}
 */
global.GetVehiclePedIsUsing = function (ped) {
  return _in(0x6094ad01, 0x1a2ea87d, ped, _r, _ri);
};

/**
 * GIVE_PED_HASH_SCENARIO_PROP
 *
 * @param {number} ped
 * @param {number} object
 * @param {string | number} conditionalAnim
 * @param {number} scenarioType
 * @param {number} p4
 * @param {boolean} p5
 * @return {boolean}
 */
global.GivePedHashScenarioProp = function (ped, object, conditionalAnim, scenarioType, p4, p5) {
  return _in(0x2b02db08, 0x2258625f, ped, object, _ts(conditionalAnim), _ch(scenarioType), _ch(p4), p5, _r);
};

/**
 * HAS_MOTION_TYPE_ASSET_LOADED
 *
 * @param {number} nameHash
 * @param {number} ped
 * @return {boolean}
 */
global.HasMotionTypeAssetLoaded = function (nameHash, ped) {
  return _in(0x854bc9b1, 0xa1ccd034, _ch(nameHash), ped, _r);
};

/**
 * INIT_PED_DEFAULT_HEALTH
 *
 * @param {number} ped
 * @return {void}
 */
global.InitPedDefaultHealth = function (ped) {
  return _in(0x7dd7fb34, 0x80d8083e, ped);
};

/**
 * INSTANTLY_FILL_PED_POPULATION
 *

 * @return {void}
 */
global.InstantlyFillPedPopulation = function () {
  return _in(0x4759cc73, 0x0f947c81);
};

/**
 * IS_ANIMAL_INTERACTION_POSSIBLE
 *
 * @param {number} ped
 * @param {number} animal
 * @return {boolean}
 */
global.IsAnimalInteractionPossible = function (ped, animal) {
  return _in(0xd543d3a8, 0xfde4f185, ped, animal, _r);
};

/**
 * IS_ANY_HOSTILE_PED_NEAR_POINT
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {boolean}
 */
global.IsAnyHostilePedNearPoint = function (ped, x, y, z, radius) {
  return _in(0x68772db2, 0xb2526f9f, ped, _fv(x), _fv(y), _fv(z), _fv(radius), _r);
};

/**
 * IS_ANY_PED_NEAR_POINT
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {boolean}
 */
global.IsAnyPedNearPoint = function (x, y, z, radius) {
  return _in(0x08396149, 0x8679dc9f, _fv(x), _fv(y), _fv(z), _fv(radius), _r);
};

/**
 * IS_ANY_PED_SHOOTING_IN_AREA
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {boolean} p6
 * @param {boolean} p7
 * @return {boolean}
 */
global.IsAnyPedShootingInArea = function (x1, y1, z1, x2, y2, z2, p6, p7) {
  return _in(0xa0d3d71e, 0xa1086c55, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), p6, p7, _r);
};

/**
 * IS_EVENT_IN_QUEUE
 *
 * @param {number} ped
 * @param {number} eventType
 * @return {boolean}
 */
global.IsEventInQueue = function (ped, eventType) {
  return _in(0xc8d523bf, 0x5bbd3808, ped, _ch(eventType), _r);
};

/**
 * IS_GROUP_LOCALLY_CONTROLLED
 *
 * @param {number} groupId
 * @return {boolean}
 */
global.IsGroupLocallyControlled = function (groupId) {
  return _in(0x909ad9e9, 0xa92a10df, groupId, _r);
};

/**
 * IS_INSTANTLY_FILL_PED_POPULATION_FINISHED
 *

 * @return {boolean}
 */
global.IsInstantlyFillPedPopulationFinished = function () {
  return _in(0x0ee3f0d7, 0xfeccc54f, _r);
};

/**
 * IS_LOCATION_SPAWN_SAFE
 *
 * @param {number} ped
 * @param {number} p1
 * @return {boolean}
 */
global.IsLocationSpawnSafe = function (ped, p1) {
  return _in(0xfb1e7998, 0xb8595825, ped, _fv(p1), _r);
};

/**
 * IS_PED_AIMING_FROM_COVER
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedAimingFromCover = function (ped) {
  return _in(0x3998b127, 0x6a3300e5, ped, _r);
};

/**
 * IS_PED_A_PLAYER
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedAPlayer = function (ped) {
  return _in(0x12534c34, 0x8c6cb68b, ped, _r);
};

/**
 * IS_PED_BEING_DRAGGED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedBeingDragged = function (ped) {
  return _in(0xef3a8772, 0xf085b4aa, ped, _r);
};

/**
 * IS_PED_BEING_HOGTIED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedBeingHogtied = function (ped) {
  return _in(0xd453bb60, 0x1d4a606e, ped, _r);
};

/**
 * IS_PED_BEING_JACKED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedBeingJacked = function (ped) {
  return _in(0x9a497fe2, 0xdf198913, ped, _r);
};

/**
 * IS_PED_BEING_STEALTH_KILLED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedBeingStealthKilled = function (ped) {
  return _in(0x863b23ef, 0xde9c5df2, ped, _r);
};

/**
 * IS_PED_BEING_STUNNED
 *
 * @param {number} ped
 * @param {number} weaponType
 * @return {boolean}
 */
global.IsPedBeingStunned = function (ped, weaponType) {
  return _in(0x4fbacce3, 0xb4138ee8, ped, _ch(weaponType), _r);
};

/**
 * IS_PED_CARRYING_SOMETHING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedCarryingSomething = function (ped) {
  return _in(0xa911ee21, 0xedf69daf, ped, _r);
};

/**
 * IS_PED_CLIMBING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedClimbing = function (ped) {
  return _in(0x53e8cb4f, 0x48bfe623, ped, _r);
};

/**
 * IS_PED_DEAD_OR_DYING
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsPedDeadOrDying = function (ped, p1) {
  return _in(0x3317dedb, 0x88c95038, ped, p1, _r);
};

/**
 * IS_PED_DEFENSIVE_AREA_ACTIVE
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsPedDefensiveAreaActive = function (ped, p1) {
  return _in(0xba63d9fe, 0x45412247, ped, p1, _r);
};

/**
 * IS_PED_DIVING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedDiving = function (ped) {
  return _in(0x5527b824, 0x6fef9b11, ped, _r);
};

/**
 * IS_PED_ENTERING_ANY_TRANSPORT
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedEnteringAnyTransport = function (ped) {
  return _in(0x1d46b417, 0xf926d34d, ped, _r);
};

/**
 * IS_PED_EVASIVE_DIVING
 * Presumably returns the Entity that the Ped is currently diving out of the way of.
 *
 * @param {number} ped
 * @return {[boolean, Entity]}
 */
global.IsPedEvasiveDiving = function (ped) {
  return _in(0x414641c2, 0x6e105898, ped, _i, _r);
};

/**
 * IS_PED_FACING_PED
 * angle is ped's view cone
 *
 * @param {number} ped
 * @param {number} otherPed
 * @param {number} angle
 * @return {boolean}
 */
global.IsPedFacingPed = function (ped, otherPed, angle) {
  return _in(0xd71649db, 0x0a545aa3, ped, otherPed, _fv(angle), _r);
};

/**
 * IS_PED_FALLING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedFalling = function (ped) {
  return _in(0xfb92a102, 0xf1c4dfa3, ped, _r);
};

/**
 * IS_PED_FALLING_OVER
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedFallingOver = function (ped) {
  return _in(0x3e592d04, 0x86dec0f6, ped, _r);
};

/**
 * IS_PED_FATALLY_INJURED
 * Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
 * If the handle is invalid, the function returns true.
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedFatallyInjured = function (ped) {
  return _in(0xd8394507, 0x56ed5a80, ped, _r);
};

/**
 * IS_PED_FLEEING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedFleeing = function (ped) {
  return _in(0xbbcce00b, 0x381f8482, ped, _r);
};

/**
 * IS_PED_FULLY_ON_MOUNT
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsPedFullyOnMount = function (ped, p1) {
  return _in(0x95cbc657, 0x80de7eb1, ped, p1, _r);
};

/**
 * IS_PED_GETTING_INTO_A_VEHICLE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedGettingIntoAVehicle = function (ped) {
  return _in(0xbb062b2b, 0x5722478e, ped, _r);
};

/**
 * IS_PED_GOING_INTO_COVER
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedGoingIntoCover = function (ped) {
  return _in(0x9f65dbc5, 0x37e59ad5, ped, _r);
};

/**
 * IS_PED_GROUP_MEMBER
 *
 * @param {number} ped
 * @param {number} groupId
 * @param {boolean} p2
 * @return {boolean}
 */
global.IsPedGroupMember = function (ped, groupId, p2) {
  return _in(0x9bb01e38, 0x34671191, ped, groupId, p2, _r);
};

/**
 * IS_PED_HANGING_ON_TO_VEHICLE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedHangingOnToVehicle = function (ped) {
  return _in(0x1c86d8ae, 0xf8254b78, ped, _r);
};

/**
 * IS_PED_HEADING_TOWARDS_POSITION
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p4
 * @return {boolean}
 */
global.IsPedHeadingTowardsPosition = function (ped, x, y, z, p4) {
  return _in(0xfcf37a45, 0x7cb96dc0, ped, _fv(x), _fv(y), _fv(z), _fv(p4), _r);
};

/**
 * IS_PED_HEADTRACKING_ENTITY
 *
 * @param {number} ped
 * @param {number} entity
 * @return {boolean}
 */
global.IsPedHeadtrackingEntity = function (ped, entity) {
  return _in(0x813a0a7c, 0x9d2e831f, ped, entity, _r);
};

/**
 * IS_PED_HEADTRACKING_PED
 *
 * @param {number} ped1
 * @param {number} ped2
 * @return {boolean}
 */
global.IsPedHeadtrackingPed = function (ped1, ped2) {
  return _in(0x5cd3cb88, 0xa7f8850d, ped1, ped2, _r);
};

/**
 * IS_PED_HOGTIED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedHogtied = function (ped) {
  return _in(0x3aa24ccc, 0x0d451379, ped, _r);
};

/**
 * IS_PED_HOGTYING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedHogtying = function (ped) {
  return _in(0x42429c67, 0x4b61238b, ped, _r);
};

/**
 * IS_PED_HUMAN
 * Returns true/false if the ped is/isn't humanoid.
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedHuman = function (ped) {
  return _in(0xb980061d, 0xa992779d, ped, _r);
};

/**
 * IS_PED_INCAPACITATED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedIncapacitated = function (ped) {
  return _in(0xb655db75, 0x82aec805, ped, _r);
};

/**
 * IS_PED_INJURED
 * Gets a value indicating whether this ped's health is below its injured threshold.
 * 
 * The default threshold is 100.
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInjured = function (ped) {
  return _in(0x84a2dd9a, 0xc37c35c1, ped, _r);
};

/**
 * IS_PED_IN_ANY_BOAT
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInAnyBoat = function (ped) {
  return _in(0x2e0e1c2b, 0x4f6cb339, ped, _r);
};

/**
 * IS_PED_IN_ANY_HELI
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInAnyHeli = function (ped) {
  return _in(0x298b91ae, 0x825e5705, ped, _r);
};

/**
 * IS_PED_IN_ANY_PLANE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInAnyPlane = function (ped) {
  return _in(0x5fff4cfc, 0x74d8fb80, ped, _r);
};

/**
 * IS_PED_IN_ANY_TAXI
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInAnyTaxi = function (ped) {
  return _in(0x6e575d6a, 0x898ab852, ped, _r);
};

/**
 * IS_PED_IN_ANY_TRAIN
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInAnyTrain = function (ped) {
  return _in(0x6f972c1a, 0xb75a1ed0, ped, _r);
};

/**
 * IS_PED_IN_ANY_VEHICLE
 * Gets a value indicating whether the specified ped is in any vehicle.
 *
 * @param {number} ped
 * @param {boolean} atGetIn
 * @return {boolean}
 */
global.IsPedInAnyVehicle = function (ped, atGetIn) {
  return _in(0x997abd67, 0x1d25ca0b, ped, atGetIn, _r);
};

/**
 * IS_PED_IN_COMBAT
 *
 * @param {number} ped
 * @param {number} target
 * @return {boolean}
 */
global.IsPedInCombat = function (ped, target) {
  return _in(0x4859f1fc, 0x66a6278e, ped, target, _r);
};

/**
 * IS_PED_IN_COVER
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {boolean}
 */
global.IsPedInCover = function (ped, p1, p2) {
  return _in(0x60dfd069, 0x1a170b88, ped, p1, p2, _r);
};

/**
 * IS_PED_IN_COVER_FACING_LEFT
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInCoverFacingLeft = function (ped) {
  return _in(0x845333b3, 0x150583ab, ped, _r);
};

/**
 * IS_PED_IN_FLYING_VEHICLE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInFlyingVehicle = function (ped) {
  return _in(0x91348735, 0x37fa419c, ped, _r);
};

/**
 * IS_PED_IN_GROUP
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInGroup = function (ped) {
  return _in(0x5891cac5, 0xd4acff74, ped, _r);
};

/**
 * IS_PED_IN_MELEE_COMBAT
 * Notes: The function only returns true while the ped is: 
 * A.) Swinging a random melee attack (including pistol-whipping)
 * 
 * B.) Reacting to being hit by a melee attack (including pistol-whipping)
 * 
 * C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter). 
 * 
 * You don't have to be holding the melee-targeting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInMeleeCombat = function (ped) {
  return _in(0x4e209b2c, 0x1ead5159, ped, _r);
};

/**
 * IS_PED_IN_MODEL
 *
 * @param {number} ped
 * @param {number} modelHash
 * @return {boolean}
 */
global.IsPedInModel = function (ped, modelHash) {
  return _in(0x796d90ef, 0xb19aa332, ped, _ch(modelHash), _r);
};

/**
 * IS_PED_IN_VEHICLE
 * Gets a value indicating whether the specified ped is in the specified vehicle.
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {boolean} atGetIn
 * @return {boolean}
 */
global.IsPedInVehicle = function (ped, vehicle, atGetIn) {
  return _in(0xa3ee4a07, 0x279bb9db, ped, vehicle, atGetIn, _r);
};

/**
 * IS_PED_JACKING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedJacking = function (ped) {
  return _in(0x4ae4ff91, 0x1dfb61da, ped, _r);
};

/**
 * IS_PED_JUMPING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedJumping = function (ped) {
  return _in(0xcedabc59, 0x00a0bf97, ped, _r);
};

/**
 * IS_PED_LASSOED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedLassoed = function (ped) {
  return _in(0x9682f850, 0x056c9ade, ped, _r);
};

/**
 * IS_PED_MALE
 * Returns true/false if the ped is/isn't male.
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedMale = function (ped) {
  return _in(0x6d9f5faa, 0x7488ba46, ped, _r);
};

/**
 * IS_PED_MODEL
 *
 * @param {number} ped
 * @param {number} modelHash
 * @return {boolean}
 */
global.IsPedModel = function (ped, modelHash) {
  return _in(0xc9d55b1a, 0x358a5bf7, ped, _ch(modelHash), _r);
};

/**
 * IS_PED_ON_FOOT
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedOnFoot = function (ped) {
  return _in(0x01fee67d, 0xb37f59b2, ped, _r);
};

/**
 * IS_PED_ON_MOUNT
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedOnMount = function (ped) {
  return _in(0x460bc76a, 0x0e10655e, ped, _r);
};

/**
 * IS_PED_ON_SPECIFIC_VEHICLE
 *
 * @param {number} ped
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsPedOnSpecificVehicle = function (ped, vehicle) {
  return _in(0xec5f66e4, 0x59af3bb2, ped, vehicle, _r);
};

/**
 * IS_PED_ON_VEHICLE
 * Gets a value indicating whether the specified ped is on top of any vehicle.
 * 
 * Return 1 when ped is on vehicle.
 * Return 0 when ped is not on a vehicle.
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsPedOnVehicle = function (ped, p1) {
  return _in(0x67722aeb, 0x798e5fab, ped, p1, _r);
};

/**
 * IS_PED_OPENING_DOOR
 * Returns true if the ped is currently opening a door (CTaskOpenDoor).
 * 
 * Old name: _IS_PED_OPENING_A_DOOR
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedOpeningDoor = function (ped) {
  return _in(0x26af0e8e, 0x30bd2a2c, ped, _r);
};

/**
 * IS_PED_PERFORMING_MELEE_ACTION
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {boolean}
 */
global.IsPedPerformingMeleeAction = function (ped, p1, p2) {
  return _in(0xdcca191d, 0xf9980fd7, ped, p1, _ch(p2), _r);
};

/**
 * IS_PED_PLANTING_BOMB
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedPlantingBomb = function (ped) {
  return _in(0xc70b5fae, 0x151982d8, ped, _r);
};

/**
 * IS_PED_PRONE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedProne = function (ped) {
  return _in(0xd6a86331, 0xa537a7b9, ped, _r);
};

/**
 * IS_PED_RAGDOLL
 * If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedRagdoll = function (ped) {
  return _in(0x47e4e977, 0x581c5b55, ped, _r);
};

/**
 * IS_PED_READY_TO_RENDER
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedReadyToRender = function (ped) {
  return _in(0xa0bc8fae, 0xd8cfeb3c, ped, _r);
};

/**
 * IS_PED_RELOADING
 * Returns whether the specified ped is reloading.
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedReloading = function (ped) {
  return _in(0x24b100c6, 0x8c645951, ped, _r);
};

/**
 * IS_PED_RESPONDING_TO_EVENT
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * @param {number} ped
 * @param {number} eventType
 * @return {boolean}
 */
global.IsPedRespondingToEvent = function (ped, eventType) {
  return _in(0x625b774d, 0x75c87068, ped, _ch(eventType), _r);
};

/**
 * IS_PED_RESPONDING_TO_THREAT
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedRespondingToThreat = function (ped) {
  return _in(0x77525bbf, 0x433f2cd6, ped, _r);
};

/**
 * IS_PED_RUNNING_MOBILE_PHONE_TASK
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedRunningMobilePhoneTask = function (ped) {
  return _in(0x2afe52f7, 0x82f25775, ped, _r);
};

/**
 * IS_PED_RUNNING_RAGDOLL_TASK
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedRunningRagdollTask = function (ped) {
  return _in(0xe3b6097c, 0xc25aa69e, ped, _r);
};

/**
 * IS_PED_SHOOTING
 * Returns whether the specified ped is shooting.
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedShooting = function (ped) {
  return _in(0x34616828, 0xcd07f1a1, ped, _r);
};

/**
 * IS_PED_SITTING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedSitting = function (ped) {
  return _in(0x84d0bf2b, 0x21862059, ped, _r);
};

/**
 * IS_PED_SITTING_IN_ANY_VEHICLE
 * Detect if ped is in any vehicle
 * [True/False]
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedSittingInAnyVehicle = function (ped) {
  return _in(0x826aa586, 0xedb9fef8, ped, _r);
};

/**
 * IS_PED_SITTING_IN_VEHICLE
 * Detect if ped is sitting in the specified vehicle
 * [True/False]
 *
 * @param {number} ped
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsPedSittingInVehicle = function (ped, vehicle) {
  return _in(0xa808aa1d, 0x79230fc2, ped, vehicle, _r);
};

/**
 * IS_PED_STOPPED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedStopped = function (ped) {
  return _in(0x530944f6, 0xf4b8a214, ped, _r);
};

/**
 * IS_PED_SWIMMING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedSwimming = function (ped) {
  return _in(0x9de32763, 0x1295b4c2, ped, _r);
};

/**
 * IS_PED_SWIMMING_UNDER_WATER
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedSwimmingUnderWater = function (ped) {
  return _in(0xc024869a, 0x53992f34, ped, _r);
};

/**
 * IS_PED_USING_ACTION_MODE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedUsingActionMode = function (ped) {
  return _in(0x00e73468, 0xd085f745, ped, _r);
};

/**
 * IS_PED_USING_ANY_SCENARIO
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedUsingAnyScenario = function (ped) {
  return _in(0x57ab4a30, 0x80f85143, ped, _r);
};

/**
 * IS_PED_USING_SCENARIO_HASH
 * Equivalent to IS_PED_USING_SCENARIO from V but takes a hash instead of a string.
 *
 * @param {number} ped
 * @param {number} scenarioHash
 * @return {boolean}
 */
global.IsPedUsingScenarioHash = function (ped, scenarioHash) {
  return _in(0x34d6ac11, 0x57c8226c, ped, _ch(scenarioHash), _r);
};

/**
 * IS_PED_USING_THIS_SCENARIO
 *
 * @param {number} ped
 * @param {number} scenario
 * @return {boolean}
 */
global.IsPedUsingThisScenario = function (ped, scenario) {
  return _in(0x9c54041b, 0xb66bcf9e, ped, scenario, _r);
};

/**
 * IS_PED_VAULTING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedVaulting = function (ped) {
  return _in(0x117c70d1, 0xf5730b5e, ped, _r);
};

/**
 * IS_TARGET_PED_IN_PERCEPTION_AREA
 * Returns true if ped is in perception (focused and looking at target ped)
 * Most float params are -1.f in R* Scripts
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {number} p2
 * @param {number} customDistance
 * @param {number} p4
 * @param {number} p5
 * @return {boolean}
 */
global.IsTargetPedInPerceptionArea = function (ped, targetPed, p2, customDistance, p4, p5) {
  return _in(0x06087579, 0xe7aa85a9, ped, targetPed, _fv(p2), _fv(customDistance), _fv(p4), _fv(p5), _r);
};

/**
 * IS_TRACKED_PED_VISIBLE
 * Returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
 * Target needs to be tracked first, won't work otherwise.
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsTrackedPedVisible = function (ped) {
  return _in(0x91c8e617, 0xf64188ac, ped, _r);
};

/**
 * KNOCK_OFF_PED_PROP
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {void}
 */
global.KnockOffPedProp = function (ped, p1, p2, p3, p4) {
  return _in(0x6fd7816a, 0x36615f48, ped, p1, p2, p3, p4);
};

/**
 * KNOCK_PED_OFF_VEHICLE
 *
 * @param {number} ped
 * @return {void}
 */
global.KnockPedOffVehicle = function (ped) {
  return _in(0x45bbcba7, 0x7c29a841, ped);
};

/**
 * PED_COWER_IN_PLACE
 *
 * @param {number} ped
 * @param {number} ped2
 * @return {void}
 */
global.PedCowerInPlace = function (ped, ped2) {
  return _in(0xf6e1e9f4, 0x7a7686f8, ped, ped2);
};

/**
 * PED_COWER_MOVE_TO_POINT
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} ped2
 * @param {number} p5
 * @return {void}
 */
global.PedCowerMoveToPoint = function (ped, p1, p2, p3, ped2, p5) {
  return _in(0x1e4c9402, 0x33fc0c6f, ped, _fv(p1), _fv(p2), _fv(p3), ped2, _fv(p5));
};

/**
 * REGISTER_HATED_TARGETS_AROUND_PED
 * Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
 *
 * @param {number} ped
 * @param {number} radius
 * @return {void}
 */
global.RegisterHatedTargetsAroundPed = function (ped, radius) {
  return _in(0x9222f300, 0xbf8354fe, ped, _fv(radius));
};

/**
 * REGISTER_TARGET
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {boolean} p2
 * @return {void}
 */
global.RegisterTarget = function (ped, targetPed, p2) {
  return _in(0x2f25d9ae, 0xfa34fba2, ped, targetPed, p2);
};

/**
 * RELEASE_PED_VISIBILITY_TRACKING
 *
 * @param {number} ped
 * @return {void}
 */
global.ReleasePedVisibilityTracking = function (ped) {
  return _in(0x3088634c, 0xf8c819cf, ped);
};

/**
 * REMOVE_GROUP
 *
 * @param {number} groupId
 * @return {void}
 */
global.RemoveGroup = function (groupId) {
  return _in(0x8eb2f690, 0x76af7053, groupId);
};

/**
 * REMOVE_PED_DEFENSIVE_AREA
 * Ped will no longer get angry when you stay near him.
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.RemovePedDefensiveArea = function (ped, toggle) {
  return _in(0x74d4e028, 0x107450a9, ped, toggle);
};

/**
 * REMOVE_PED_FROM_GROUP
 *
 * @param {number} ped
 * @return {void}
 */
global.RemovePedFromGroup = function (ped) {
  return _in(0xed74007f, 0xfb146bc2, ped);
};

/**
 * REMOVE_RELATIONSHIP_GROUP
 *
 * @param {number} groupHash
 * @return {void}
 */
global.RemoveRelationshipGroup = function (groupHash) {
  return _in(0xb6ba2444, 0xab393da2, _ch(groupHash));
};

/**
 * REMOVE_SCENARIO_BLOCKING_AREA
 *
 * @param {any} p0
 * @param {boolean} p1
 * @return {void}
 */
global.RemoveScenarioBlockingArea = function (p0, p1) {
  return _in(0x31d16b74, 0xc6e29d66, p0, p1);
};

/**
 * REMOVE_SCENARIO_BLOCKING_AREAS
 *

 * @return {void}
 */
global.RemoveScenarioBlockingAreas = function () {
  return _in(0xd37401d7, 0x8a929a49);
};

/**
 * REMOVE_SHOP_ITEM_FROM_PED_BY_CATEGORY
 * Params: p2, p3 usually 0 in R* Scripts
 *
 * @param {number} ped
 * @param {number} componentCategory
 * @param {number} p2
 * @param {boolean} p3
 * @return {void}
 */
global.RemoveShopItemFromPedByCategory = function (ped, componentCategory, p2, p3) {
  return _in(0xdf631e4b, 0xce1b1fc4, ped, _ch(componentCategory), p2, p3);
};

/**
 * REMOVE_TAG_FROM_META_PED
 *
 * @param {number} ped
 * @param {number} component
 * @param {number} p2
 * @return {void}
 */
global.RemoveTagFromMetaPed = function (ped, component, p2) {
  return _in(0xd710a500, 0x7c2ac539, ped, _ch(component), p2);
};

/**
 * REQUEST_PED_USE_SMALL_BBOX_VISIBILITY_TRACKING
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.RequestPedUseSmallBboxVisibilityTracking = function (ped, p1) {
  return _in(0x75ba1cb3, 0xb7d40caf, ped, p1);
};

/**
 * REQUEST_PED_VEHICLE_VISIBILITY_TRACKING
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.RequestPedVehicleVisibilityTracking = function (ped, p1) {
  return _in(0x2bc338a7, 0xb21f4608, ped, p1);
};

/**
 * REQUEST_PED_VISIBILITY_TRACKING
 *
 * @param {number} ped
 * @return {void}
 */
global.RequestPedVisibilityTracking = function (ped) {
  return _in(0x7d7a2e43, 0xe74e2eb8, ped);
};

/**
 * RESET_AI_WEAPON_DAMAGE_MODIFIER
 *

 * @return {void}
 */
global.ResetAiWeaponDamageModifier = function () {
  return _in(0xea16670e, 0x7ba4743c);
};

/**
 * RESET_GROUP_FORMATION_DEFAULT_SPACING
 *
 * @param {number} groupId
 * @return {void}
 */
global.ResetGroupFormationDefaultSpacing = function (groupId) {
  return _in(0x63dab4cc, 0xb3273205, groupId);
};

/**
 * RESET_HORSE_AVOIDANCE_LEVEL_TO_DEFAULT
 *
 * @param {number} horse
 * @return {void}
 */
global.ResetHorseAvoidanceLevelToDefault = function (horse) {
  return _in(0x2a5afd2b, 0x8381a6e1, horse);
};

/**
 * RESET_PED_IN_VEHICLE_CONTEXT
 *
 * @param {number} ped
 * @return {void}
 */
global.ResetPedInVehicleContext = function (ped) {
  return _in(0x22ef8ff8, 0x778030eb, ped);
};

/**
 * RESET_PED_LAST_VEHICLE
 * Resets the value for the last vehicle driven by the Ped.
 *
 * @param {number} ped
 * @return {void}
 */
global.ResetPedLastVehicle = function (ped) {
  return _in(0xbb8de8cf, 0x6a8dd8bb, ped);
};

/**
 * RESET_PED_RAGDOLL_TIMER
 *
 * @param {number} ped
 * @return {void}
 */
global.ResetPedRagdollTimer = function (ped) {
  return _in(0x9fa4664c, 0xf62e47e8, ped);
};

/**
 * RESET_PED_WEAPON_MOVEMENT_CLIPSET
 *
 * @param {number} ped
 * @return {void}
 */
global.ResetPedWeaponMovementClipset = function (ped) {
  return _in(0x97b0db5b, 0x4aa74e77, ped);
};

/**
 * RESURRECT_PED
 * This function will simply bring the dead ped back to life.
 * 
 * Before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at because theres a chance the ped will fall through the map
 * 
 * Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
 *
 * @param {number} ped
 * @return {void}
 */
global.ResurrectPed = function (ped) {
  return _in(0x71bc8e83, 0x8b9c6035, ped);
};

/**
 * REVIVE_INJURED_PED
 *
 * @param {number} ped
 * @return {void}
 */
global.ReviveInjuredPed = function (ped) {
  return _in(0x8d8acd83, 0x88cd99ce, ped);
};

/**
 * SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER
 *
 * @param {number} modifier
 * @return {void}
 */
global.SetAiMeleeWeaponDamageModifier = function (modifier) {
  return _in(0x66460ded, 0xdd417254, _fv(modifier));
};

/**
 * SET_AI_WEAPON_DAMAGE_MODIFIER
 *
 * @param {number} value
 * @return {void}
 */
global.SetAiWeaponDamageModifier = function (value) {
  return _in(0x1b1e2a40, 0xa65b8521, _fv(value));
};

/**
 * SET_BLOCKING_OF_NON_TEMPORARY_EVENTS
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetBlockingOfNonTemporaryEvents = function (ped, toggle) {
  return _in(0x9f8aa94d, 0x6d97dbf4, ped, toggle);
};

/**
 * SET_BLOCKING_OF_NON_TEMPORARY_EVENTS_FOR_AMBIENT_PEDS_THIS_FRAME
 *
 * @param {boolean} p0
 * @return {void}
 */
global.SetBlockingOfNonTemporaryEventsForAmbientPedsThisFrame = function (p0) {
  return _in(0x9911f4a2, 0x4485f653, p0);
};

/**
 * SET_COMBAT_FLOAT
 * combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_FLOATS
 *
 * @param {number} ped
 * @param {number} combatType
 * @param {number} newValue
 * @return {void}
 */
global.SetCombatFloat = function (ped, combatType, newValue) {
  return _in(0xff41b4b1, 0x41ed981c, ped, combatType, _fv(newValue));
};

/**
 * SET_CREATE_RANDOM_COPS
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetCreateRandomCops = function (toggle) {
  return _in(0x102e68b2, 0x024d536d, toggle);
};

/**
 * SET_ENABLE_BOUND_ANKLES
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEnableBoundAnkles = function (ped, toggle) {
  return _in(0xc52e0f85, 0x5c58fc2e, ped, toggle);
};

/**
 * SET_ENABLE_HANDCUFFS
 * Ped can not pull out a weapon when true
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.SetEnableHandcuffs = function (ped, p1, p2) {
  return _in(0xdf1af8b5, 0xd56542fa, ped, p1, p2);
};

/**
 * SET_FACIAL_IDLE_ANIM_OVERRIDE
 *
 * @param {number} ped
 * @param {string | number} animName
 * @param {string | number} animDict
 * @return {void}
 */
global.SetFacialIdleAnimOverride = function (ped, animName, animDict) {
  return _in(0xffc24b98, 0x8b938b38, ped, _ts(animName), _ts(animDict));
};

/**
 * SET_FORMATION_POSITIONS_TARGET_RADIUS
 *
 * @param {number} groupId
 * @param {number} radius
 * @return {boolean}
 */
global.SetFormationPositionsTargetRadius = function (groupId, radius) {
  return _in(0x7cc7d3b7, 0xaf7fb71f, groupId, _fv(radius), _r);
};

/**
 * SET_GROUP_FORMATION
 * eFormationType
 * 
 * 0: Default
 * 1: Circle Around Leader
 * 2: Alternative Circle Around Leader
 * 3: Line, with Leader at center
 *
 * @param {number} groupId
 * @param {number} formationType
 * @return {void}
 */
global.SetGroupFormation = function (groupId, formationType) {
  return _in(0xce2f5fc3, 0xaf7e8c1e, groupId, formationType);
};

/**
 * SET_GROUP_FORMATION_SPACING
 *
 * @param {number} groupId
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.SetGroupFormationSpacing = function (groupId, p1, p2, p3) {
  return _in(0x1d9d4500, 0x4c28c916, groupId, _fv(p1), _fv(p2), _fv(p3));
};

/**
 * SET_GROUP_SEPARATION_RANGE
 * Sets the range at which members will automatically leave the group.
 *
 * @param {number} groupId
 * @param {number} separationRange
 * @return {void}
 */
global.SetGroupSeparationRange = function (groupId, separationRange) {
  return _in(0x4102c785, 0x8cfee4e4, groupId, _fv(separationRange));
};

/**
 * SET_HORSE_AVOIDANCE_LEVEL
 * -1 - HORSE_ASSIST__NO_CHANGE
 *  0 - HORSE_ASSIST__MANUAL
 *  1 - HORSE_ASSIST__SEMIASSIST
 *  2 - HORSE_ASSIST__FULLASSIST
 *
 * @param {number} horse
 * @param {number} avoidanceLevel
 * @return {void}
 */
global.SetHorseAvoidanceLevel = function (horse, avoidanceLevel) {
  return _in(0xddcf6fea, 0x5d7acc17, horse, avoidanceLevel);
};

/**
 * SET_IK_TARGET
 *
 * @param {number} ped
 * @param {number} ikIndex
 * @param {number} entityLookAt
 * @param {number} boneLookAt
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @param {any} p7
 * @param {number} blendInDuration
 * @param {number} blendOutDuration
 * @return {void}
 */
global.SetIkTarget = function (ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration) {
  return _in(0xc32779c1, 0x6fceecd9, ped, ikIndex, entityLookAt, boneLookAt, _fv(offsetX), _fv(offsetY), _fv(offsetZ), p7, blendInDuration, blendOutDuration);
};

/**
 * SET_LOOTING_FLAG
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLootingFlags__Flags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/LOOTING_FLAGS
 * 
 * lootFlag:
 * enum eLootFlag
 * {
 *   LOOT_FLAG_IS_CRITICAL_LOOT_TARGET = 7,
 *   LOOT_FLAG_IGNORE_WATER_CHECKS = 8,
 *   LOOT_FLAG_ANIMAL_FLAGGED_FOR_TAGGING = 23,
 * };
 *
 * @param {number} ped
 * @param {number} lootFlag
 * @param {boolean} enabled
 * @return {void}
 */
global.SetLootingFlag = function (ped, lootFlag, enabled) {
  return _in(0x6569f31a, 0x01b4c097, ped, lootFlag, enabled);
};

/**
 * SET_PAUSE_PED_WRITHE_BLEEDOUT
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPausePedWritheBleedout = function (ped, toggle) {
  return _in(0x925a1601, 0x33003ac6, ped, toggle);
};

/**
 * SET_PED_ACCURACY
 * accuracy = 0-100, 100 being perfectly accurate
 *
 * @param {number} ped
 * @param {number} accuracy
 * @return {void}
 */
global.SetPedAccuracy = function (ped, accuracy) {
  return _in(0x7aefb85c, 0x1d49deb6, ped, accuracy);
};

/**
 * SET_PED_AS_COP
 * Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
 * toggle = bSetRelGroup
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedAsCop = function (ped, toggle) {
  return _in(0xbb03c38d, 0xd3fb7ffd, ped, toggle);
};

/**
 * SET_PED_AS_GROUP_LEADER
 *
 * @param {number} ped
 * @param {number} groupId
 * @param {boolean} p2
 * @return {void}
 */
global.SetPedAsGroupLeader = function (ped, groupId, p2) {
  return _in(0x2a781960, 0x5465fbce, ped, groupId, p2);
};

/**
 * SET_PED_AS_GROUP_MEMBER
 *
 * @param {number} ped
 * @param {number} groupId
 * @return {void}
 */
global.SetPedAsGroupMember = function (ped, groupId) {
  return _in(0x9f3480fe, 0x65db31b5, ped, groupId);
};

/**
 * SET_PED_CAN_ARM_IK
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanArmIk = function (ped, toggle) {
  return _in(0x6c3b4d6d, 0x13b4c841, ped, toggle);
};

/**
 * SET_PED_CAN_BE_INCAPACITATED
 * When set on a player ped, its just like when you die in RDO
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanBeIncapacitated = function (ped, toggle) {
  return _in(0x5240864e, 0x847c691c, ped, toggle);
};

/**
 * SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE
 * state:
 * enum eKnockOffVehicle
 * {
 *   KNOCKOFFVEHICLE_DEFAULT,
 *   KNOCKOFFVEHICLE_NEVER,
 *   KNOCKOFFVEHICLE_EASY,
 *   KNOCKOFFVEHICLE_HARD
 * };
 *
 * @param {number} ped
 * @param {number} state
 * @return {void}
 */
global.SetPedCanBeKnockedOffVehicle = function (ped, state) {
  return _in(0x7a653569, 0x1b477c48, ped, state);
};

/**
 * SET_PED_CAN_BE_TARGETTED
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanBeTargetted = function (ped, toggle) {
  return _in(0x63f58f7c, 0x80513aad, ped, toggle);
};

/**
 * SET_PED_CAN_BE_TARGETTED_BY_PLAYER
 *
 * @param {number} ped
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanBeTargettedByPlayer = function (ped, player, toggle) {
  return _in(0x66b57b72, 0xe0836a76, ped, player, toggle);
};

/**
 * SET_PED_CAN_BE_TARGETTED_BY_TEAM
 *
 * @param {number} ped
 * @param {number} team
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanBeTargettedByTeam = function (ped, team, toggle) {
  return _in(0xbf1ca778, 0x33e58f2c, ped, team, toggle);
};

/**
 * SET_PED_CAN_HEAD_IK
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanHeadIk = function (ped, toggle) {
  return _in(0xc11c1809, 0x2c5530dc, ped, toggle);
};

/**
 * SET_PED_CAN_LEG_IK
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanLegIk = function (ped, toggle) {
  return _in(0x73518ece, 0x2485412b, ped, toggle);
};

/**
 * SET_PED_CAN_PLAY_AMBIENT_ANIMS
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanPlayAmbientAnims = function (ped, toggle) {
  return _in(0x6373d134, 0x9925a70e, ped, toggle);
};

/**
 * SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanPlayAmbientBaseAnims = function (ped, toggle) {
  return _in(0x0eb0585d, 0x15254740, ped, toggle);
};

/**
 * SET_PED_CAN_PLAY_GESTURE_ANIMS
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.SetPedCanPlayGestureAnims = function (ped, p1, p2) {
  return _in(0xbaf20c54, 0x32058024, ped, p1, p2);
};

/**
 * SET_PED_CAN_RAGDOLL
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanRagdoll = function (ped, toggle) {
  return _in(0xb1283770, 0x56a54e2a, ped, toggle);
};

/**
 * SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanRagdollFromPlayerImpact = function (ped, toggle) {
  return _in(0xdf993ee5, 0xe90aba25, ped, toggle);
};

/**
 * SET_PED_CAN_TELEPORT_TO_GROUP_LEADER
 * This only will teleport the ped to the group leader if the group leader teleports (sets coords).
 * 
 * Only works in singleplayer
 *
 * @param {number} pedHandle
 * @param {number} groupId
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanTeleportToGroupLeader = function (pedHandle, groupId, toggle) {
  return _in(0x2e2f4240, 0xb3f24647, pedHandle, groupId, toggle);
};

/**
 * SET_PED_CAN_TORSO_IK
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanTorsoIk = function (ped, toggle) {
  return _in(0xf2b7106d, 0x37947ce0, ped, toggle);
};

/**
 * SET_PED_CAN_TORSO_REACT_IK
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanTorsoReactIk = function (ped, toggle) {
  return _in(0xf5846edb, 0x26a98a24, ped, toggle);
};

/**
 * SET_PED_CAN_TORSO_VEHICLE_IK
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanTorsoVehicleIk = function (ped, toggle) {
  return _in(0x6647c5f6, 0xf5792496, ped, toggle);
};

/**
 * SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanUseAutoConversationLookat = function (ped, toggle) {
  return _in(0xec4686ec, 0x06434678, ped, toggle);
};

/**
 * SET_PED_CAPSULE
 * Overrides the ped's collision capsule radius for the current tick.
 * Must be called every tick to be effective.
 * 
 * Setting this to 0.001 will allow warping through some objects.
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedCapsule = function (ped, value) {
  return _in(0x364df566, 0xec833de2, ped, _fv(value));
};

/**
 * SET_PED_CLOTH_PIN_FRAMES
 * Old name: SET_PED_CLOTH_PACKAGE_INDEX
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.SetPedClothPinFrames = function (ped, p1) {
  return _in(0x78c4e996, 0x1db3eb5b, ped, p1);
};

/**
 * SET_PED_COMBAT_ABILITY
 * abilityLevel:
 * enum eCombatAbilityLevel
 * {
 *   CAL_POOR,
 *   CAL_AVERAGE,
 *   CAL_PROFESSIONAL
 * };
 *
 * @param {number} ped
 * @param {number} abilityLevel
 * @return {void}
 */
global.SetPedCombatAbility = function (ped, abilityLevel) {
  return _in(0xc7622c0d, 0x36b2fda8, ped, abilityLevel);
};

/**
 * SET_PED_COMBAT_ATTRIBUTES
 * attributeIndex: https://alloc8or.re/rdr3/doc/enums/eCombatAttribute.txt
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ATTRIBUTES
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @param {boolean} enabled
 * @return {void}
 */
global.SetPedCombatAttributes = function (ped, attributeIndex, enabled) {
  return _in(0x9f779473, 0x0795e019, ped, attributeIndex, enabled);
};

/**
 * SET_PED_COMBAT_MOVEMENT
 * 0 - Stationary (Will just stand in place)
 * 1 - Defensive (Will try to find cover and very likely to blind fire)
 * 2 - Offensive (Will attempt to charge at enemy but take cover as well)
 * 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
 *
 * @param {number} ped
 * @param {number} combatMovement
 * @return {void}
 */
global.SetPedCombatMovement = function (ped, combatMovement) {
  return _in(0x4d9ca100, 0x9afbd057, ped, combatMovement);
};

/**
 * SET_PED_COMBAT_RANGE
 * range:
 * enum eCombatRange
 * {
 *   CR_NEAR,
 *   CR_MEDIUM,
 *   CR_FAR,
 *   CR_VERY_FAR
 * };
 *
 * @param {number} ped
 * @param {number} range
 * @return {void}
 */
global.SetPedCombatRange = function (ped, range) {
  return _in(0x3c606747, 0xb23e497b, ped, range);
};

/**
 * SET_PED_CONFIG_FLAG
 * flagId: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedScriptConfigFlags
 * https://alloc8or.re/rdr3/doc/enums/ePedScriptConfigFlags.txt
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_CONFIG_FLAGS
 *
 * @param {number} ped
 * @param {number} flagId
 * @param {boolean} value
 * @return {void}
 */
global.SetPedConfigFlag = function (ped, flagId, value) {
  return _in(0x1913fe4c, 0xbf41c463, ped, flagId, value);
};

/**
 * SET_PED_DEFENSIVE_AREA_DIRECTION
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {boolean} p4
 * @return {void}
 */
global.SetPedDefensiveAreaDirection = function (ped, p1, p2, p3, p4) {
  return _in(0x413c6c76, 0x3a4affad, ped, _fv(p1), _fv(p2), _fv(p3), p4);
};

/**
 * SET_PED_DEFENSIVE_AREA_VOLUME
 *
 * @param {number} ped
 * @param {number} volume
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {void}
 */
global.SetPedDefensiveAreaVolume = function (ped, volume, p2, p3, p4) {
  return _in(0xfc3db99c, 0x8144cd81, ped, volume, p2, p3, p4);
};

/**
 * SET_PED_DESIRED_HEADING
 *
 * @param {number} ped
 * @param {number} heading
 * @return {void}
 */
global.SetPedDesiredHeading = function (ped, heading) {
  return _in(0xaa5a7ece, 0x2aa8fe70, ped, _fv(heading));
};

/**
 * SET_PED_FIRING_PATTERN
 * Used in various R* MP & SP Scripts
 *
 * @param {number} ped
 * @param {number} patternHash
 * @return {void}
 */
global.SetPedFiringPattern = function (ped, patternHash) {
  return _in(0x9ac577f5, 0xa12ad8a9, ped, _ch(patternHash));
};

/**
 * SET_PED_FLEE_ATTRIBUTES
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/FLEE_ATTRIBUTES
 * 
 * attributeFlags:
 * enum eFleeAttribute
 * {
 *   FA_FORCE_EXIT_VEHICLE = (1 << 16),
 *   FA_DISABLE_MOUNT_USAGE = (1 << 20),
 *   FA_DISABLE_ENTER_VEHICLES = (1 << 22),
 * };
 *
 * @param {number} ped
 * @param {number} attributeFlags
 * @param {boolean} enable
 * @return {void}
 */
global.SetPedFleeAttributes = function (ped, attributeFlags, enable) {
  return _in(0x70a2d113, 0x7c8ed7c9, ped, attributeFlags, enable);
};

/**
 * SET_PED_GESTURE_GROUP
 *
 * @param {number} ped
 * @param {string | number} gesture
 * @param {number} p2
 * @return {void}
 */
global.SetPedGestureGroup = function (ped, gesture, p2) {
  return _in(0xddf80337, 0x7f94aaa8, ped, _ts(gesture), p2);
};

/**
 * SET_PED_GRAVITY
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedGravity = function (ped, toggle) {
  return _in(0x9ff447b6, 0xb6ad960a, ped, toggle);
};

/**
 * SET_PED_GROUP_MEMBER_PASSENGER_INDEX
 *
 * @param {number} ped
 * @param {number} index
 * @return {void}
 */
global.SetPedGroupMemberPassengerIndex = function (ped, index) {
  return _in(0x0bddb8d9, 0xec6bcf3c, ped, index);
};

/**
 * SET_PED_HEARING_RANGE
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedHearingRange = function (ped, value) {
  return _in(0x33a8f7f7, 0xd5f7f33c, ped, _fv(value));
};

/**
 * SET_PED_HIGHLY_PERCEPTIVE
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedHighlyPerceptive = function (ped, toggle) {
  return _in(0x52d59ab6, 0x1ddc05dd, ped, toggle);
};

/**
 * SET_PED_ID_RANGE
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedIdRange = function (ped, value) {
  return _in(0xf107e836, 0xa70dce05, ped, _fv(value));
};

/**
 * SET_PED_INJURED_ON_GROUND_BEHAVIOUR
 *
 * @param {number} ped
 * @param {number} unk
 * @return {void}
 */
global.SetPedInjuredOnGroundBehaviour = function (ped, unk) {
  return _in(0xec4b4b3b, 0x9908052a, ped, _fv(unk));
};

/**
 * SET_PED_INTO_VEHICLE
 * Ped: The ped to warp.
 * vehicle: The vehicle to warp the ped into.
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {number} seatIndex
 * @return {void}
 */
global.SetPedIntoVehicle = function (ped, vehicle, seatIndex) {
  return _in(0xf75b0d62, 0x9e1c063d, ped, vehicle, seatIndex);
};

/**
 * SET_PED_KEEP_TASK
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedKeepTask = function (ped, toggle) {
  return _in(0x971d3876, 0x0fbc02ef, ped, toggle);
};

/**
 * SET_PED_LASSO_HOGTIE_FLAG
 *
 * @param {number} ped
 * @param {number} flagId
 * @param {boolean} value
 * @return {void}
 */
global.SetPedLassoHogtieFlag = function (ped, flagId, value) {
  return _in(0xae600412, 0x0c18df97, ped, flagId, value);
};

/**
 * SET_PED_LEG_IK_MODE
 *
 * @param {number} ped
 * @param {number} mode
 * @return {void}
 */
global.SetPedLegIkMode = function (ped, mode) {
  return _in(0xc396f5b8, 0x6ff9febd, ped, mode);
};

/**
 * SET_PED_LOD_MULTIPLIER
 *
 * @param {number} ped
 * @param {number} multiplier
 * @return {void}
 */
global.SetPedLodMultiplier = function (ped, multiplier) {
  return _in(0xdc2c5c24, 0x2aac342b, ped, _fv(multiplier));
};

/**
 * SET_PED_MAX_HEALTH
 * Sets the maximum health of a ped.
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedMaxHealth = function (ped, value) {
  return _in(0xf5f6378c, 0x4f3419d3, ped, value);
};

/**
 * SET_PED_MAX_MOVE_BLEND_RATIO
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedMaxMoveBlendRatio = function (ped, value) {
  return _in(0x43308375, 0x0c5e064a, ped, _fv(value));
};

/**
 * SET_PED_MAX_TIME_IN_WATER
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedMaxTimeInWater = function (ped, value) {
  return _in(0x43c85169, 0x0662113d, ped, _fv(value));
};

/**
 * SET_PED_MAX_TIME_UNDERWATER
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedMaxTimeUnderwater = function (ped, value) {
  return _in(0x6ba428c5, 0x28d9e522, ped, _fv(value));
};

/**
 * SET_PED_MIN_MOVE_BLEND_RATIO
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedMinMoveBlendRatio = function (ped, value) {
  return _in(0x01a898d2, 0x6e2333dd, ped, _fv(value));
};

/**
 * SET_PED_MODEL_IS_SUPPRESSED
 *
 * @param {number} model
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedModelIsSuppressed = function (model, toggle) {
  return _in(0xe163a4bc, 0xe4de6f11, _ch(model), toggle);
};

/**
 * SET_PED_MONEY
 *
 * @param {number} ped
 * @param {number} amount
 * @return {void}
 */
global.SetPedMoney = function (ped, amount) {
  return _in(0xa9c8960e, 0x8684c1b5, ped, amount);
};

/**
 * SET_PED_MOVE_ANIMS_BLEND_OUT
 *
 * @param {number} ped
 * @return {void}
 */
global.SetPedMoveAnimsBlendOut = function (ped) {
  return _in(0x9e8c908f, 0x41584ecd, ped);
};

/**
 * SET_PED_MOVE_RATE_OVERRIDE
 * Min: 0.0f
 * Max: 1.15f
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedMoveRateOverride = function (ped, value) {
  return _in(0x085bf80f, 0xa50a39d1, ped, _fv(value));
};

/**
 * SET_PED_NAME_DEBUG
 * nullsub, doesn't do anything
 *
 * @param {number} ped
 * @param {string | number} name
 * @return {void}
 */
global.SetPedNameDebug = function (ped, name) {
  return _in(0x98efa132, 0xa4117be1, ped, _ts(name));
};

/**
 * SET_PED_NON_CREATION_AREA
 * The distance between these points, is the diagonal of a box (remember it's 3D).
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @return {void}
 */
global.SetPedNonCreationArea = function (x1, y1, z1, x2, y2, z2) {
  return _in(0xee01041d, 0x559983ea, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2));
};

/**
 * SET_PED_ONTO_MOUNT
 *
 * @param {number} ped
 * @param {number} mount
 * @param {number} seatIndex
 * @param {boolean} p3
 * @return {void}
 */
global.SetPedOntoMount = function (ped, mount, seatIndex, p3) {
  return _in(0x028f76b6, 0xe78246eb, ped, mount, seatIndex, p3);
};

/**
 * SET_PED_OWNS_ANIMAL
 *
 * @param {number} ped
 * @param {number} animal
 * @param {boolean} p2
 * @return {void}
 */
global.SetPedOwnsAnimal = function (ped, animal, p2) {
  return _in(0x931b2414, 0x09216c1f, ped, animal, p2);
};

/**
 * SET_PED_PANIC_EXIT_SCENARIO
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {boolean}
 */
global.SetPedPanicExitScenario = function (ped, x, y, z) {
  return _in(0xfe07ff64, 0x95d52e2a, ped, _fv(x), _fv(y), _fv(z), _r);
};

/**
 * SET_PED_RAGDOLL_FORCE_FALL
 *
 * @param {number} ped
 * @return {void}
 */
global.SetPedRagdollForceFall = function (ped) {
  return _in(0x01f6594b, 0x923b9251, ped);
};

/**
 * SET_PED_RAGDOLL_ON_COLLISION
 * Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @param {boolean} p2
 * @return {void}
 */
global.SetPedRagdollOnCollision = function (ped, toggle, p2) {
  return _in(0xf0a4f1bb, 0xf4fa7497, ped, toggle, p2);
};

/**
 * SET_PED_RANDOM_COMPONENT_VARIATION
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.SetPedRandomComponentVariation = function (ped, p1) {
  return _in(0xc8a9481a, 0x01e63c28, ped, p1);
};

/**
 * SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH
 *
 * @param {number} ped
 * @param {number} hash
 * @return {void}
 */
global.SetPedRelationshipGroupDefaultHash = function (ped, hash) {
  return _in(0xadb3f206, 0x518799e8, ped, _ch(hash));
};

/**
 * SET_PED_RELATIONSHIP_GROUP_HASH
 *
 * @param {number} ped
 * @param {number} relationshipGroup
 * @return {void}
 */
global.SetPedRelationshipGroupHash = function (ped, relationshipGroup) {
  return _in(0xc80a74ac, 0x829ddd92, ped, _ch(relationshipGroup));
};

/**
 * SET_PED_RESET_FLAG
 * Needs to be called every frame
 * 
 * flagid:https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedScriptResetFlags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_RESET_FLAGS
 *
 * @param {number} ped
 * @param {number} flagId
 * @param {boolean} doReset
 * @return {void}
 */
global.SetPedResetFlag = function (ped, flagId, doReset) {
  return _in(0xc1e8a365, 0xbf3b29f2, ped, flagId, doReset);
};

/**
 * SET_PED_SEEING_RANGE
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedSeeingRange = function (ped, value) {
  return _in(0xf29cf591, 0xc4bf6cee, ped, _fv(value));
};

/**
 * SET_PED_SHOOT_RATE
 * Params: shootRate = 0 - 1000
 *
 * @param {number} ped
 * @param {number} shootRate
 * @return {void}
 */
global.SetPedShootRate = function (ped, shootRate) {
  return _in(0x614da022, 0x990752dc, ped, shootRate);
};

/**
 * SET_PED_SHOULD_PLAY_COMBAT_SCENARIO_EXIT
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} lookIntensity
 * @return {boolean}
 */
global.SetPedShouldPlayCombatScenarioExit = function (ped, x, y, z, lookIntensity) {
  return _in(0x802092b0, 0x7e3b1eea, ped, _fv(x), _fv(y), _fv(z), lookIntensity, _r);
};

/**
 * SET_PED_SHOULD_PLAY_DIRECTED_NORMAL_SCENARIO_EXIT
 * Old name: _SET_PED_SHOULD_PLAY_DIRECTED_SCENARIO_EXIT
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {boolean}
 */
global.SetPedShouldPlayDirectedNormalScenarioExit = function (ped, x, y, z) {
  return _in(0xec6935eb, 0xe0847b90, ped, _fv(x), _fv(y), _fv(z), _r);
};

/**
 * SET_PED_SHOULD_PLAY_EMOTIONAL_SCENARIO_EXIT
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} lookIntensity
 * @param {boolean} p5
 * @return {boolean}
 */
global.SetPedShouldPlayEmotionalScenarioExit = function (ped, x, y, z, lookIntensity, p5) {
  return _in(0x62fdad5e, 0x01d2dd47, ped, _fv(x), _fv(y), _fv(z), lookIntensity, p5, _r);
};

/**
 * SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 * lookIntensity:
 * 0 - REACT_LOOK_NONE
 * 1 - REACT_LOOK_LOW
 * 2 - REACT_LOOK_MEDIUM
 * 3 - REACT_LOOK_HIGH
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} lookIntensity
 * @return {boolean}
 */
global.SetPedShouldPlayFleeScenarioExit = function (ped, x, y, z, lookIntensity) {
  return _in(0xeeed8faf, 0xec331a70, ped, _fv(x), _fv(y), _fv(z), lookIntensity, _r);
};

/**
 * SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT
 *
 * @param {number} ped
 * @return {void}
 */
global.SetPedShouldPlayImmediateScenarioExit = function (ped) {
  return _in(0xf1c03a53, 0x52243a30, ped);
};

/**
 * SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT
 *
 * @param {number} ped
 * @return {void}
 */
global.SetPedShouldPlayNormalScenarioExit = function (ped) {
  return _in(0xa3a9299c, 0x4f2adb98, ped);
};

/**
 * SET_PED_SHOULD_PLAY_QUICK_SCENARIO_EXIT
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} lookIntensity
 * @param {boolean} p5
 * @return {boolean}
 */
global.SetPedShouldPlayQuickScenarioExit = function (ped, x, y, z, lookIntensity, p5) {
  return _in(0x46380342, 0x9297117c, ped, _fv(x), _fv(y), _fv(z), lookIntensity, p5, _r);
};

/**
 * SET_PED_SPHERE_DEFENSIVE_AREA
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {boolean} p5
 * @param {boolean} p6
 * @param {boolean} p7
 * @return {void}
 */
global.SetPedSphereDefensiveArea = function (ped, x, y, z, radius, p5, p6, p7) {
  return _in(0x9d3151a3, 0x73974804, ped, _fv(x), _fv(y), _fv(z), _fv(radius), p5, p6, p7);
};

/**
 * SET_PED_STEALTH_MOVEMENT
 * Not implemented.
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.SetPedStealthMovement = function (ped, toggle, p2, p3) {
  return _in(0x88cbb5ce, 0xb96b7bd2, ped, toggle, p2, p3);
};

/**
 * SET_PED_SWEAT
 *
 * @param {number} ped
 * @param {number} sweat
 * @return {void}
 */
global.SetPedSweat = function (ped, sweat) {
  return _in(0x27b0405f, 0x59637d1f, ped, _fv(sweat));
};

/**
 * SET_PED_TARGET_LOSS_RESPONSE
 * TLR_ExitTask = 0,
 * TLR_NeverLoseTarget,
 * TLR_SearchForTarget
 *
 * @param {number} ped
 * @param {number} responseType
 * @return {void}
 */
global.SetPedTargetLossResponse = function (ped, responseType) {
  return _in(0x0703b907, 0x9823da4a, ped, responseType);
};

/**
 * SET_PED_TO_INFORM_RESPECTED_FRIENDS
 *
 * @param {number} ped
 * @param {number} radius
 * @param {number} maxFriends
 * @return {void}
 */
global.SetPedToInformRespectedFriends = function (ped, radius, maxFriends) {
  return _in(0x112942c6, 0xe708f70b, ped, _fv(radius), maxFriends);
};

/**
 * SET_PED_TO_PLAYER_WEAPON_DAMAGE_MODIFIER
 * Old name: _SET_PED_DAMAGE_MODIFIER
 *
 * @param {number} ped
 * @param {number} damageModifier
 * @return {void}
 */
global.SetPedToPlayerWeaponDamageModifier = function (ped, damageModifier) {
  return _in(0xd77ae486, 0x11b7b10a, ped, _fv(damageModifier));
};

/**
 * SET_PED_TO_RAGDOLL
 * nmTaskMessageParameterName: See physicstasks.ymt. Search for DraggedByCart or 0xD00820D7 (Used in R* SP Script marston8)
 *
 * @param {number} ped
 * @param {number} timeMin
 * @param {number} timeMax
 * @param {number} ragdollType
 * @param {boolean} abortIfInjured
 * @param {boolean} abortIfDead
 * @param {string | number} nmTaskMessageParameterName
 * @return {boolean}
 */
global.SetPedToRagdoll = function (ped, timeMin, timeMax, ragdollType, abortIfInjured, abortIfDead, nmTaskMessageParameterName) {
  return _in(0xae99fb95, 0x5581844a, ped, timeMin, timeMax, ragdollType, abortIfInjured, abortIfDead, _ts(nmTaskMessageParameterName), _r);
};

/**
 * SET_PED_TO_RAGDOLL_WITH_FALL
 *
 * @param {number} ped
 * @param {number} timeMin
 * @param {number} timeMax
 * @param {number} ragdollType
 * @param {number} falldirX
 * @param {number} falldirY
 * @param {number} falldirZ
 * @param {number} p7
 * @param {number} p8
 * @param {number} p9
 * @param {number} p10
 * @param {number} p11
 * @param {number} p12
 * @param {number} p13
 * @return {boolean}
 */
global.SetPedToRagdollWithFall = function (ped, timeMin, timeMax, ragdollType, falldirX, falldirY, falldirZ, p7, p8, p9, p10, p11, p12, p13) {
  return _in(0xd76632d9, 0x9e4966c8, ped, timeMin, timeMax, ragdollType, _fv(falldirX), _fv(falldirY), _fv(falldirZ), _fv(p7), _fv(p8), _fv(p9), _fv(p10), _fv(p11), _fv(p12), _fv(p13), _r);
};

/**
 * SET_PED_USING_ACTION_MODE
 *
 * @param {number} ped
 * @param {boolean} bActionModeEnabled
 * @param {number} p2
 * @param {string | number} action
 * @return {void}
 */
global.SetPedUsingActionMode = function (ped, bActionModeEnabled, p2, action) {
  return _in(0xd75accf5, 0xe0fb5367, ped, bActionModeEnabled, p2, _ts(action));
};

/**
 * SET_PED_VISUAL_FIELD_CENTER_ANGLE
 *
 * @param {number} ped
 * @param {number} angle
 * @return {void}
 */
global.SetPedVisualFieldCenterAngle = function (ped, angle) {
  return _in(0x3b6405e8, 0xab34a907, ped, _fv(angle));
};

/**
 * SET_PED_VISUAL_FIELD_MAX_ANGLE
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedVisualFieldMaxAngle = function (ped, value) {
  return _in(0x70793bdc, 0xa1e854d4, ped, _fv(value));
};

/**
 * SET_PED_VISUAL_FIELD_MIN_ANGLE
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.SetPedVisualFieldMinAngle = function (ped, value) {
  return _in(0x2db49222, 0x2fb21e26, ped, _fv(value));
};

/**
 * SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE
 *
 * @param {number} ped
 * @param {number} range
 * @return {void}
 */
global.SetPedVisualFieldPeripheralRange = function (ped, range) {
  return _in(0x9c74b0bc, 0x831b753a, ped, _fv(range));
};

/**
 * SET_PED_WETNESS_ENABLED_THIS_FRAME
 * combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function
 *
 * @param {number} ped
 * @return {void}
 */
global.SetPedWetnessEnabledThisFrame = function (ped) {
  return _in(0xb5485e49, 0x07b53019, ped);
};

/**
 * SET_PED_WETNESS_HEIGHT
 * It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
 *
 * @param {number} ped
 * @param {number} height
 * @return {void}
 */
global.SetPedWetnessHeight = function (ped, height) {
  return _in(0x44cb6447, 0xd2571aa0, ped, _fv(height));
};

/**
 * SET_POP_CONTROL_SPHERE_THIS_FRAME
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.SetPopControlSphereThisFrame = function (p0, p1, p2, p3, p4) {
  return _in(0xd8c3be3e, 0xe94caf2d, p0, p1, p2, p3, p4);
};

/**
 * SET_RAGDOLL_BLOCKING_FLAGS
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/RAGDOLL_BLOCKING_FLAGS
 * 
 * flags:
 * enum eRagdollBlockingFlags
 * {
 *   RBF_BULLET_IMPACT = (1 << 0),
 *   RBF_VEHICLE_IMPACT = (1 << 1),
 *   RBF_FIRE = (1 << 2),
 *   RBF_ELECTROCUTION = (1 << 3),
 *   RBF_PLAYER_IMPACT = (1 << 4),
 *   RBF_EXPLOSION = (1 << 5),
 *   RBF_IMPACT_OBJECT = (1 << 6),
 *   RBF_MELEE = (1 << 7),
 *   RBF_RUBBER_BULLET = (1 << 8),
 *   RBF_FALLING = (1 << 9),
 *   RBF_WATER_JET = (1 << 10),
 *   RBF_DROWNING = (1 << 11),
 *   RBF_0x9F52E2C4 = (1 << 12),
 *   RBF_PLAYER_BUMP = (1 << 13),
 *   RBF_PLAYER_RAGDOLL_BUMP = (1 << 14),
 *   RBF_PED_RAGDOLL_BUMP = (1 << 15),
 *   RBF_VEHICLE_GRAB = (1 << 16),
 *   RBF_SMOKE_GRENADE = (1 << 17),
 *   RBF_HORSE_BUMP = (1 << 18),
 *   RBF_ACTIVATE_ON_COLLISION = (1 << 19)
 * };
 *
 * @param {number} ped
 * @param {number} flags
 * @return {void}
 */
global.SetRagdollBlockingFlags = function (ped, flags) {
  return _in(0x26695ec7, 0x67728d84, ped, flags);
};

/**
 * SET_RELATIONSHIP_BETWEEN_GROUPS
 *
 * @param {number} relationship
 * @param {number} group1
 * @param {number} group2
 * @return {void}
 */
global.SetRelationshipBetweenGroups = function (relationship, group1, group2) {
  return _in(0xbf25eb89, 0x375a37ad, relationship, _ch(group1), _ch(group2));
};

/**
 * SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetScenarioPedDensityMultiplierThisFrame = function (multiplier) {
  return _in(0x7a556143, 0xa1c03898, _fv(multiplier));
};

/**
 * SPAWNPOINTS_CANCEL_SEARCH
 *

 * @return {void}
 */
global.SpawnpointsCancelSearch = function () {
  return _in(0xfee4a545, 0x9472a9f8);
};

/**
 * SPAWNPOINTS_GET_NUM_SEARCH_RESULTS
 *

 * @return {number}
 */
global.SpawnpointsGetNumSearchResults = function () {
  return _in(0xa635c11b, 0x8c44afc2, _r, _ri);
};

/**
 * SPAWNPOINTS_GET_SEARCH_RESULT
 *
 * @param {number} randomInt
 * @param {DataView} y
 * @return {[number, number]}
 */
global.SpawnpointsGetSearchResult = function (randomInt, y) {
  return _in(0x280c7e3a, 0xc7f56e90, randomInt, _f, y, _f);
};

/**
 * SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS
 *
 * @param {any} p0
 * @param {DataView} p1
 * @return {void}
 */
global.SpawnpointsGetSearchResultFlags = function (p0, p1) {
  return _in(0xb782f823, 0x8512bad5, p0, p1);
};

/**
 * SPAWNPOINTS_IS_SEARCH_ACTIVE
 *

 * @return {boolean}
 */
global.SpawnpointsIsSearchActive = function () {
  return _in(0x3c675069, 0x96001f5e, _r);
};

/**
 * SPAWNPOINTS_IS_SEARCH_COMPLETE
 *

 * @return {boolean}
 */
global.SpawnpointsIsSearchComplete = function () {
  return _in(0xa586fbeb, 0x32a53dbb, _r);
};

/**
 * SPAWNPOINTS_IS_SEARCH_FAILED
 *

 * @return {boolean}
 */
global.SpawnpointsIsSearchFailed = function () {
  return _in(0xf445de8d, 0xa80a1792, _r);
};

/**
 * SPAWNPOINTS_START_SEARCH
 * Params: p4 = 35.f, duration = 5000 in R* Scripts
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} width
 * @param {number} p4
 * @param {number} spawnpointsFlag
 * @param {number} p6
 * @param {number} duration
 * @param {number} p8
 * @return {void}
 */
global.SpawnpointsStartSearch = function (x, y, z, width, p4, spawnpointsFlag, p6, duration, p8) {
  return _in(0x2df9038c, 0x90ad5264, _fv(x), _fv(y), _fv(z), _fv(width), _fv(p4), spawnpointsFlag, _fv(p6), duration, _fv(p8));
};

/**
 * SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA
 * Searching area between coords 1 and 2
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} width
 * @param {number} spawnpointsFlag
 * @param {number} p8
 * @param {number} duration
 * @param {number} p10
 * @return {void}
 */
global.SpawnpointsStartSearchInAngledArea = function (x1, y1, z1, x2, y2, z2, width, spawnpointsFlag, p8, duration, p10) {
  return _in(0xb2aff102, 0x16defa2f, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _fv(width), spawnpointsFlag, _fv(p8), duration, _fv(p10));
};

/**
 * SPECIAL_FUNCTION_DO_NOT_USE
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.SpecialFunctionDoNotUse = function (ped, p1) {
  return _in(0xf9acf4a0, 0x8098ea25, ped, p1);
};

/**
 * TIME_SINCE_PED_LAST_SHOT
 * Returns time since the specified ped last shot, in seconds. (fPlayerJustShotTime)
 *
 * @param {number} ped
 * @return {number}
 */
global.TimeSincePedLastShot = function (ped) {
  return _in(0x285d36c5, 0xc72b0569, ped, _r, _rf);
};

/**
 * TOGGLE_SCENARIO_PED_COWER_IN_PLACE
 * If toggle is true, when the ped is using a scenario he will stop it and become scared
 * If toggle is false, the ped will not be scared anymore and continue his scenario
 * 
 * Old name: _SET_PED_SCARED_WHEN_USING_SCENARIO
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.ToggleScenarioPedCowerInPlace = function (ped, toggle) {
  return _in(0x9a77dfd2, 0x95e29b09, ped, toggle);
};

/**
 * WAS_PED_SKELETON_UPDATED
 * Despite this function's name, it simply returns whether the specified handle is a Ped.
 *
 * @param {number} ped
 * @return {boolean}
 */
global.WasPedSkeletonUpdated = function (ped) {
  return _in(0x11b499c1, 0xe0ff8559, ped, _r);
};

/**
 * _0x00B380FF2DF6AB7A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x00B380FF2DF6AB7A = function (p0, p1) {
  return _in(0x00b380ff, 0x2df6ab7a, p0, p1);
};

/**
 * _0x0105FEE8F9091255
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x0105FEE8F9091255 = function (p0, p1) {
  return _in(0x0105fee8, 0xf9091255, p0, p1, _r);
};

/**
 * _0x024EC9B649111915
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x024EC9B649111915 = function (ped, p1) {
  return _in(0x024ec9b6, 0x49111915, ped, p1);
};

/**
 * _0x028E7B3BBA0BD2FC
 * _SET_ST* - _SET_SW*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x028E7B3BBA0BD2FC = function (ped) {
  return _in(0x028e7b3b, 0xba0bd2fc, ped);
};

/**
 * _0x02E741E19E39628C
 * _SET_PLAYER_SN* - _SET_PLAYER_STAMINA*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x02E741E19E39628C = function (ped, p1) {
  return _in(0x02e741e1, 0x9e39628c, ped, _fv(p1));
};

/**
 * _0x0455546F23FF08E4
 * _DOES_GROUP_* - _DOES_N*
 *
 * @param {number} groupId
 * @return {boolean}
 */
global.N_0x0455546F23FF08E4 = function (groupId) {
  return _in(0x0455546f, 0x23ff08e4, groupId, _r);
};

/**
 * _0x06A10B4D7F50B0C3
 * _GET_PED_D*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x06A10B4D7F50B0C3 = function (ped) {
  return _in(0x06a10b4d, 0x7f50b0c3, ped, _r);
};

/**
 * _0x070A3841406C43D5
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x070A3841406C43D5 = function (p0, p1) {
  return _in(0x070a3841, 0x406c43d5, p0, p1);
};

/**
 * _0x07EA5B053FA60AC7
 *
 * @param {number} groupId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x07EA5B053FA60AC7 = function (groupId, p1) {
  return _in(0x07ea5b05, 0x3fa60ac7, groupId, p1);
};

/**
 * _0x09171A6F8FDE5DC1
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x09171A6F8FDE5DC1 = function (p0, p1, p2, p3, p4) {
  return _in(0x09171a6f, 0x8fde5dc1, p0, p1, p2, p3, p4);
};

/**
 * _0x095C2277FED731DB
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x095C2277FED731DB = function (p0) {
  return _in(0x095c2277, 0xfed731db, p0, _r);
};

/**
 * _0x09D7AFD3716DA8E1
 *
 * @param {number} ped
 * @param {number} p1
 * @return {boolean}
 */
global.N_0x09D7AFD3716DA8E1 = function (ped, p1) {
  return _in(0x09d7afd3, 0x716da8e1, ped, p1, _r);
};

/**
 * _0x09E378C52B1433B5
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x09E378C52B1433B5 = function (p0, p1, p2, p3, p4) {
  return _in(0x09e378c5, 0x2b1433b5, p0, p1, p2, p3, p4);
};

/**
 * _0x0A4618FFD517E24D
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0A4618FFD517E24D = function (p0, p1) {
  return _in(0x0a4618ff, 0xd517e24d, p0, p1);
};

/**
 * _0x0ADA3EC589E1736E
 *

 * @return {void}
 */
global.N_0x0ADA3EC589E1736E = function () {
  return _in(0x0ada3ec5, 0x89e1736e);
};

/**
 * _0x0B787A37EEDD226F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0B787A37EEDD226F = function (p0, p1) {
  return _in(0x0b787a37, 0xeedd226f, p0, p1);
};

/**
 * _0x0D3B1568917EBDA0
 * _IS_PED_M*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {boolean}
 */
global.N_0x0D3B1568917EBDA0 = function (ped, p1) {
  return _in(0x0d3b1568, 0x917ebda0, ped, p1, _r);
};

/**
 * _0x0D497AA69059FE40
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0D497AA69059FE40 = function (p0, p1) {
  return _in(0x0d497aa6, 0x9059fe40, p0, p1);
};

/**
 * _0x0EA9EACBA3B01601
 * _CAN_PED_B* - _CAN_PED_I*
 *
 * @param {number} ped1
 * @param {number} ped2
 * @param {boolean} p2
 * @return {number}
 */
global.N_0x0EA9EACBA3B01601 = function (ped1, ped2, p2) {
  return _in(0x0ea9eacb, 0xa3b01601, ped1, ped2, p2, _r, _rf);
};

/**
 * _0x0EEF7A81C17679DB
 * _IS_PED_L* - _IS_PED_M*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x0EEF7A81C17679DB = function (ped) {
  return _in(0x0eef7a81, 0xc17679db, ped, _r);
};

/**
 * _0x0F967019CC853BCC
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0F967019CC853BCC = function (p0, p1) {
  return _in(0x0f967019, 0xcc853bcc, p0, p1);
};

/**
 * _0x0FB1BA7FF73B41E1
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x0FB1BA7FF73B41E1 = function (p0, p1, p2) {
  return _in(0x0fb1ba7f, 0xf73b41e1, p0, p1, p2);
};

/**
 * _0x0FFDF937E5C11382
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0x0FFDF937E5C11382 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x0ffdf937, 0xe5c11382, p0, p1, p2, p3, p4, p5);
};

/**
 * _0x101B45C5F56D970F
 *
 * @param {DataView} p0
 * @param {number} ped
 * @param {number} damageCleanliness
 * @param {number} p3
 * @return {boolean}
 */
global.N_0x101B45C5F56D970F = function (p0, ped, damageCleanliness, p3) {
  return _in(0x101b45c5, 0xf56d970f, p0, ped, damageCleanliness, p3, _r);
};

/**
 * _0x10F96086123B939F
 * NB_CUSTOM_CLIENT_ON_CREATE_COMPLETE - set legendary to not avoid prey
 *
 * @param {number} legendaryPed
 * @param {number} preyPed
 * @param {number} p2
 * @return {void}
 */
global.N_0x10F96086123B939F = function (legendaryPed, preyPed, p2) {
  return _in(0x10f96086, 0x123b939f, legendaryPed, preyPed, _fv(p2));
};

/**
 * _0x1148F706CF4EBDDA
 * _CAN_PED_SEE* - _CAN_PED_USE_(SCENARIO_HASH?)*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {boolean}
 */
global.N_0x1148F706CF4EBDDA = function (ped, p1, p2) {
  return _in(0x1148f706, 0xcf4ebdda, ped, _ch(p1), p2, _r);
};

/**
 * _0x1298B3D8E4C2409F
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x1298B3D8E4C2409F = function (p0) {
  return _in(0x1298b3d8, 0xe4c2409f, p0);
};

/**
 * _0x12EB4E31F092C9B3
 * _GET_IS_PED_(BLEEDING_OUT?)*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x12EB4E31F092C9B3 = function (ped) {
  return _in(0x12eb4e31, 0xf092c9b3, ped, _r);
};

/**
 * _0x12F2D161BF4031FC
 * _SET_A* - _SET_B*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x12F2D161BF4031FC = function (ped, p1) {
  return _in(0x12f2d161, 0xbf4031fc, ped, _fv(p1));
};

/**
 * _0x134775B093AD5C38
 * _GET_PED_M*
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0x134775B093AD5C38 = function (ped) {
  return _in(0x134775b0, 0x93ad5c38, ped, _r, _rf);
};

/**
 * _0x154B7E841AC7412F
 * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
 *
 * @param {number} groupId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x154B7E841AC7412F = function (groupId, p1) {
  return _in(0x154b7e84, 0x1ac7412f, groupId, p1);
};

/**
 * _0x15F4732C357B1D6D
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x15F4732C357B1D6D = function (p0, p1, p2) {
  return _in(0x15f4732c, 0x357b1d6d, p0, p1, p2);
};

/**
 * _0x16802C32B2FCA06B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x16802C32B2FCA06B = function (p0, p1, p2, p3) {
  return _in(0x16802c32, 0xb2fca06b, p0, p1, p2, p3);
};

/**
 * _0x16F798A05BB9E3B5
 * _PED_COWER_M*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x16F798A05BB9E3B5 = function (ped) {
  return _in(0x16f798a0, 0x5bb9e3b5, ped);
};

/**
 * _0x1D23D3F70606D788
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x1D23D3F70606D788 = function (p0, p1) {
  return _in(0x1d23d3f7, 0x0606d788, p0, p1);
};

/**
 * _0x1D4636C90BBEFACB
 * _SET_PED_CA* - _SET_PED_CO*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x1D4636C90BBEFACB = function (ped, p1) {
  return _in(0x1d4636c9, 0x0bbefacb, ped, p1);
};

/**
 * _0x1E017404784AA6A3
 *
 * @param {number} ped
 * @param {number} p1
 * @return {boolean}
 */
global.N_0x1E017404784AA6A3 = function (ped, p1) {
  return _in(0x1e017404, 0x784aa6a3, ped, _ch(p1), _r);
};

/**
 * _0x1F44B7E283C09EDE
 * Only used in SP R* Scripts
 * Params: p2 = same as p2 of 0x3C529A827998F9B3
 * _SET_PED_TA* - _SET_PED_TO_*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0x1F44B7E283C09EDE = function (ped, p1, p2) {
  return _in(0x1f44b7e2, 0x83c09ede, ped, _fv(p1), p2);
};

/**
 * _0x1F8215D0E446F593
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x1F8215D0E446F593 = function (p0, p1, p2) {
  return _in(0x1f8215d0, 0xe446f593, p0, p1, p2);
};

/**
 * _0x2371C39D4F91C288
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x2371C39D4F91C288 = function (ped) {
  return _in(0x2371c39d, 0x4f91c288, ped);
};

/**
 * _0x23BDE06596A22CEC
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x23BDE06596A22CEC = function (ped, p1, p2, p3) {
  return _in(0x23bde065, 0x96a22cec, ped, p1, _fv(p2), p3);
};

/**
 * _0x242EDF85D4E87B65
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x242EDF85D4E87B65 = function (p0) {
  return _in(0x242edf85, 0xd4e87b65, p0, _r);
};

/**
 * _0x256EDD55C6BE1482
 * _IS_PED_FL* - _IS_PED_FU*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x256EDD55C6BE1482 = function (ped) {
  return _in(0x256edd55, 0xc6be1482, ped, _r);
};

/**
 * _0x273915CE30780986
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x273915CE30780986 = function (p0, p1) {
  return _in(0x273915ce, 0x30780986, p0, p1, _r);
};

/**
 * _0x27E8A84C12B0B7D1
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x27E8A84C12B0B7D1 = function (p0, p1, p2) {
  return _in(0x27e8a84c, 0x12b0b7d1, p0, p1, p2, _r);
};

/**
 * _0x28508173C6A7CC18
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x28508173C6A7CC18 = function (p0) {
  return _in(0x28508173, 0xc6a7cc18, p0);
};

/**
 * _0x290B2E6CCDE532E1
 * _IS_PED_L* - _IS_PED_M*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x290B2E6CCDE532E1 = function (ped) {
  return _in(0x290b2e6c, 0xcde532e1, ped, _r);
};

/**
 * _0x29924EB8EE9DB926
 * _SET_PED_K* or _SET_PED_L*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x29924EB8EE9DB926 = function (ped, p1) {
  return _in(0x29924eb8, 0xee9db926, ped, _fv(p1));
};

/**
 * _0x29F3539189D3E277
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x29F3539189D3E277 = function (p0, p1) {
  return _in(0x29f35391, 0x89d3e277, p0, p1);
};

/**
 * _0x2B4CE170DE09F346
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x2B4CE170DE09F346 = function (ped, p1) {
  return _in(0x2b4ce170, 0xde09f346, ped, _ch(p1));
};

/**
 * _0x2BA9D7BF629F920C
 * Used in Script Function CHECK_IS_PLAYER_SEEN
 * _GET_PED_*
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0x2BA9D7BF629F920C = function (ped) {
  return _in(0x2ba9d7bf, 0x629f920c, ped, _r, _rf);
};

/**
 * _0x2D976DBDC731DF80
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x2D976DBDC731DF80 = function (ped) {
  return _in(0x2d976dbd, 0xc731df80, ped);
};

/**
 * _0x2DC0E8DCBD3546E9
 * _IS_PED_D*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x2DC0E8DCBD3546E9 = function (ped) {
  return _in(0x2dc0e8dc, 0xbd3546e9, ped, _r);
};

/**
 * _0x2DD4E0E26DFAD97D
 * _IS_PED_M* - _IS_PED_O*
 *
 * @param {number} ped1
 * @param {number} ped2
 * @param {number} p2
 * @return {boolean}
 */
global.N_0x2DD4E0E26DFAD97D = function (ped1, ped2, p2) {
  return _in(0x2dd4e0e2, 0x6dfad97d, ped1, ped2, _fv(p2), _r);
};

/**
 * _0x2E5B5D1F1453E08E
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x2E5B5D1F1453E08E = function (ped, p1) {
  return _in(0x2e5b5d1f, 0x1453e08e, ped, p1);
};

/**
 * _0x2FA568BFA725F8D6
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x2FA568BFA725F8D6 = function (p0, p1, p2, p3) {
  return _in(0x2fa568bf, 0xa725f8d6, p0, p1, p2, p3);
};

/**
 * _0x31B2E7F2E3C58B89
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0x31B2E7F2E3C58B89 = function (p0, p1, p2, p3) {
  return _in(0x31b2e7f2, 0xe3c58b89, p0, p1, p2, p3, _r);
};

/**
 * _0x32417CB860A3BDC4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x32417CB860A3BDC4 = function (p0, p1) {
  return _in(0x32417cb8, 0x60a3bdc4, p0, p1, _r);
};

/**
 * _0x326F7951EF0D7F75
 * Only used in R* SP Script short_update
 * _GET_TARGET_* - _GET_TRACKED*
 *
 * @param {number} ped
 * @param {number} eventType
 * @return {any}
 */
global.N_0x326F7951EF0D7F75 = function (ped, eventType) {
  return _in(0x326f7951, 0xef0d7f75, ped, _ch(eventType), _r);
};

/**
 * _0x329772C47DBB2FBC
 * _SET_PED_P* - _SET_PED_R*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x329772C47DBB2FBC = function (ped) {
  return _in(0x329772c4, 0x7dbb2fbc, ped);
};

/**
 * _0x32CCAD8A981B53D3
 * _STOP_(?)*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x32CCAD8A981B53D3 = function (ped) {
  return _in(0x32ccad8a, 0x981b53d3, ped);
};

/**
 * _0x32CEDA9A0AB4CEF7
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0x32CEDA9A0AB4CEF7 = function (ped, p1, p2) {
  return _in(0x32ceda9a, 0x0ab4cef7, ped, _ch(p1), p2);
};

/**
 * _0x34B5CEAC180A5D6E
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0x34B5CEAC180A5D6E = function (ped, p1, p2) {
  return _in(0x34b5ceac, 0x180a5d6e, ped, _ch(p1), p2);
};

/**
 * _0x34C11114887150FD
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x34C11114887150FD = function (p0, p1) {
  return _in(0x34c11114, 0x887150fd, p0, p1);
};

/**
 * _0x34EDDD59364AD74A
 *
 * @param {number} ped
 * @param {DataView} p1
 * @return {void}
 */
global.N_0x34EDDD59364AD74A = function (ped, p1) {
  return _in(0x34eddd59, 0x364ad74a, ped, p1);
};

/**
 * _0x354CA4DDDEEC397A
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0x354CA4DDDEEC397A = function (ped) {
  return _in(0x354ca4dd, 0xdeec397a, ped, _r, _ri);
};

/**
 * _0x36513AFFC703C60D
 * _RESET_PED_*
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x36513AFFC703C60D = function (p0) {
  return _in(0x36513aff, 0xc703c60d, p0);
};

/**
 * _0x370A973252741AC4
 * _RESET_PED_*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x370A973252741AC4 = function (ped, p1) {
  return _in(0x370a9732, 0x52741ac4, ped, p1);
};

/**
 * _0x3A5697B80FED5EBE
 * _SET_PED_MO*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.N_0x3A5697B80FED5EBE = function (ped, p1, p2, p3, p4) {
  return _in(0x3a5697b8, 0x0fed5ebe, ped, _fv(p1), _fv(p2), _fv(p3), _fv(p4));
};

/**
 * _0x3ACCE14DFA6BA8C2
 * Used in R* Script net_fetch (NET_FETCH_UPDATE_RECIPIENT_PROP_ILO_IN_COMBAT) and various SP Scripts
 * Params: p1 = 4/5/6, p5 = 40.f/100.f, coords = Player ped
 * Perhaps returns some distance (Clearing that the local player is able to use ILO while in combat because they are near the recipient but also near hated peds)
 * _GET_NUM_M* - _GET_PEDS_J*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p5
 * @param {number} itemset
 * @return {number}
 */
global.N_0x3ACCE14DFA6BA8C2 = function (ped, p1, x, y, z, p5, itemset) {
  return _in(0x3acce14d, 0xfa6ba8c2, ped, p1, _fv(x), _fv(y), _fv(z), _fv(p5), itemset, _r, _ri);
};

/**
 * _0x3AEC4A410ECAF30D
 * _IS_PED_R*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x3AEC4A410ECAF30D = function (ped) {
  return _in(0x3aec4a41, 0x0ecaf30d, ped, _r);
};

/**
 * _0x3C529A827998F9B3
 * _SET_PED_TA* - _SET_PED_TO_*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0x3C529A827998F9B3 = function (ped, p1, p2) {
  return _in(0x3c529a82, 0x7998f9b3, ped, p1, p2);
};

/**
 * _0x3D9F958834AB9C30
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0x3D9F958834AB9C30 = function (ped) {
  return _in(0x3d9f9588, 0x34ab9c30, ped, _r, _ri);
};

/**
 * _0x3EFED081B4834BA1
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x3EFED081B4834BA1 = function (p0) {
  return _in(0x3efed081, 0xb4834ba1, p0);
};

/**
 * _0x3FCBB5FCFD968698
 * Used for script function PROCESS_PLAYER_HAT_EVENT
 * Returns requestId to be used with 0x13E7320C762F0477
 *
 * @param {number} drawable
 * @param {number} albedo
 * @param {number} normal
 * @param {number} material
 * @param {any} p4
 * @return {number}
 */
global.N_0x3FCBB5FCFD968698 = function (drawable, albedo, normal, material, p4) {
  return _in(0x3fcbb5fc, 0xfd968698, _ch(drawable), _ch(albedo), _ch(normal), _ch(material), p4, _r, _ri);
};

/**
 * _0x3FDBB99EFD8CE4AF
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x3FDBB99EFD8CE4AF = function (p0, p1, p2) {
  return _in(0x3fdbb99e, 0xfd8ce4af, p0, p1, p2);
};

/**
 * _0x3FDCC1F8C17E303E
 * Changes health bar around heart core icon
 * INITIALISE_NEW_ROLE - Applying Super Jump buffs: p1 = 10, p2 = 0.0f
 * INITIALISE_NEW_ROLE - Clearing up Super Jump buffs: p1 = 10, p2 = 1.0f
 * _SET_D*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0x3FDCC1F8C17E303E = function (ped, p1, p2) {
  return _in(0x3fdcc1f8, 0xc17e303e, ped, p1, _fv(p2));
};

/**
 * _0x405180B14DA5A935
 * _SET_PED_A*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x405180B14DA5A935 = function (ped, p1) {
  return _in(0x405180b1, 0x4da5a935, ped, p1);
};

/**
 * _0x40C3524D4ED83554
 * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
 *
 * @param {number} groupId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x40C3524D4ED83554 = function (groupId, p1) {
  return _in(0x40c3524d, 0x4ed83554, groupId, p1);
};

/**
 * _0x40C9155AF8BC13F3
 * _IS_PED_RE*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x40C9155AF8BC13F3 = function (ped) {
  return _in(0x40c9155a, 0xf8bc13f3, ped, _r);
};

/**
 * _0x413697EC260AABBF
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x413697EC260AABBF = function (p0, p1, p2) {
  return _in(0x413697ec, 0x260aabbf, p0, p1, p2);
};

/**
 * _0x41C23A8E6B344867
 * _SET_PED_IN*
 *
 * @param {number} ped
 * @param {string | number} p1
 * @return {void}
 */
global.N_0x41C23A8E6B344867 = function (ped, p1) {
  return _in(0x41c23a8e, 0x6b344867, ped, _ts(p1));
};

/**
 * _0x45FEA6D5539BD474
 * _SET_PED_IN*
 *
 * @param {number} ped
 * @param {string | number} p1
 * @return {void}
 */
global.N_0x45FEA6D5539BD474 = function (ped, p1) {
  return _in(0x45fea6d5, 0x539bd474, ped, _ts(p1));
};

/**
 * _0x4642182A298187D0
 *
 * @param {number} ped
 * @param {number} p1
 * @param {DataView} p2
 * @param {number} p3
 * @param {number} p4
 * @return {number}
 */
global.N_0x4642182A298187D0 = function (ped, p1, p2, p3, p4) {
  return _in(0x4642182a, 0x298187d0, ped, p1, p2, p3, p4, _r, _ri);
};

/**
 * _0x46BF2A810679D6E6
 * Returns vehicle (desired) speed
 * _COMPUTE_(VEHICLE_SPEED_USING_BLEND_RATIO?)*
 *
 * @param {number} ped
 * @param {number} maxMoveBlendRatio
 * @return {number}
 */
global.N_0x46BF2A810679D6E6 = function (ped, maxMoveBlendRatio) {
  return _in(0x46bf2a81, 0x0679d6e6, ped, _fv(maxMoveBlendRatio), _r, _rf);
};

/**
 * _0x49DADFC4CD808B0A
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x49DADFC4CD808B0A = function (p0, p1, p2) {
  return _in(0x49dadfc4, 0xcd808b0a, p0, p1, p2);
};

/**
 * _0x4B19F171450E0D4F
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0x4B19F171450E0D4F = function (ped) {
  return _in(0x4b19f171, 0x450e0d4f, ped, _r, _ri);
};

/**
 * _0x4E68C7EF706DF35D
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p4
 * @param {number} relationshipGroup
 * @return {void}
 */
global.N_0x4E68C7EF706DF35D = function (ped, x, y, z, p4, relationshipGroup) {
  return _in(0x4e68c7ef, 0x706df35d, ped, _fv(x), _fv(y), _fv(z), _fv(p4), _ch(relationshipGroup));
};

/**
 * _0x4EC4EA2F72B36358
 * _SET_PED_A*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x4EC4EA2F72B36358 = function (ped, p1) {
  return _in(0x4ec4ea2f, 0x72b36358, ped, p1);
};

/**
 * _0x4F27603E44A8E4C0
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0x4F27603E44A8E4C0 = function (ped, p1, p2) {
  return _in(0x4f27603e, 0x44a8e4c0, ped, p1, p2);
};

/**
 * _0x4F63433CE3C08230
 * Only used in R* Script shop_harriet
 * _SET_PED_F*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x4F63433CE3C08230 = function (ped, p1) {
  return _in(0x4f63433c, 0xe3c08230, ped, p1);
};

/**
 * _0x5203038FF8BAE577
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {boolean}
 */
global.N_0x5203038FF8BAE577 = function (ped, p1, p2) {
  return _in(0x5203038f, 0xf8bae577, ped, p1, p2, _r);
};

/**
 * _0x52250B92EA70BE3D
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x52250B92EA70BE3D = function (p0) {
  return _in(0x52250b92, 0xea70be3d, p0, _r);
};

/**
 * _0x52A24D8A1DA89658
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0x52A24D8A1DA89658 = function (ped, p1, p2) {
  return _in(0x52a24d8a, 0x1da89658, ped, p1, p2);
};

/**
 * _0x53BA7D96B9A421D9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x53BA7D96B9A421D9 = function (p0, p1) {
  return _in(0x53ba7d96, 0xb9a421d9, p0, p1);
};

/**
 * _0x54D3CD482742C482
 *
 * @param {number} animal
 * @param {number} p2
 * @return {void}
 */
global.N_0x54D3CD482742C482 = function (animal, p2) {
  return _in(0x54d3cd48, 0x2742c482, animal, _fv(p2));
};

/**
 * _0x550CB89DD7F4FA3D
 * _HAS_PED_*
 *
 * @param {number} ped1
 * @param {number} ped2
 * @return {boolean}
 */
global.N_0x550CB89DD7F4FA3D = function (ped1, ped2) {
  return _in(0x550cb89d, 0xd7f4fa3d, ped1, ped2, _r);
};

/**
 * _0x55546004A244302A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x55546004A244302A = function (p0, p1) {
  return _in(0x55546004, 0xa244302a, p0, p1);
};

/**
 * _0x56076667E7C2DCD6
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x56076667E7C2DCD6 = function (p0, p1) {
  return _in(0x56076667, 0xe7c2dcd6, p0, p1);
};

/**
 * _0x56E4BAD93D33453C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x56E4BAD93D33453C = function (p0, p1) {
  return _in(0x56e4bad9, 0x3d33453c, p0, p1, _r);
};

/**
 * _0x577C60BA06D0EA64
 * _IS_PED_C* - _IS_PED_D*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x577C60BA06D0EA64 = function (ped) {
  return _in(0x577c60ba, 0x06d0ea64, ped, _r);
};

/**
 * _0x57F35552E771BE9D
 * _SET_PED_M*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x57F35552E771BE9D = function (ped, p1) {
  return _in(0x57f35552, 0xe771be9d, ped, p1);
};

/**
 * _0x58D32261AE0F0843
 *
 * @param {number} ped
 * @param {number} boneId
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {string | number} p8
 * @return {void}
 */
global.N_0x58D32261AE0F0843 = function (ped, boneId, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0x58d32261, 0xae0f0843, ped, boneId, _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _ts(p8));
};

/**
 * _0x5A1A929C8B729B4A
 * _C*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x5A1A929C8B729B4A = function (ped) {
  return _in(0x5a1a929c, 0x8b729b4a, ped);
};

/**
 * _0x5AF24CA9C974E51A
 * _SET_C*
 *
 * @param {number} ped1
 * @param {number} ped2
 * @return {void}
 */
global.N_0x5AF24CA9C974E51A = function (ped1, ped2) {
  return _in(0x5af24ca9, 0xc974e51a, ped1, ped2);
};

/**
 * _0x5B73975B4F12F7F3
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x5B73975B4F12F7F3 = function (p0, p1, p2, p3, p4) {
  return _in(0x5b73975b, 0x4f12f7f3, p0, p1, p2, p3, p4);
};

/**
 * _0x5BB04BC74A474B47
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x5BB04BC74A474B47 = function (p0, p1) {
  return _in(0x5bb04bc7, 0x4a474b47, p0, p1);
};

/**
 * _0x5BF0B9D9A8E227A0
 * _IS_PED_B* - _IS_PED_C*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x5BF0B9D9A8E227A0 = function (ped) {
  return _in(0x5bf0b9d9, 0xa8e227a0, ped, _r);
};

/**
 * _0x5C6C7C70CA302801
 * _IS_PED_IN*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x5C6C7C70CA302801 = function (ped) {
  return _in(0x5c6c7c70, 0xca302801, ped, _r);
};

/**
 * _0x5C90E20C25E6D83C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x5C90E20C25E6D83C = function (p0) {
  return _in(0x5c90e20c, 0x25e6d83c, p0);
};

/**
 * _0x5CA20FBE49891BBD
 * Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_FLOW & PROCESS_GENERIC_PLAYER_INITIALIZATION
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x5CA20FBE49891BBD = function (ped, p1) {
  return _in(0x5ca20fbe, 0x49891bbd, ped, p1);
};

/**
 * _0x5CB2EBB467BE3ED6
 *
 * @param {number} animal
 * @param {number} p2
 * @return {void}
 */
global.N_0x5CB2EBB467BE3ED6 = function (animal, p2) {
  return _in(0x5cb2ebb4, 0x67be3ed6, animal, _fv(p2));
};

/**
 * _0x5D4CD22A8C82A81A
 * Related to ped hat
 * _SET_PED_LA* - _SET_PED_LE*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x5D4CD22A8C82A81A = function (ped, p1) {
  return _in(0x5d4cd22a, 0x8c82a81a, ped, p1);
};

/**
 * _0x5DA36CCCB63C0895
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x5DA36CCCB63C0895 = function (p0, p1, p2) {
  return _in(0x5da36ccc, 0xb63c0895, p0, p1, p2, _r);
};

/**
 * _0x5E9FAF6C513347B4
 * Only used in R* SP Scripts
 * _GET_PED_IN*
 *
 * @param {number} ped
 * @param {number} eventType
 * @return {number}
 */
global.N_0x5E9FAF6C513347B4 = function (ped, eventType) {
  return _in(0x5e9faf6c, 0x513347b4, ped, _ch(eventType), _r, _ri);
};

/**
 * _0x5EFA8A3D8A60D662
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x5EFA8A3D8A60D662 = function (p0, p1) {
  return _in(0x5efa8a3d, 0x8a60d662, p0, p1, _r);
};

/**
 * _0x5FCF25D584065BFD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x5FCF25D584065BFD = function (p0, p1, p2, p3) {
  return _in(0x5fcf25d5, 0x84065bfd, p0, p1, p2, p3);
};

/**
 * _0x600BBDD29820370C
 * Not implemented.
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x600BBDD29820370C = function (ped) {
  return _in(0x600bbdd2, 0x9820370c, ped);
};

/**
 * _0x604E1010E3162E86
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x604E1010E3162E86 = function (p0, p1, p2) {
  return _in(0x604e1010, 0xe3162e86, p0, p1, p2);
};

/**
 * _0x606D529DADA3C940
 * Not implemented.
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.N_0x606D529DADA3C940 = function (ped, p1) {
  return _in(0x606d529d, 0xada3c940, ped, p1);
};

/**
 * _0x62FDF4E678E40CC6
 * Returns p1 value for 0x8E84119A23C16623
 *
 * @param {number} entity
 * @param {any} p1
 * @return {any}
 */
global.N_0x62FDF4E678E40CC6 = function (entity, p1) {
  return _in(0x62fdf4e6, 0x78e40cc6, entity, p1, _r);
};

/**
 * _0x633F83B301C87994
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x633F83B301C87994 = function (p0, p1) {
  return _in(0x633f83b3, 0x01c87994, p0, p1);
};

/**
 * _0x642720D8D69328B6
 * _SET_PED_M*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x642720D8D69328B6 = function (ped, p1) {
  return _in(0x642720d8, 0xd69328b6, ped, _ch(p1));
};

/**
 * _0x6507AC3BD7C99009
 * _IS_N* - _IS_P*
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @return {boolean}
 */
global.N_0x6507AC3BD7C99009 = function (x, y, z, p3) {
  return _in(0x6507ac3b, 0xd7c99009, _fv(x), _fv(y), _fv(z), _fv(p3), _r);
};

/**
 * _0x6734F0A6A52C371C
 *
 * @param {number} player
 * @param {number} horseSlot
 * @return {void}
 */
global.N_0x6734F0A6A52C371C = function (player, horseSlot) {
  return _in(0x6734f0a6, 0xa52c371c, player, horseSlot);
};

/**
 * _0x6A190B94C2541A99
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6A190B94C2541A99 = function (p0) {
  return _in(0x6a190b94, 0xc2541a99, p0);
};

/**
 * _0x6A489892E813951A
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6A489892E813951A = function (p0) {
  return _in(0x6a489892, 0xe813951a, p0);
};

/**
 * _0x6B67320E0D57856A
 *
 * @param {number} ped
 * @param {DataView} p1
 * @param {number} p2
 * @param {boolean} p3
 * @return {void}
 */
global.N_0x6B67320E0D57856A = function (ped, p1, p2, p3) {
  return _in(0x6b67320e, 0x0d57856a, ped, p1, p2, p3);
};

/**
 * _0x6DB875AFC584FA32
 * Only used in R* SP Script winter1: p1 = 5000
 * _SET_PED_M*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {any}
 */
global.N_0x6DB875AFC584FA32 = function (ped, p1) {
  return _in(0x6db875af, 0xc584fa32, ped, p1, _r);
};

/**
 * _0x6E8B87139854022D
 * Only used in SP R* Script train_robbery3: p1 = CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC & CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC_JOHN
 *
 * @param {number} ped
 * @param {string | number} clipset
 * @return {void}
 */
global.N_0x6E8B87139854022D = function (ped, clipset) {
  return _in(0x6e8b8713, 0x9854022d, ped, _ts(clipset));
};

/**
 * _0x6F43C351A5D51E2F
 *
 * @param {number} ped
 * @param {DataView} p1
 * @return {any}
 */
global.N_0x6F43C351A5D51E2F = function (ped, p1) {
  return _in(0x6f43c351, 0xa5d51e2f, ped, p1, _r);
};

/**
 * _0x6F46F8ACB44C4FC1
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x6F46F8ACB44C4FC1 = function (p0) {
  return _in(0x6f46f8ac, 0xb44c4fc1, p0, _r);
};

/**
 * _0x7020839C7302D8AC
 * _HAS_*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x7020839C7302D8AC = function (ped) {
  return _in(0x7020839c, 0x7302d8ac, ped, _r);
};

/**
 * _0x704C908E9C405136
 * _CLEAR*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x704C908E9C405136 = function (ped) {
  return _in(0x704c908e, 0x9c405136, ped);
};

/**
 * _0x712B2C2B2471B493
 * _SET_PED_MO*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x712B2C2B2471B493 = function (ped, p1) {
  return _in(0x712b2c2b, 0x2471b493, ped, _ch(p1));
};

/**
 * _0x735662994E60A710
 * _SET_PED_F*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x735662994E60A710 = function (ped, p1) {
  return _in(0x73566299, 0x4e60a710, ped, p1);
};

/**
 * _0x7406C71F4AC2FFCC
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x7406C71F4AC2FFCC = function (p0) {
  return _in(0x7406c71f, 0x4ac2ffcc, p0);
};

/**
 * _0x758F081DB204DDDE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x758F081DB204DDDE = function (ped) {
  return _in(0x758f081d, 0xb204ddde, ped, _r);
};

/**
 * _0x75A082563B4452E5
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x75A082563B4452E5 = function (p0, p1, p2, p3) {
  return _in(0x75a08256, 0x3b4452e5, p0, p1, p2, p3);
};

/**
 * _0x75D3333409CD33CE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x75D3333409CD33CE = function (p0, p1, p2) {
  return _in(0x75d33334, 0x09cd33ce, p0, p1, p2);
};

/**
 * _0x763FA8A9D76EE3A7
 * Used in Script Function NB_EVENT_OVERRIDE__HANDLE__EVENT_DAMAGE_ENTITY
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0x763FA8A9D76EE3A7 = function (ped) {
  return _in(0x763fa8a9, 0xd76ee3a7, ped, _r, _rf);
};

/**
 * _0x77243ED4F7CAAA55
 * _IS_I* - _IS_L*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x77243ED4F7CAAA55 = function (ped) {
  return _in(0x77243ed4, 0xf7caaa55, ped, _r);
};

/**
 * _0x7ABBD9E449E0DB00
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x7ABBD9E449E0DB00 = function (ped, p1) {
  return _in(0x7abbd9e4, 0x49e0db00, ped, p1);
};

/**
 * _0x7B5C293238EE4F20
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x7B5C293238EE4F20 = function (p0) {
  return _in(0x7b5c2932, 0x38ee4f20, p0, _r);
};

/**
 * _0x7BB810E8B343AC7B
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x7BB810E8B343AC7B = function (p0) {
  return _in(0x7bb810e8, 0xb343ac7b, p0, _r);
};

/**
 * _0x7C08E7CB8D951B70
 * Only used in SP
 * _SET_REMOVE_PED*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x7C08E7CB8D951B70 = function (ped, p1) {
  return _in(0x7c08e7cb, 0x8d951b70, ped, _fv(p1));
};

/**
 * _0x7C10221CE718AA72
 * _CLEAR_PED_M*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x7C10221CE718AA72 = function (ped, p1) {
  return _in(0x7c10221c, 0xe718aa72, ped, p1);
};

/**
 * _0x7C8AA850617651D9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x7C8AA850617651D9 = function (p0, p1) {
  return _in(0x7c8aa850, 0x617651d9, p0, p1, _r);
};

/**
 * _0x7E5185B979706210
 * _SET_FORMATION_P*
 *
 * @param {number} groupId
 * @param {number} p1
 * @return {void}
 */
global.N_0x7E5185B979706210 = function (groupId, p1) {
  return _in(0x7e5185b9, 0x79706210, groupId, p1);
};

/**
 * _0x7E8F9949B7AABBF0
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x7E8F9949B7AABBF0 = function (p0, p1, p2) {
  return _in(0x7e8f9949, 0xb7aabbf0, p0, p1, p2);
};

/**
 * _0x7EDB3C766B0D073F
 * Only used in R* Script net_moonshine_property
 * _A* - _B*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x7EDB3C766B0D073F = function (ped) {
  return _in(0x7edb3c76, 0x6b0d073f, ped);
};

/**
 * _0x7EE3A8660F38797E
 * _IS_PED_H* - _IS_PED_I*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x7EE3A8660F38797E = function (ped) {
  return _in(0x7ee3a866, 0x0f38797e, ped, _r);
};

/**
 * _0x7F090958AE95B61B
 *
 * @param {number} ped
 * @param {number} p1
 * @return {boolean}
 */
global.N_0x7F090958AE95B61B = function (ped, p1) {
  return _in(0x7f090958, 0xae95b61b, ped, p1, _r);
};

/**
 * _0x8101BA1C0B462412
 * _ATTACH_*
 *
 * @param {number} ped
 * @param {number} ropeId
 * @return {void}
 */
global.N_0x8101BA1C0B462412 = function (ped, ropeId) {
  return _in(0x8101ba1c, 0x0b462412, ped, ropeId);
};

/**
 * _0x815C0074A1BC0D93
 * _SET_PED_COMBAT_R - _SET_PED_C*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x815C0074A1BC0D93 = function (ped, p1) {
  return _in(0x815c0074, 0xa1bc0d93, ped, p1);
};

/**
 * _0x82CB0F3F0C7785E5
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x82CB0F3F0C7785E5 = function (p0) {
  return _in(0x82cb0f3f, 0x0c7785e5, p0, _r);
};

/**
 * _0x851966E1E35AF491
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x851966E1E35AF491 = function (p0, p1) {
  return _in(0x851966e1, 0xe35af491, p0, p1);
};

/**
 * _0x85F500F4E24CA43E
 * Used in Script Function SKCS_PLAYER_ROBBING
 * _SET_PED_A*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x85F500F4E24CA43E = function (ped, p1) {
  return _in(0x85f500f4, 0xe24ca43e, ped, _fv(p1));
};

/**
 * _0x86F0B6730C32AC14
 * _SET_PED_*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x86F0B6730C32AC14 = function (ped, p1) {
  return _in(0x86f0b673, 0x0c32ac14, ped, p1);
};

/**
 * _0x86FAFC18E3D4380C
 *
 * @param {number} groupId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x86FAFC18E3D4380C = function (groupId, p1) {
  return _in(0x86fafc18, 0xe3d4380c, groupId, p1);
};

/**
 * _0x878E8104FA27CDAE
 *
 * @param {number} vehicle
 * @param {number} p1
 * @return {void}
 */
global.N_0x878E8104FA27CDAE = function (vehicle, p1) {
  return _in(0x878e8104, 0xfa27cdae, vehicle, _ch(p1));
};

/**
 * _0x87C2724A56F66020
 * _CLEAR_PED_E* - _CLEAR_PED_L*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x87C2724A56F66020 = function (ped) {
  return _in(0x87c2724a, 0x56f66020, ped);
};

/**
 * _0x8822F124788B8D0A
 * Only used in R* Script train_robbery4
 * _SET_PED_D*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x8822F124788B8D0A = function (ped, p1) {
  return _in(0x8822f124, 0x788b8d0a, ped, p1);
};

/**
 * _0x8822F139408B8D0A
 * If returned true, SET_ENABLE_BOUND_ANKLES is called in R* Script guama2
 * _GET_D* - _GET_E*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x8822F139408B8D0A = function (ped) {
  return _in(0x8822f139, 0x408b8d0a, ped, _r);
};

/**
 * _0x88A5564B19C15391
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x88A5564B19C15391 = function (ped) {
  return _in(0x88a5564b, 0x19c15391, ped, _r);
};

/**
 * _0x88A95BB640FC186F
 * Used in R* Script generic_weight_control_item
 * _CLEAR_PED_E* - CLEAR_PED_(G?)L*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x88A95BB640FC186F = function (ped) {
  return _in(0x88a95bb6, 0x40fc186f, ped);
};

/**
 * _0x88B2026A3B0BE33D
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x88B2026A3B0BE33D = function (ped, p1) {
  return _in(0x88b2026a, 0x3b0be33d, ped, _fv(p1));
};

/**
 * _0x897934E868EDDD6C
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.N_0x897934E868EDDD6C = function (ped, p1, p2, p3, p4) {
  return _in(0x897934e8, 0x68eddd6c, ped, p1, _fv(p2), _fv(p3), _fv(p4));
};

/**
 * _0x89816B58C3466262
 * _GET_PED_B* - _GET_PED_C*
 *
 * @param {number} ped
 * @return {any}
 */
global.N_0x89816B58C3466262 = function (ped) {
  return _in(0x89816b58, 0xc3466262, ped, _r);
};

/**
 * _0x899DFA0009AC93DE
 * _SET_PED_O*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x899DFA0009AC93DE = function (ped, p1) {
  return _in(0x899dfa00, 0x09ac93de, ped, _fv(p1));
};

/**
 * _0x89E59DBD15E21177
 * _SET_C*
 *
 * @param {number} groupId
 * @param {number} p1
 * @return {void}
 */
global.N_0x89E59DBD15E21177 = function (groupId, p1) {
  return _in(0x89e59dbd, 0x15e21177, groupId, p1);
};

/**
 * _0x8AF46E5159A5B620
 * _SET_PED_IN*
 *
 * @param {number} ped
 * @param {number} speechParams
 * @return {void}
 */
global.N_0x8AF46E5159A5B620 = function (ped, speechParams) {
  return _in(0x8af46e51, 0x59a5b620, ped, _ch(speechParams));
};

/**
 * _0x8AF8E647D6B2A649
 * Returns offset (0 < 32) to be used with MISC::SET_BIT
 * _GET_PED_CR*
 *
 * @param {number} groupId
 * @param {number} ped
 * @return {number}
 */
global.N_0x8AF8E647D6B2A649 = function (groupId, ped) {
  return _in(0x8af8e647, 0xd6b2a649, groupId, ped, _r, _ri);
};

/**
 * _0x8AFCCC0F18D70018
 * _SET_FORMATION_*
 *
 * @param {number} groupId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x8AFCCC0F18D70018 = function (groupId, p1) {
  return _in(0x8afccc0f, 0x18d70018, groupId, p1);
};

/**
 * _0x8BA0C65AC15A7D33
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x8BA0C65AC15A7D33 = function (p0, p1, p2, p3) {
  return _in(0x8ba0c65a, 0xc15a7d33, p0, p1, p2, p3);
};

/**
 * _0x8BE24D74D74C6E9B
 * Used in Script Function NET_CAMP_DOG_CLIENT_HANDLE_ANIMAL_INTERACTION
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0x8BE24D74D74C6E9B = function (ped) {
  return _in(0x8be24d74, 0xd74c6e9b, ped, _r, _ri);
};

/**
 * _0x8CB2553C559102C1
 * _SET_PED_T* - SET_PED_U*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0x8CB2553C559102C1 = function (ped, p1, p2) {
  return _in(0x8cb2553c, 0x559102c1, ped, p1, p2);
};

/**
 * _0x8D9DB115FBA8E23D
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x8D9DB115FBA8E23D = function (p0) {
  return _in(0x8d9db115, 0xfba8e23d, p0);
};

/**
 * _0x900CA00CE703E1E2
 * Used in Script Function AGGRO_SHOULD_PED_HEAR_DEATH
 * _GET_PED_*
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0x900CA00CE703E1E2 = function (ped) {
  return _in(0x900ca00c, 0xe703e1e2, ped, _r, _rf);
};

/**
 * _0x9078FB0557364099
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9078FB0557364099 = function (p0) {
  return _in(0x9078fb05, 0x57364099, p0);
};

/**
 * _0x913D04A5176F84C9
 * _IS_PED_S* - _IS_PED_U*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x913D04A5176F84C9 = function (ped) {
  return _in(0x913d04a5, 0x176f84c9, ped, _r);
};

/**
 * _0x9184788BFF1EDAD7
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x9184788BFF1EDAD7 = function (p0, p1) {
  return _in(0x9184788b, 0xff1edad7, p0, p1);
};

/**
 * _0x91BAB9E064F036CD
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x91BAB9E064F036CD = function (p0, p1) {
  return _in(0x91bab9e0, 0x64f036cd, p0, p1);
};

/**
 * _0x92A1B55A59720395
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x92A1B55A59720395 = function (p0, p1) {
  return _in(0x92a1b55a, 0x59720395, p0, p1);
};

/**
 * _0x94132D7C8D3575C4
 * _GET_IS_PED_*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x94132D7C8D3575C4 = function (ped) {
  return _in(0x94132d7c, 0x8d3575c4, ped, _r);
};

/**
 * _0x947E43F544B6AB34
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/0x947E43F544B6AB34
 * _GET_PED_G* - _GET_PED_I(NTERACTION?)*
 *
 * @param {number} ped
 * @param {number} player
 * @param {number} flag
 * @param {number} ms
 * @return {boolean}
 */
global.N_0x947E43F544B6AB34 = function (ped, player, flag, ms) {
  return _in(0x947e43f5, 0x44b6ab34, ped, player, flag, ms, _r);
};

/**
 * _0x9629FAF6460D35CB
 *
 * @param {number} group
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x9629FAF6460D35CB = function (group, p1) {
  return _in(0x9629faf6, 0x460d35cb, _ch(group), p1);
};

/**
 * _0x96595B36D6A2279B
 * Only used in R* Script mob4 combined with SET_ANIMAL_TUNING_BOOL_PARAM
 * _SET_PED_S* - _SET_PED_TARGET_*
 *
 * @param {number} animal
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0x96595B36D6A2279B = function (animal, toggle) {
  return _in(0x96595b36, 0xd6a2279b, animal, toggle);
};

/**
 * _0x966DE09688A1DE39
 * _SET_FORMATION_P*
 *
 * @param {number} groupId
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.N_0x966DE09688A1DE39 = function (groupId, p1, p2, p3, p4) {
  return _in(0x966de096, 0x88a1de39, groupId, _fv(p1), _fv(p2), _fv(p3), _fv(p4));
};

/**
 * _0x96C7B659854DE629
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x96C7B659854DE629 = function (p0, p1) {
  return _in(0x96c7b659, 0x854de629, p0, p1);
};

/**
 * _0x97A38B65EBDA3D50
 * _SET_PED_D*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x97A38B65EBDA3D50 = function (ped, p1) {
  return _in(0x97a38b65, 0xebda3d50, ped, p1);
};

/**
 * _0x97B06669AC569003
 * _CLEAR*
 *
 * @param {number} ped1
 * @param {number} ped2
 * @return {void}
 */
global.N_0x97B06669AC569003 = function (ped1, ped2) {
  return _in(0x97b06669, 0xac569003, ped1, ped2);
};

/**
 * _0x97C475212B327666
 * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
 *
 * @param {number} groupId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x97C475212B327666 = function (groupId, p1) {
  return _in(0x97c47521, 0x2b327666, groupId, p1);
};

/**
 * _0x9851DE7AEC10B4E1
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p3
 * @param {number} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0x9851DE7AEC10B4E1 = function (x, y, z, p3, p4, p5) {
  return _in(0x9851de7a, 0xec10b4e1, _fv(x), _fv(y), _fv(z), _fv(p3), p4, p5);
};

/**
 * _0x992187D975635DF5
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x992187D975635DF5 = function (p0, p1) {
  return _in(0x992187d9, 0x75635df5, p0, p1);
};

/**
 * _0x99DF2639DA76C1DC
 * _CAN_PED_*
 *
 * @param {number} ped1
 * @param {number} ped2
 * @param {number} p2
 * @return {boolean}
 */
global.N_0x99DF2639DA76C1DC = function (ped1, ped2, p2) {
  return _in(0x99df2639, 0xda76c1dc, ped1, ped2, p2, _r);
};

/**
 * _0x9A4AC116CC1EEE14
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9A4AC116CC1EEE14 = function (p0) {
  return _in(0x9a4ac116, 0xcc1eee14, p0);
};

/**
 * _0x9AB33CB5834885B3
 * _SET_PED_M*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.N_0x9AB33CB5834885B3 = function (ped, p1, p2, p3, p4) {
  return _in(0x9ab33cb5, 0x834885b3, ped, _fv(p1), _fv(p2), _fv(p3), _fv(p4));
};

/**
 * _0x9B65444C07B782BF
 * Only used in SP R* Script winter1: p1 = Winter1Mount
 *
 * @param {number} ped
 * @param {string | number} p1
 * @return {void}
 */
global.N_0x9B65444C07B782BF = function (ped, p1) {
  return _in(0x9b65444c, 0x07b782bf, ped, _ts(p1));
};

/**
 * _0x9B90842304C938A7
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.GetShopItemCategoryAtIndex = function (p0, p1, p2) {
  return _in(0x9b908423, 0x04c938a7, p0, p1, p2, _r);
};

/**
 * _0x9B9B9FA0EA283E3D
 * Used in Script Function SKCS_PLAYER_ROBBING
 * _SET_PED_SHOULD_PLAY_* - _SET_PED_SW*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x9B9B9FA0EA283E3D = function (ped, p1) {
  return _in(0x9b9b9fa0, 0xea283e3d, ped, _fv(p1));
};

/**
 * _0x9BBEAF8B0C007F1E
 * _SET_PLAYER_CAN_B* - _SET_PLAYER_CAN_U*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x9BBEAF8B0C007F1E = function (ped, p1) {
  return _in(0x9bbeaf8b, 0x0c007f1e, ped, p1);
};

/**
 * _0x9C81338B2E62CE0A
 * If returned true: CHECK_SHOT_NEAR: Succeeded shot near
 * If returned false: CHECK_SHOT_NEAR: Failed shot near
 *
 * @param {number} player
 * @param {number} ped
 * @param {number} shotNearRecentlyTime
 * @return {boolean}
 */
global.N_0x9C81338B2E62CE0A = function (player, ped, shotNearRecentlyTime) {
  return _in(0x9c81338b, 0x2e62ce0a, player, ped, shotNearRecentlyTime, _r);
};

/**
 * _0x9D8DFE2DE9CB4DFC
 * _RESET_PED_*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x9D8DFE2DE9CB4DFC = function (ped) {
  return _in(0x9d8dfe2d, 0xe9cb4dfc, ped);
};

/**
 * _0x9E3842E5DAD69F80
 * Only used in SP R* Script loanshark_hunter
 *
 * @param {number} volume
 * @return {void}
 */
global.N_0x9E3842E5DAD69F80 = function (volume) {
  return _in(0x9e3842e5, 0xdad69f80, volume);
};

/**
 * _0x9E66708B2B41F14A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x9E66708B2B41F14A = function (p0, p1) {
  return _in(0x9e66708b, 0x2b41f14a, p0, p1);
};

/**
 * _0x9F0F28B42C4EE80A
 *
 * @param {number} animal
 * @param {number} p2
 * @return {void}
 */
global.N_0x9F0F28B42C4EE80A = function (animal, p2) {
  return _in(0x9f0f28b4, 0x2c4ee80a, animal, _fv(p2));
};

/**
 * _0x9F933E0985E12C51
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.N_0x9F933E0985E12C51 = function (ped, p1, p2, p3) {
  return _in(0x9f933e09, 0x85e12c51, ped, _fv(p1), _fv(p2), _fv(p3));
};

/**
 * _0xA064BBABB064446F
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xA064BBABB064446F = function (p0) {
  return _in(0xa064bbab, 0xb064446f, p0);
};

/**
 * _0xA180FBD502A03125
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xA180FBD502A03125 = function (p0, p1, p2) {
  return _in(0xa180fbd5, 0x02a03125, p0, p1, p2, _r);
};

/**
 * _0xA1FBAC56D38563E2
 *
 * @param {number} volume
 * @return {boolean}
 */
global.N_0xA1FBAC56D38563E2 = function (volume) {
  return _in(0xa1fbac56, 0xd38563e2, volume, _r);
};

/**
 * _0xA2116C1E4ED85C24
 * _SET_PED_*
 *
 * @param {number} ped
 * @param {boolean} inverted
 * @return {void}
 */
global.N_0xA2116C1E4ED85C24 = function (ped, inverted) {
  return _in(0xa2116c1e, 0x4ed85c24, ped, inverted);
};

/**
 * _0xA218D2BBCAA7388C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xA218D2BBCAA7388C = function (p0, p1) {
  return _in(0xa218d2bb, 0xcaa7388c, p0, p1, _r);
};

/**
 * _0xA274F51EF7E34B95
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xA274F51EF7E34B95 = function (p0, p1) {
  return _in(0xa274f51e, 0xf7e34b95, p0, p1, _r);
};

/**
 * _0xA2B8E47442C76CEC
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA2B8E47442C76CEC = function (p0, p1) {
  return _in(0xa2b8e474, 0x42c76cec, p0, p1);
};

/**
 * _0xA2F8B3B5FEDFC100
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA2F8B3B5FEDFC100 = function (p0, p1) {
  return _in(0xa2f8b3b5, 0xfedfc100, p0, p1);
};

/**
 * _0xA31D350D66FA1855
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xA31D350D66FA1855 = function (p0) {
  return _in(0xa31d350d, 0x66fa1855, p0, _r);
};

/**
 * _0xA405BF9F01960C16
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xA405BF9F01960C16 = function (p0) {
  return _in(0xa405bf9f, 0x01960c16, p0);
};

/**
 * _0xA4AC05B1A364EBC5
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xA4AC05B1A364EBC5 = function (p0, p1, p2) {
  return _in(0xa4ac05b1, 0xa364ebc5, p0, p1, p2, _r);
};

/**
 * _0xA4B6432E3880F2F9
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xA4B6432E3880F2F9 = function (ped) {
  return _in(0xa4b6432e, 0x3880f2f9, ped, _r);
};

/**
 * _0xA691C10054275290
 *
 * @param {number} mount
 * @param {number} player
 * @param {number} dismountedTimestamp
 * @return {void}
 */
global.N_0xA691C10054275290 = function (mount, player, dismountedTimestamp) {
  return _in(0xa691c100, 0x54275290, mount, player, dismountedTimestamp);
};

/**
 * _0xA6D6F03095C88F59
 * _DELETE_*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xA6D6F03095C88F59 = function (ped) {
  return _in(0xa6d6f030, 0x95c88f59, ped);
};

/**
 * _0xA7A806677F8DE138
 * Washing player's face/hands now
 * _CLEAR_PED_E* - _CLEAR_PED_L*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xA7A806677F8DE138 = function (ped) {
  return _in(0xa7a80667, 0x7f8de138, ped);
};

/**
 * _0xA7DC9266ED6A4E51
 * _CLEAR_PED_B* - _CLEAR_PED_C*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xA7DC9266ED6A4E51 = function (ped) {
  return _in(0xa7dc9266, 0xed6a4e51, ped);
};

/**
 * _0xA8A95CECB1906EA2
 * _SET_ENABLE_B* - _SET_ENABLE_H*
 *
 * @param {number} groupId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xA8A95CECB1906EA2 = function (groupId, p1) {
  return _in(0xa8a95cec, 0xb1906ea2, groupId, p1);
};

/**
 * _0xA90684ED185CCB4B
 * Only used in R* Script mob4 and rcm_mason4
 * _SET_PED_DEFENSIVE_* - _SET_PED_DESIRED_*
 *
 * @param {number} animal
 * @param {boolean} p1
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.N_0xA90684ED185CCB4B = function (animal, p1, p2, p3) {
  return _in(0xa90684ed, 0x185ccb4b, animal, p1, _fv(p2), _fv(p3));
};

/**
 * _0xA967D6A8ED2D713B
 * _SET_PED_P* - _SET_PED_R*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xA967D6A8ED2D713B = function (ped, p1) {
  return _in(0xa967d6a8, 0xed2d713b, ped, p1);
};

/**
 * _0xAA6C49AE90A32299
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0xAA6C49AE90A32299 = function (ped, p1) {
  return _in(0xaa6c49ae, 0x90a32299, ped, _ch(p1));
};

/**
 * _0xAAB86462966168CE
 * Related to _0x704C908E9C405136 for component loading
 * _S*
 *
 * @param {number} ped
 * @param {boolean} isMp
 * @return {any}
 */
global.N_0xAAB86462966168CE = function (ped, isMp) {
  return _in(0xaab86462, 0x966168ce, ped, isMp, _r);
};

/**
 * _0xAAC0EE3B4999ABB5
 *
 * @param {number} ped
 * @param {number} targetPed
 * @return {void}
 */
global.N_0xAAC0EE3B4999ABB5 = function (ped, targetPed) {
  return _in(0xaac0ee3b, 0x4999abb5, ped, targetPed);
};

/**
 * _0xAD3330E3C3E98007
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xAD3330E3C3E98007 = function (p0, p1) {
  return _in(0xad3330e3, 0xc3e98007, p0, p1);
};

/**
 * _0xAE6B68A83ABBE7C0
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xAE6B68A83ABBE7C0 = function (p0) {
  return _in(0xae6b68a8, 0x3abbe7c0, p0);
};

/**
 * _0xAF041C10756C30FB
 * _CLEAR_PED_D*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {void}
 */
global.N_0xAF041C10756C30FB = function (ped, p1, p2, p3) {
  return _in(0xaf041c10, 0x756c30fb, ped, p1, p2, p3);
};

/**
 * _0xB05CC690CDE8A4A9
 * Used to set up bad guy groups in nb_kidnapped R* Script (MP_RE_KIDNAPPED): p1 = 4.f
 * _SET_FORMATION_*
 *
 * @param {number} groupId
 * @param {number} p1
 * @return {boolean}
 */
global.N_0xB05CC690CDE8A4A9 = function (groupId, p1) {
  return _in(0xb05cc690, 0xcde8a4a9, groupId, _fv(p1), _r);
};

/**
 * _0xB06F5F1DEF417216
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xB06F5F1DEF417216 = function (p0, p1, p2, p3) {
  return _in(0xb06f5f1d, 0xef417216, p0, p1, p2, p3);
};

/**
 * _0xB292203008EBBAAC
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xB292203008EBBAAC = function (p0) {
  return _in(0xb2922030, 0x08ebbaac, p0, _r);
};

/**
 * _0xB29C553BA582D09E
 * Used in Script Function SATCHEL_COUNT_BREAKDOWN_COMPONENTS
 *
 * @param {DataView} p0
 * @param {number} model
 * @param {number} damageCleanliness
 * @param {number} p3
 * @return {any}
 */
global.N_0xB29C553BA582D09E = function (p0, model, damageCleanliness, p3) {
  return _in(0xb29c553b, 0xa582d09e, p0, _ch(model), damageCleanliness, p3, _r);
};

/**
 * _0xB4B7C92FCE7347B7
 * _RESET_PED_C*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xB4B7C92FCE7347B7 = function (ped) {
  return _in(0xb4b7c92f, 0xce7347b7, ped);
};

/**
 * _0xB65927F861E7AE39
 *
 * @param {number} ped
 * @param {number} p1
 * @return {boolean}
 */
global.N_0xB65927F861E7AE39 = function (ped, p1) {
  return _in(0xb65927f8, 0x61e7ae39, ped, p1, _r);
};

/**
 * _0xB7DBB2986B87E230
 *
 * @param {number} ped
 * @param {number} p1
 * @return {boolean}
 */
global.N_0xB7DBB2986B87E230 = function (ped, p1) {
  return _in(0xb7dbb298, 0x6b87e230, ped, _fv(p1), _r);
};

/**
 * _0xB8AB265426CFE6DD
 * _SET_HO*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xB8AB265426CFE6DD = function (ped, p1) {
  return _in(0xb8ab2654, 0x26cfe6dd, ped, p1);
};

/**
 * _0xB8E2D655E1D5BD39
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xB8E2D655E1D5BD39 = function (p0) {
  return _in(0xb8e2d655, 0xe1d5bd39, p0, _r);
};

/**
 * _0xB91AB3BE7F655D49
 * _IS_PED_J* - _IS_PED_L*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xB91AB3BE7F655D49 = function (ped) {
  return _in(0xb91ab3be, 0x7f655d49, ped, _r);
};

/**
 * _0xB9BDFAE609DFB7C5
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xB9BDFAE609DFB7C5 = function (p0, p1, p2) {
  return _in(0xb9bdfae6, 0x09dfb7c5, p0, p1, p2);
};

/**
 * _0xBAD2A311667A50D7
 * _SET_PED_D*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xBAD2A311667A50D7 = function (ped, p1) {
  return _in(0xbad2a311, 0x667a50d7, ped, p1);
};

/**
 * _0xBB3E5370EBB6BE28
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xBB3E5370EBB6BE28 = function (p0, p1) {
  return _in(0xbb3e5370, 0xebb6be28, p0, p1, _r);
};

/**
 * _0xBC1DC48270468444
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xBC1DC48270468444 = function (p0) {
  return _in(0xbc1dc482, 0x70468444, p0);
};

/**
 * _0xBD0E4F52F6D95242
 * _IS_PED_M* - _IS_PED_O*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xBD0E4F52F6D95242 = function (ped) {
  return _in(0xbd0e4f52, 0xf6d95242, ped, _r);
};

/**
 * _0xBF567DF2BEF211A6
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xBF567DF2BEF211A6 = function (p0, p1) {
  return _in(0xbf567df2, 0xbef211a6, p0, p1);
};

/**
 * _0xBFA6B7731C3BAF02
 * Only used in R* Script tg_p (CLIENT__AMBIENT_POPULATION - Player starts the populate in region)
 *

 * @return {void}
 */
global.N_0xBFA6B7731C3BAF02 = function () {
  return _in(0xbfa6b773, 0x1c3baf02);
};

/**
 * _0xC17A94CC8FC3C61A
 * _SET_PED_P* - _SET_PED_R*
 *
 * @param {number} entity
 * @param {number} boneId
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.N_0xC17A94CC8FC3C61A = function (entity, boneId, p2, p3, p4) {
  return _in(0xc17a94cc, 0x8fc3c61a, entity, boneId, _fv(p2), _fv(p3), _fv(p4));
};

/**
 * _0xC2722B252C79E641
 * _FORCE_PED_*
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {boolean} p3
 * @return {void}
 */
global.N_0xC2722B252C79E641 = function (ped, p1, p2, p3) {
  return _in(0xc2722b25, 0x2c79e641, ped, p1, p2, p3);
};

/**
 * _0xC2EF407645BEECDC
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC2EF407645BEECDC = function (p0) {
  return _in(0xc2ef4076, 0x45beecdc, p0, _r);
};

/**
 * _0xC3995D396F1D97B6
 * _GET_PED_G* - _GET_PED_I*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {boolean}
 */
global.N_0xC3995D396F1D97B6 = function (ped, p1, p2) {
  return _in(0xc3995d39, 0x6f1d97b6, ped, p1, p2, _r);
};

/**
 * _SET_PELT_FOR_HORSE_BY_INVENTORY_ITEM
 * Not official native name
 * Set the pelt of the animal to the back of the horse
 * EXAMPLE:
 * local mount = GetMountOwnedByPlayer(PlayerId())
 * Citizen.InvokeNative(0xC412AA1C73111FE0,mount,GetHashKey('PROVISION_DEER_HIDE_POOR'),GetHashKey('a_c_deer_01_uppr_000_c0_001_ab'),0,0)
 *
 * @param {number} horse
 * @param {number} itemHash
 * @param {number} albedo
 * @param {number} normal
 * @param {boolean} p4
 * @return {void}
 */
global.SetPeltForHorseByInventoryItem = function (horse, itemHash, albedo, normal, p4) {
  return _in(0xc412aa1c, 0x73111fe0, horse, _ch(itemHash), _ch(albedo), normal, p4);
};

/**
 * _0xC48AF420371C7407
 * _SET_PED_M*
 *
 * @param {number} ped
 * @param {number} grapple
 * @return {any}
 */
global.N_0xC48AF420371C7407 = function (ped, grapple) {
  return _in(0xc48af420, 0x371c7407, ped, _ch(grapple), _r);
};

/**
 * _0xC494C76A34266E82
 * [WARDROBE] Player took off their disguise: p1 = 13
 * [WARDROBE] Player put on a disguise: p1 = 0
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0xC494C76A34266E82 = function (ped, p1) {
  return _in(0xc494c76a, 0x34266e82, ped, p1);
};

/**
 * _0xC5303F460A40D21D
 * Returns boneIndex
 * _GET_PED_N* - _GET_PED_R*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {number}
 */
global.N_0xC5303F460A40D21D = function (ped, p1) {
  return _in(0xc5303f46, 0x0a40d21d, ped, p1, _r, _ri);
};

/**
 * _0xC5B78E41DCF8227C
 * _SET_H* - _SET_I*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xC5B78E41DCF8227C = function (ped, p1) {
  return _in(0xc5b78e41, 0xdcf8227c, ped, p1);
};

/**
 * _0xC6136B40FFFB778B
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0xC6136B40FFFB778B = function (p0) {
  return _in(0xc6136b40, 0xfffb778b, p0);
};

/**
 * _0xC6981AFF6D2A71C2
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC6981AFF6D2A71C2 = function (p0) {
  return _in(0xc6981aff, 0x6d2a71c2, p0);
};

/**
 * _0xC6C4E15CF7D52FEA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xC6C4E15CF7D52FEA = function (p0, p1) {
  return _in(0xc6c4e15c, 0xf7d52fea, p0, p1);
};

/**
 * _0xC9151483CC06A414
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xC9151483CC06A414 = function (ped) {
  return _in(0xc9151483, 0xcc06a414, ped);
};

/**
 * _0xC991EF46FE323867
 * Not implemented.
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.N_0xC991EF46FE323867 = function (ped, p1) {
  return _in(0xc991ef46, 0xfe323867, ped, p1);
};

/**
 * _0xC99F104BDF8C7F5A
 * _SET_PLAYER_N* - _SET_PLAYER_S*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xC99F104BDF8C7F5A = function (ped, p1) {
  return _in(0xc99f104b, 0xdf8c7f5a, ped, p1);
};

/**
 * _0xCA95924C893A0C91
 * Returns vehicle speed
 * _COMPUTE_*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {number}
 */
global.N_0xCA95924C893A0C91 = function (ped, p1) {
  return _in(0xca95924c, 0x893a0c91, ped, _fv(p1), _r, _rf);
};

/**
 * _0xCA95C156C14B2054
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xCA95C156C14B2054 = function (p0, p1) {
  return _in(0xca95c156, 0xc14b2054, p0, p1);
};

/**
 * _0xCAC43D060099EA72
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xCAC43D060099EA72 = function (ped) {
  return _in(0xcac43d06, 0x0099ea72, ped);
};

/**
 * _0xCB1A3864C524F784
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xCB1A3864C524F784 = function (p0, p1) {
  return _in(0xcb1a3864, 0xc524f784, p0, p1);
};

/**
 * _0xCB86D3E3E3708901
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {any}
 */
global.N_0xCB86D3E3E3708901 = function (p0, p1, p2, p3, p4) {
  return _in(0xcb86d3e3, 0xe3708901, p0, p1, p2, p3, p4, _r);
};

/**
 * _0xCB8F4C9343EBE240
 * Only used in R* SP Scripts
 * _GET_PLAYER_W* - _GET_RANDOM_*
 *
 * @param {number} ped
 * @param {number} eventType
 * @return {[boolean, Vector3]}
 */
global.N_0xCB8F4C9343EBE240 = function (ped, eventType) {
  return _in(0xcb8f4c93, 0x43ebe240, ped, _ch(eventType), _v, _r);
};

/**
 * _0xCBDE59C48F2B06F5
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xCBDE59C48F2B06F5 = function (p0, p1, p2) {
  return _in(0xcbde59c4, 0x8f2b06f5, p0, p1, p2);
};

/**
 * _0xCD9E5F94A2F38683
 * _SET_PED_R* - _SET_PED_S*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xCD9E5F94A2F38683 = function (ped, p1) {
  return _in(0xcd9e5f94, 0xa2f38683, ped, p1);
};

/**
 * _0xCDFB8C04D4C95D9B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xCDFB8C04D4C95D9B = function (p0, p1, p2, p3) {
  return _in(0xcdfb8c04, 0xd4c95d9b, p0, p1, p2, p3);
};

/**
 * _0xCE7A6C1D5CDE1F9D
 *
 * @param {number} ped
 * @param {number} object
 * @param {string | number} propName
 * @param {string | number} animName
 * @return {void}
 */
global.N_0xCE7A6C1D5CDE1F9D = function (ped, object, propName, animName) {
  return _in(0xce7a6c1d, 0x5cde1f9d, ped, object, _ts(propName), _ts(animName));
};

/**
 * _0xCF0B19806473D324
 * _SET_PED_COMBAT_*
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.N_0xCF0B19806473D324 = function (ped, x, y, z) {
  return _in(0xcf0b1980, 0x6473d324, ped, _fv(x), _fv(y), _fv(z));
};

/**
 * _0xD049920CD29F6CC8
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0xD049920CD29F6CC8 = function (p0, p1, p2, p3, p4) {
  return _in(0xd049920c, 0xd29f6cc8, p0, p1, p2, p3, p4);
};

/**
 * _0xD049FDAF089FDDB0
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0xD049FDAF089FDDB0 = function (ped, p1, p2) {
  return _in(0xd049fdaf, 0x089fddb0, ped, _ch(p1), _fv(p2));
};

/**
 * _0xD103F6DBB5442BE8
 * Params: p1 either a 1 or 0, so perhaps BOOL
 * _SET_PED_A*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0xD103F6DBB5442BE8 = function (ped, p1) {
  return _in(0xd103f6db, 0xb5442be8, ped, p1);
};

/**
 * _0xD2F0FE8805D91647
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xD2F0FE8805D91647 = function (p0, p1) {
  return _in(0xd2f0fe88, 0x05d91647, p0, p1);
};

/**
 * _0xD355E2F1BB41087E
 *
 * @param {number} ped
 * @param {number} p1
 * @return {boolean}
 */
global.N_0xD355E2F1BB41087E = function (ped, p1) {
  return _in(0xd355e2f1, 0xbb41087e, ped, _fv(p1), _r);
};

/**
 * _0xD4D403EA031F351C
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xD4D403EA031F351C = function (ped) {
  return _in(0xd4d403ea, 0x031f351c, ped, _r);
};

/**
 * _0xD55DB4466D00A258
 * Used in Script Function LA_CHECK_ALERTED
 * _GET_IS_PED_*
 *
 * @param {number} legendaryAnimal
 * @return {boolean}
 */
global.N_0xD55DB4466D00A258 = function (legendaryAnimal) {
  return _in(0xd55db446, 0x6d00a258, legendaryAnimal, _r);
};

/**
 * _0xD5BD1B5318A81994
 * _SET_FORMATION_*
 *
 * @param {number} groupId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xD5BD1B5318A81994 = function (groupId, p1) {
  return _in(0xd5bd1b53, 0x18a81994, groupId, p1);
};

/**
 * _0xD61FCF9FCFD515B7
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xD61FCF9FCFD515B7 = function (p0, p1, p2) {
  return _in(0xd61fcf9f, 0xcfd515b7, p0, p1, p2);
};

/**
 * _0xD7D2F45C56A4F4DF
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xD7D2F45C56A4F4DF = function (p0, p1, p2) {
  return _in(0xd7d2f45c, 0x56a4f4df, p0, p1, p2);
};

/**
 * _0xD8544F6260F5F01E
 * METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
 * p1 is mostly 10
 * _CLEAR_PED_N* - _CLEAR_PED_W*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0xD8544F6260F5F01E = function (ped, p1) {
  return _in(0xd8544f62, 0x60f5f01e, ped, p1);
};

/**
 * _0xD8CEEED54C672B5D
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.N_0xD8CEEED54C672B5D = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xd8ceeed5, 0x4c672b5d, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _0xD97BC27AC039F681
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0xD97BC27AC039F681 = function (p0, p1, p2, p3) {
  return _in(0xd97bc27a, 0xc039f681, p0, p1, p2, p3, _r);
};

/**
 * _0xDC88D06719070C39
 * _IS_PED_IN_* (near water?)
 * Returns true if ped is swimming in water
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xDC88D06719070C39 = function (ped) {
  return _in(0xdc88d067, 0x19070c39, ped, _r);
};

/**
 * _0xDC91F22F09BC6C2F
 * Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_GAME
 * _SET_RELATIONSHIP_*
 *
 * @param {number} group
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xDC91F22F09BC6C2F = function (group, p1) {
  return _in(0xdc91f22f, 0x09bc6c2f, _ch(group), p1);
};

/**
 * _0xDD9540E7B1C9714F
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} r
 * @param {number} g
 * @param {number} b
 * @return {void}
 */
global.N_0xDD9540E7B1C9714F = function (ped, p1, r, g, b) {
  return _in(0xdd9540e7, 0xb1c9714f, ped, _ch(p1), _fv(r), _fv(g), _fv(b));
};

/**
 * _0xDDFAD4DEAA7FA362
 * _SET_FORMATION_P*
 *
 * @param {number} groupId
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.N_0xDDFAD4DEAA7FA362 = function (groupId, p1, p2, p3, p4) {
  return _in(0xddfad4de, 0xaa7fa362, groupId, _fv(p1), _fv(p2), _fv(p3), _fv(p4));
};

/**
 * _0xDEDBED3020DA49DC
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xDEDBED3020DA49DC = function (p0) {
  return _in(0xdedbed30, 0x20da49dc, p0);
};

/**
 * _0xDEE8D30AA5C2E28D
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0xDEE8D30AA5C2E28D = function (ped, p1, p2) {
  return _in(0xdee8d30a, 0xa5c2e28d, ped, _ch(p1), p2);
};

/**
 * _0xE0FE107AB174D64A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE0FE107AB174D64A = function (p0, p1) {
  return _in(0xe0fe107a, 0xb174d64a, p0, p1);
};

/**
 * _0xE1103300F3456DE7
 * _SET_FORMATION_P*
 *
 * @param {number} groupId
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0xE1103300F3456DE7 = function (groupId, p1, p2) {
  return _in(0xe1103300, 0xf3456de7, groupId, _fv(p1), _fv(p2));
};

/**
 * _0xE1AADD0055D76603
 * _C*
 *
 * @param {number} ped
 * @param {number} entity
 * @param {number} boneIndex1
 * @param {number} boneIndex2
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p7
 * @param {boolean} p8
 * @param {boolean} p9
 * @param {number} p10
 * @return {void}
 */
global.N_0xE1AADD0055D76603 = function (ped, entity, boneIndex1, boneIndex2, x, y, z, p7, p8, p9, p10) {
  return _in(0xe1aadd00, 0x55d76603, ped, entity, boneIndex1, boneIndex2, _fv(x), _fv(y), _fv(z), _fv(p7), p8, p9, p10);
};

/**
 * _0xE1B3BE07D3AADDED
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0xE1B3BE07D3AADDED = function (ped, p1, p2) {
  return _in(0xe1b3be07, 0xd3aadded, ped, p1, p2);
};

/**
 * _0xE20027B414BFE6C7
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE20027B414BFE6C7 = function (p0, p1) {
  return _in(0xe20027b4, 0x14bfe6c7, p0, p1);
};

/**
 * _0xE29D8CD66553DBAA
 * _SET_PED_R* -_SET_PED_S*
 *
 * @param {number} horse
 * @return {void}
 */
global.N_0xE29D8CD66553DBAA = function (horse) {
  return _in(0xe29d8cd6, 0x6553dbaa, horse);
};

/**
 * _0xE37ACEE15AC50C7E
 * _SET_PED_IN*
 *
 * @param {number} ped
 * @param {string | number} p1
 * @return {void}
 */
global.N_0xE37ACEE15AC50C7E = function (ped, p1) {
  return _in(0xe37acee1, 0x5ac50c7e, ped, _ts(p1));
};

/**
 * _0xE4C95E0AE31C6512
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.N_0xE4C95E0AE31C6512 = function (ped, p1) {
  return _in(0xe4c95e0a, 0xe31c6512, ped, p1);
};

/**
 * _0xE4EF4382E22C780C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE4EF4382E22C780C = function (p0) {
  return _in(0xe4ef4382, 0xe22c780c, p0);
};

/**
 * _0xE50C9816B3F22D8B
 * _SET_D*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0xE50C9816B3F22D8B = function (ped, p1, p2) {
  return _in(0xe50c9816, 0xb3f22d8b, ped, _ch(p1), _fv(p2));
};

/**
 * _0xE6CB36F43A95D75F
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE6CB36F43A95D75F = function (p0) {
  return _in(0xe6cb36f4, 0x3a95d75f, p0);
};

/**
 * _0xE735A7DA22E88359
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE735A7DA22E88359 = function (p0) {
  return _in(0xe735a7da, 0x22e88359, p0);
};

/**
 * _0xE737D5F14304A2EC
 * Only used in R* Script nb_animal_attack: p2 = 120000
 * _SET_PED_SH* - _SET_PED_SP*
 *
 * @param {number} ped
 * @param {number} player
 * @param {number} p2
 * @return {void}
 */
global.N_0xE737D5F14304A2EC = function (ped, player, p2) {
  return _in(0xe737d5f1, 0x4304a2ec, ped, player, p2);
};

/**
 * _0xE76687023D8C8505
 * Used for AUDIO / ANIMSCENE (REFERENCE_REGIONAL_CHARACTER)
 * Params: p1 = 0
 * _GET_PED_IN*
 *
 * @param {number} perscharModel
 * @param {number} p1
 * @return {number}
 */
global.N_0xE76687023D8C8505 = function (perscharModel, p1) {
  return _in(0xe7668702, 0x3d8c8505, _ch(perscharModel), p1, _r, _ri);
};

/**
 * _0xE8ABE3B73FC7FE17
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xE8ABE3B73FC7FE17 = function (p0, p1, p2, p3) {
  return _in(0xe8abe3b7, 0x3fc7fe17, p0, p1, p2, p3);
};

/**
 * _0xE8D1CCB9375C101B
 * Returns dismounted timestamp
 *
 * @param {number} mount
 * @param {number} player
 * @return {number}
 */
global.N_0xE8D1CCB9375C101B = function (mount, player) {
  return _in(0xe8d1ccb9, 0x375c101b, mount, player, _r, _ri);
};

/**
 * _0xE9E06EA514A69061
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE9E06EA514A69061 = function (p0, p1) {
  return _in(0xe9e06ea5, 0x14a69061, p0, p1);
};

/**
 * _0xEA8763E505AFD49A
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xEA8763E505AFD49A = function (p0, p1, p2) {
  return _in(0xea8763e5, 0x05afd49a, p0, p1, p2);
};

/**
 * _0xEB8886E1065654CD
 * Washing player's face/hands now
 * _FA* - _FI*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {string | number} p2
 * @param {number} p3
 * @return {void}
 */
global.N_0xEB8886E1065654CD = function (ped, p1, p2, p3) {
  return _in(0xeb8886e1, 0x065654cd, ped, p1, _ts(p2), _fv(p3));
};

/**
 * _0xEBAAC9A750E7563B
 * If returned true: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling UP the bounds due to tracking
 * If returned false: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling DOWN the bounds due to tracking
 * _IS_PED_T* - _IS_PED_U*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xEBAAC9A750E7563B = function (ped) {
  return _in(0xebaac9a7, 0x50e7563b, ped, _r);
};

/**
 * _0xEBD49472BCCF7642
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xEBD49472BCCF7642 = function (p0, p1) {
  return _in(0xebd49472, 0xbccf7642, p0, p1);
};

/**
 * _0xEC60D1D225BC50AA
 * _SET_C*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0xEC60D1D225BC50AA = function (ped, p1) {
  return _in(0xec60d1d2, 0x25bc50aa, ped, _fv(p1));
};

/**
 * _0xED1C764997A86D5A
 * Only used in R* Script nb_stalking_hunter
 *
 * @param {number} ped1
 * @param {number} ped2
 * @return {void}
 */
global.N_0xED1C764997A86D5A = function (ped1, ped2) {
  return _in(0xed1c7649, 0x97a86d5a, ped1, ped2);
};

/**
 * _0xEEDC9B29314B2733
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @return {void}
 */
global.N_0xEEDC9B29314B2733 = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0xeedc9b29, 0x314b2733, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
};

/**
 * _0xEF371232BC6053E1
 * _ADD_*
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xEF371232BC6053E1 = function (ped) {
  return _in(0xef371232, 0xbc6053e1, ped);
};

/**
 * _0xF47D54B986F0A346
 * Used in Script Function MOONSHINE_BAND_CLIENT_PATRON_UPDATE
 *
 * @param {number} ped
 * @param {number} danceIntensity
 * @return {void}
 */
global.N_0xF47D54B986F0A346 = function (ped, danceIntensity) {
  return _in(0xf47d54b9, 0x86f0a346, ped, danceIntensity);
};

/**
 * _0xF4860514AD354226
 * Only used in SP Scripts
 * Returns count / index
 * _C*
 *
 * @param {number} shockingEvent
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p4
 * @return {[number, number]}
 */
global.N_0xF4860514AD354226 = function (shockingEvent, x, y, z, p4) {
  return _in(0xf4860514, 0xad354226, shockingEvent, _fv(x), _fv(y), _fv(z), _fv(p4), _i, _r, _ri);
};

/**
 * _0xF634E2892220EF34
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.N_0xF634E2892220EF34 = function (ped, p1) {
  return _in(0xf634e289, 0x2220ef34, ped, p1);
};

/**
 * _0xF6A8C4B4A11AE89C
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {any}
 */
global.N_0xF6A8C4B4A11AE89C = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xf6a8c4b4, 0xa11ae89c, p0, p1, p2, p3, p4, p5, _r);
};

/**
 * _0xF7327ACC7A89AEF1
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xF7327ACC7A89AEF1 = function (p0, p1, p2) {
  return _in(0xf7327acc, 0x7a89aef1, p0, p1, p2, _r);
};

/**
 * _0xF917F92BF22ECBAB
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xF917F92BF22ECBAB = function (p0) {
  return _in(0xf917f92b, 0xf22ecbab, p0);
};

/**
 * _0xF9331B3A314EB49D
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xF9331B3A314EB49D = function (ped) {
  return _in(0xf9331b3a, 0x314eb49d, ped, _r);
};

/**
 * _0xF9CBD46433E36713
 * Used in Script Function PLAYER_HEAD_TRACKING_MAINTAIN
 *
 * @param {number} ped
 * @param {number} targetEntity
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {string | number} p9
 * @return {void}
 */
global.N_0xF9CBD46433E36713 = function (ped, targetEntity, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0xf9cbd464, 0x33e36713, ped, targetEntity, _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _fv(p8), _ts(p9));
};

/**
 * _0xF9CFF5BB70E8A2CB
 * _SET_PED_WETNESS*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0xF9CFF5BB70E8A2CB = function (ped, p1) {
  return _in(0xf9cff5bb, 0x70e8a2cb, ped, _fv(p1));
};

/**
 * _0xFA0D206B489A6846
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0xFA0D206B489A6846 = function (p0, p1, p2, p3, p4) {
  return _in(0xfa0d206b, 0x489a6846, p0, p1, p2, p3, p4);
};

/**
 * _0xFA742B82D093D848
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xFA742B82D093D848 = function (p0, p1, p2) {
  return _in(0xfa742b82, 0xd093d848, p0, p1, p2);
};

/**
 * _0xFA8C10DCE0706D43
 * _HAS_PED_*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xFA8C10DCE0706D43 = function (ped) {
  return _in(0xfa8c10dc, 0xe0706d43, ped, _r);
};

/**
 * _0xFC23348F0F4E245F
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xFC23348F0F4E245F = function (p0, p1, p2, p3) {
  return _in(0xfc23348f, 0x0f4e245f, p0, p1, p2, p3);
};

/**
 * _0xFC3B580C4380B5B7
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0xFC3B580C4380B5B7 = function (ped) {
  return _in(0xfc3b580c, 0x4380b5b7, ped, _r, _ri);
};

/**
 * _0xFD3C31A2E45671E7
 * _DISABLE_A* - _DISABLE_C*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0xFD3C31A2E45671E7 = function (ped, p1) {
  return _in(0xfd3c31a2, 0xe45671e7, ped, p1);
};

/**
 * _0xFD8E853F0BC2E942
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xFD8E853F0BC2E942 = function (p0, p1) {
  return _in(0xfd8e853f, 0x0bc2e942, p0, p1);
};

/**
 * _0xFEA6126C34DF2532
 * METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
 * _SET_M* - _SET_P*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xFEA6126C34DF2532 = function (ped, p1) {
  return _in(0xfea6126c, 0x34df2532, ped, p1);
};

/**
 * _0xFFA1594703ED27CA
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0xFFA1594703ED27CA = function (ped, p1) {
  return _in(0xffa15947, 0x03ed27ca, ped, p1);
};

/**
 * _0xFFDE295662405B25
 * _GET_PED_COMBAT_M* - _GET_PED_C*
 *
 * @param {number} ped
 * @return {number}
 */
global.N_0xFFDE295662405B25 = function (ped) {
  return _in(0xffde2956, 0x62405b25, ped, _r, _ri);
};

/**
 * _ADD_PED_STAY_OUT_VOLUME
 *
 * @param {number} ped
 * @param {number} volume
 * @return {boolean}
 */
global.AddPedStayOutVolume = function (ped, volume) {
  return _in(0xe9b16852, 0x7b337bf0, ped, volume, _r);
};

/**
 * _ADD_PED_SUBSCRIBE_TO_LEGENDARY_BLIPS
 *
 * @param {number} ped
 * @return {boolean}
 */
global.AddPedSubscribeToLegendaryBlips = function (ped) {
  return _in(0xe37287ee, 0x358939c3, ped, _r);
};

/**
 * _ADD_SCENARIO_BLOCKING_VOLUME
 * flag: see ADD_SCENARIO_BLOCKING_AREA
 *
 * @param {number} volume
 * @param {boolean} p1
 * @param {number} flag
 * @return {any}
 */
global.AddScenarioBlockingVolume = function (volume, p1, flag) {
  return _in(0x4c39c95a, 0xe5db1329, volume, p1, flag, _r);
};

/**
 * _ADD_SCENARIO_TRANSITION
 * Forces transition now, called together with 0xD65FDC686A031C83
 *
 * @param {number} ped
 * @return {void}
 */
global.AddScenarioTransition = function (ped) {
  return _in(0x6d07b371, 0xe9439019, ped);
};

/**
 * _ADD_TEXTURE_LAYER
 * Creates ped overlay in texture override data and returns it's index.
 * This index are used for further overlay editing.
 * 
 * albedoHash: a hash of overlay's albedo texture
 * colorType: a color type(from 0 to 2). 0 is used for overlays with RGB colors usually.
 *
 * @param {number} textureId
 * @param {number} albedoHash
 * @param {number} normalHash
 * @param {number} materialHash
 * @param {number} blendType
 * @param {number} texAlpha
 * @param {number} sheetGridIndex
 * @return {number}
 */
global.AddTextureLayer = function (textureId, albedoHash, normalHash, materialHash, blendType, texAlpha, sheetGridIndex) {
  return _in(0x86bb5ff4, 0x5f193a02, textureId, _ch(albedoHash), _ch(normalHash), _ch(materialHash), blendType, _fv(texAlpha), sheetGridIndex, _r, _ri);
};

/**
 * _APPLY_PED_META_PED_OUTFIT
 * https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
 *
 * @param {number} requestId
 * @param {number} ped
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {boolean}
 */
global.ApplyPedMetaPedOutfit = function (requestId, ped, p2, p3) {
  return _in(0x74f512e2, 0x9cb717e2, requestId, ped, p2, p3, _r);
};

/**
 * _APPLY_SHOP_ITEM_TO_PED
 *
 * @param {number} ped
 * @param {number} componentHash
 * @param {boolean} immediately
 * @param {boolean} isMp
 * @param {boolean} p4
 * @return {void}
 */
global.ApplyShopItemToPed = function (ped, componentHash, immediately, isMp, p4) {
  return _in(0xd3a7b003, 0xed343fd9, ped, _ch(componentHash), immediately, isMp, p4);
};

/**
 * _APPLY_TEXTURE_ON_PED
 *
 * @param {number} ped
 * @param {number} componentHash
 * @param {number} textureId
 * @return {void}
 */
global.ApplyTextureOnPed = function (ped, componentHash, textureId) {
  return _in(0x0b46e257, 0x61519058, ped, _ch(componentHash), textureId);
};

/**
 * _ARE_ALL_AMBIENT_PED_RESERVATIONS_READY
 *

 * @return {boolean}
 */
global.AreAllAmbientPedReservationsReady = function () {
  return _in(0x5e420ff2, 0x93ee5472, _r);
};

/**
 * _ATTACH_VOLUME_TO_ENTITY
 *
 * @param {number} volume
 * @param {number} entity
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} p8
 * @param {boolean} p9
 * @return {void}
 */
global.AttachVolumeToEntity = function (volume, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, p8, p9) {
  return _in(0x7c00cfc4, 0x8a782dc0, volume, entity, _fv(offsetX), _fv(offsetY), _fv(offsetZ), _fv(rotX), _fv(rotY), _fv(rotZ), p8, p9);
};

/**
 * _CAN_PED_USE_SCENARIO_POINT
 * p2 is always 0, p3 is always 0, p4 is always 1
 *
 * @param {number} ped
 * @param {number} scenario
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {boolean}
 */
global.CanPedUseScenarioPoint = function (ped, scenario, p2, p3, p4) {
  return _in(0xab643407, 0xd0b26f07, ped, scenario, p2, p3, p4, _r);
};

/**
 * _CHANGE_PED_STAMINA
 * Alters entity's stamina by 'amount'. Can be negative (to drain stamina). float amount: -1000.0 - 1000.0
 *
 * @param {number} ped
 * @param {number} amount
 * @return {boolean}
 */
global.ChangePedStamina = function (ped, amount) {
  return _in(0xc3d4b754, 0xc0e86b9e, ped, _fv(amount), _r);
};

/**
 * _CLEAR_ACTIVE_ANIMAL_OWNER
 * Used in Script Functions PLAYER_HORSE_RELEASE_HORSE_TO_AMBIENT_WORLD (p1 = true), HORSE_SETUP_PLAYER_HORSE_ATTRIBUTES (p1 = false)
 * Set to false for player horse in scripts and seems it's only true when releasing/changing a player horse? Cannot determine what effect it has, but it doesn't seem to affect _GET_HORSE_TAMING_STATE
 *
 * @param {number} horse
 * @param {boolean} clear
 * @return {void}
 */
global.ClearActiveAnimalOwner = function (horse, clear) {
  return _in(0xbcc76708, 0xe5677e1d, horse, clear);
};

/**
 * _CLEAR_PED_ACTION_DISABLE_FLAG
 *
 * @param {number} ped
 * @param {number} actionDisableFlag
 * @return {void}
 */
global.ClearPedActionDisableFlag = function (ped, actionDisableFlag) {
  return _in(0x949b2f9e, 0xd2917f5d, ped, actionDisableFlag);
};

/**
 * _CLEAR_PED_BLOOD_DAMAGE_FACIAL
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.ClearPedBloodDamageFacial = function (ped, p1) {
  return _in(0x7f5d8833, 0x3ee8a86f, ped, p1);
};

/**
 * _CLEAR_PED_COMBAT_STYLE
 * Params: p1 = 1 in R* Scripts
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.ClearPedCombatStyle = function (ped, p1) {
  return _in(0x78815fc5, 0x2832b690, ped, p1);
};

/**
 * _CLEAR_PED_COMBAT_STYLE_MOD
 * _CLEAR_PED_COMBAT_*
 *
 * @param {number} ped
 * @param {number} combatStyleModHash
 * @return {void}
 */
global.ClearPedCombatStyleMod = function (ped, combatStyleModHash) {
  return _in(0x1fa132cb, 0xcd7cb239, ped, _ch(combatStyleModHash));
};

/**
 * _CLEAR_PED_DESIRED_LOCO_FOR_MODEL
 * Clears locomotion archetype
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearPedDesiredLocoForModel = function (ped) {
  return _in(0x4fd80c3d, 0xd84b817b, ped);
};

/**
 * _CLEAR_PED_DESIRED_LOCO_MOTION_TYPE
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearPedDesiredLocoMotionType = function (ped) {
  return _in(0x58f7db5b, 0xd8fa2288, ped);
};

/**
 * _CLEAR_PED_GRAPPLE_FLAG
 *
 * @param {number} ped
 * @param {number} flag
 * @return {void}
 */
global.ClearPedGrappleFlag = function (ped, flag) {
  return _in(0xeae3b5b0, 0x19c8d23f, ped, flag);
};

/**
 * _CLEAR_PED_TARGET_ACTION_DISABLE_FLAG
 *
 * @param {number} ped
 * @param {number} actionDisableFlag
 * @return {void}
 */
global.ClearPedTargetActionDisableFlag = function (ped, actionDisableFlag) {
  return _in(0xbbf6d1d0, 0x7c02d00a, ped, actionDisableFlag);
};

/**
 * _CLEAR_PED_TEXTURE
 * Removes every texture layer
 * Old Name: _RESET_PED_TEXTURE_2
 *
 * @param {number} textureId
 * @return {void}
 */
global.ClearPedTexture = function (textureId) {
  return _in(0xb63b9178, 0xd0f58d82, textureId);
};

/**
 * _CLEAR_PELT_FROM_HORSE
 *
 * @param {number} horse
 * @param {number} peltId
 * @return {void}
 */
global.ClearPeltFromHorse = function (horse, peltId) {
  return _in(0x627f7f3a, 0x0c4c51ff, horse, peltId);
};

/**
 * _COMPUTE_SATCHEL_ITEM_FOR_PED_CARCASS
 * Related to dead animals items/loots
 * Notice: skinningQuality is partially calculated using pedQuality
 *
 * @param {DataView} outInventoryItemArray
 * @param {number} ped
 * @param {number} damageCleanliness
 * @param {number} skinningQuality
 * @return {number}
 */
global.ComputeSatchelItemForPedCarcass = function (outInventoryItemArray, ped, damageCleanliness, skinningQuality) {
  return _in(0x6b89faa3, 0x6fc909a3, outInventoryItemArray, ped, damageCleanliness, skinningQuality, _r, _ri);
};

/**
 * _CREATE_GRAVITY_WELL
 * Creates a handle to an instance of "CScriptResource_GravityWell", this system forces local ped to target specified position when moving, however player still can interrupt this.
 * Can be useful to "point" player at some specific position.
 * Only works while on-foot.
 * 
 * _CREATE_[P-Z]
 *
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {number} heading
 * @param {number} radius
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {boolean} stopAtDestination
 * @return {number}
 */
global.CreateGravityWell = function (xPos, yPos, zPos, heading, radius, p5, p6, p7, stopAtDestination) {
  return _in(0x4f5ebe70, 0x081e5a20, _fv(xPos), _fv(yPos), _fv(zPos), _fv(heading), _fv(radius), _fv(p5), _fv(p6), _fv(p7), stopAtDestination, _r, _ri);
};

/**
 * _CREATE_META_PED
 * Only used in SP scripts, for example odriscolls1: BOOLS: true, true, true, false, false
 *
 * @param {number} requestId
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {boolean} p5
 * @param {boolean} p6
 * @param {boolean} p7
 * @param {boolean} p8
 * @param {boolean} p9
 * @return {number}
 */
global.CreateMetaPed = function (requestId, x, y, z, heading, p5, p6, p7, p8, p9) {
  return _in(0x0bcd4091, 0xc8eaba42, requestId, _fv(x), _fv(y), _fv(z), _fv(heading), p5, p6, p7, p8, p9, _r, _ri);
};

/**
 * _CREATE_META_PED_ASSET
 * Creates prop from metaped asset bundle
 * https://github.com/femga/rdr3_discoveries/blob/master/objects/metaped_asset_bundles_list.lua
 * Creates a pickup-able metaped component. asset doesn't seems to be related to component hashes. Hash example : 0xD20354AB (https ://i.imgur.com/dzHkcDb.png)
 *
 * @param {number} asset
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {boolean} p7
 * @param {boolean} p8
 * @param {boolean} p9
 * @return {number}
 */
global.CreateMetaPedAsset = function (asset, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9) {
  return _in(0x9641a9a2, 0x0310f6b8, _ch(asset), _fv(posX), _fv(posY), _fv(posZ), _fv(rotX), _fv(rotY), _fv(rotZ), p7, p8, p9, _r, _ri);
};

/**
 * _CREATE_META_PED_OUTFIT_PED
 * Creates metaped from ped outfit requestId. See _REQUEST_METAPED_OUTFIT
 *
 * @param {number} requestId
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {boolean} p5
 * @param {boolean} p6
 * @param {boolean} p7
 * @param {boolean} p8
 * @return {number}
 */
global.CreateMetaPedOutfitPed = function (requestId, x, y, z, heading, p5, p6, p7, p8) {
  return _in(0xeaf682a1, 0x4f8e5f53, requestId, _fv(x), _fv(y), _fv(z), _fv(heading), p5, p6, p7, p8, _r, _ri);
};

/**
 * _DETACH_VOLUME_FROM_ENTITY
 *
 * @param {number} volume
 * @param {number} entity
 * @return {void}
 */
global.DetachVolumeFromEntity = function (volume, entity) {
  return _in(0x19c975b8, 0x1be53c28, volume, entity);
};

/**
 * _DISABLE_ALL_LOOK_AT_REQUESTS
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.DisableAllLookAtRequests = function (ped, p1) {
  return _in(0xe1965a38, 0x0342be1f, ped, p1);
};

/**
 * _DISABLE_AMBIENT_LOOK_AT_REQUESTS
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.DisableAmbientLookAtRequests = function (p0, p1) {
  return _in(0x80038740, 0xc96ad17f, p0, p1);
};

/**
 * _DOES_META_PED_OUTFIT_EXIST_FOR_PED_MODEL
 *
 * @param {number} outfit
 * @param {number} model
 * @return {boolean}
 */
global.DoesMetaPedOutfitExistForPedModel = function (outfit, model) {
  return _in(0xc0e880b7, 0xa441164d, _ch(outfit), _ch(model), _r);
};

/**
 * _DOES_META_PED_SUBOUTFIT_EXIST_FOR_PED_MODEL
 *
 * @param {number} outfit
 * @param {number} suboutfit
 * @param {number} model
 * @return {boolean}
 */
global.DoesMetaPedSuboutfitExistForPedModel = function (outfit, suboutfit, model) {
  return _in(0x4ff3c2b4, 0xe6a196c1, _ch(outfit), _ch(suboutfit), _ch(model), _r);
};

/**
 * _EQUIP_META_PED_OUTFIT
 * Note: you have to update your ped's variation after calling (using 0xCC8CA3E88256E58F)
 * 
 * Body Types:
 * MPCREATOR_NEUTRAL
 * MPCREATOR_SKINNY
 * MPCREATOR_SKINNY_MUSCULAR
 * MPCREATOR_HEAVY
 * MPCREATOR_HEAVY_MUSCULAR
 * 
 * eBodyWeightOutfit (pedattributes.ymt):
 * -2045421226 (smallest)
 * -1745814259
 * -325933489
 * -1065791927
 * -844699484
 * -1273449080
 * 927185840
 * 149872391
 * 399015098
 * -644349862
 * 1745919061 (default)
 * 1004225511
 * 1278600348
 * 502499352
 * -2093198664
 * -1837436619
 * 1736416063
 * 2040610690
 * -1173634986
 * -867801909
 * 1960266524 (biggest)
 * 
 * https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_outfits.lua
 * 
 * Alt name: _EQUIP_META_PED_OUTFIT_COMPONENT
 *
 * @param {number} ped
 * @param {number} hash
 * @return {void}
 */
global.EquipMetaPedOutfit = function (ped, hash) {
  return _in(0x1902c4cf, 0xcc5be57c, ped, _ch(hash));
};

/**
 * _EQUIP_META_PED_OUTFIT_EXTRA
 * Changes Multiplayer ped face and body type components, they can be stacked
 * Params: p3 = 1
 * Body shape for mp_male from 124 - 128, 110 - 115 for mp_female
 * Face shape for mp_male from 110 - 123, 96 - 109 for mp_female
 * Cloth type for mp_male from 0 - 109, 0 - 95 for mp_female
 *
 * @param {number} ped
 * @param {number} component
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.EquipMetaPedOutfitExtra = function (ped, component, p2, p3) {
  return _in(0xa5bae410, 0xb03e7371, ped, component, p2, p3);
};

/**
 * _EQUIP_META_PED_OUTFIT_PRESET
 * Sets the outfit preset for the ped. The presetId is an index which determines its preset outfit. p2 is always false in the scripts.
 * If p2 is true as player, then certain components like facial hair and hair will not be removed.
 * Old name: _SET_PED_OUTFIT_PRESET
 *
 * @param {number} ped
 * @param {number} presetId
 * @param {boolean} p2
 * @return {void}
 */
global.EquipMetaPedOutfitPreset = function (ped, presetId, p2) {
  return _in(0x77ff8d35, 0xeec6bbc4, ped, presetId, p2);
};

/**
 * _EQUIP_META_PED_SUBOUTFIT
 *
 * @param {number} ped
 * @param {number} suboutfit
 * @param {number} p2
 * @return {void}
 */
global.EquipMetaPedSuboutfit = function (ped, suboutfit, p2) {
  return _in(0x66ff3954, 0x45a88a6e, ped, _ch(suboutfit), p2);
};

/**
 * _FAKE_SET_PED_LOCO_INJURED
 *
 * @param {number} ped
 * @param {boolean} enabled
 * @return {void}
 */
global.FakeSetPedLocoInjured = function (ped, enabled) {
  return _in(0x8b3cb081, 0x58e98481, ped, enabled);
};

/**
 * _FORCE_PED_DEATH
 *
 * @param {number} ped
 * @param {number} pedKiller
 * @param {number} weapon
 * @return {void}
 */
global.ForcePedDeath = function (ped, pedKiller, weapon) {
  return _in(0x1ce87550, 0x5d45338a, ped, pedKiller, _ch(weapon));
};

/**
 * _GET_ACCURACY_AGAINST_LOCAL_PLAYER_MODIFIER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetAccuracyAgainstLocalPlayerModifier = function (ped) {
  return _in(0xdc9273d9, 0x5976ba22, ped, _r, _rf);
};

/**
 * _GET_ACTIVE_ANIMAL_OWNER
 *
 * @param {number} animal
 * @return {number}
 */
global.GetActiveAnimalOwner = function (animal) {
  return _in(0xf103823f, 0xfe72bb49, animal, _r, _ri);
};

/**
 * _GET_ACTIVE_DYNAMIC_SCENARIO
 * Returns kneeling, sitting, squating, and sleeping scenario hashes
 *
 * @param {number} ped
 * @return {number}
 */
global.GetActiveDynamicScenario = function (ped) {
  return _in(0x569f1e12, 0x37508deb, ped, _r, _ri);
};

/**
 * _GET_ACTIVE_DYNAMIC_SCENARIO_2
 * Returns kneeling, sitting, squating, and sleeping scenario hashes
 *
 * @param {number} ped
 * @return {number}
 */
global.GetActiveDynamicScenario_2 = function (ped) {
  return _in(0xc22aa08a, 0x8adb87d4, ped, _r, _ri);
};

/**
 * _GET_BLOCKING_OF_NON_TEMPORARY_EVENTS
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetBlockingOfNonTemporaryEvents = function (ped) {
  return _in(0x268b3aeb, 0xf032a88d, ped, _r);
};

/**
 * _GET_CARRIER_AS_HUMAN
 *
 * @param {number} entity
 * @return {number}
 */
global.GetCarrierAsHuman = function (entity) {
  return _in(0x79443d56, 0xc8df45ee, entity, _r, _ri);
};

/**
 * _GET_CARRIER_AS_MOUNT
 *
 * @param {number} entity
 * @return {number}
 */
global.GetCarrierAsMount = function (entity) {
  return _in(0xa033d7e4, 0xbbf9844d, entity, _r, _ri);
};

/**
 * _GET_CARRIER_AS_PED
 *
 * @param {number} entity
 * @return {number}
 */
global.GetCarrierAsPed = function (entity) {
  return _in(0x09b83e68, 0xde004cd4, entity, _r, _ri);
};

/**
 * _GET_CHAR_EXPRESSION
 * Gets MetaPedExpression at index specified
 * 
 * For index, see: _SET_CHAR_EXPRESSION
 * 
 * Old name: _GET_PED_FACE_FEATURE
 *
 * @param {number} ped
 * @param {number} index
 * @return {number}
 */
global.GetCharExpression = function (ped, index) {
  return _in(0xfd1ba1ee, 0xf7985bb8, ped, index, _r, _rf);
};

/**
 * _GET_DEFAULT_RELATIONSHIP_GROUP_HASH
 *
 * @param {number} modelHash
 * @return {number}
 */
global.GetDefaultRelationshipGroupHash = function (modelHash) {
  return _in(0x3cc4a718, 0xc258bdd0, _ch(modelHash), _r, _ri);
};

/**
 * _GET_FIRST_ENTITY_PED_IS_CARRYING
 *
 * @param {number} ped
 * @return {number}
 */
global.GetFirstEntityPedIsCarrying = function (ped) {
  return _in(0xd806cd2a, 0x4f2c2996, ped, _r, _ri);
};

/**
 * _GET_GROUP_FORMATION
 *
 * @param {number} groupId
 * @return {number}
 */
global.GetGroupFormation = function (groupId) {
  return _in(0x13a1b061, 0x007c906b, groupId, _r, _ri);
};

/**
 * _GET_HEALTH_RECHARGE_MULTIPLIER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetHealthRechargeMultiplier = function (ped) {
  return _in(0x95b8e397, 0xb8f4360f, ped, _r, _rf);
};

/**
 * _GET_HORSE_TAMING_STATE
 * Returns an int based on enum eTamingState
 * 
 * enum eTamingState
 * {
 *   ATS_INVALID = 0,
 *   ATS_INACTIVE,
 *   ATS_TARGET_DETECTED,
 *   ATS_CALLED_OUT,
 *   ATS_MOUNTABLE,
 *   ATS_BEING_PATTED,
 *   ATS_BREAKING_ACTIVE,
 *   ATS_SPOOKED,
 *   ATS_RETREATING,
 *   ATS_FLEEING
 * };
 *
 * @param {number} horse
 * @return {number}
 */
global.GetHorseTamingState = function (horse) {
  return _in(0x454ad4da, 0x6c41b5bd, horse, _r, _ri);
};

/**
 * _GET_INCAPACITATION_TIME_REMAINING
 *
 * @param {number} ped
 * @return {number}
 */
global.GetIncapacitationTimeRemaining = function (ped) {
  return _in(0x88d9d76d, 0x78065487, ped, _r, _ri);
};

/**
 * _GET_IS_PED_BEING_ROBBED
 * If p2 is false, then this native will return true until the interaction is complete. If true, the native will return true until player pockets robbery item.
 * _GET_IS_PED_[M-R]*
 *
 * @param {number} ped
 * @param {number} player
 * @param {boolean} trueUntilPlayerPocketsItem
 * @return {boolean}
 */
global.GetIsPedBeingRobbed = function (ped, player, trueUntilPlayerPocketsItem) {
  return _in(0xe33f98bd, 0x76490abc, ped, player, trueUntilPlayerPocketsItem, _r);
};

/**
 * _GET_IS_PED_COMMAND_HASH_PRESENT
 *
 * @param {number} ped
 * @param {number} commandHash
 * @return {boolean}
 */
global.GetIsPedCommandHashPresent = function (ped, commandHash) {
  return _in(0x68821369, 0xa2ceadd5, ped, _ch(commandHash), _r);
};

/**
 * _GET_IS_PED_IN_DISPUTE_WITH_PED
 * Returns true if ped is in a dispute another ped (pedInDisputeWith can also be 0)
 *
 * @param {number} ped
 * @param {number} pedInDisputeWith
 * @return {boolean}
 */
global.GetIsPedInDisputeWithPed = function (ped, pedInDisputeWith) {
  return _in(0x331550b2, 0x12014b92, ped, pedInDisputeWith, _r);
};

/**
 * _GET_IS_PED_MOTIVATION_STATE_ENABLED
 * motivationState: see _SET_PED_MOTIVATION
 *
 * @param {number} ped
 * @param {number} motivationState
 * @return {boolean}
 */
global.GetIsPedMotivationStateEnabled = function (ped, motivationState) {
  return _in(0x33fa0486, 0x75821da7, ped, motivationState, _r);
};

/**
 * _GET_LASSOED_LASSOER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetLassoedLassoer = function (ped) {
  return _in(0x0c31c511, 0x68e80365, ped, _r, _ri);
};

/**
 * _GET_LASSOER_OF_PED
 * _IS_PED_S* - _IS_PED_U*
 *
 * @param {number} ped
 * @return {number}
 */
global.GetLassoerOfPed = function (ped) {
  return _in(0x833f0053, 0x340ef413, ped, _r, _ri);
};

/**
 * _GET_LASSO_TARGET
 *
 * @param {number} ped
 * @return {number}
 */
global.GetLassoTarget = function (ped) {
  return _in(0xb65a4dab, 0x460a19bd, ped, _r, _ri);
};

/**
 * _GET_LAST_LED_MOUNT
 * Returns last horse the ped was leading
 *
 * @param {number} ped
 * @return {number}
 */
global.GetLastLedMount = function (ped) {
  return _in(0x693126b5, 0xd0457d0d, ped, _r, _ri);
};

/**
 * _GET_LAST_MOUNT
 *
 * @param {number} ped
 * @return {number}
 */
global.GetLastMount = function (ped) {
  return _in(0x4c8b5917, 0x1957bcf7, ped, _r, _ri);
};

/**
 * _GET_LAST_VEHICLE_DRAFT_HORSE_WAS_ATTACHED_TO
 *
 * @param {number} horse
 * @return {number}
 */
global.GetLastVehicleDraftHorseWasAttachedTo = function (horse) {
  return _in(0x5064db50, 0x83c29921, horse, _r, _ri);
};

/**
 * _GET_LOOTING_FLAG
 * lootFlag: see SET_LOOTING_FLAG
 *
 * @param {number} ped
 * @param {number} lootFlag
 * @return {boolean}
 */
global.GetLootingFlag = function (ped, lootFlag) {
  return _in(0xe4c11f10, 0x4620ddce, ped, lootFlag, _r);
};

/**
 * _GET_META_PED_TYPE
 * enum eMetaPedType
 * {
 *   MPT_MALE,
 *   MPT_FEMALE,
 *   MPT_TEEN,
 *   MPT_ANIMAL,
 *   MPT_NONE
 * };
 *
 * @param {number} ped
 * @return {number}
 */
global.GetMetaPedType = function (ped) {
  return _in(0xec9a1261, 0xbf0ce510, ped, _r, _ri);
};

/**
 * _GET_NUM_COMPONENTS_IN_PED
 *
 * @param {number} ped
 * @return {number}
 */
global.GetNumComponentsInPed = function (ped) {
  return _in(0x90403e81, 0x07b60e81, ped, _r, _ri);
};

/**
 * _GET_NUM_COMPONENT_CATEGORIES_IN_PED
 * Works similar to 0x90403E8107B60E81 (_GET_NUM_COMPONENTS_IN_PED) but is used to get category hashes instead
 *
 * @param {number} ped
 * @return {number}
 */
global.GetNumComponentCategoriesInPed = function (ped) {
  return _in(0xa622e66e, 0xee92a08d, ped, _r, _ri);
};

/**
 * _GET_NUM_FREE_SLOTS_IN_PED_POOL
 *

 * @return {number}
 */
global.GetNumFreeSlotsInPedPool = function () {
  return _in(0x313778ed, 0xca9158e2, _r, _ri);
};

/**
 * _GET_NUM_RESERVED_AMBIENT_PEDS_DESIRED
 *

 * @return {number}
 */
global.GetNumReservedAmbientPedsDesired = function () {
  return _in(0x62de46f0, 0x61caa468, _r, _ri);
};

/**
 * _GET_NUM_RESERVED_AMBIENT_PEDS_READY
 *

 * @return {number}
 */
global.GetNumReservedAmbientPedsReady = function () {
  return _in(0x5c168552, 0x77819bbf, _r, _ri);
};

/**
 * _GET_NUM_RESERVED_HEALTH
 *
 * @param {number} ped
 * @return {any}
 */
global.GetNumReservedHealth = function (ped) {
  return _in(0x16f2c8c0, 0x84ab2092, ped, _r);
};

/**
 * _GET_PEDS_IN_COMBAT_WITH_TARGET
 *
 * @param {number} ped
 * @param {number} itemset
 * @param {number} flag
 * @return {number}
 */
global.GetPedsInCombatWithTarget = function (ped, itemset, flag) {
  return _in(0x7be607da, 0xff382fd2, ped, itemset, flag, _r, _ri);
};

/**
 * _GET_PED_ATTITUDE
 * AI_ATTITUDE_NEUTRAL = 0,
 * AI_ATTITUDE_FRIENDLY,
 * AI_ATTITUDE_WARY,
 * AI_ATTITUDE_COMBATIVE,
 * AI_ATTITUDE_NEVER_MET
 *
 * @param {number} ped
 * @param {number} player
 * @return {number}
 */
global.GetPedAttitude = function (ped, player) {
  return _in(0x7cc2186c, 0x32d3540a, ped, player, _r, _ri);
};

/**
 * _GET_PED_BLACKBOARD_BOOL
 * Can be used to get a peds foliage active status: variableName = FoliageActive
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @return {boolean}
 */
global.GetPedBlackboardBool = function (ped, variableName) {
  return _in(0x498f2e77, 0x982d6945, ped, _ts(variableName), _r);
};

/**
 * _GET_PED_BLACKBOARD_FLOAT
 * Can be used to get a peds foliage raw height: variableName = FoliageHeight
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @return {number}
 */
global.GetPedBlackboardFloat = function (ped, variableName) {
  return _in(0x56e58d4d, 0x118fb45e, ped, _ts(variableName), _r, _rf);
};

/**
 * _GET_PED_BLACKBOARD_HASH
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @return {number}
 */
global.GetPedBlackboardHash = function (ped, variableName) {
  return _in(0xbf5e791b, 0xbbf90a3c, ped, _ts(variableName), _r, _ri);
};

/**
 * _GET_PED_BRAWLING_STYLE
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedBrawlingStyle = function (ped) {
  return _in(0xec6b59be, 0x445fec51, ped, _r, _ri);
};

/**
 * _GET_PED_CAN_BE_INCAPACITATED_THIS_FRAME
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetPedCanBeIncapacitatedThisFrame = function (ped) {
  return _in(0x7a4e0036, 0x4b5d727b, ped, _r);
};

/**
 * _GET_PED_COMBAT_ATTRIBUTE
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @return {boolean}
 */
global.GetPedCombatAttribute = function (ped, attributeIndex) {
  return _in(0xcc2b2059, 0x6e29e4e3, ped, attributeIndex, _r);
};

/**
 * _GET_PED_COMPONENT_CATEGORY_BY_INDEX
 * Returns category hash that each ped component has. Hash examples: MASKS, HATS, HEADS, HORSE_MANES
 *
 * @param {number} ped
 * @param {number} index
 * @return {number}
 */
global.GetPedComponentCategoryByIndex = function (ped, index) {
  return _in(0xccb97b51, 0x893c662f, ped, index, _r, _ri);
};

/**
 * _GET_PED_DAMAGED
 * Returns true if _GET_PED_DAMAGE_CLEANLINESS was ever lower than 2
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetPedDamaged = function (ped) {
  return _in(0x6cfc3730, 0x08a1edaf, ped, _r);
};

/**
 * _GET_PED_DAMAGE_CLEANLINESS
 * enum ePedDamageCleanliness
 * {
 *   PED_DAMAGE_CLEANLINESS_POOR,
 *   PED_DAMAGE_CLEANLINESS_GOOD,
 *   PED_DAMAGE_CLEANLINESS_PERFECT
 * };
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedDamageCleanliness = function (ped) {
  return _in(0x88effed5, 0xfe8b0b4a, ped, _r, _ri);
};

/**
 * _GET_PED_DEFENSIVE_VOLUME
 *
 * @param {number} ped
 * @param {any} p1
 * @return {number}
 */
global.GetPedDefensiveVolume = function (ped, p1) {
  return _in(0xef2e6f87, 0x0783369b, ped, p1, _r, _ri);
};

/**
 * _GET_PED_DRUNKNESS
 * Returns ped drunk level
 * _H* or _I*
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedDrunkness = function (ped) {
  return _in(0x6fb76442, 0x469abd68, ped, _r, _rf);
};

/**
 * _GET_PED_GRAPPLER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedGrappler = function (ped) {
  return _in(0xd0b7aeb5, 0x6229d317, ped, _r, _ri);
};

/**
 * _GET_PED_GRAPPLE_FLAG
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedGrappleFlag = function (ped) {
  return _in(0xf3c873ed, 0x0c595109, ped, _r, _ri);
};

/**
 * _GET_PED_GRAPPLE_STYLE
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedGrappleStyle = function (ped) {
  return _in(0x753b15ad, 0x0fd6f3e3, ped, _r, _ri);
};

/**
 * _GET_PED_HEIGHT
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedHeight = function (ped) {
  return _in(0x1d491ccf, 0x7211fb74, ped, _r, _rf);
};

/**
 * _GET_PED_ID_RANGE
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedIdRange = function (ped) {
  return _in(0x31167ed4, 0x324b758d, ped, _r, _rf);
};

/**
 * _GET_PED_INCAPACITATION_HEALTH
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedIncapacitationHealth = function (ped) {
  return _in(0x89bfdf6d, 0x53145545, ped, _r, _ri);
};

/**
 * _GET_PED_INTERACTION_PERSONALITY
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedInteractionPersonality = function (ped) {
  return _in(0xd7ad3c7e, 0xbaf88c92, ped, _r, _ri);
};

/**
 * _GET_PED_LASSO_HOGTIE_FLAG
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Lasso%20Hogtie%20Flags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/LASSO_HOGTIE_FLAG
 *
 * @param {number} ped
 * @param {number} flagId
 * @return {boolean}
 */
global.GetPedLassoHogtieFlag = function (ped, flagId) {
  return _in(0x2c76fa0e, 0x01681f8d, ped, flagId, _r);
};

/**
 * _GET_PED_LAST_DROPPED_HAT
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedLastDroppedHat = function (ped) {
  return _in(0x1f714e7a, 0x9dadfc42, ped, _r, _ri);
};

/**
 * _GET_PED_LOD_MULTIPLIER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedLodMultiplier = function (ped) {
  return _in(0x1b710e6f, 0x4ab69341, ped, _r, _rf);
};

/**
 * _GET_PED_MAX_STAMINA
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedMaxStamina = function (ped) {
  return _in(0xcb42afe2, 0xb613ee55, ped, _r, _rf);
};

/**
 * _GET_PED_MELEE_ACTION_PHASE
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedMeleeActionPhase = function (ped) {
  return _in(0x6127f25e, 0xd21c533c, ped, _r, _rf);
};

/**
 * _GET_PED_META_OUTFIT_HASH
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedMetaOutfitHash = function (ped) {
  return _in(0x30569f34, 0x8d126a5a, ped, _r, _ri);
};

/**
 * _GET_PED_MODEL_SIZE_FROM_HASH
 * PS_SMALL = 0,
 * PS_MEDIUM,
 * PS_MEDIUM_LARGE,
 * PS_LARGE,
 * PS_EXTRA_LARGE
 *
 * @param {number} modelHash
 * @return {number}
 */
global.GetPedModelSizeFromHash = function (modelHash) {
  return _in(0xa65aa1ac, 0xe81e5a77, _ch(modelHash), _r, _ri);
};

/**
 * _GET_PED_MOTIVATION
 * If targetPed is set to 0 the ped motivationState affects everyone
 *
 * @param {number} ped
 * @param {number} motivationState
 * @param {number} targetPed
 * @return {number}
 */
global.GetPedMotivation = function (ped, motivationState, targetPed) {
  return _in(0x42688e94, 0xe96fd9b4, ped, motivationState, targetPed, _r, _rf);
};

/**
 * _GET_PED_QUALITY
 * Returns Ped Quality to be used to calculate Skinning Quality
 * 
 * enum ePedQuality
 * {
 *   PQ_INVALID = -1,
 *   PQ_LOW,
 *   PQ_MEDIUM,
 *   PQ_HIGH,
 *   PQ_MAX
 * };
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedQuality = function (ped) {
  return _in(0x7bcc6087, 0xd130312a, ped, _r, _ri);
};

/**
 * _GET_PED_REGISTER_PROP
 * Gets a registered/attached prop entity for a particular ped. Second parameter will detach the prop entity from the ped if true. Props primarily appear to come from scenarios, such as a broom or hay bale.
 * 
 * Known props: https://pastebin.com/ap2NEJqB
 *
 * @param {number} ped
 * @param {string | number} propName
 * @param {boolean} detachProp
 * @return {number}
 */
global.GetPedRegisterProp = function (ped, propName, detachProp) {
  return _in(0x4d0d2e3d, 0x8bc000eb, ped, _ts(propName), detachProp, _r, _ri);
};

/**
 * _GET_PED_REMAINING_REVIVAL_TIME
 * normalized / non normalized
 * 0.0        / 1000.0         STARTED IN WRITHE STAGE
 * 1.0        / 0.0            END OF WRITHE, DEAD
 * -1.0                        DEAD
 * 
 * Returns some value from AI task 562 (unknown).
 *
 * @param {number} ped
 * @param {boolean} normalized
 * @return {number}
 */
global.GetPedRemainingRevivalTime = function (ped, normalized) {
  return _in(0xebe89623, 0xeb861271, ped, normalized, _r, _rf);
};

/**
 * _GET_PED_STAMINA
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedStamina = function (ped) {
  return _in(0x775a1ca7, 0x893aa8b5, ped, _r, _rf);
};

/**
 * _GET_PED_STAMINA_NORMALIZED
 * Returns stamina normalizedValue / normalizedUnlockedMax
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedStaminaNormalized = function (ped) {
  return _in(0x22f2a386, 0xd43048a9, ped, _r, _rf);
};

/**
 * _GET_PED_TRANQUILIZER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedTranquilizer = function (ped) {
  return _in(0x65c75fdc, 0xcac86464, ped, _r, _ri);
};

/**
 * _GET_PELT_FROM_HORSE
 * Returns peltId
 *
 * @param {number} horse
 * @param {number} index
 * @return {number}
 */
global.GetPeltFromHorse = function (horse, index) {
  return _in(0x0ceeb6f4, 0x780b1f2f, horse, index, _r, _ri);
};

/**
 * _GET_PLAYER_CURRENT_ANIMAL_DAMAGE_MODIFIER
 * Returns animal skin quality modifier
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerCurrentAnimalDamageModifier = function (player) {
  return _in(0xee2d5c81, 0x9a65bf26, player, _r, _rf);
};

/**
 * _GET_PLAYER_PED_WATER_DEPTH
 * Returns how deep the water is below the ped (if in water)
 * -1.0f = Not in water
 * 10.0f = Max water depth
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPlayerPedWaterDepth = function (ped) {
  return _in(0x29424574, 0x17a5fd24, ped, _r, _rf);
};

/**
 * _GET_RIDER_OF_MOUNT
 *
 * @param {number} mount
 * @param {boolean} p1
 * @return {number}
 */
global.GetRiderOfMount = function (mount, p1) {
  return _in(0xb676efda, 0x03dada52, mount, p1, _r, _ri);
};

/**
 * _GET_SHOP_ITEM_BASE_LAYERS
 *
 * @param {number} shopItem
 * @param {any} p1
 * @param {number} ped
 * @param {number} metapedType
 * @param {boolean} p4
 * @return {[boolean, number, number, number, number, number, number, number, number]}
 */
global.GetShopItemBaseLayers = function (shopItem, p1, ped, metapedType, p4) {
  return _in(0x63342c50, 0xec115ce8, _ch(shopItem), p1, ped, metapedType, p4, _i, _i, _i, _i, _i, _i, _i, _i, _r);
};

/**
 * _GET_SHOP_ITEM_COMPONENT_AT_INDEX
 *
 * @param {number} ped
 * @param {number} index
 * @param {boolean} p2
 * @param {DataView} argStruct
 * @param {DataView} argStruct2
 * @return {number}
 */
global.GetShopItemComponentAtIndex = function (ped, index, p2, argStruct, argStruct2) {
  return _in(0x77ba3762, 0x2e22023b, ped, index, p2, argStruct, argStruct2, _r, _ri);
};

/**
 * _GET_SHOP_ITEM_COMPONENT_CATEGORY
 *
 * @param {number} componentHash
 * @param {number} metapedType
 * @param {boolean} isMp
 * @return {number}
 */
global.GetShopItemComponentCategory = function (componentHash, metapedType, isMp) {
  return _in(0x5ff9a878, 0xc3d115b8, _ch(componentHash), metapedType, isMp, _r, _ri);
};

/**
 * _GET_SHOP_ITEM_HAT_COMPONENT
 *
 * @param {number} ped
 * @param {number} metapedType
 * @param {boolean} p2
 * @return {any}
 */
global.GetShopItemHatComponent = function (ped, metapedType, p2) {
  return _in(0x7e02e421, 0x8d916b94, ped, metapedType, p2, _r);
};

/**
 * _GET_SHOP_ITEM_NUM_WEARABLE_STATES
 * Returns the number of wearable states available for a shop item / component. p2 seems to be true in scripts.
 * 
 * For use with 0x6243635AF2F1B826 (_GET_SHOP_ITEM_AVAILABLE_WEARABLE_STATE_BY_INDEX)
 *
 * @param {number} componentHash
 * @param {boolean} isMpFemale
 * @param {boolean} p2
 * @return {number}
 */
global.GetShopItemNumWearableStates = function (componentHash, isMpFemale, p2) {
  return _in(0xffcc2db2, 0xd9953401, _ch(componentHash), isMpFemale, p2, _r, _ri);
};

/**
 * _GET_SHOP_ITEM_WEARABLE_STATE_BY_INDEX
 * Gets an available wearable state by index for a shop item / component - it does not retreive what the current state is. p3 seems to be true in scripts.
 * 
 * Use 0xFFCC2DB2D9953401 (_GET_SHOP_ITEM_NUM_WEARABLE_STATES) to get the number of available wearable states
 *
 * @param {number} componentHash
 * @param {number} wearableStateIndex
 * @param {boolean} isMpFemale
 * @param {boolean} p3
 * @return {number}
 */
global.GetShopItemWearableStateByIndex = function (componentHash, wearableStateIndex, isMpFemale, p3) {
  return _in(0x6243635a, 0xf2f1b826, _ch(componentHash), wearableStateIndex, isMpFemale, p3, _r, _ri);
};

/**
 * _GET_STAMINA_DEPLETION_MULTIPLIER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetStaminaDepletionMultiplier = function (ped) {
  return _in(0x825f6dd5, 0x59a0895b, ped, _r, _rf);
};

/**
 * _GET_STAMINA_RECHARGE_MULTIPLIER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetStaminaRechargeMultiplier = function (ped) {
  return _in(0xe7687eb2, 0xf634abf0, ped, _r, _rf);
};

/**
 * _GET_TOTAL_PED_DAMAGE_FROM_AI
 * _GET_WA*
 *
 * @param {number} ped
 * @return {number}
 */
global.GetTotalPedDamageFromAi = function (ped) {
  return _in(0x92c8eaca, 0x29f6bed6, ped, _r, _rf);
};

/**
 * _GET_TRANSPORT_PED_IS_SEATED_ON
 *
 * @param {number} ped
 * @return {number}
 */
global.GetTransportPedIsSeatedOn = function (ped) {
  return _in(0x849bd6c6, 0x314793d0, ped, _r, _ri);
};

/**
 * _GET_VEHICLE_DRAFT_HORSE_IS_ATTACHED_TO
 *
 * @param {number} horse
 * @return {number}
 */
global.GetVehicleDraftHorseIsAttachedTo = function (horse) {
  return _in(0xe4770da1, 0xb8ff4fd1, horse, _r, _ri);
};

/**
 * _GIVE_PED_HASH_COMMAND
 * Ped Command Hash are special commands, that can be activated to change conditional anim variations or trigger transitions between conditional anims.
 * https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
 *
 * @param {number} ped
 * @param {number} commandHash
 * @param {number} activationDuration
 * @return {void}
 */
global.GivePedHashCommand = function (ped, commandHash, activationDuration) {
  return _in(0xd65fdc68, 0x6a031c83, ped, _ch(commandHash), _fv(activationDuration));
};

/**
 * _GIVE_PED_SCENARIO_PROP
 *
 * @param {number} ped
 * @param {number} object
 * @param {string | number} conditionalAnim
 * @param {string | number} p3
 * @param {string | number} p4
 * @param {boolean} p5
 * @return {boolean}
 */
global.GivePedScenarioProp = function (ped, object, conditionalAnim, p3, p4, p5) {
  return _in(0x3bbdd614, 0x3ff16f98, ped, object, _ts(conditionalAnim), _ts(p3), _ts(p4), p5, _r);
};

/**
 * _GIVE_PED_SCENARIO_PROP_DYNAMIC
 * Only used in SP R* Script rcm_jack2
 *
 * @param {number} ped
 * @param {number} object
 * @param {string | number} p2
 * @param {string | number} p3
 * @param {boolean} p4
 * @return {boolean}
 */
global.GivePedScenarioPropDynamic = function (ped, object, p2, p3, p4) {
  return _in(0xa0774e38, 0x8ce4a679, ped, object, _ts(p2), _ts(p3), p4, _r);
};

/**
 * _HAS_META_PED_ASSET_LOADED
 *
 * @param {number} requestId
 * @return {boolean}
 */
global.HasMetaPedAssetLoaded = function (requestId) {
  return _in(0xb0b2c6d1, 0x70b0e8e5, requestId, _r);
};

/**
 * _HAS_META_PED_OUTFIT_LOADED
 *
 * @param {number} requestId
 * @return {boolean}
 */
global.HasMetaPedOutfitLoaded = function (requestId) {
  return _in(0x61043837, 0x5e5d1801, requestId, _r);
};

/**
 * _HAS_META_PED_REQUEST_LOADED
 *
 * @param {number} requestId
 * @return {boolean}
 */
global.HasMetaPedRequestLoaded = function (requestId) {
  return _in(0xc0940ac8, 0x58c1e126, requestId, _r);
};

/**
 * _HAS_PED_BEEN_SHOVED_RECENTLY
 *
 * @param {number} ped
 * @param {number} ms
 * @return {boolean}
 */
global.HasPedBeenShovedRecently = function (ped, ms) {
  return _in(0x29fce825, 0x613fefca, ped, ms, _r);
};

/**
 * _HAS_PED_EMOTIONAL_PRESET_LOADED
 * See _REQUEST_PED_EMOTIONAL_PRESET
 *
 * @param {number} ped
 * @param {string | number} name
 * @return {boolean}
 */
global.HasPedEmotionalPresetLoaded = function (ped, name) {
  return _in(0xde3904b2, 0x2695d9f9, ped, _ts(name), _r);
};

/**
 * _HAS_PED_TAKEN_GORE_DAMAGE
 * limb: 3 = Left Hand, 4 = Left Arm, 6 = Right Hand, 7 = Right Arm, 9 = Left Foot, 10 = Left Leg, 12 = Right Foot, 13 = Right Leg, 37 = Head
 *
 * @param {number} ped
 * @param {number} limb
 * @return {boolean}
 */
global.HasPedTakenGoreDamage = function (ped, limb) {
  return _in(0xba208a8d, 0x6399a3ac, ped, limb, _r);
};

/**
 * _HORSE_AGITATE
 * _H* - _I*
 *
 * @param {number} mount
 * @param {boolean} kickOffRider
 * @return {void}
 */
global.HorseAgitate = function (mount, kickOffRider) {
  return _in(0xbae08f00, 0x021bffb2, mount, kickOffRider);
};

/**
 * _INCAPACITATED_REVIVE
 *
 * @param {number} ped
 * @param {number} ped2
 * @return {void}
 */
global.IncapacitatedRevive = function (ped, ped2) {
  return _in(0xf6262491, 0xc7704a63, ped, ped2);
};

/**
 * _IS_ANIMAL_CONTROLLED_BY_A_PLAYER
 * Returns true only if it's a player ped and an animal as well.
 * _IS_ANY_* - _IS_CONTROL_*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsAnimalControlledByAPlayer = function (ped) {
  return _in(0x0e2f4351, 0x6f998269, ped, _r);
};

/**
 * _IS_ANIMAL_INTERACTION_RUNNING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsAnimalInteractionRunning = function (ped) {
  return _in(0x7fc84e85, 0xd98f063d, ped, _r);
};

/**
 * _IS_META_PED_ASSET_VALID
 *
 * @param {number} requestId
 * @return {boolean}
 */
global.IsMetaPedAssetValid = function (requestId) {
  return _in(0x93ffd92f, 0x05ec32fd, requestId, _r);
};

/**
 * _IS_META_PED_FISH
 * Returns true if given ped is a fish.
 * _IS_ME* - _IS_MO*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsMetaPedFish = function (ped) {
  return _in(0x118d476a, 0x6f1a13f1, ped, _r);
};

/**
 * _IS_META_PED_OUTFIT_EQUIPPED
 * Used in script function HORSE_IS_META_PED_OUTFIT_SADDLE_EQUIPPED
 *
 * @param {number} ped
 * @param {number} outfit
 * @return {boolean}
 */
global.IsMetaPedOutfitEquipped = function (ped, outfit) {
  return _in(0x98082246, 0x107a6acf, ped, _ch(outfit), _r);
};

/**
 * _IS_META_PED_OUTFIT_REQUEST_VALID
 *
 * @param {number} requestId
 * @return {boolean}
 */
global.IsMetaPedOutfitRequestValid = function (requestId) {
  return _in(0xb25e57fc, 0x8e37114d, requestId, _r);
};

/**
 * _IS_META_PED_REQUEST_VALID
 *
 * @param {number} requestId
 * @return {boolean}
 */
global.IsMetaPedRequestValid = function (requestId) {
  return _in(0x43e4da46, 0x9541a9c9, requestId, _r);
};

/**
 * _IS_META_PED_USING_COMPONENT
 *
 * @param {number} ped
 * @param {number} component
 * @return {boolean}
 */
global.IsMetaPedUsingComponent = function (ped, component) {
  return _in(0xfb4891bd, 0x7578cdc1, ped, _ch(component), _r);
};

/**
 * _IS_MOUNT_SEAT_FREE
 *
 * @param {number} mount
 * @param {number} seat
 * @return {boolean}
 */
global.IsMountSeatFree = function (mount, seat) {
  return _in(0xaab0fe20, 0x2e9fc9f0, mount, seat, _r);
};

/**
 * _IS_PED_ACTION_DISABLE_FLAG_ENABLED
 *
 * @param {number} ped
 * @param {number} actionDisableFlag
 * @return {boolean}
 */
global.IsPedActionDisableFlagEnabled = function (ped, actionDisableFlag) {
  return _in(0xb346c85d, 0x49cc998e, ped, actionDisableFlag, _r);
};

/**
 * _IS_PED_CHILD
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedChild = function (ped) {
  return _in(0x13777200, 0x0daf42c5, ped, _r);
};

/**
 * _IS_PED_CLIMBING_LADDER
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedClimbingLadder = function (ped) {
  return _in(0x59643424, 0xb68d52b5, ped, _r);
};

/**
 * _IS_PED_COWERING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedCowering = function (ped) {
  return _in(0xb086c8c0, 0xf5701d14, ped, _r);
};

/**
 * _IS_PED_DOING_SCENARIO_TRANSITION
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedDoingScenarioTransition = function (ped) {
  return _in(0xc488b8c0, 0xe52560d8, ped, _r);
};

/**
 * _IS_PED_DRAGGING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedDragging = function (ped) {
  return _in(0x226cf9b1, 0x59e38f42, ped, _r);
};

/**
 * _IS_PED_DRUNK
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedDrunk = function (ped) {
  return _in(0x50f124e6, 0xef188b22, ped, _r);
};

/**
 * _IS_PED_GROUP_LEADER
 *
 * @param {number} ped
 * @param {number} groupId
 * @return {boolean}
 */
global.IsPedGroupLeader = function (ped, groupId) {
  return _in(0x878b6896, 0x0c1c2a35, ped, groupId, _r);
};

/**
 * _IS_PED_INTIMIDATED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedIntimidated = function (ped) {
  return _in(0x57779b55, 0xb83e2bea, ped, _r);
};

/**
 * _IS_PED_INVESTIGATING
 * _IS_PED_IN*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInvestigating = function (ped) {
  return _in(0x7583a9d3, 0x5248b83f, ped, _r);
};

/**
 * _IS_PED_IN_POINT
 * If returned true: There are enemy peds near friendly turn in ped. Going to aggro.
 * If returned false: Moving back to idle as there aren't any remaining enemy peds near ped
 * _IS_PED_IN_*
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {boolean} p5
 * @return {boolean}
 */
global.IsPedInPoint = function (ped, x, y, z, radius, p5) {
  return _in(0x078076ab, 0x50fb117f, ped, _fv(x), _fv(y), _fv(z), _fv(radius), p5, _r);
};

/**
 * _IS_PED_LEADING_ANY_GROUP
 * _IS_PED_L* - _IS_PED_M*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedLeadingAnyGroup = function (ped) {
  return _in(0x917760cf, 0xe7a0e0f1, ped, _r);
};

/**
 * _IS_PED_MODEL_SUPPRESSED
 *
 * @param {number} model
 * @return {boolean}
 */
global.IsPedModelSuppressed = function (model) {
  return _in(0xaa9f048d, 0xcf69b6dc, _ch(model), _r);
};

/**
 * _IS_PED_QUEUED_FOR_DELETION
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedQueuedForDeletion = function (ped) {
  return _in(0x8d9bfce3, 0x352de47f, ped, _r);
};

/**
 * _IS_PED_SLIDING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedSliding = function (ped) {
  return _in(0xd6740e14, 0xe4cefc0b, ped, _r);
};

/**
 * _IS_PED_TARGET_ACTION_DISABLE_FLAG_ENABLED
 *
 * @param {number} ped
 * @param {number} actionDisableFlag
 * @return {boolean}
 */
global.IsPedTargetActionDisableFlagEnabled = function (ped, actionDisableFlag) {
  return _in(0x02aa2096, 0xfe00f3e1, ped, actionDisableFlag, _r);
};

/**
 * _IS_PED_USING_ACTION_MODE_2
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedUsingActionMode_2 = function (ped) {
  return _in(0xebb208d6, 0xae712c03, ped, _r);
};

/**
 * _IS_PED_VISIBILITY_TRACKED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedVisibilityTracked = function (ped) {
  return _in(0x5102307c, 0xe88798eb, ped, _r);
};

/**
 * _IS_SCENARIO_BLOCKING_AREA_VALID
 *
 * @param {any} p0
 * @return {boolean}
 */
global.IsScenarioBlockingAreaValid = function (p0) {
  return _in(0x91a5f9cb, 0xebb9d936, p0, _r);
};

/**
 * _IS_TARGET
 *
 * @param {number} ped
 * @param {number} targetPed
 * @return {boolean}
 */
global.IsTarget = function (ped, targetPed) {
  return _in(0x6e5cbcb3, 0x941d7d08, ped, targetPed, _r);
};

/**
 * _IS_TEXTURE_VALID
 *
 * @param {number} textureId
 * @return {boolean}
 */
global.IsTextureValid = function (textureId) {
  return _in(0x31dc8d3f, 0x216d8509, textureId, _r);
};

/**
 * _IS_THIS_MODEL_A_HORSE
 *
 * @param {number} model
 * @return {boolean}
 */
global.IsThisModelAHorse = function (model) {
  return _in(0x772a1969, 0xf649e902, _ch(model), _r);
};

/**
 * _IS_TRACKED_PED_VISIBILITY_PERCENTAGE_NOT_LESS_THAN
 *
 * @param {number} ped
 * @param {number} percent
 * @return {boolean}
 */
global.IsTrackedPedVisibilityPercentageNotLessThan = function (ped, percent) {
  return _in(0x164cecc5, 0x9e70df86, ped, _fv(percent), _r);
};

/**
 * _IS_USING_SLIPSTREAM
 * _IS_TRACKED_* - IS_V*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsUsingSlipstream = function (ped) {
  return _in(0xaf61b3cd, 0x8c3b82c3, ped, _r);
};

/**
 * _PED_CLEAR_LOCO_MOTION
 *
 * @param {number} ped
 * @return {void}
 */
global.PedClearLocoMotion = function (ped) {
  return _in(0x935cf6e4, 0x2baf7f4d, ped);
};

/**
 * _PED_DUELING_DID_PLAYER_HEADSHOT_OPPONENT
 *
 * @param {number} ped
 * @return {boolean}
 */
global.PedDuelingDidPlayerHeadshotOpponent = function (ped) {
  return _in(0xbd6b242b, 0x8bd5543a, ped, _r);
};

/**
 * _PED_EMOTIONAL_PRESET_LOCO_MOTION
 * target: 0 affects everyone
 * duration: -1 indefinite
 * flag: always 4 in R* Scripts
 *
 * @param {number} ped
 * @param {string | number} presetName
 * @param {number} targetPed
 * @param {number} duration
 * @param {number} flag
 * @return {void}
 */
global.PedEmotionalPresetLocoMotion = function (ped, presetName, targetPed, duration, flag) {
  return _in(0xaab050da, 0x48b57978, ped, _ts(presetName), targetPed, duration, flag);
};

/**
 * _PED_WAS_KILLED_BY_HEADSHOT
 *
 * @param {number} ped
 * @return {boolean}
 */
global.PedWasKilledByHeadshot = function (ped) {
  return _in(0x06fa94c8, 0x35787c64, ped, _r);
};

/**
 * _REFRESH_LOOT_STATE_FOR_PED
 * Returns loot state
 * enum eLootState
 * {
 *   LAP_NONE,
 *   LAP_RESUMING,
 *   LAP_GETTING_ON_FOOT,
 *   LAP_DISTANT_NAV,
 *   LAP_CHOOSING_ACTION,
 *   LAP_APPROACHING,
 *   LAP_ENTERING,
 *   LAP_LOOTING,
 *   LAP_EXITING
 * };
 * 
 * _POSSE_* - _REGISTER_HATED*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p3
 * @param {number} p4
 * @return {[number, Ped]}
 */
global.RefreshLootStateForPed = function (ped, p1, p3, p4) {
  return _in(0x5463c962, 0xbc7777c3, ped, p1, _i, p3, p4, _r, _ri);
};

/**
 * _REFRESH_META_PED_SHOP_ITEMS
 * p1 is always 1
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.RefreshMetaPedShopItems = function (ped, p1) {
  return _in(0x59bd177a, 0x1a48600a, ped, p1);
};

/**
 * _REGISTER_HATED_TARGETS_IN_AREA
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {void}
 */
global.RegisterHatedTargetsInArea = function (ped, x, y, z, radius) {
  return _in(0xd8736efd, 0xa38edc5c, ped, _fv(x), _fv(y), _fv(z), _fv(radius));
};

/**
 * _RELEASE_META_PED_ASSET_REQUEST
 *
 * @param {number} requestId
 * @return {void}
 */
global.ReleaseMetaPedAssetRequest = function (requestId) {
  return _in(0x13e7320c, 0x762f0477, requestId);
};

/**
 * _RELEASE_META_PED_OUTFIT_REQUEST
 *
 * @param {number} requestId
 * @return {void}
 */
global.ReleaseMetaPedOutfitRequest = function (requestId) {
  return _in(0x4592b8b9, 0xb0ef5f48, requestId);
};

/**
 * _RELEASE_META_PED_REQUEST
 *
 * @param {number} requestId
 * @return {void}
 */
global.ReleaseMetaPedRequest = function (requestId) {
  return _in(0x3972f78a, 0x78b5d9df, requestId);
};

/**
 * _RELEASE_TEXTURE
 * Removes a texture created by 0xC5E7204F322E49EB.
 *
 * @param {number} textureId
 * @return {void}
 */
global.ReleaseTexture = function (textureId) {
  return _in(0x6befaa90, 0x7b076859, textureId);
};

/**
 * _REMOVE_GRAVITY_WELL
 * Removes gravity well by handle returned from 0x4F5EBE70081E5A20
 *
 * @param {number} handle
 * @return {void}
 */
global.RemoveGravityWell = function (handle) {
  return _in(0x87247bc6, 0x0b60bed8, handle);
};

/**
 * _REMOVE_MOTION_TYPE_ASSET
 *
 * @param {number} nameHash
 * @param {number} ped
 * @return {void}
 */
global.RemoveMotionTypeAsset = function (nameHash, ped) {
  return _in(0xde7b2b41, 0x44906cdf, _ch(nameHash), ped);
};

/**
 * _REMOVE_PED_BLACKBOARD_BOOL
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @return {void}
 */
global.RemovePedBlackboardBool = function (ped, variableName) {
  return _in(0xa6f67bec, 0x53379a32, ped, _ts(variableName));
};

/**
 * _REMOVE_PED_BLACKBOARD_FLOAT
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @return {void}
 */
global.RemovePedBlackboardFloat = function (ped, variableName) {
  return _in(0x411189e5, 0x1b8020ba, ped, _ts(variableName));
};

/**
 * _REMOVE_PED_BLACKBOARD_HASH
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @return {void}
 */
global.RemovePedBlackboardHash = function (ped, variableName) {
  return _in(0x0e173786, 0x42156790, ped, _ts(variableName));
};

/**
 * _REMOVE_PED_BLACKBOARD_INT
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @return {void}
 */
global.RemovePedBlackboardInt = function (ped, variableName) {
  return _in(0x81b75428, 0xa7813e67, ped, _ts(variableName));
};

/**
 * _REMOVE_PED_EMOTIONAL_PRESET
 * See _REQUEST_PED_EMOTIONAL_PRESET
 *
 * @param {number} ped
 * @param {string | number} name
 * @return {void}
 */
global.RemovePedEmotionalPreset = function (ped, name) {
  return _in(0xfc3bab18, 0x01a8255a, ped, _ts(name));
};

/**
 * _REMOVE_PED_FROM_MOUNT
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.RemovePedFromMount = function (ped, p1, p2) {
  return _in(0x5337b721, 0xc51883a9, ped, p1, p2);
};

/**
 * _REMOVE_PED_OVERLAY
 *
 * @param {number} textureId
 * @param {number} overlayId
 * @return {void}
 */
global.RemovePedOverlay = function (textureId, overlayId) {
  return _in(0x96c349de, 0x04c49011, textureId, overlayId);
};

/**
 * _REMOVE_PED_PROP
 *
 * @param {number} ped
 * @param {string | number} propName
 * @return {void}
 */
global.RemovePedProp = function (ped, propName) {
  return _in(0x3a507530, 0x42b6891b, ped, _ts(propName));
};

/**
 * _REMOVE_PED_STAY_OUT_VOLUME
 *
 * @param {number} ped
 * @param {number} volume
 * @return {boolean}
 */
global.RemovePedStayOutVolume = function (ped, volume) {
  return _in(0x0cab404c, 0xd2db41f5, ped, volume, _r);
};

/**
 * _REMOVE_PED_SUBSCRIBE_TO_LEGENDARY_BLIPS
 *
 * @param {number} ped
 * @return {boolean}
 */
global.RemovePedSubscribeToLegendaryBlips = function (ped) {
  return _in(0x011a42fd, 0x923d41ca, ped, _r);
};

/**
 * _REMOVE_SHOP_ITEM_FROM_PED
 * Directly removes a shop item component from a ped
 * Params: p2 and p3 are always 0
 *
 * @param {number} ped
 * @param {number} componentHash
 * @param {number} p2
 * @param {boolean} p3
 * @return {void}
 */
global.RemoveShopItemFromPed = function (ped, componentHash, p2, p3) {
  return _in(0x0d7ffa1b, 0x2f69ed82, ped, _ch(componentHash), p2, p3);
};

/**
 * _REMOVE_TARGET
 *
 * @param {number} ped
 * @param {number} targetPed
 * @return {void}
 */
global.RemoveTarget = function (ped, targetPed) {
  return _in(0x4707e9c2, 0x3d8ca3fe, ped, targetPed);
};

/**
 * _REQUEST_META_PED
 * Returns requestId
 * Params: p1 = 1 in R* Scripts (Used in SP only)
 *
 * @param {number} model
 * @param {number} p1
 * @return {number}
 */
global.RequestMetaPed = function (model, p1) {
  return _in(0xf97c34c3, 0x3487d569, _ch(model), p1, _r, _ri);
};

/**
 * _REQUEST_META_PED_ASSET_BUNDLE
 * Returns requestId
 * Params: p1 = 1 in R* Scripts
 *
 * @param {number} asset
 * @param {number} p1
 * @return {number}
 */
global.RequestMetaPedAssetBundle = function (asset, p1) {
  return _in(0x91fe941f, 0x9fcfb702, _ch(asset), p1, _r, _ri);
};

/**
 * _REQUEST_META_PED_COMPONENT
 *
 * @param {number} metaPedType
 * @param {any} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {any}
 */
global.RequestMetaPedComponent = function (metaPedType, p1, p2, p3, p4) {
  return _in(0xf6d9e1f3, 0x560cbf8e, metaPedType, p1, p2, p3, p4, _r);
};

/**
 * _REQUEST_META_PED_OUTFIT
 * https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
 * Returns requestId, to be used with 0x74F512E29CB717E2
 *
 * @param {number} model
 * @param {number} outfit
 * @return {number}
 */
global.RequestMetaPedOutfit = function (model, outfit) {
  return _in(0x13154a76, 0xce0cf9ab, _ch(model), _ch(outfit), _r, _ri);
};

/**
 * _REQUEST_MOTION_TYPE_ASSET
 *
 * @param {number} nameHash
 * @param {number} ped
 * @return {void}
 */
global.RequestMotionTypeAsset = function (nameHash, ped) {
  return _in(0xf7ea250b, 0x9a919e03, _ch(nameHash), ped);
};

/**
 * _REQUEST_PED_EMOTIONAL_PRESET
 * For more information, see common:/data/emotional_presets.meta
 *
 * @param {number} ped
 * @param {string | number} name
 * @return {void}
 */
global.RequestPedEmotionalPreset = function (ped, name) {
  return _in(0x5c3c55ea, 0xad19915f, ped, _ts(name));
};

/**
 * _REQUEST_PED_FACIAL_MOOD_THIS_FRAME
 * mood: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/fwFacialAnimRequest__Mood
 * Params: p2 = 6 in R* Scripts
 *
 * @param {number} ped
 * @param {number} mood
 * @param {number} p2
 * @return {void}
 */
global.RequestPedFacialMoodThisFrame = function (ped, mood, p2) {
  return _in(0x8b3b71c8, 0x0a29a4bb, ped, _ch(mood), p2);
};

/**
 * _REQUEST_PED_FOR_SCENARIO_TYPE
 *
 * @param {number} ped
 * @param {number} object
 * @param {string | number} p2
 * @param {number} scenarioType
 * @param {string | number} p4
 * @param {boolean} p5
 * @return {any}
 */
global.RequestPedForScenarioType = function (ped, object, p2, scenarioType, p4, p5) {
  return _in(0xbded916a, 0x9f9b0604, ped, object, _ts(p2), _ch(scenarioType), _ts(p4), p5, _r);
};

/**
 * _REQUEST_PED_GETUP_ANIMATION
 * Known get up animation types: REAR, FRONT
 *
 * @param {number} ped
 * @param {string | number} getUpType
 * @return {void}
 */
global.RequestPedGetupAnimation = function (ped, getUpType) {
  return _in(0xeaa8242c, 0x8479c27d, ped, _ts(getUpType));
};

/**
 * _REQUEST_PROP_SCENARIO_PED
 *
 * @param {number} ped
 * @param {number} object
 * @param {string | number} p2
 * @param {string | number} p3
 * @param {string | number} p4
 * @param {boolean} p5
 * @return {any}
 */
global.RequestPropScenarioPed = function (ped, object, p2, p3, p4, p5) {
  return _in(0xbec65c60, 0x49b3219d, ped, object, _ts(p2), _ts(p3), _ts(p4), p5, _r);
};

/**
 * _REQUEST_TEXTURE
 * Creates a texture override data for ped and returns it's index.
 * So you can replace any texture of any ped's component.
 * Also, you can add overlays on it, such as aging, lipstick and more.
 * Textures can be reused by multiple peds at once.
 * You can keep only 32 textures at once(including other peds).
 * 
 * https://github.com/femga/rdr3_discoveries/blob/master/clothes/change_overlays_script.lua
 * materialHash: https://github.com/femga/rdr3_discoveries/blob/master/clothes/cloth_drawable_albedo_normal_material_TEMPORARY.lua
 *
 * @param {number} albedoHash
 * @param {number} normalHash
 * @param {number} materialHash
 * @return {number}
 */
global.RequestTexture = function (albedoHash, normalHash, materialHash) {
  return _in(0xc5e7204f, 0x322e49eb, _ch(albedoHash), _ch(normalHash), _ch(materialHash), _r, _ri);
};

/**
 * _RESERVE_AMBIENT_PEDS
 *
 * @param {number} numPeds
 * @return {void}
 */
global.ReserveAmbientPeds = function (numPeds) {
  return _in(0xed9582b3, 0xda8f02b4, numPeds);
};

/**
 * _RESERVE_AMBIENT_PEDS_TOTAL
 *
 * @param {number} numPeds
 * @return {void}
 */
global.ReserveAmbientPedsTotal = function (numPeds) {
  return _in(0xf008e0ba, 0x1fe1d644, numPeds);
};

/**
 * _RESET_PED_COMPONENTS
 *
 * @param {number} ped
 * @return {void}
 */
global.ResetPedComponents = function (ped) {
  return _in(0x0bfa1bd4, 0x65cdfefd, ped);
};

/**
 * _RESET_PED_INCAPACITATION_BLEED_OUT_DURATION
 *
 * @param {number} ped
 * @return {void}
 */
global.ResetPedIncapacitationBleedOutDuration = function (ped) {
  return _in(0x4b9668db, 0x91dc39b8, ped);
};

/**
 * _RESET_PED_LADDER_MOVEMENT_SPEED_MODIFIER
 *
 * @param {number} ped
 * @return {void}
 */
global.ResetPedLadderMovementSpeedModifier = function (ped) {
  return _in(0x801917e7, 0xd7bce418, ped);
};

/**
 * _RESET_PED_TEXTURE
 * Removes every texture layer but the base layer
 * Clearing texture's data: setting params to default values, but keep overlays.
 *
 * @param {number} textureId
 * @return {void}
 */
global.ResetPedTexture = function (textureId) {
  return _in(0x8472a178, 0x9478f82f, textureId);
};

/**
 * _RESTORE_PED_STAMINA
 * 0.0 <= stamina <= 100.0
 *
 * @param {number} ped
 * @param {number} stamina
 * @return {void}
 */
global.RestorePedStamina = function (ped, stamina) {
  return _in(0x675680d0, 0x89bfa21f, ped, _fv(stamina));
};

/**
 * _SET_ACCURACY_AGAINST_LOCAL_PLAYER_MODIFIER
 *
 * @param {number} ped
 * @param {number} modifier
 * @return {void}
 */
global.SetAccuracyAgainstLocalPlayerModifier = function (ped, modifier) {
  return _in(0xc2266aa6, 0x17668ad3, ped, _fv(modifier));
};

/**
 * _SET_AMBIENT_ANIMAL_DENSITY_MULTIPLIER_THIS_FRAME
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetAmbientAnimalDensityMultiplierThisFrame = function (multiplier) {
  return _in(0xc0258742, 0xb034dfaf, _fv(multiplier));
};

/**
 * _SET_AMBIENT_HUMAN_DENSITY_MULTIPLIER_THIS_FRAME
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetAmbientHumanDensityMultiplierThisFrame = function (multiplier) {
  return _in(0xba0980b5, 0xc0a11924, _fv(multiplier));
};

/**
 * _SET_AMBIENT_PED_DENSITY_MULTIPLIER_THIS_FRAME
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetAmbientPedDensityMultiplierThisFrame = function (multiplier) {
  return _in(0xab0d553f, 0xe20a6e25, _fv(multiplier));
};

/**
 * _SET_CHAR_EXPRESSION
 * Sets MetaPedExpression at index specified. Morphs components, such as changing body size or facial features.
 * 
 * Note: You have to update the ped's variation (using 0xCC8CA3E88256E58F) after calling this native
 * 
 * index = MetaPedExpression IDs
 * List of face features: https://pastebin.com/9jb88FXW
 * Full list of MetaPedExpressions: https://pastebin.com/Ld76cAn7
 * value: -1.0 to 1.0 (values beyond this likely won't sync to other clients)
 * 
 * This native also allows you to change a horse's gender.
 * 
 * Old name: _SET_PED_FACE_FEATURE
 *
 * @param {number} ped
 * @param {number} index
 * @param {number} value
 * @return {void}
 */
global.SetCharExpression = function (ped, index, value) {
  return _in(0x5653ab26, 0xc82938cf, ped, index, _fv(value));
};

/**
 * _SET_CURRENT_DEFENSE_AGAINST_PLAYERS_MODIFIER
 *
 * @param {number} horse
 * @param {number} modifier
 * @return {void}
 */
global.SetCurrentDefenseAgainstPlayersModifier = function (horse, modifier) {
  return _in(0x069eddf1, 0xfd4deb0a, horse, _fv(modifier));
};

/**
 * _SET_DEFENSE_MODIFIER_FOR_PED
 *
 * @param {number} ped
 * @param {number} modifier
 * @return {void}
 */
global.SetDefenseModifierForPed = function (ped, modifier) {
  return _in(0x9b6808ec, 0x46be849b, ped, _fv(modifier));
};

/**
 * _SET_FORMATION_AUTO_ASSIGN_POSITION
 *
 * @param {number} groupId
 * @param {boolean} toggle
 * @return {void}
 */
global.SetFormationAutoAssignPosition = function (groupId, toggle) {
  return _in(0x478f6b99, 0x20446ce2, groupId, toggle);
};

/**
 * _SET_HEALTH_RECHARGE_MULTIPLIER
 *
 * @param {number} ped
 * @param {number} multiplier
 * @return {void}
 */
global.SetHealthRechargeMultiplier = function (ped, multiplier) {
  return _in(0xde1b1907, 0xa83a1550, ped, multiplier);
};

/**
 * _SET_INTERACTION_LOCKON_FLAG
 *
 * @param {number} ped
 * @param {number} player
 * @param {number} flag
 * @param {boolean} enable
 * @return {void}
 */
global.SetInteractionLockonFlag = function (ped, player, flag, enable) {
  return _in(0xfeca2081, 0xf61ed2cd, ped, player, flag, enable);
};

/**
 * _SET_META_PED_TAG
 * Use to apply metaped player components
 * Replaces asset, alternatively you can remove assets using REMOVE_TAG_FROM_META_PED
 *
 * @param {number} ped
 * @param {number} drawable
 * @param {number} albedo
 * @param {number} normal
 * @param {number} material
 * @param {number} palette
 * @param {number} tint0
 * @param {number} tint1
 * @param {number} tint2
 * @return {void}
 */
global.SetMetaPedTag = function (ped, drawable, albedo, normal, material, palette, tint0, tint1, tint2) {
  return _in(0xbc6df00d, 0x7a4a6819, ped, _ch(drawable), _ch(albedo), _ch(normal), _ch(material), _ch(palette), tint0, tint1, tint2);
};

/**
 * _SET_META_PED_WEARINESS
 * Sets ped eye redness, weariness: 0.f to 1.f
 *
 * @param {number} ped
 * @param {number} weariness
 * @return {void}
 */
global.SetMetaPedWeariness = function (ped, weariness) {
  return _in(0x314c5465, 0x195f3b30, ped, _fv(weariness));
};

/**
 * _SET_MIN_PED_HEALTH_THRESHOLD
 *
 * @param {number} ped
 * @param {number} healthAmount
 * @return {void}
 */
global.SetMinPedHealthThreshold = function (ped, healthAmount) {
  return _in(0x7883aa80, 0x9df43d98, ped, _fv(healthAmount));
};

/**
 * _SET_MOUNT_BONDING_LEVEL
 *
 * @param {number} ped
 * @param {number} bondingLevel
 * @return {void}
 */
global.SetMountBondingLevel = function (ped, bondingLevel) {
  return _in(0xa6989999, 0x5997a63b, ped, bondingLevel);
};

/**
 * _SET_MOUNT_SECURITY_ENABLED
 * Note: this native was added in build 1232.40
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetMountSecurityEnabled = function (ped, toggle) {
  return _in(0x11e6b962, 0x9c46d6ec, ped, toggle);
};

/**
 * _SET_PED_ACTION_DISABLE_FLAG
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ACTION_DISABLE_FLAGS
 *
 * @param {number} ped
 * @param {number} actionDisableFlag
 * @return {void}
 */
global.SetPedActionDisableFlag = function (ped, actionDisableFlag) {
  return _in(0xb8de69d9, 0x473b7593, ped, actionDisableFlag);
};

/**
 * _SET_PED_ACTIVATE_WOUND_EFFECT
 * bloodFountainPressure: visible effect from 0.0 till 20.0
 * yaw: visible effect from -3.0 till 3.0
 * bloodFountainDirection: 1.0 left side, -1.0 right side
 * bloodFountainPulse: from 0.1 (low) till 1.0 (fast)
 * make blood fountain from your stomach: _SET_PED_ACTIVATE_WOUND_EFFECT(ped, unk, 2, 14411, 0.0, 0.1, 0.0, 0.0, 3.0, -1.0, 1.0)
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} boneId
 * @param {number} moveWoundLeftRight
 * @param {number} bloodFountainPressure
 * @param {number} yaw
 * @param {number} bloodFountainDirection
 * @param {number} bloodFountainPulse
 * @param {number} p8
 * @param {number} p9
 * @return {void}
 */
global.SetPedActivateWoundEffect = function (ped, p1, boneId, moveWoundLeftRight, bloodFountainPressure, yaw, bloodFountainDirection, bloodFountainPulse, p8, p9) {
  return _in(0xffd54d9f, 0xe71b966a, ped, p1, boneId, _fv(moveWoundLeftRight), _fv(bloodFountainPressure), _fv(yaw), _fv(bloodFountainDirection), _fv(bloodFountainPulse), _fv(p8), _fv(p9));
};

/**
 * _SET_PED_ACTIVE_PLAYER_TYPE
 * Params: hash - ARTHUR or JOHN
 * _SET_PED_(A-D)*
 *
 * @param {number} ped
 * @param {number} playerType
 * @return {void}
 */
global.SetPedActivePlayerType = function (ped, playerType) {
  return _in(0xb285ad0e, 0xc870b2df, ped, _ch(playerType));
};

/**
 * _SET_PED_ANIMAL_DETECTION_MODIFIER
 *
 * @param {number} ped
 * @param {number} modifier
 * @return {void}
 */
global.SetPedAnimalDetectionModifier = function (ped, modifier) {
  return _in(0x43ca928e, 0x892cfdb8, ped, _fv(modifier));
};

/**
 * _SET_PED_BEAT_MULTIPLIER
 * NET_FETCH_CLIENT_UPDATE_PED_FIGHT_PROFICIENCY: Changing parry multiplier for ped
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.SetPedBeatMultiplier = function (ped, p1) {
  return _in(0x6dbf2d78, 0x709ad70b, ped, _fv(p1));
};

/**
 * _SET_PED_BLACKBOARD_BOOL
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @param {boolean} value
 * @param {number} removeTimer
 * @return {void}
 */
global.SetPedBlackboardBool = function (ped, variableName, value, removeTimer) {
  return _in(0xcb9401f9, 0x18cb0f75, ped, _ts(variableName), value, removeTimer);
};

/**
 * _SET_PED_BLACKBOARD_FLOAT
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @param {number} value
 * @param {number} removeTimer
 * @return {void}
 */
global.SetPedBlackboardFloat = function (ped, variableName, value, removeTimer) {
  return _in(0x437c08db, 0x4febe2bd, ped, _ts(variableName), _fv(value), removeTimer);
};

/**
 * _SET_PED_BLACKBOARD_HASH
 * p1:
 * BodyPartChained
 * OverloadMostInjuredBodyPart
 * 
 * p2:
 * LeftLeg
 * Legs
 * RightArm
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @param {string | number} value
 * @param {number} removeTimer
 * @return {void}
 */
global.SetPedBlackboardHash = function (ped, variableName, value, removeTimer) {
  return _in(0xa762c9d6, 0xcf165e0d, ped, _ts(variableName), _ts(value), removeTimer);
};

/**
 * _SET_PED_BLACKBOARD_INT
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/BLACKBOARDS
 * Blackboard natives allow you to apply and check certain data to/for peds.
 * Blackboard bools, floats and strings are subdivided into 6 sections: "all", "animation", "any", "code", "global" and "script"
 * Most changes are only visible for "script" blackboards, some "script" blackboards change ped motions
 * "removeTimer" is self-removal timer, can be "-1" so your data will not be removed by the game (forever); 100 = 1 second
 *
 * @param {number} ped
 * @param {string | number} variableName
 * @param {number} value
 * @param {number} removeTimer
 * @return {void}
 */
global.SetPedBlackboardInt = function (ped, variableName, value, removeTimer) {
  return _in(0x5f53010c, 0x4c3f6baf, ped, _ts(variableName), value, removeTimer);
};

/**
 * _SET_PED_BLEEDOUT_PROFILE
 * Bleedout profiles:
 * Animal_FastBleedout
 * Animal_Generic
 * Human_FastBleedout
 * Human_Generic
 * Human_Mission
 * 
 * For more information, see common/data/ai/peddamageinfo.meta
 *
 * @param {number} ped
 * @param {number} bleedoutProfile
 * @return {void}
 */
global.SetPedBleedoutProfile = function (ped, bleedoutProfile) {
  return _in(0x66c04771, 0x9b0e80e1, ped, _ch(bleedoutProfile));
};

/**
 * _SET_PED_BRAWLING_STYLE
 * brawlingStyle:
 * enum eBrawlingStyle : Hash
 * {
 *   BS_AI = 0x802C604D,
 *   BS_AI_BARBRAWL = 0x4FF5F0C7,
 *   BS_AI_DEFENSIVE = 0xD888F2FD,
 *   BS_AI_MOONSHINE_BARBRAWL = 0xA01B433A,
 *   BS_ALLIGATOR = 0x7A5548ED,
 *   BS_ALLIGATOR_LARGE = 0x368EC7CB,
 *   BS_ALLY = 0x69C76C14,
 *   BS_ANIMAL = 0xD777C754,
 *   BS_BADGER = 0x7E7C3F53,
 *   BS_BEAR = 0x0BC66E35,
 *   BS_BEAVER = 0x4E313783,
 *   BS_BOAR = 0x176A5831,
 *   BS_BOUNTY_HUNTER = 0x3900654C,
 *   BS_BRUISER = 0x4514DB61,
 *   BS_BULL = 0x4E50C5D2,
 *   BS_COUGAR = 0x9DAA7CCB,
 *   BS_COW = 0xB0E91295,
 *   BS_COYOTE = 0xA448EB69,
 *   BS_DEER = 0xA781E6B3,
 *   BS_DOG = 0x5A4155C4,
 *   BS_ELK = 0x408697F0,
 *   BS_FEMALE = 0x6A3BB2C2,
 *   BS_FEMALE_STRONG = 0x4DAFDD84,
 *   BS_GANGUP = 0xD0CECFF2,
 *   BS_GOAT = 0x078E649F,
 *   BS_HORSE = 0xF6B775F3,
 *   BS_MICAH_FINALE = 0x1F0BB27A,
 *   BS_MOOSE = 0x968917AB,
 *   BS_MUSKRAT = 0x1EDC33AC,
 *   BS_NO_MELEE = 0x25B5F931,
 *   BS_PIG = 0x22EAD110,
 *   BS_PLAYER = 0x78BAEF07,
 *   BS_PLAYER_FINALE = 0xF9E77D2D,
 *   BS_PLAYER_MOONSHINER = 0x687BF19F,
 *   BS_PLAYER_WINTER1 = 0x3C6A802F,
 *   BS_QUICK = 0xC4CABB1B,
 *   BS_RACCOON = 0x505F8917,
 *   BS_SHEEP = 0x6827CCCF,
 *   BS_SNAKE = 0x82BEBC4B,
 *   BS_TIMID = 0x431AEF77,
 *   BS_WOLF = 0xA8F023D4
 * };
 *
 * @param {number} ped
 * @param {number} brawlingStyle
 * @return {void}
 */
global.SetPedBrawlingStyle = function (ped, brawlingStyle) {
  return _in(0x8ba83cc4, 0x288cd56d, ped, _ch(brawlingStyle));
};

/**
 * _SET_PED_CAN_BE_LASSOED
 * SET_PED_CAN_*
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanBeLassoed = function (ped, toggle) {
  return _in(0xfd6943b6, 0xdf77e449, ped, toggle);
};

/**
 * _SET_PED_CAN_UNK_BODYPART_IK
 * _SET_PED_CAN_(?)_IK*
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedCanUnkBodypartIk = function (ped, toggle) {
  return _in(0xee9df765, 0x990e8d1d, ped, toggle);
};

/**
 * _SET_PED_COMBAT_ATTRIBUTE_HASH
 * Hashes: GUARD, COMBAT_ANIMAL, LAW, LAW_SHERIFF
 * _SET_PED_COMBAT_A* - _SET_PED_COMBAT_M*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.SetPedCombatAttributeHash = function (ped, p1) {
  return _in(0xbd755001, 0x41e4725c, ped, _ch(p1));
};

/**
 * _SET_PED_COMBAT_BEHAVIOUR
 *
 * @param {number} ped
 * @param {number} behaviour
 * @return {void}
 */
global.SetPedCombatBehaviour = function (ped, behaviour) {
  return _in(0x9238a3d9, 0x70bbb0a9, ped, _ch(behaviour));
};

/**
 * _SET_PED_COMBAT_STYLE
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_STYLES
 * Params: p2 is usually 1, sometimes 0 or 2
 * duration in seconds, -1.0 = forever
 *
 * @param {number} ped
 * @param {number} combatStyleHash
 * @param {number} p2
 * @param {number} duration
 * @return {void}
 */
global.SetPedCombatStyle = function (ped, combatStyleHash, p2, duration) {
  return _in(0x8acc0506, 0x743a8a5c, ped, _ch(combatStyleHash), p2, _fv(duration));
};

/**
 * _SET_PED_COMBAT_STYLE_MOD
 * duration in seconds, -1.0 = forever
 *
 * @param {number} ped
 * @param {number} combatStyleModHash
 * @param {number} duration
 * @return {void}
 */
global.SetPedCombatStyleMod = function (ped, combatStyleModHash, duration) {
  return _in(0x8b1e8e35, 0xa6e814ea, ped, _ch(combatStyleModHash), _fv(duration));
};

/**
 * _SET_PED_CROUCH_MOVEMENT
 *
 * @param {number} ped
 * @param {boolean} state
 * @param {number} p2
 * @param {boolean} immediately
 * @return {void}
 */
global.SetPedCrouchMovement = function (ped, state, p2, immediately) {
  return _in(0x7de9692c, 0x6f64cfe8, ped, state, p2, immediately);
};

/**
 * _SET_PED_CULL_RANGE
 * The higher the multiplier the less the engine renders culls (https://docs.unity3d.com/Manual/OcclusionCulling.html)
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.SetPedCullRange = function (ped, p1, p2) {
  return _in(0x8ac1d721, 0xb2097b6e, ped, _fv(p1), _fv(p2));
};

/**
 * _SET_PED_DAMAGED
 *
 * @param {number} ped
 * @param {boolean} damaged
 * @return {void}
 */
global.SetPedDamaged = function (ped, damaged) {
  return _in(0xdace03c6, 0x5c6666db, ped, damaged);
};

/**
 * _SET_PED_DAMAGE_CLEANLINESS
 * damageCleanliness: see _GET_PED_DAMAGE_CLEANLINESS
 *
 * @param {number} ped
 * @param {number} damageCleanliness
 * @return {void}
 */
global.SetPedDamageCleanliness = function (ped, damageCleanliness) {
  return _in(0x75287201, 0x01a807a5, ped, damageCleanliness);
};

/**
 * _SET_PED_DEFENSIVE_AREA_TO_ANGLED_AREA
 * _SET_PED_(A?)*
 *
 * @param {number} ped
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {any} p7
 * @param {boolean} p8
 * @param {boolean} p9
 * @param {number} entity
 * @param {boolean} p11
 * @return {void}
 */
global.SetPedDefensiveAreaToAngledArea = function (ped, x1, y1, z1, x2, y2, z2, p7, p8, p9, entity, p11) {
  return _in(0xeb2bfe5d, 0x009f0331, ped, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), p7, p8, p9, entity, p11);
};

/**
 * _SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_ENTITY
 *
 * @param {number} ped
 * @param {number} entity
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} p6
 * @param {boolean} p7
 * @return {void}
 */
global.SetPedDefensiveSphereAttachedToEntity = function (ped, entity, x, y, z, radius, p6, p7) {
  return _in(0x1854217c, 0x640b39ec, ped, entity, _fv(x), _fv(y), _fv(z), _fv(radius), p6, p7);
};

/**
 * _SET_PED_DESIRED_LOCO_FOR_MODEL
 * Seems to set the ped's loco type.
 * Values used in the scripts:
 * algie
 * angry_female
 * arthur_healthy
 * cowboy
 * cowboy_f
 * default
 * default_female
 * free_slave_01
 * free_slave_02
 * gold_panner
 * guard_lantern
 * injured_general
 * john_marston
 * lilly_millet
 * lone_prisoner
 * lost_man
 * mp_ova_hunter
 * mp_ova_hunter_female
 * murfree
 * old_female
 * primate
 * rally
 * waiter
 * war_veteran
 *
 * @param {number} ped
 * @param {string | number} locomotionArchetype
 * @return {void}
 */
global.SetPedDesiredLocoForModel = function (ped, locomotionArchetype) {
  return _in(0x92358374, 0x1dc87bce, ped, _ts(locomotionArchetype));
};

/**
 * _SET_PED_DESIRED_LOCO_MOTION_TYPE
 * Sets peds motion type
 *
 * @param {number} ped
 * @param {string | number} locoMotionType
 * @return {void}
 */
global.SetPedDesiredLocoMotionType = function (ped, locoMotionType) {
  return _in(0x89f5e7ad, 0xecccb49c, ped, _ts(locoMotionType));
};

/**
 * _SET_PED_DIRT_CLEANED
 * Params: ped, 0f, -1, true, true in R* MP Scripts
 * _SET_PED_DE* - _SET_PED_F*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {void}
 */
global.SetPedDirtCleaned = function (ped, p1, p2, p3, p4) {
  return _in(0xe3144b93, 0x2dfdff65, ped, _fv(p1), p2, p3, p4);
};

/**
 * _SET_PED_DISABLE_KICK_MOVE
 * Disables being able to kick move ped.
 *
 * @param {number} ped
 * @param {boolean} disable
 * @return {void}
 */
global.SetPedDisableKickMove = function (ped, disable) {
  return _in(0xadd31a5c, 0x7a5faa73, ped, disable);
};

/**
 * _SET_PED_DRUNKNESS
 * SOBER = 0.0f, SLIGHTLY_DRUNK = 0.25f, MODERATELY_DRUNK = 0.5f, VERY_DRUNK = 1.0f
 *
 * @param {number} ped
 * @param {boolean} enabled
 * @param {number} drunknessLevel
 * @return {void}
 */
global.SetPedDrunkness = function (ped, enabled, drunknessLevel) {
  return _in(0x406ccf55, 0x5b04fad3, ped, enabled, _fv(drunknessLevel));
};

/**
 * _SET_PED_FIRING_PATTERN_2
 * Used in R* MP Script fm_mission_controller and various R* SP Scripts for ambush*
 *
 * @param {number} ped
 * @param {number} patternHash
 * @return {void}
 */
global.SetPedFiringPattern_2 = function (ped, patternHash) {
  return _in(0x20e54854, 0xdef6a54a, ped, _ch(patternHash));
};

/**
 * _SET_PED_FIRING_PATTERN_3
 * Only used in R* MP Script fm_mission_controller
 *
 * @param {number} ped
 * @param {number} patternHash
 * @return {void}
 */
global.SetPedFiringPattern_3 = function (ped, patternHash) {
  return _in(0x244e8c28, 0x2188e40f, ped, _ch(patternHash));
};

/**
 * _SET_PED_FORMATION_POSITION
 *
 * @param {number} ped
 * @param {number} position
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedFormationPosition = function (ped, position, toggle) {
  return _in(0x0e9e95fd, 0xedcc9d35, ped, position, toggle);
};

/**
 * _SET_PED_GETUP_ANIMATION
 *
 * @param {number} ped
 * @param {string | number} animName
 * @param {boolean} p2
 * @return {void}
 */
global.SetPedGetupAnimation = function (ped, animName, p2) {
  return _in(0x3ae3552e, 0x7c207cc5, ped, _ts(animName), p2);
};

/**
 * _SET_PED_GRAPPLE_ACTION
 *
 * @param {number} ped
 * @param {number} grappleAction
 * @return {void}
 */
global.SetPedGrappleAction = function (ped, grappleAction) {
  return _in(0x8301d87b, 0x1b89e219, ped, _ch(grappleAction));
};

/**
 * _SET_PED_GRAPPLE_ANIMATION
 *
 * @param {number} ped
 * @param {number} grappleAnim
 * @return {void}
 */
global.SetPedGrappleAnimation = function (ped, grappleAnim) {
  return _in(0x56e9c26c, 0xd29d1ed6, ped, _ch(grappleAnim));
};

/**
 * _SET_PED_GRAPPLE_EFFECT_MULTIPLIER
 *
 * @param {number} ped
 * @param {number} multiplier
 * @return {any}
 */
global.SetPedGrappleEffectMultiplier = function (ped, multiplier) {
  return _in(0x99a6e246, 0xc315bf60, ped, _fv(multiplier), _r);
};

/**
 * _SET_PED_GRAPPLE_FLAG
 *
 * @param {number} ped
 * @param {number} flag
 * @param {boolean} enable
 * @return {void}
 */
global.SetPedGrappleFlag = function (ped, flag, enable) {
  return _in(0x789dabd1, 0x8e9024db, ped, flag, enable);
};

/**
 * _SET_PED_GRAPPLE_SEQUENCE
 *
 * @param {number} ped
 * @param {string | number} grappleSequence
 * @return {void}
 */
global.SetPedGrappleSequence = function (ped, grappleSequence) {
  return _in(0x604190f0, 0xcf0df158, ped, _ts(grappleSequence));
};

/**
 * _SET_PED_GRAPPLE_STYLE
 * Hashes: GS_DRAGGING, GS_FACE_TO_BACK, GS_FACE_TO_FACE, GS_FACE_TO_FACE_WALL, GS_MOUNTED
 *
 * @param {number} ped
 * @param {number} style
 * @return {any}
 */
global.SetPedGrappleStyle = function (ped, style) {
  return _in(0x630e7b01, 0xf091a197, ped, _ch(style), _r);
};

/**
 * _SET_PED_HEADSHOT_DAMAGE_MULTIPLIER
 *
 * @param {number} ped
 * @param {number} multiplier
 * @return {void}
 */
global.SetPedHeadshotDamageMultiplier = function (ped, multiplier) {
  return _in(0x2ba918c8, 0x23b8ba56, ped, _fv(multiplier));
};

/**
 * _SET_PED_HEALTH_CONFIG
 * configHash: see pedhealth.meta
 *
 * @param {number} ped
 * @param {number} configHash
 * @return {void}
 */
global.SetPedHealthConfig = function (ped, configHash) {
  return _in(0xf6b82fce, 0x03b43a37, ped, _ch(configHash));
};

/**
 * _SET_PED_IMMERSION_FLAG
 * Only used in R* Script beat_sharp_shooter
 * Blocks ped from swimming underwater
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedImmersionFlag = function (ped, toggle) {
  return _in(0x7fb0088e, 0x8769cddb, ped, toggle);
};

/**
 * _SET_PED_INCAPACITATION_FLAGS
 *
 * @param {number} ped
 * @param {number} flags
 * @return {void}
 */
global.SetPedIncapacitationFlags = function (ped, flags) {
  return _in(0xd67b6f3b, 0xcf81ba47, ped, flags);
};

/**
 * _SET_PED_INCAPACITATION_MODIFIERS
 *
 * @param {number} ped
 * @param {boolean} canBeIncapacitated
 * @param {number} threshold
 * @param {number} bleedoutTime
 * @param {number} p4
 * @return {void}
 */
global.SetPedIncapacitationModifiers = function (ped, canBeIncapacitated, threshold, bleedoutTime, p4) {
  return _in(0x39ed3033, 0x90ddeac7, ped, canBeIncapacitated, threshold, bleedoutTime, p4);
};

/**
 * _SET_PED_INCAPACITATION_TOTAL_BLEED_OUT_DURATION
 *
 * @param {number} ped
 * @param {number} duration
 * @return {void}
 */
global.SetPedIncapacitationTotalBleedOutDuration = function (ped, duration) {
  return _in(0x2890418b, 0x39bc8fff, ped, _fv(duration));
};

/**
 * _SET_PED_INTERACTION_NEGATIVE_RESPONSE
 *
 * @param {number} ped
 * @param {string | number} speech
 * @return {void}
 */
global.SetPedInteractionNegativeResponse = function (ped, speech) {
  return _in(0xa3c53cde, 0x922bc78b, ped, _ts(speech));
};

/**
 * _SET_PED_INTERACTION_PERSONALITY
 * personality (script_mp_rel): NONE, AGGRESSIVE, TIMID (non-aggressive), CRIPPS, SCRIPTEDINTIMIDATION, MAGGIE, MARCEL, SCRIPTEDSALOON
 * personality (script_rel): AVOID, SCRIPTEDOUTLAW, TIMIDGUARDDOG, SCRIPTEDTIMIDROB, AGGRESSIVECAMPER, LAZYDOG, KIERANTIEDUP, SCRIPTEDGALA
 *
 * @param {number} ped
 * @param {number} personality
 * @return {void}
 */
global.SetPedInteractionPersonality = function (ped, personality) {
  return _in(0x24c82ef6, 0x07105faa, ped, _ch(personality));
};

/**
 * _SET_PED_INTERACTION_POSITIVE_RESPONSE
 *
 * @param {number} ped
 * @param {string | number} speech
 * @return {void}
 */
global.SetPedInteractionPositiveResponse = function (ped, speech) {
  return _in(0x20c54593, 0x79d75c1c, ped, _ts(speech));
};

/**
 * _SET_PED_KNOCKED_BY_ONE_HIT
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.SetPedKnockedByOneHit = function (ped, p1) {
  return _in(0x5bcf0b79, 0xd4f5dba3, ped, _fv(p1));
};

/**
 * _SET_PED_LADDER_MOVEMENT_SPEED_MODIFIER
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.SetPedLadderMovementSpeedModifier = function (ped, p1) {
  return _in(0x05ce6af4, 0xdf071d23, ped, _fv(p1));
};

/**
 * _SET_PED_LIGHTS
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedLights = function (ped, toggle) {
  return _in(0x13a21094, 0x9fcbd92b, ped, toggle);
};

/**
 * _SET_PED_MOTIVATION
 * enum eMotivationState
 * {
 *   TOILET_STATE,
 *   FEAR_STATE,
 *   ANGRY_STATE,
 *   AGITATION_STATE,
 *   HUNGRY_STATE,
 *   TIRED_STATE,
 *   SAD_STATE,
 *   BRAVE_STATE,
 *   OFFER_ITEM_STATE,
 *   SUSPICION,
 *   DRUNK_STATE
 * };
 * 
 * If targetPed is set to 0 the ped motivationState affects everyone
 *
 * @param {number} ped
 * @param {number} motivationState
 * @param {number} threshold
 * @param {number} targetPed
 * @return {void}
 */
global.SetPedMotivation = function (ped, motivationState, threshold, targetPed) {
  return _in(0x06d26a96, 0xca1bca75, ped, motivationState, _fv(threshold), targetPed);
};

/**
 * _SET_PED_MOTIVATION_MODIFIER
 * The higher the modifier, the slower the motivationState value will decrease
 *
 * @param {number} ped
 * @param {number} motivationState
 * @param {number} modifier
 * @return {void}
 */
global.SetPedMotivationModifier = function (ped, motivationState, modifier) {
  return _in(0xa1eb5d02, 0x9e0191d3, ped, motivationState, _fv(modifier));
};

/**
 * _SET_PED_MOTIVATION_STATE_OVERRIDE
 * motivationState: see _SET_PED_MOTIVATION
 *
 * @param {number} ped
 * @param {number} motivationState
 * @param {boolean} enabled
 * @return {void}
 */
global.SetPedMotivationStateOverride = function (ped, motivationState, enabled) {
  return _in(0x2eb75fb8, 0x6c41f026, ped, motivationState, enabled);
};

/**
 * _SET_PED_PERSONALITY
 * Hashes: STANDARD_PED_AGRO_GUARD, BOUNTY_HUNTER, PLAYER_HORSE, LAW_POLICE, GUARD_DOG, ATTACK_DOG
 * Personalities can also be found in common:/data/ai/interactionpersonalities
 *
 * @param {number} ped
 * @param {number} personality
 * @return {void}
 */
global.SetPedPersonality = function (ped, personality) {
  return _in(0xb8b6430e, 0xad2d2437, ped, _ch(personality));
};

/**
 * _SET_PED_PROMPT_NAME
 *
 * @param {number} ped
 * @param {string | number} name
 * @return {void}
 */
global.SetPedPromptName = function (ped, name) {
  return _in(0x4a48b6e0, 0x3babb4ac, ped, _ts(name));
};

/**
 * _SET_PED_PROMPT_NAME_2
 *
 * @param {number} ped
 * @param {string | number} name
 * @return {void}
 */
global.SetPedPromptName_2 = function (ped, name) {
  return _in(0x19b14e04, 0xb009e28b, ped, _ts(name));
};

/**
 * _SET_PED_PROMPT_NAME_FROM_GXT_ENTRY
 *
 * @param {number} ped
 * @param {number} gxtEntryHash
 * @return {void}
 */
global.SetPedPromptNameFromGxtEntry = function (ped, gxtEntryHash) {
  return _in(0xfca8fb9e, 0x15fa80d3, ped, _ch(gxtEntryHash));
};

/**
 * _SET_PED_PROMPT_NAME_FROM_GXT_ENTRY_2
 *
 * @param {number} ped
 * @param {number} gxtEntryHash
 * @return {void}
 */
global.SetPedPromptNameFromGxtEntry_2 = function (ped, gxtEntryHash) {
  return _in(0xc2745d92, 0x61664901, ped, _ch(gxtEntryHash));
};

/**
 * _SET_PED_QUALITY
 * quality: see _GET_PED_QUALITY
 *
 * @param {number} ped
 * @param {number} quality
 * @return {void}
 */
global.SetPedQuality = function (ped, quality) {
  return _in(0xce6b8742, 0x86d640bb, ped, quality);
};

/**
 * _SET_PED_SCALE
 *
 * @param {number} ped
 * @param {number} scale
 * @return {void}
 */
global.SetPedScale = function (ped, scale) {
  return _in(0x25acfc65, 0x0b65c538, ped, _fv(scale));
};

/**
 * _SET_PED_SCENT
 * 0.0 - 1.0
 * Modifies the "scent line" on the ped's body when using Eagle Eye.
 *
 * @param {number} ped
 * @param {number} scent
 * @return {void}
 */
global.SetPedScent = function (ped, scent) {
  return _in(0x01b21b81, 0x865e2a1f, ped, _fv(scent));
};

/**
 * _SET_PED_TARGET_ACTION_DISABLE_FLAG
 *
 * @param {number} ped
 * @param {number} actionDisableFlag
 * @return {void}
 */
global.SetPedTargetActionDisableFlag = function (ped, actionDisableFlag) {
  return _in(0xc163dac5, 0x2ac975d3, ped, actionDisableFlag);
};

/**
 * _SET_PED_TO_BE_REMOVED
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {any} p4
 * @return {void}
 */
global.SetPedToBeRemoved = function (ped, p1, p2, p3, p4) {
  return _in(0x36e4b61d, 0xc56de77c, ped, _fv(p1), _fv(p2), p3, p4);
};

/**
 * _SET_PED_TO_DISABLE_RAGDOLL
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedToDisableRagdoll = function (ped, toggle) {
  return _in(0x221f4d99, 0x12b7fe86, ped, toggle);
};

/**
 * _SET_PED_TRAIL_EFFECT
 * duration in seconds
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {number} duration
 * @return {void}
 */
global.SetPedTrailEffect = function (ped, p1, duration) {
  return _in(0xa5950e16, 0xb8f31052, ped, p1, _fv(duration));
};

/**
 * _SET_PED_USE_HORSE_MAP_COLLISION
 * Doesn't actually return anything.
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {any}
 */
global.SetPedUseHorseMapCollision = function (ped, toggle) {
  return _in(0xeb72453b, 0x6f5b45b0, ped, toggle, _r);
};

/**
 * _SET_PED_VOICE_VOLUME
 * _SET_PED_S* - _SET_PED_T*
 *
 * @param {number} ped
 * @param {number} volume
 * @return {void}
 */
global.SetPedVoiceVolume = function (ped, volume) {
  return _in(0xd05ad61f, 0x242c626b, ped, _fv(volume));
};

/**
 * _SET_PED_WRITHING_DURATION
 *
 * @param {number} ped
 * @param {number} writhingDuration1
 * @param {number} writhingDuration2
 * @param {number} p3
 * @return {void}
 */
global.SetPedWrithingDuration = function (ped, writhingDuration1, writhingDuration2, p3) {
  return _in(0x4db9d03a, 0xc4e1fa84, ped, _fv(writhingDuration1), _fv(writhingDuration2), p3);
};

/**
 * _SET_PELT_FOR_HORSE
 *
 * @param {number} horse
 * @param {number} peltId
 * @return {void}
 */
global.SetPeltForHorse = function (horse, peltId) {
  return _in(0xa73f50e8, 0x796150d5, horse, peltId);
};

/**
 * _SET_PLAYER_ANTAGONIZE_DISABLED_FOR_PED
 *
 * @param {number} ped
 * @param {number} player
 * @param {number} duration
 * @return {void}
 */
global.SetPlayerAntagonizeDisabledForPed = function (ped, player, duration) {
  return _in(0x5708edd7, 0x1b50c008, ped, player, duration);
};

/**
 * _SET_PLAYER_CURRENT_ANIMAL_DAMAGE_MODIFIER
 * Animal Skin Quality Modifier
 * Params: p2 = 2, p3 = 3 in R* Scripts
 *
 * @param {number} player
 * @param {number} modifier
 * @param {number} p2
 * @param {number} p3
 * @return {any}
 */
global.SetPlayerCurrentAnimalDamageModifier = function (player, modifier, p2, p3) {
  return _in(0x9eff3c91, 0xdf38304f, player, _fv(modifier), p2, p3, _r);
};

/**
 * _SET_PLAYER_GREET_DISABLED_FOR_PED
 *
 * @param {number} ped
 * @param {number} player
 * @param {number} duration
 * @return {void}
 */
global.SetPlayerGreetDisabledForPed = function (ped, player, duration) {
  return _in(0x19173c3f, 0x15367b54, ped, player, duration);
};

/**
 * _SET_RANDOM_OUTFIT_VARIATION
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.SetRandomOutfitVariation = function (ped, p1) {
  return _in(0x283978a1, 0x5512b2fe, ped, p1);
};

/**
 * _SET_REMOVE_PED_NETWORKED
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.SetRemovePedNetworked = function (ped, p1) {
  return _in(0x39a2fc5a, 0xf55a52b1, ped, p1);
};

/**
 * _SET_SCENARIO_ANIMAL_DENSITY_MULTIPLIER_THIS_FRAME
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetScenarioAnimalDensityMultiplierThisFrame = function (multiplier) {
  return _in(0xdb48e99f, 0x8e064e56, _fv(multiplier));
};

/**
 * _SET_SCENARIO_HUMAN_DENSITY_MULTIPLIER_THIS_FRAME
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetScenarioHumanDensityMultiplierThisFrame = function (multiplier) {
  return _in(0x28cb6391, 0xacedd9db, _fv(multiplier));
};

/**
 * _SET_SCENARIO_PED_DENSITY_THIS_FRAME
 * Sets the scenario ped density to the given config.
 * 
 * Valid configs:
 * - BLACKWATER
 * - DEFAULT
 * - NEWBORDEAUX
 * - RHODES
 * - STRAWBERRY
 * - TUMBLEWEED
 * - VALENTINE
 * - VANHORN
 * 
 * See common/data/ai/densityscoringconfigs.meta for more information.
 *
 * @param {number} configHash
 * @return {void}
 */
global.SetScenarioPedDensityThisFrame = function (configHash) {
  return _in(0x95423627, 0xa9ca598e, _ch(configHash));
};

/**
 * _SET_SCENARIO_PED_RANGE_MULTIPLIER_THIS_FRAME
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetScenarioPedRangeMultiplierThisFrame = function (multiplier) {
  return _in(0xa77fa7be, 0x9312f8c0, _fv(multiplier));
};

/**
 * _SET_STAMINA_DEPLETION_MULTIPLIER
 *
 * @param {number} ped
 * @param {number} multiplier
 * @return {void}
 */
global.SetStaminaDepletionMultiplier = function (ped, multiplier) {
  return _in(0xef5a3d22, 0x85d8924b, ped, multiplier);
};

/**
 * _SET_STAMINA_RECHARGE_MULTIPLIER
 *
 * @param {number} ped
 * @param {number} multiplier
 * @return {void}
 */
global.SetStaminaRechargeMultiplier = function (ped, multiplier) {
  return _in(0x345c9f99, 0x3a8ab4a4, ped, multiplier);
};

/**
 * _SET_TANK_ATTRIBUTE_SIZE
 * Size will be permanent
 *
 * @param {number} ped
 * @param {number} attributeIndex
 * @param {number} size
 * @return {void}
 */
global.SetTankAttributeSize = function (ped, attributeIndex, size) {
  return _in(0x7ff72de0, 0x61df55e2, ped, attributeIndex, _fv(size));
};

/**
 * _SET_TEXTURE_LAYER_ALPHA
 *
 * @param {number} textureId
 * @param {number} layerId
 * @param {number} texAlpha
 * @return {void}
 */
global.SetTextureLayerAlpha = function (textureId, layerId, texAlpha) {
  return _in(0x6c76bc24, 0xf8bb709a, textureId, layerId, _fv(texAlpha));
};

/**
 * _SET_TEXTURE_LAYER_MOD
 *
 * @param {number} textureId
 * @param {number} layerId
 * @param {number} modTextureHash
 * @param {number} modAlpha
 * @param {number} modChannel
 * @return {void}
 */
global.SetTextureLayerMod = function (textureId, layerId, modTextureHash, modAlpha, modChannel) {
  return _in(0xf2ea041f, 0x1146d75b, textureId, layerId, _ch(modTextureHash), _fv(modAlpha), modChannel);
};

/**
 * _SET_TEXTURE_LAYER_PALLETE
 * paletteHash: https://raw.githubusercontent.com/femga/rdr3_discoveries/master/clothes/cloth_color_palletes.lua
 *
 * @param {number} textureId
 * @param {number} layerId
 * @param {number} paletteHash
 * @return {void}
 */
global.SetTextureLayerPallete = function (textureId, layerId, paletteHash) {
  return _in(0x1ed85885, 0x24ac9be1, textureId, layerId, _ch(paletteHash));
};

/**
 * _SET_TEXTURE_LAYER_ROUGHNESS
 *
 * @param {number} textureId
 * @param {number} layerId
 * @param {number} texRough
 * @return {void}
 */
global.SetTextureLayerRoughness = function (textureId, layerId, texRough) {
  return _in(0x057c4f09, 0x2e2298be, textureId, layerId, _fv(texRough));
};

/**
 * _SET_TEXTURE_LAYER_SHEET_GRID_INDEX
 *
 * @param {number} textureId
 * @param {number} layerId
 * @param {number} sheetGridIndex
 * @return {void}
 */
global.SetTextureLayerSheetGridIndex = function (textureId, layerId, sheetGridIndex) {
  return _in(0x3329aae2, 0x882fc8e4, textureId, layerId, sheetGridIndex);
};

/**
 * _SET_TEXTURE_LAYER_TEXTURE_MAP
 *
 * @param {number} textureId
 * @param {number} layerId
 * @param {number} albedoHash
 * @param {number} normalHash
 * @param {number} materialHash
 * @return {void}
 */
global.SetTextureLayerTextureMap = function (textureId, layerId, albedoHash, normalHash, materialHash) {
  return _in(0x253a63b5, 0xbadbc398, textureId, layerId, _ch(albedoHash), _ch(normalHash), _ch(materialHash));
};

/**
 * _SET_TEXTURE_LAYER_TINT
 * Seem color is not RGB or HSV
 *
 * @param {number} textureId
 * @param {number} layerId
 * @param {number} tint0
 * @param {number} tint1
 * @param {number} tint2
 * @return {void}
 */
global.SetTextureLayerTint = function (textureId, layerId, tint0, tint1, tint2) {
  return _in(0x2df59ffe, 0x6ffd6044, textureId, layerId, tint0, tint1, tint2);
};

/**
 * _SET_TEXTURE_OUTFIT_TINTS
 * Used in script function METAPED_CLOTHING__XML__APPLY_OUTFIT_TINTS_TO_PED
 *
 * @param {number} ped
 * @param {number} componentCategory
 * @param {number} palette
 * @param {number} tint0
 * @param {number} tint1
 * @param {number} tint2
 * @return {void}
 */
global.SetTextureOutfitTints = function (ped, componentCategory, palette, tint0, tint1, tint2) {
  return _in(0x4efc1f8f, 0xf1ad94de, ped, _ch(componentCategory), _ch(palette), tint0, tint1, tint2);
};

/**
 * _SET_TOTAL_PED_DAMAGE_FALLOFF_BONUS
 * _SET_W(EAPON?)*
 *
 * @param {number} ped
 * @param {number} bonus
 * @return {void}
 */
global.SetTotalPedDamageFalloffBonus = function (ped, bonus) {
  return _in(0x932786ce, 0x3c76477c, ped, _fv(bonus));
};

/**
 * _SET_TOTAL_PED_DAMAGE_FROM_AI
 * _SET_W(EAPON?)*
 *
 * @param {number} ped
 * @param {number} totalDamage
 * @return {void}
 */
global.SetTotalPedDamageFromAi = function (ped, totalDamage) {
  return _in(0x73b6f907, 0xb913c860, ped, _fv(totalDamage));
};

/**
 * _SHOOT_TRIGGER_AT_COORDS
 * Triggers a gunshot
 * Params: p5 = -1 in R* Scripts
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @return {any}
 */
global.ShootTriggerAtCoords = function (ped, x, y, z, p4, p5, p6, p7) {
  return _in(0x4c57f27d, 0x1554e6b0, ped, _fv(x), _fv(y), _fv(z), p4, _fv(p5), p6, _fv(p7), _r);
};

/**
 * _SPAWNPOINTS_START_SEARCH_WITH_VOLUME
 *
 * @param {number} volume
 * @param {number} spawnpointsFlag
 * @param {number} p2
 * @param {number} duration
 * @param {number} p4
 * @return {void}
 */
global.SpawnpointsStartSearchWithVolume = function (volume, spawnpointsFlag, p2, duration, p4) {
  return _in(0x83ed1fc9, 0xdf3411f5, volume, spawnpointsFlag, _fv(p2), duration, _fv(p4));
};

/**
 * _UNRESERVE_AMBIENT_PEDS
 *
 * @param {number} numPeds
 * @return {void}
 */
global.UnreserveAmbientPeds = function (numPeds) {
  return _in(0x7d4e70a6, 0x7a651c71, numPeds);
};

/**
 * _UPDATE_ANIMAL_DAMAGE_MODIFIER
 *
 * @param {number} player
 * @return {void}
 */
global.UpdateAnimalDamageModifier = function (player) {
  return _in(0x0f9e754e, 0xbe8fdbfa, player);
};

/**
 * _UPDATE_PED_TEXTURE
 * Should be called at least once for any new texture override.
 * Otherwise component textures will be just black.
 * Also needs to be called for updating any ped overlays to apply the changes.
 *
 * @param {number} textureId
 * @return {void}
 */
global.UpdatePedTexture = function (textureId) {
  return _in(0x92daaba2, 0xc1c10b0e, textureId);
};

/**
 * _UPDATE_PED_VARIATION
 * Update variation on ped, needed after first creation, or when component or texture/overlay is changed
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @param {boolean} p5
 * @return {void}
 */
global.UpdatePedVariation = function (ped, p1, p2, p3, p4, p5) {
  return _in(0xcc8ca3e8, 0x8256e58f, ped, p1, p2, p3, p4, p5);
};

/**
 * _UPDATE_PED_WOUND_EFFECT
 * Params: 0.0f to remove wound effects
 *
 * @param {number} ped
 * @param {number} value
 * @return {void}
 */
global.UpdatePedWoundEffect = function (ped, value) {
  return _in(0x66b1cb77, 0x8d911f49, ped, _fv(value));
};

/**
 * _UPDATE_SHOP_ITEM_WEARABLE_STATE
 *
 * @param {number} ped
 * @param {number} componentHash
 * @param {number} wearableState
 * @param {number} p3
 * @param {boolean} p4
 * @param {number} p5
 * @return {void}
 */
global.UpdateShopItemWearableState = function (ped, componentHash, wearableState, p3, p4, p5) {
  return _in(0x66b957aa, 0xc2eaaeab, ped, _ch(componentHash), _ch(wearableState), p3, p4, p5);
};

/**
 * _WARP_PED_OUT_OF_VEHICLE
 *
 * @param {number} ped
 * @return {void}
 */
global.WarpPedOutOfVehicle = function (ped) {
  return _in(0xe0b61ed8, 0xbb37712f, ped);
};

/**
 * _0x08FC896D2CB31FCC
 *
 * @param {any} p0
 * @param {boolean} p1
 * @return {number}
 */
global.N_0x08FC896D2CB31FCC = function (p0, p1) {
  return _in(0x08fc896d, 0x2cb31fcc, p0, p1, _r, _ri);
};

/**
 * _0x0B3A99AB6713AA52
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0B3A99AB6713AA52 = function (p0) {
  return _in(0x0b3a99ab, 0x6713aa52, p0);
};

/**
 * _0x112DDF56300BC6E5
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x112DDF56300BC6E5 = function (p0) {
  return _in(0x112ddf56, 0x300bc6e5, p0, _r);
};

/**
 * _0x2DF89CD2ED1D0BDE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x2DF89CD2ED1D0BDE = function (p0, p1) {
  return _in(0x2df89cd2, 0xed1d0bde, p0, p1);
};

/**
 * _0x2E957AA81F2C61C9
 *

 * @return {void}
 */
global.N_0x2E957AA81F2C61C9 = function () {
  return _in(0x2e957aa8, 0x1f2c61c9);
};

/**
 * _0x406808610220405B
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x406808610220405B = function (p0) {
  return _in(0x40680861, 0x0220405b, p0);
};

/**
 * _0x4AFC7288C77238B3
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x4AFC7288C77238B3 = function (p0) {
  return _in(0x4afc7288, 0xc77238b3, p0, _r);
};

/**
 * _0x4F81EAD1DE8FA19B
 *
 * @param {number} persChar
 * @return {void}
 */
global.N_0x4F81EAD1DE8FA19B = function (persChar) {
  return _in(0x4f81ead1, 0xde8fa19b, persChar);
};

/**
 * _0x535A66AAD2BF68F9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x535A66AAD2BF68F9 = function (p0, p1) {
  return _in(0x535a66aa, 0xd2bf68f9, p0, p1);
};

/**
 * _0x59C7AD6FEA2AC449
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x59C7AD6FEA2AC449 = function (p0, p1, p2, p3) {
  return _in(0x59c7ad6f, 0xea2ac449, p0, p1, p2, p3);
};

/**
 * _0x5EE6FCCC9C832CA2
 *
 * @param {any} p0
 * @return {Vector3}
 */
global.N_0x5EE6FCCC9C832CA2 = function (p0) {
  return _in(0x5ee6fccc, 0x9c832ca2, p0, _r, _rv);
};

/**
 * _0x63AA2B8EB087886A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x63AA2B8EB087886A = function (p0, p1) {
  return _in(0x63aa2b8e, 0xb087886a, p0, p1);
};

/**
 * _0x669C25840C6F7AE2
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x669C25840C6F7AE2 = function (p0, p1) {
  return _in(0x669c2584, 0x0c6f7ae2, p0, p1);
};

/**
 * _0x6759BEE6762E140B
 *
 * @param {number} persChar
 * @return {void}
 */
global.N_0x6759BEE6762E140B = function (persChar) {
  return _in(0x6759bee6, 0x762e140b, persChar);
};

/**
 * _0x69786495C92A3044
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x69786495C92A3044 = function (p0) {
  return _in(0x69786495, 0xc92a3044, p0, _r);
};

/**
 * _0x70605812ABC9FF0F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x70605812ABC9FF0F = function (p0, p1) {
  return _in(0x70605812, 0xabc9ff0f, p0, p1);
};

/**
 * _0x8AE4EFA464DAE42D
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x8AE4EFA464DAE42D = function (p0, p1) {
  return _in(0x8ae4efa4, 0x64dae42d, p0, p1);
};

/**
 * _0x8B44273A92CD406C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x8B44273A92CD406C = function (p0) {
  return _in(0x8b44273a, 0x92cd406c, p0);
};

/**
 * _0x8BC555034A5A5E8C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x8BC555034A5A5E8C = function (p0, p1) {
  return _in(0x8bc55503, 0x4a5a5e8c, p0, p1);
};

/**
 * _0x92690B0822493CE0
 *

 * @return {void}
 */
global.N_0x92690B0822493CE0 = function () {
  return _in(0x92690b08, 0x22493ce0);
};

/**
 * _0x94995829ED15A598
 *
 * @param {any} p0
 * @return {Vector3}
 */
global.N_0x94995829ED15A598 = function (p0) {
  return _in(0x94995829, 0xed15a598, p0, _r, _rv);
};

/**
 * _0x9C7F95946E304778
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x9C7F95946E304778 = function (p0, p1) {
  return _in(0x9c7f9594, 0x6e304778, p0, p1, _r);
};

/**
 * _0xA2B18FF8D39F6D87
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xA2B18FF8D39F6D87 = function (p0) {
  return _in(0xa2b18ff8, 0xd39f6d87, p0);
};

/**
 * _0xA4DCB3F0DD7488BD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0xA4DCB3F0DD7488BD = function (p0, p1, p2, p3, p4) {
  return _in(0xa4dcb3f0, 0xdd7488bd, p0, p1, p2, p3, p4);
};

/**
 * _0xA8120EBEAF290C7A
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xA8120EBEAF290C7A = function (p0) {
  return _in(0xa8120ebe, 0xaf290c7a, p0, _r);
};

/**
 * _0xA8C406C2A56EDC16
 *
 * @param {number} persChar
 * @return {void}
 */
global.N_0xA8C406C2A56EDC16 = function (persChar) {
  return _in(0xa8c406c2, 0xa56edc16, persChar);
};

/**
 * _0xB173599D61FAEB31
 *

 * @return {void}
 */
global.N_0xB173599D61FAEB31 = function () {
  return _in(0xb173599d, 0x61faeb31);
};

/**
 * _0xB65E7F733956CF25
 *
 * @param {number} persChar
 * @return {void}
 */
global.N_0xB65E7F733956CF25 = function (persChar) {
  return _in(0xb65e7f73, 0x3956cf25, persChar);
};

/**
 * _0xBB68908CD11AEBDC
 *
 * @param {number} persChar
 * @return {void}
 */
global.N_0xBB68908CD11AEBDC = function (persChar) {
  return _in(0xbb68908c, 0xd11aebdc, persChar);
};

/**
 * _0xCEB40B678E403759
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xCEB40B678E403759 = function (p0) {
  return _in(0xceb40b67, 0x8e403759, p0, _r);
};

/**
 * _0xD4B614179BCD0654
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xD4B614179BCD0654 = function (p0) {
  return _in(0xd4b61417, 0x9bcd0654, p0);
};

/**
 * _0xD95D777F828B2BBB
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xD95D777F828B2BBB = function (p0) {
  return _in(0xd95d777f, 0x828b2bbb, p0);
};

/**
 * _0xDC9655D47DEC0353
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xDC9655D47DEC0353 = function (p0) {
  return _in(0xdc9655d4, 0x7dec0353, p0, _r);
};

/**
 * _0xE0E65E0D261F7507
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE0E65E0D261F7507 = function (p0) {
  return _in(0xe0e65e0d, 0x261f7507, p0);
};

/**
 * _0xE4C51A8A3BD1664C
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xE4C51A8A3BD1664C = function (p0) {
  return _in(0xe4c51a8a, 0x3bd1664c, p0, _r);
};

/**
 * _0xEC254C2C9B0F08F1
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xEC254C2C9B0F08F1 = function (p0, p1) {
  return _in(0xec254c2c, 0x9b0f08f1, p0, p1, _r);
};

/**
 * _0xEFC5C6670E0B99BA
 *

 * @return {void}
 */
global.N_0xEFC5C6670E0B99BA = function () {
  return _in(0xefc5c667, 0x0e0b99ba);
};

/**
 * _0xF8DE7154F7D1458F
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xF8DE7154F7D1458F = function (p0) {
  return _in(0xf8de7154, 0xf7d1458f, p0, _r);
};

/**
 * _0xFCC6DB8DBE709BC8
 *
 * @param {number} persChar
 * @return {void}
 */
global.N_0xFCC6DB8DBE709BC8 = function (persChar) {
  return _in(0xfcc6db8d, 0xbe709bc8, persChar);
};

/**
 * _CREATE_PERSISTENT_CHARACTER
 *
 * @param {number} hash
 * @return {number}
 */
global.CreatePersistentCharacter = function (hash) {
  return _in(0x4f76e367, 0x6583d951, _ch(hash), _r, _ri);
};

/**
 * _DELETE_PERSCHAR
 *
 * @param {number} persChar
 * @return {void}
 */
global.DeletePerschar = function (persChar) {
  return _in(0xfc77c5b4, 0x4d5ff7c0, persChar);
};

/**
 * _FORCE_DESPAWN_PERSCHAR
 *
 * @param {number} persChar
 * @return {void}
 */
global.ForceDespawnPerschar = function (persChar) {
  return _in(0x7b204f88, 0xf6c3d287, persChar);
};

/**
 * _FORCE_SPAWN_PERSCHAR
 *
 * @param {number} persChar
 * @param {boolean} p1
 * @return {number}
 */
global.ForceSpawnPerschar = function (persChar, p1) {
  return _in(0x0cadc3a9, 0x77997472, persChar, p1, _r, _ri);
};

/**
 * _GET_PERSCHAR_INDEX_FROM_PED_INDEX
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPerscharIndexFromPedIndex = function (ped) {
  return _in(0x32a1e3b8, 0x3d501096, ped, _r, _ri);
};

/**
 * _GET_PERSCHAR_MODEL_NAME
 *
 * @param {number} persCharHash
 * @return {number}
 */
global.GetPerscharModelName = function (persCharHash) {
  return _in(0xa00df706, 0xc60173d1, _ch(persCharHash), _r, _ri);
};

/**
 * _GET_PERSCHAR_PED_INDEX
 *
 * @param {number} persChar
 * @return {number}
 */
global.GetPerscharPedIndex = function (persChar) {
  return _in(0x31c70a71, 0x6cae1fee, persChar, _r, _ri);
};

/**
 * _IS_PERSISTENT_CHARACTER_DEAD
 *
 * @param {number} persChar
 * @return {boolean}
 */
global.IsPersistentCharacterDead = function (persChar) {
  return _in(0xeb98b38c, 0xa60742d7, persChar, _r);
};

/**
 * _IS_PERSISTENT_CHARACTER_VALID
 *
 * @param {number} persChar
 * @return {boolean}
 */
global.IsPersistentCharacterValid = function (persChar) {
  return _in(0x800df3fc, 0x913355f3, persChar, _r);
};

/**
 * _RETASK_PERSISTENT_CHARACTER
 *
 * @param {number} persChar
 * @return {void}
 */
global.RetaskPersistentCharacter = function (persChar) {
  return _in(0x631cd2d7, 0x7fdc0316, persChar);
};

/**
 * _REVIVE_PERSCHAR
 *
 * @param {number} persChar
 * @return {boolean}
 */
global.RevivePerschar = function (persChar) {
  return _in(0x49a8c2cd, 0x97815215, persChar, _r);
};

/**
 * _SET_PERSCHAR_SCHEDULE
 *
 * @param {number} persCharHash
 * @param {string | number} schedule
 * @return {void}
 */
global.SetPerscharSchedule = function (persCharHash, schedule) {
  return _in(0x187d65f3, 0xaec5d679, _ch(persCharHash), _ts(schedule));
};

/**
 * PERSISTENCE_ADD_SCENARIO_LOOTED
 *
 * @param {number} scenario
 * @return {void}
 */
global.PersistenceAddScenarioLooted = function (scenario) {
  return _in(0x8245c1f3, 0x262f4ac2, scenario);
};

/**
 * PERSISTENCE_REMOVE_ALL_ENTITIES_IN_AREA
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {void}
 */
global.PersistenceRemoveAllEntitiesInArea = function (x, y, z, radius) {
  return _in(0x9d16896f, 0x0dbe78a2, _fv(x), _fv(y), _fv(z), _fv(radius));
};

/**
 * _0x065887B694359799
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x065887B694359799 = function (p0) {
  return _in(0x065887b6, 0x94359799, p0);
};

/**
 * _0x1F56FB3FDB4EAF65
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x1F56FB3FDB4EAF65 = function (p0) {
  return _in(0x1f56fb3f, 0xdb4eaf65, p0, _r);
};

/**
 * _0x291CC21D1FB6790E
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x291CC21D1FB6790E = function (p0) {
  return _in(0x291cc21d, 0x1fb6790e, p0);
};

/**
 * _0x2E545965DF98D476
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x2E545965DF98D476 = function (p0) {
  return _in(0x2e545965, 0xdf98d476, p0, _r);
};

/**
 * _0x3CA5E58C9731A16B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3CA5E58C9731A16B = function (p0, p1) {
  return _in(0x3ca5e58c, 0x9731a16b, p0, p1);
};

/**
 * _0x5A79220F6D38D7C3
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x5A79220F6D38D7C3 = function (p0) {
  return _in(0x5a79220f, 0x6d38d7c3, p0, _r);
};

/**
 * _0x66DAA3A9274E8E82
 * _PERSISTENCE_*
 *

 * @return {void}
 */
global.N_0x66DAA3A9274E8E82 = function () {
  return _in(0x66daa3a9, 0x274e8e82);
};

/**
 * _0x7A1BD123E5CDB6E5
 *

 * @return {void}
 */
global.N_0x7A1BD123E5CDB6E5 = function () {
  return _in(0x7a1bd123, 0xe5cdb6e5);
};

/**
 * _0x8DE104BEC243A73B
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x8DE104BEC243A73B = function (p0) {
  return _in(0x8de104be, 0xc243a73b, p0);
};

/**
 * _0xB03140014ACA6C40
 * nullsub, doesn't do anything
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xB03140014ACA6C40 = function (p0, p1) {
  return _in(0xb0314001, 0x4aca6c40, p0, p1);
};

/**
 * _0xBA2C49EA6A8D24FF
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {any}
 */
global.N_0xBA2C49EA6A8D24FF = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xba2c49ea, 0x6a8d24ff, p0, p1, p2, p3, p4, p5, p6, _r);
};

/**
 * _0xCFDA2518F322D836
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xCFDA2518F322D836 = function (p0) {
  return _in(0xcfda2518, 0xf322d836, p0, _r);
};

/**
 * _0xDC0A1F0ECEC9F0C0
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xDC0A1F0ECEC9F0C0 = function (p0, p1) {
  return _in(0xdc0a1f0e, 0xcec9f0c0, p0, p1);
};

/**
 * _0xE225CEF1901F6108
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE225CEF1901F6108 = function (p0, p1) {
  return _in(0xe225cef1, 0x901f6108, p0, p1);
};

/**
 * _0xF5622FA6ACFCA7DB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xF5622FA6ACFCA7DB = function (p0, p1) {
  return _in(0xf5622fa6, 0xacfca7db, p0, p1);
};

/**
 * _0xFC9806DA9A460093
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @return {void}
 */
global.N_0xFC9806DA9A460093 = function (x1, y1, z1, x2, y2, z2) {
  return _in(0xfc9806da, 0x9a460093, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2));
};

/**
 * _PERSISTENCE_IS_SCENARIO_MARKED_AS_LOOTED
 *
 * @param {number} scenario
 * @return {boolean}
 */
global.PersistenceIsScenarioMarkedAsLooted = function (scenario) {
  return _in(0xfb7cf1de, 0x938a3e22, scenario, _r);
};

/**
 * _PERSISTENCE_IS_SCENARIO_MARKED_AS_LOOTED_AT_COORDS
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {boolean}
 */
global.PersistenceIsScenarioMarkedAsLootedAtCoords = function (x, y, z) {
  return _in(0xb6e1a185, 0xc2b9319a, _fv(x), _fv(y), _fv(z), _r);
};

/**
 * _PERSISTENCE_IS_SCENARIO_MARKED_AS_LOOTED_AT_COORDS_WITH_MODEL
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} model
 * @return {boolean}
 */
global.PersistenceIsScenarioMarkedAsLootedAtCoordsWithModel = function (x, y, z, model) {
  return _in(0x18831361, 0x6d184213, _fv(x), _fv(y), _fv(z), _ch(model), _r);
};

/**
 * _PERSISTENCE_REFRESH_TOWN_VOLUME
 * Only used in R* script long_update.ysc in script function REFRESH_CLOSEST_TOWN
 *
 * @param {number} volume
 * @return {void}
 */
global.PersistenceRefreshTownVolume = function (volume) {
  return _in(0xefb5f34c, 0xc0953b27, volume);
};

/**
 * ACTIVATE_PHYSICS
 *
 * @param {number} entity
 * @return {void}
 */
global.ActivatePhysics = function (entity) {
  return _in(0x710311ad, 0xf0e20730, entity);
};

/**
 * ADD_ROPE
 * There are 19 types of rope, from type = 0 to type = 18
 * Rope definitions are stored in ropedata.xml
 * Rope types 0, 15 and 18 have proper physics for hanging objects (taut, do not sag, small to medium diameter, good aspect for a rope)
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} length
 * @param {number} ropeType
 * @param {number} maxLength
 * @param {number} minLength
 * @param {number} p10
 * @param {boolean} p11
 * @param {boolean} p12
 * @param {boolean} rigid
 * @param {number} p14
 * @param {boolean} breakWhenShot
 * @param {DataView} unkPtr
 * @param {boolean} p17
 * @return {number}
 */
global.AddRope = function (x, y, z, rotX, rotY, rotZ, length, ropeType, maxLength, minLength, p10, p11, p12, rigid, p14, breakWhenShot, unkPtr, p17) {
  return _in(0xe832d760, 0x399eb220, _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(length), ropeType, _fv(maxLength), _fv(minLength), _fv(p10), p11, p12, rigid, _fv(p14), breakWhenShot, unkPtr, p17, _r, _ri);
};

/**
 * ATTACH_ENTITIES_TO_ROPE
 * Attaches entity 1 to entity 2.
 * If you use a boneName (p12/p13) make sure boneId (p15/p16) is set to -1.
 *
 * @param {number} ropeId
 * @param {number} entity1
 * @param {number} entity2
 * @param {number} ent1X
 * @param {number} ent1Y
 * @param {number} ent1Z
 * @param {number} ent2X
 * @param {number} ent2Y
 * @param {number} ent2Z
 * @param {number} length
 * @param {number} alwaysZero1
 * @param {number} alwaysZero2
 * @param {string | number} boneName1
 * @param {string | number} boneName2
 * @param {boolean} p14
 * @param {number} boneId1
 * @param {number} boneId2
 * @param {number} alwaysZero3
 * @param {number} alwaysZero4
 * @param {boolean} p19
 * @param {boolean} p20
 * @return {void}
 */
global.AttachEntitiesToRope = function (ropeId, entity1, entity2, ent1X, ent1Y, ent1Z, ent2X, ent2Y, ent2Z, length, alwaysZero1, alwaysZero2, boneName1, boneName2, p14, boneId1, boneId2, alwaysZero3, alwaysZero4, p19, p20) {
  return _in(0x3d95ec8b, 0x6d940ac3, ropeId, entity1, entity2, _fv(ent1X), _fv(ent1Y), _fv(ent1Z), _fv(ent2X), _fv(ent2Y), _fv(ent2Z), _fv(length), alwaysZero1, alwaysZero2, _ts(boneName1), _ts(boneName2), p14, boneId1, boneId2, alwaysZero3, alwaysZero4, p19, p20);
};

/**
 * BREAK_ENTITY_GLASS
 *
 * @param {number} entity
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {any} p9
 * @param {boolean} p10
 * @return {void}
 */
global.BreakEntityGlass = function (entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0x2e648d16, 0xf6e308f3, entity, _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _fv(p8), p9, p10);
};

/**
 * DELETE_CHILD_ROPE
 *
 * @param {number} ropeId
 * @return {void}
 */
global.DeleteChildRope = function (ropeId) {
  return _in(0xaa5d6b18, 0x88e4db20, ropeId);
};

/**
 * DELETE_ROPE
 *

 * @return {number}
 */
global.DeleteRope = function () {
  return _in(0x52b48292, 0x81364649, _i);
};

/**
 * DETACH_ROPE_FROM_ENTITY
 *
 * @param {number} ropeId
 * @param {number} entity
 * @return {void}
 */
global.DetachRopeFromEntity = function (ropeId, entity) {
  return _in(0xbcf30269, 0x12a8647d, ropeId, entity);
};

/**
 * DOES_ROPE_EXIST
 *
 * @param {number} ropeId
 * @return {boolean}
 */
global.DoesRopeExist = function (ropeId) {
  return _in(0xfd5448be, 0x3111ed96, ropeId, _r);
};

/**
 * GET_ROPE_LAST_VERTEX_COORD
 *
 * @param {number} ropeId
 * @return {Vector3}
 */
global.GetRopeLastVertexCoord = function (ropeId) {
  return _in(0x21bb0fbd, 0x3e217c2d, ropeId, _r, _rv);
};

/**
 * GET_ROPE_VERTEX_COORD
 *
 * @param {number} ropeId
 * @param {number} vertex
 * @return {Vector3}
 */
global.GetRopeVertexCoord = function (ropeId, vertex) {
  return _in(0xea61ca8e, 0x80f09e4d, ropeId, vertex, _r, _rv);
};

/**
 * GET_ROPE_VERTEX_COUNT
 *
 * @param {number} ropeId
 * @return {number}
 */
global.GetRopeVertexCount = function (ropeId) {
  return _in(0x3655f544, 0xcd30f0b5, ropeId, _r, _ri);
};

/**
 * ROPE_DRAW_SHADOW_ENABLED
 *
 * @param {boolean} toggle
 * @return {number}
 */
global.RopeDrawShadowEnabled = function (toggle) {
  return _in(0xf159a638, 0x06bb5ba8, _i, toggle);
};

/**
 * ROPE_FORCE_LENGTH
 * Forces a rope to a certain length.
 *
 * @param {number} ropeId
 * @param {number} length
 * @return {void}
 */
global.RopeForceLength = function (ropeId, length) {
  return _in(0xd009f759, 0xa723db1b, ropeId, _fv(length));
};

/**
 * ROPE_SET_UPDATE_ORDER
 *
 * @param {number} ropeId
 * @param {any} p1
 * @return {void}
 */
global.RopeSetUpdateOrder = function (ropeId, p1) {
  return _in(0xdc57a637, 0xa20006ed, ropeId, p1);
};

/**
 * SET_DAMPING
 *
 * @param {number} entity
 * @param {number} vertex
 * @param {number} value
 * @return {void}
 */
global.SetDamping = function (entity, vertex, value) {
  return _in(0xeea3b200, 0xa6feb65b, entity, vertex, _fv(value));
};

/**
 * SET_DISABLE_BREAKING
 *
 * @param {number} object
 * @param {boolean} toggle
 * @return {void}
 */
global.SetDisableBreaking = function (object, toggle) {
  return _in(0x5cec1a84, 0x620e7d5b, object, toggle);
};

/**
 * SET_DISABLE_FRAG_DAMAGE
 *
 * @param {number} object
 * @param {boolean} toggle
 * @return {void}
 */
global.SetDisableFragDamage = function (object, toggle) {
  return _in(0x01ba3aed, 0x21c16cfb, object, toggle);
};

/**
 * START_ROPE_UNWINDING_FRONT
 *
 * @param {number} ropeId
 * @return {void}
 */
global.StartRopeUnwindingFront = function (ropeId) {
  return _in(0x538d1179, 0xec1aa9a9, ropeId);
};

/**
 * START_ROPE_WINDING
 *
 * @param {number} ropeId
 * @return {void}
 */
global.StartRopeWinding = function (ropeId) {
  return _in(0x1461c72c, 0x889e343e, ropeId);
};

/**
 * STOP_ROPE_UNWINDING_FRONT
 *
 * @param {number} ropeId
 * @return {void}
 */
global.StopRopeUnwindingFront = function (ropeId) {
  return _in(0xfff3a507, 0x79efbbb3, ropeId);
};

/**
 * STOP_ROPE_WINDING
 *
 * @param {number} ropeId
 * @return {void}
 */
global.StopRopeWinding = function (ropeId) {
  return _in(0xcb2d4ab8, 0x4a19aa7c, ropeId);
};

/**
 * _0x0CB16D05E03FB525
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0CB16D05E03FB525 = function (p0) {
  return _in(0x0cb16d05, 0xe03fb525, p0);
};

/**
 * _0x1D97DA8ACB5D2582
 *
 * @param {number} ropeId
 * @param {number} p1
 * @return {void}
 */
global.N_0x1D97DA8ACB5D2582 = function (ropeId, p1) {
  return _in(0x1d97da8a, 0xcb5d2582, ropeId, p1);
};

/**
 * _0x1FC92BDBA1106BD2
 *
 * @param {number} ropeId
 * @param {number} p1
 * @return {void}
 */
global.N_0x1FC92BDBA1106BD2 = function (ropeId, p1) {
  return _in(0x1fc92bdb, 0xa1106bd2, ropeId, _fv(p1));
};

/**
 * _0x21D0890D88DFB0B0
 *
 * @param {number} ropeId
 * @param {boolean} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {number} p9
 * @param {number} p10
 * @return {void}
 */
global.N_0x21D0890D88DFB0B0 = function (ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0x21d0890d, 0x88dfb0b0, ropeId, p1, _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _fv(p8), _fv(p9), p10);
};

/**
 * _0x31160EC47E7C9549
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x31160EC47E7C9549 = function (p0, p1) {
  return _in(0x31160ec4, 0x7e7c9549, p0, p1);
};

/**
 * _0x32F4DBFDFCCCC735
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x32F4DBFDFCCCC735 = function (p0, p1, p2) {
  return _in(0x32f4dbfd, 0xfcccc735, p0, p1, p2);
};

/**
 * _0x3900491C0D61ED4B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3900491C0D61ED4B = function (p0, p1) {
  return _in(0x3900491c, 0x0d61ed4b, p0, p1);
};

/**
 * _0x423C6B1F3786D28B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x423C6B1F3786D28B = function (p0, p1) {
  return _in(0x423c6b1f, 0x3786d28b, p0, p1);
};

/**
 * _0x461FCBDEB4D06717
 *
 * @param {number} ropeId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x461FCBDEB4D06717 = function (ropeId, p1) {
  return _in(0x461fcbde, 0xb4d06717, ropeId, p1);
};

/**
 * _0x483D4E917B0D35A9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x483D4E917B0D35A9 = function (p0, p1) {
  return _in(0x483d4e91, 0x7b0d35a9, p0, p1);
};

/**
 * _0x522FA3F490E2F7AC
 *
 * @param {number} ropeId
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x522FA3F490E2F7AC = function (ropeId, p1, p2) {
  return _in(0x522fa3f4, 0x90e2f7ac, ropeId, p1, p2);
};

/**
 * _0x5A989B7EE3672A56
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x5A989B7EE3672A56 = function (p0, p1) {
  return _in(0x5a989b7e, 0xe3672a56, p0, p1);
};

/**
 * _0x5BD7457221CC5FF4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x5BD7457221CC5FF4 = function (p0, p1) {
  return _in(0x5bd74572, 0x21cc5ff4, p0, p1);
};

/**
 * _0x5E981C764DF33117
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x5E981C764DF33117 = function (p0, p1) {
  return _in(0x5e981c76, 0x4df33117, p0, p1);
};

/**
 * _0x69C810B72291D831
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.N_0x69C810B72291D831 = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x69c810b7, 0x2291d831, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _0x6EA0E93CFFA472CC
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6EA0E93CFFA472CC = function (p0) {
  return _in(0x6ea0e93c, 0xffa472cc, p0);
};

/**
 * _0x751DF00EEFF122E3
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x751DF00EEFF122E3 = function (p0) {
  return _in(0x751df00e, 0xeff122e3, p0);
};

/**
 * _0x76BAD9D538BCA1AA
 *
 * @param {number} ropeId
 * @param {number} p1
 * @return {void}
 */
global.N_0x76BAD9D538BCA1AA = function (ropeId, p1) {
  return _in(0x76bad9d5, 0x38bca1aa, ropeId, _fv(p1));
};

/**
 * _0x814D453FCFDF119F
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x814D453FCFDF119F = function (p0, p1, p2) {
  return _in(0x814d453f, 0xcfdf119f, p0, p1, p2);
};

/**
 * _0x8D59079C37C21D78
 * _ROPE_SET_*
 *
 * @param {number} ropeId
 * @param {number} p1
 * @return {void}
 */
global.N_0x8D59079C37C21D78 = function (ropeId, p1) {
  return _in(0x8d59079c, 0x37c21d78, ropeId, _fv(p1));
};

/**
 * _0x8EEDFD8921389928
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @return {void}
 */
global.N_0x8EEDFD8921389928 = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x8eedfd89, 0x21389928, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
};

/**
 * _0x9C24846D0A4A2776
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9C24846D0A4A2776 = function (p0) {
  return _in(0x9c24846d, 0x0a4a2776, p0);
};

/**
 * _0xB40EA9E0D2E2F7F3
 *
 * @param {number} ropeId
 * @param {number} p1
 * @return {void}
 */
global.N_0xB40EA9E0D2E2F7F3 = function (ropeId, p1) {
  return _in(0xb40ea9e0, 0xd2e2f7f3, ropeId, _fv(p1));
};

/**
 * _0xB7469CB9AC3C0FD4
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.N_0xB7469CB9AC3C0FD4 = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xb7469cb9, 0xac3c0fd4, p0, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * _0xBB3E9B073E66C3C9
 *
 * @param {number} ropeId
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {void}
 */
global.N_0xBB3E9B073E66C3C9 = function (ropeId, p1, p2, p3, p4) {
  return _in(0xbb3e9b07, 0x3e66c3c9, ropeId, p1, p2, p3, p4);
};

/**
 * _0xBDDA142759307528
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xBDDA142759307528 = function (p0) {
  return _in(0xbdda1427, 0x59307528, p0);
};

/**
 * _0xC64E7A62632AD2FE
 *
 * @param {number} ropeId
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.N_0xC64E7A62632AD2FE = function (ropeId, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xc64e7a62, 0x632ad2fe, ropeId, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * _0xC89E7410A93AC19A
 *
 * @param {number} ropeId
 * @param {number} p1
 * @return {void}
 */
global.N_0xC89E7410A93AC19A = function (ropeId, p1) {
  return _in(0xc89e7410, 0xa93ac19a, ropeId, _fv(p1));
};

/**
 * _0xD699E688B49C0FD2
 *
 * @param {number} ropeId
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {boolean} p4
 * @return {void}
 */
global.N_0xD699E688B49C0FD2 = function (ropeId, p1, p2, p3, p4) {
  return _in(0xd699e688, 0xb49c0fd2, ropeId, _fv(p1), _fv(p2), _fv(p3), p4);
};

/**
 * _0xDEDE679ED29DD4E7
 *
 * @param {number} ropeId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xDEDE679ED29DD4E7 = function (ropeId, p1) {
  return _in(0xdede679e, 0xd29dd4e7, ropeId, p1);
};

/**
 * _0xE54BF2CE6C7D23A9
 *
 * @param {number} ropeId
 * @param {number} p1
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.N_0xE54BF2CE6C7D23A9 = function (ropeId, p1, x, y, z) {
  return _in(0xe54bf2ce, 0x6c7d23a9, ropeId, p1, _fv(x), _fv(y), _fv(z));
};

/**
 * _0xEAF529446488EB18
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xEAF529446488EB18 = function (p0) {
  return _in(0xeaf52944, 0x6488eb18, p0);
};

/**
 * _0xF1EA2A881EB7F2CD
 *
 * @param {number} ropeId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xF1EA2A881EB7F2CD = function (ropeId, p1) {
  return _in(0xf1ea2a88, 0x1eb7f2cd, ropeId, p1);
};

/**
 * _0xF27F1A8DE4F50A1B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.N_0xF27F1A8DE4F50A1B = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xf27f1a8d, 0xe4f50a1b, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _0xF8CA39D5C0D1D9A1
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xF8CA39D5C0D1D9A1 = function (p0, p1) {
  return _in(0xf8ca39d5, 0xc0d1d9a1, p0, p1);
};

/**
 * _0xFB9153A54AC713E8
 *
 * @param {number} ropeId
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xFB9153A54AC713E8 = function (ropeId, p1) {
  return _in(0xfb9153a5, 0x4ac713e8, ropeId, p1);
};

/**
 * _ADD_ROPE_2
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} length
 * @param {number} ropeType
 * @param {boolean} isNetworked
 * @param {number} p9
 * @param {number} p10
 * @return {number}
 */
global.AddRope_2 = function (x, y, z, rotX, rotY, rotZ, length, ropeType, isNetworked, p9, p10) {
  return _in(0xe9c59f68, 0x09373a99, _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(length), ropeType, isNetworked, p9, _fv(p10), _r, _ri);
};

/**
 * _ATTACH_ENTITES_TO_ROPE_3
 *
 * @param {number} ropeId
 * @param {number} entity1
 * @param {number} entity2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {any} p9
 * @param {any} p10
 * @return {void}
 */
global.AttachEntitesToRope_3 = function (ropeId, entity1, entity2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0xe9cd9a67, 0x834985a7, ropeId, entity1, entity2, _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _fv(p8), p9, p10);
};

/**
 * _ATTACH_ENTITIES_TO_ROPE_2
 * Attaches a rope to two entities: binds two bones from two entities; one entity can be an object, i.e. a suspension point, the other an NPC bone
 *
 * @param {number} ropeId
 * @param {number} entity1
 * @param {number} entity2
 * @param {number} ent1X
 * @param {number} ent1Y
 * @param {number} ent1Z
 * @param {number} ent2X
 * @param {number} ent2Y
 * @param {number} ent2Z
 * @param {string | number} boneName1
 * @param {string | number} boneName2
 * @return {void}
 */
global.AttachEntitiesToRope_2 = function (ropeId, entity1, entity2, ent1X, ent1Y, ent1Z, ent2X, ent2Y, ent2Z, boneName1, boneName2) {
  return _in(0x462ff2a4, 0x32733a44, ropeId, entity1, entity2, _fv(ent1X), _fv(ent1Y), _fv(ent1Z), _fv(ent2X), _fv(ent2Y), _fv(ent2Z), _ts(boneName1), _ts(boneName2));
};

/**
 * _BREAK_ROPE
 * ropeTop returns top half of rope, ropeBottom returns bottom half of rope
 *
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @param {number} p6
 * @return {[number, number, number]}
 */
global.BreakRope = function (offsetX, offsetY, offsetZ, p6) {
  return _in(0x4cfa2b7f, 0xae115ecb, _i, _i, _i, _fv(offsetX), _fv(offsetY), _fv(offsetZ), p6);
};

/**
 * _CREATE_ROPE_WINDING_ABILITY
 * Combining this with ADD_ROPE enables winding
 * p1: mostly empty (0)
 * ropeModelType: RB_L_Wrist02, RB_R_Wrist02, ropeAttach, noose01x_Rope_03, SKEL_Neck0, SKEL_L_FOOT, SKEL_Neck1, Root_s_meatbit_Chunck_Xlarge01x
 * _CREATE_*
 *
 * @param {number} ropeId
 * @param {string | number} p1
 * @param {string | number} ropeModelType
 * @param {number} length
 * @param {boolean} p4
 * @return {void}
 */
global.CreateRopeWindingAbility = function (ropeId, p1, ropeModelType, length, p4) {
  return _in(0x3c6490d9, 0x40ff5d0b, ropeId, _ts(p1), _ts(ropeModelType), _fv(length), p4);
};

/**
 * _HITCH_HORSE
 *
 * @param {number} horse
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.HitchHorse = function (horse, x, y, z) {
  return _in(0x06aade17, 0x334f7a40, horse, _fv(x), _fv(y), _fv(z));
};

/**
 * _IS_ROPE_ATTACHED_TO_ENTITY
 *
 * @param {number} ropeId
 * @param {number} entity
 * @return {boolean}
 */
global.IsRopeAttachedToEntity = function (ropeId, entity) {
  return _in(0x9b4f7e3e, 0x4f9c77b3, ropeId, entity, _r);
};

/**
 * _IS_ROPE_BROKEN
 *
 * @param {number} ropeId
 * @return {boolean}
 */
global.IsRopeBroken = function (ropeId) {
  return _in(0x79c2bec8, 0x2cfd7f7f, ropeId, _r);
};

/**
 * _RELEASE_ROPE
 *
 * @param {number} ropeId
 * @return {void}
 */
global.ReleaseRope = function (ropeId) {
  return _in(0x60762131, 0x01a47b3b, ropeId);
};

/**
 * _ROPE_CHANGE_VISIBILITY
 *
 * @param {boolean} visible
 * @return {number}
 */
global.RopeChangeVisibility = function (visible) {
  return _in(0x7a54d822, 0x27a139db, _i, visible);
};

/**
 * _ROPE_GET_BREAKER_OF_ROPE
 *
 * @param {number} ropeId
 * @return {number}
 */
global.RopeGetBreakerOfRope = function (ropeId) {
  return _in(0xee360cfc, 0x80c8b2bc, ropeId, _r, _ri);
};

/**
 * _ROPE_GET_FORCED_LENGTH
 *
 * @param {number} ropeId
 * @return {number}
 */
global.RopeGetForcedLength = function (ropeId) {
  return _in(0x3d695370, 0x39f8d824, ropeId, _r, _rf);
};

/**
 * _START_ROPE_UNWINDING_BACK
 *
 * @param {number} ropeId
 * @return {void}
 */
global.StartRopeUnwindingBack = function (ropeId) {
  return _in(0x00f611a7, 0x94a3c36e, ropeId);
};

/**
 * _STOP_ROPE_UNWINDING_BACK
 *
 * @param {number} ropeId
 * @return {void}
 */
global.StopRopeUnwindingBack = function (ropeId) {
  return _in(0x10daa76c, 0xb8a201a1, ropeId);
};

/**
 * _UNHITCH_HORSE
 *
 * @param {number} horse
 * @return {void}
 */
global.UnhitchHorse = function (horse) {
  return _in(0x0348469d, 0xaa17576c, horse);
};

/**
 * BOOST_PLAYER_HORSE_SPEED_FOR_TIME
 *
 * @param {number} player
 * @param {number} speedBoost
 * @param {number} duration
 * @return {void}
 */
global.BoostPlayerHorseSpeedForTime = function (player, speedBoost, duration) {
  return _in(0x09c28f82, 0x8ee674fa, player, _fv(speedBoost), duration);
};

/**
 * CAN_PLAYER_START_MISSION
 *
 * @param {number} player
 * @return {boolean}
 */
global.CanPlayerStartMission = function (player) {
  return _in(0x2df170b1, 0x185af777, player, _r);
};

/**
 * CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED
 *
 * @param {number} player
 * @return {void}
 */
global.ClearPlayerHasDamagedAtLeastOneNonAnimalPed = function (player) {
  return _in(0x0361096d, 0x6ce4372c, player);
};

/**
 * CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED
 *
 * @param {number} player
 * @return {void}
 */
global.ClearPlayerHasDamagedAtLeastOnePed = function (player) {
  return _in(0x270b63a6, 0x41be32f2, player);
};

/**
 * CLEAR_PLAYER_WANTED_LEVEL
 * nullsub, doesn't do anything
 *
 * @param {number} player
 * @return {void}
 */
global.ClearPlayerWantedLevel = function (player) {
  return _in(0x4e4b996c, 0x928c7aa6, player);
};

/**
 * DISABLE_PLAYER_FIRING
 * Inhibits the player from using any method of combat including melee and firearms.
 * 
 * NOTE: Only disables the firing for one frame
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.DisablePlayerFiring = function (player, toggle) {
  return _in(0x2970929f, 0xd5f9fc89, player, toggle);
};

/**
 * EAGLE_EYE_SET_CUSTOM_ENTITY_TINT
 *
 * @param {number} entity
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @return {void}
 */
global.EagleEyeSetCustomEntityTint = function (entity, red, green, blue) {
  return _in(0x62ed71e1, 0x33b6c9f1, entity, red, green, blue);
};

/**
 * FORCE_CLEANUP
 *
 * @param {number} cleanupFlags
 * @return {void}
 */
global.ForceCleanup = function (cleanupFlags) {
  return _in(0x768c017f, 0xb878e4f4, cleanupFlags);
};

/**
 * FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME
 *
 * @param {string | number} name
 * @param {number} cleanupFlags
 * @return {void}
 */
global.ForceCleanupForAllThreadsWithThisName = function (name, cleanupFlags) {
  return _in(0xdaacaf8b, 0x687f2353, _ts(name), cleanupFlags);
};

/**
 * FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID
 *
 * @param {number} id
 * @param {number} cleanupFlags
 * @return {void}
 */
global.ForceCleanupForThreadWithThisId = function (id, cleanupFlags) {
  return _in(0xf4c9512a, 0x2f0a3031, id, cleanupFlags);
};

/**
 * GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP
 *

 * @return {number}
 */
global.GetCauseOfMostRecentForceCleanup = function () {
  return _in(0x84e8e29e, 0xbd4a46d2, _r, _ri);
};

/**
 * GET_DISCOVERABLE_NAME_HASH_AND_TYPE_FOR_ENTITY
 * Returns name hash (name) and outHash includes the type.
 *
 * @param {number} entity
 * @return {[number, number]}
 */
global.GetDiscoverableNameHashAndTypeForEntity = function (entity) {
  return _in(0x0139637a, 0x3bff8b6d, entity, _i, _r, _ri);
};

/**
 * GET_ENTITY_PLAYER_IS_FREE_AIMING_AT
 *
 * @param {number} player
 * @return {[boolean, Entity]}
 */
global.GetEntityPlayerIsFreeAimingAt = function (player) {
  return _in(0xa6817c11, 0x0b830ead, player, _i, _r);
};

/**
 * GET_HAS_PLAYER_DISCOVERED_CHARACTER_NAME_MP
 *
 * @param {number} discoveryHash
 * @return {boolean}
 */
global.GetHasPlayerDiscoveredCharacterNameMp = function (discoveryHash) {
  return _in(0x354f689c, 0x4ffaab37, _ch(discoveryHash), _r);
};

/**
 * GET_IS_PLAYER_UI_PROMPT_ACTIVE
 *
 * @param {number} player
 * @param {number} p1
 * @return {boolean}
 */
global.GetIsPlayerUiPromptActive = function (player, p1) {
  return _in(0x51bea356, 0xb1c60225, player, p1, _r);
};

/**
 * GET_MAX_WANTED_LEVEL
 * Gets the maximum wanted level the player can get.
 * Ranges from 0 to 5.
 *

 * @return {number}
 */
global.GetMaxWantedLevel = function () {
  return _in(0xd04cfad1, 0xe2b7984a, _r, _ri);
};

/**
 * GET_MOUNT_OWNED_BY_PLAYER
 *
 * @param {number} player
 * @return {number}
 */
global.GetMountOwnedByPlayer = function (player) {
  return _in(0xf49f1446, 0x2f0ae27c, player, _r, _ri);
};

/**
 * GET_PLAYERS_LAST_VEHICLE
 *

 * @return {number}
 */
global.GetPlayersLastVehicle = function () {
  return _in(0x2f96e772, 0x0b0b19ea, _r, _ri);
};

/**
 * GET_PLAYER_CURRENT_STEALTH_NOISE
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerCurrentStealthNoise = function (player) {
  return _in(0xd7ecc25e, 0x176ecba5, player, _r, _rf);
};

/**
 * GET_PLAYER_GROUP
 * Returns the group ID the player is member of.
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerGroup = function (player) {
  return _in(0x9bab3181, 0x5159abcf, player, _r, _ri);
};

/**
 * GET_PLAYER_INDEX
 * Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
 *

 * @return {number}
 */
global.GetPlayerIndex = function () {
  return _in(0x47e385b0, 0xd957c8d4, _r, _ri);
};

/**
 * GET_PLAYER_INTERACTION_TARGET_ENTITY
 *
 * @param {number} player
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {[boolean, Entity]}
 */
global.GetPlayerInteractionTargetEntity = function (player, p2, p3) {
  return _in(0x3ee1f7a8, 0xc32f24e1, player, _i, p2, p3, _r);
};

/**
 * GET_PLAYER_INVINCIBLE
 * Returns the player's invincibility status.
 *
 * @param {number} player
 * @return {boolean}
 */
global.GetPlayerInvincible = function (player) {
  return _in(0x0cbbcb2c, 0xcfa7dc4e, player, _r);
};

/**
 * GET_PLAYER_NAME
 *
 * @param {number} player
 * @return {string | number}
 */
global.GetPlayerName = function (player) {
  return _in(0x7124fd9a, 0xc0e01ba0, player, _r, _s);
};

/**
 * GET_PLAYER_PED
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerPed = function (player) {
  return _in(0x275f255e, 0xd201b937, player, _r, _ri);
};

/**
 * GET_PLAYER_PED_SCRIPT_INDEX
 * Does the same like PLAYER::GET_PLAYER_PED
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerPedScriptIndex = function (player) {
  return _in(0x5c880f90, 0x56d784c8, player, _r, _ri);
};

/**
 * GET_PLAYER_RECEIVED_BATTLE_EVENT_RECENTLY
 *
 * @param {number} player
 * @param {number} p1
 * @param {boolean} p2
 * @return {boolean}
 */
global.GetPlayerReceivedBattleEventRecently = function (player, p1, p2) {
  return _in(0xfb6eb878, 0x5f808551, player, p1, p2, _r);
};

/**
 * GET_PLAYER_TARGET_ENTITY
 *
 * @param {number} player
 * @return {[boolean, Entity]}
 */
global.GetPlayerTargetEntity = function (player) {
  return _in(0xae663ddd, 0x99c8a670, player, _i, _r);
};

/**
 * GET_PLAYER_TEAM
 * Gets the player's team.
 * Returns -1 in singleplayer.
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerTeam = function (player) {
  return _in(0xb464eb6a, 0x40c7975b, player, _r, _ri);
};

/**
 * GET_PLAYER_WANTED_LEVEL
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerWantedLevel = function (player) {
  return _in(0xabc532f9, 0x098bfd9d, player, _r, _ri);
};

/**
 * GET_TARGET_CHARACTER_NAME_FOR_LOCAL_PLAYER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetTargetCharacterNameForLocalPlayer = function (ped) {
  return _in(0x36e3d8b5, 0xa6552fe8, ped, _r, _ri);
};

/**
 * GET_TARGET_CHARACTER_NAME_SCRIPT_OVERRIDE_HASH
 *
 * @param {number} ped
 * @return {number}
 */
global.GetTargetCharacterNameScriptOverrideHash = function (ped) {
  return _in(0x0335106f, 0x3acabbed, ped, _r, _ri);
};

/**
 * GET_TARGET_CHARACTER_NAME_SCRIPT_OVERRIDE_RAW_STRING
 *
 * @param {number} ped
 * @return {string | number}
 */
global.GetTargetCharacterNameScriptOverrideRawString = function (ped) {
  return _in(0x755e0868, 0x0f21ef30, ped, _r, _s);
};

/**
 * GET_WANTED_LEVEL_RADIUS
 *
 * @param {number} p0
 * @return {number}
 */
global.GetWantedLevelRadius = function (p0) {
  return _in(0x80b00eb2, 0x6d9521c7, p0, _r, _rf);
};

/**
 * GET_WANTED_LEVEL_THRESHOLD
 *
 * @param {number} wantedLevel
 * @return {number}
 */
global.GetWantedLevelThreshold = function (wantedLevel) {
  return _in(0x1b1a3b35, 0x8f7d8f07, wantedLevel, _r, _ri);
};

/**
 * HAS_FORCE_CLEANUP_OCCURRED
 *
 * @param {number} cleanupFlags
 * @return {boolean}
 */
global.HasForceCleanupOccurred = function (cleanupFlags) {
  return _in(0xc11469dc, 0xa6fc3bb5, cleanupFlags, _r);
};

/**
 * HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE
 *
 * @param {number} player
 * @return {boolean}
 */
global.HasPlayerBeenSpottedInStolenVehicle = function (player) {
  return _in(0xc932f57f, 0x31ea9152, player, _r);
};

/**
 * HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED
 *
 * @param {number} player
 * @return {boolean}
 */
global.HasPlayerDamagedAtLeastOneNonAnimalPed = function (player) {
  return _in(0x16c8d205, 0xdd5a2e90, player, _r);
};

/**
 * HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED
 *
 * @param {number} player
 * @return {boolean}
 */
global.HasPlayerDamagedAtLeastOnePed = function (player) {
  return _in(0xda4a4b9b, 0x96e20092, player, _r);
};

/**
 * INT_TO_PARTICIPANTINDEX
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * @param {number} value
 * @return {number}
 */
global.IntToParticipantindex = function (value) {
  return _in(0x58ff971f, 0xc8f2702c, value, _r, _ri);
};

/**
 * INT_TO_PLAYERINDEX
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * @param {number} value
 * @return {number}
 */
global.IntToPlayerindex = function (value) {
  return _in(0x748b3a65, 0xc2604c33, value, _r, _ri);
};

/**
 * IS_PLAYER_BEING_ARRESTED
 * Return true while player is being arrested / busted.
 * 
 * If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
 * 
 * If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
 *
 * @param {number} player
 * @param {boolean} atArresting
 * @return {boolean}
 */
global.IsPlayerBeingArrested = function (player, atArresting) {
  return _in(0xc8183ae9, 0x63c58374, player, atArresting, _r);
};

/**
 * IS_PLAYER_CLIMBING
 * Returns TRUE if the player ('s ped) is climbing at the moment.
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsPlayerClimbing = function (player) {
  return _in(0xb8a70c22, 0xfd48197a, player, _r);
};

/**
 * IS_PLAYER_CONTROL_ON
 * Returns whether the player can control himself.
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsPlayerControlOn = function (player) {
  return _in(0x7964097f, 0xce4c244b, player, _r);
};

/**
 * IS_PLAYER_DEAD
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsPlayerDead = function (player) {
  return _in(0x2e9c3fcb, 0x6798f397, player, _r);
};

/**
 * IS_PLAYER_FREE_AIMING
 * Gets a value indicating whether the specified player is currently aiming freely.
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsPlayerFreeAiming = function (player) {
  return _in(0x936f967d, 0x4be1ce9d, player, _r);
};

/**
 * IS_PLAYER_FREE_AIMING_AT_ENTITY
 * Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
 *
 * @param {number} player
 * @param {number} entity
 * @return {boolean}
 */
global.IsPlayerFreeAimingAtEntity = function (player, entity) {
  return _in(0x8c67c11c, 0x68713d25, player, entity, _r);
};

/**
 * IS_PLAYER_PLAYING
 * Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsPlayerPlaying = function (player) {
  return _in(0xbffb3598, 0x6caae58c, player, _r);
};

/**
 * IS_PLAYER_READY_FOR_CUTSCENE
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsPlayerReadyForCutscene = function (player) {
  return _in(0xaa67bcb0, 0x097f2fa3, player, _r);
};

/**
 * IS_PLAYER_RIDING_TRAIN
 * Returns true if the player is riding a train.
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsPlayerRidingTrain = function (player) {
  return _in(0x2fb0acad, 0xa6a238dd, player, _r);
};

/**
 * IS_PLAYER_SCRIPT_CONTROL_ON
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsPlayerScriptControlOn = function (player) {
  return _in(0xb7835075, 0x4157c00f, player, _r);
};

/**
 * IS_PLAYER_TARGETTING_ANYTHING
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsPlayerTargettingAnything = function (player) {
  return _in(0x4605c66e, 0x0f935f83, player, _r);
};

/**
 * IS_PLAYER_TARGETTING_ENTITY
 *
 * @param {number} player
 * @param {number} entity
 * @param {boolean} p2
 * @return {boolean}
 */
global.IsPlayerTargettingEntity = function (player, entity, p2) {
  return _in(0x27f89fdc, 0x16688a7a, player, entity, p2, _r);
};

/**
 * IS_PLAYER_TELEPORT_ACTIVE
 *

 * @return {boolean}
 */
global.IsPlayerTeleportActive = function () {
  return _in(0x085eeaeb, 0x8783feb5, _r);
};

/**
 * IS_PLAYER_WANTED_LEVEL_GREATER
 *
 * @param {number} player
 * @param {number} wantedLevel
 * @return {boolean}
 */
global.IsPlayerWantedLevelGreater = function (player, wantedLevel) {
  return _in(0xe1c0ad4c, 0x24324c36, player, wantedLevel, _r);
};

/**
 * IS_SYSTEM_UI_BEING_DISPLAYED
 *

 * @return {boolean}
 */
global.IsSystemUiBeingDisplayed = function () {
  return _in(0x908258b6, 0x209e71f7, _r);
};

/**
 * NETWORK_PLAYER_ID_TO_INT
 * Does exactly the same thing as PLAYER_ID()
 *

 * @return {number}
 */
global.NetworkPlayerIdToInt = function () {
  return _in(0x8a9386f0, 0x749a17fa, _r, _ri);
};

/**
 * PLAYER_ID
 * This returns YOUR 'identity' as a Player type.
 * 
 * Always returns 0 in story mode.
 *

 * @return {number}
 */
global.PlayerId = function () {
  return _in(0x217e9dc4, 0x8139933d, _r, _ri);
};

/**
 * PLAYER_PED_ID
 * Returns current player ped
 *

 * @return {number}
 */
global.PlayerPedId = function () {
  return _in(0x09627588, 0x9b8e0ee0, _r, _ri);
};

/**
 * REPORT_POLICE_SPOTTED_PLAYER
 *
 * @param {number} player
 * @return {void}
 */
global.ReportPoliceSpottedPlayer = function (player) {
  return _in(0xcbccf73f, 0xfa69cc6b, player);
};

/**
 * RESET_LAW_RESPONSE_DELAY_OVERRIDE
 *

 * @return {void}
 */
global.ResetLawResponseDelayOverride = function () {
  return _in(0x5ce5cacc, 0x01d0f985);
};

/**
 * RESET_PLAYER_ARREST_STATE
 *
 * @param {number} player
 * @return {void}
 */
global.ResetPlayerArrestState = function (player) {
  return _in(0x12917931, 0xc31f1750, player);
};

/**
 * RESET_PLAYER_INPUT_GAIT
 *
 * @param {number} player
 * @return {void}
 */
global.ResetPlayerInputGait = function (player) {
  return _in(0x61a2eeca, 0xb274829b, player);
};

/**
 * RESET_WANTED_LEVEL_DIFFICULTY
 *
 * @param {number} player
 * @return {void}
 */
global.ResetWantedLevelDifficulty = function (player) {
  return _in(0x062d14f1, 0x8e8b0cae, player);
};

/**
 * RESTORE_PLAYER_STAMINA
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.RestorePlayerStamina = function (player, p1) {
  return _in(0xc41f4b6e, 0x23fe6a4a, player, _fv(p1));
};

/**
 * SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE
 * This can be between 1.0f - 50.0f
 *
 * @param {number} player
 * @param {number} multiplier
 * @return {void}
 */
global.SetAirDragMultiplierForPlayersVehicle = function (player, multiplier) {
  return _in(0x5da6500f, 0xe849da16, player, _fv(multiplier));
};

/**
 * SET_ALL_NEUTRAL_RANDOM_PEDS_FLEE_THIS_FRAME
 *
 * @param {number} player
 * @return {void}
 */
global.SetAllNeutralRandomPedsFleeThisFrame = function (player) {
  return _in(0x16752daa, 0x7e6d3f72, player);
};

/**
 * SET_ALL_RANDOM_PEDS_FLEE
 * Sets whether all random peds will run away from player if they are agitated (threatened) (bool=true), or some peds can stand up for themselves (bool=false).
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetAllRandomPedsFlee = function (player, toggle) {
  return _in(0xe705309b, 0x8c6445a4, player, toggle);
};

/**
 * SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
 *
 * @param {number} player
 * @return {void}
 */
global.SetAllRandomPedsFleeThisFrame = function (player) {
  return _in(0xd5c198a6, 0x2f1deb0a, player);
};

/**
 * SET_EVERYONE_IGNORE_PLAYER
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetEveryoneIgnorePlayer = function (player, toggle) {
  return _in(0x34630a76, 0x8925b852, player, toggle);
};

/**
 * SET_LAW_RESPONSE_DELAY_OVERRIDE
 *
 * @param {number} p0
 * @return {void}
 */
global.SetLawResponseDelayOverride = function (p0) {
  return _in(0xd2dfc9cc, 0xa5596a11, _fv(p0));
};

/**
 * SET_LOCKON_TO_FRIENDLY_PLAYERS
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetLockonToFriendlyPlayers = function (player, toggle) {
  return _in(0x4a056257, 0x802dd3e5, player, toggle);
};

/**
 * SET_MAX_WANTED_LEVEL
 *
 * @param {number} maxWantedLevel
 * @return {void}
 */
global.SetMaxWantedLevel = function (maxWantedLevel) {
  return _in(0x28a4bd2c, 0xee236e19, maxWantedLevel);
};

/**
 * SET_MIN_TIME_BEFORE_HORSE_BUCKING
 *
 * @param {number} mount
 * @param {number} iMinBuckTime
 * @return {void}
 */
global.SetMinTimeBeforeHorseBucking = function (mount, iMinBuckTime) {
  return _in(0x506ce71f, 0xb6e8cf5e, mount, iMinBuckTime);
};

/**
 * SET_PED_AS_TEMP_PLAYER_HORSE
 *
 * @param {number} player
 * @param {number} horse
 * @return {boolean}
 */
global.SetPedAsTempPlayerHorse = function (player, horse) {
  return _in(0x227b0632, 0x4234fb09, player, horse, _r);
};

/**
 * SET_PLAYER_CAN_BE_HASSLED_BY_GANGS
 * Sets whether this player can be hassled by gangs.
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPlayerCanBeHassledByGangs = function (player, toggle) {
  return _in(0xc7fe7744, 0x12046825, player, toggle);
};

/**
 * SET_PLAYER_CAN_USE_COVER
 * Sets whether this player can take cover.
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPlayerCanUseCover = function (player, toggle) {
  return _in(0x5eda520f, 0x7a3baf4e, player, toggle);
};

/**
 * SET_PLAYER_CLOTH_PIN_FRAMES
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.SetPlayerClothPinFrames = function (ped, p1) {
  return _in(0xd0d9317d, 0xfeef9a66, ped, p1);
};

/**
 * SET_PLAYER_CONTROL
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eSetPlayerControlFlags
 *
 * @param {number} player
 * @param {boolean} toggle
 * @param {number} flags
 * @param {boolean} bPreventHeadingChange
 * @return {void}
 */
global.SetPlayerControl = function (player, toggle, flags, bPreventHeadingChange) {
  return _in(0x4d51e592, 0x43281d80, player, toggle, flags, bPreventHeadingChange);
};

/**
 * SET_PLAYER_FORCED_AIM
 *
 * @param {number} player
 * @param {boolean} toggle
 * @param {number} ped
 * @param {number} p3
 * @param {boolean} p4
 * @return {void}
 */
global.SetPlayerForcedAim = function (player, toggle, ped, p3, p4) {
  return _in(0xd5fcc166, 0xaeb2fd0f, player, toggle, ped, p3, p4);
};

/**
 * SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER
 *
 * @param {number} player
 * @param {number} regenRate
 * @return {void}
 */
global.SetPlayerHealthRechargeMultiplier = function (player, regenRate) {
  return _in(0x8899c244, 0xebcf70de, player, _fv(regenRate));
};

/**
 * SET_PLAYER_INVINCIBLE
 * Simply sets you as invincible (Health will not deplete).
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPlayerInvincible = function (player, toggle) {
  return _in(0xfebeebc9, 0xcbdf4b12, player, toggle);
};

/**
 * SET_PLAYER_LOCKON
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPlayerLockon = function (player, toggle) {
  return _in(0x462aa197, 0x3cbba75e, player, toggle);
};

/**
 * SET_PLAYER_LOCKON_RANGE_OVERRIDE
 * Affects the range of auto aim target.
 *
 * @param {number} player
 * @param {number} range
 * @return {void}
 */
global.SetPlayerLockonRangeOverride = function (player, range) {
  return _in(0x3a3cd065, 0x97388322, player, _fv(range));
};

/**
 * SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE
 *
 * @param {number} player
 * @return {void}
 */
global.SetPlayerMayNotEnterAnyVehicle = function (player) {
  return _in(0xbec463b3, 0xa11c909e, player);
};

/**
 * SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE
 *
 * @param {number} player
 * @param {number} vehicle
 * @return {void}
 */
global.SetPlayerMayOnlyEnterThisVehicle = function (player, vehicle) {
  return _in(0xda35a134, 0x038557ec, player, vehicle);
};

/**
 * SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER
 *
 * @param {number} player
 * @param {number} modifier
 * @return {void}
 */
global.SetPlayerMeleeWeaponDamageModifier = function (player, modifier) {
  return _in(0xe4cb5a3f, 0x18170381, player, _fv(modifier));
};

/**
 * SET_PLAYER_MODEL
 * Make sure to request the model first and wait until it has loaded.
 *
 * @param {number} player
 * @param {number} modelHash
 * @param {boolean} p2
 * @return {void}
 */
global.SetPlayerModel = function (player, modelHash, p2) {
  return _in(0xed403800, 0x76a31506, player, _ch(modelHash), p2);
};

/**
 * SET_PLAYER_NOISE_MULTIPLIER
 *
 * @param {number} player
 * @param {number} multiplier
 * @return {void}
 */
global.SetPlayerNoiseMultiplier = function (player, multiplier) {
  return _in(0xb5ec6bda, 0xebca454c, player, _fv(multiplier));
};

/**
 * SET_PLAYER_SIMULATE_AIMING
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPlayerSimulateAiming = function (player, toggle) {
  return _in(0xe0447def, 0x81ccdfd2, player, toggle);
};

/**
 * SET_PLAYER_SNEAKING_NOISE_MULTIPLIER
 *
 * @param {number} player
 * @param {number} multiplier
 * @return {void}
 */
global.SetPlayerSneakingNoiseMultiplier = function (player, multiplier) {
  return _in(0x4de44fa3, 0x89dca565, player, _fv(multiplier));
};

/**
 * SET_PLAYER_STAMINA_RECHARGE_MULTIPLIER
 *
 * @param {number} player
 * @param {number} multiplier
 * @return {void}
 */
global.SetPlayerStaminaRechargeMultiplier = function (player, multiplier) {
  return _in(0xfeca17cf, 0x3343694b, player, _fv(multiplier));
};

/**
 * SET_PLAYER_TARGETING_MODE
 * Sets your targeting mode for when you're on foot.
 * enum eTargetingMode
 * {
 *   TARGETING_MODE_INVALID = -1,
 *   TARGETING_MODE_CAUSAL, (Wide)
 *   TARGETING_MODE_NORMAL,
 *   TARGETING_MODE_HARD, (Narrow)
 *   TARGETING_MODE_EXPERT (Free Aim)
 * };
 *
 * @param {number} targetMode
 * @return {void}
 */
global.SetPlayerTargetingMode = function (targetMode) {
  return _in(0xd66a941f, 0x401e7302, targetMode);
};

/**
 * SET_PLAYER_TEAM
 * Sets the player's team.
 *
 * @param {number} player
 * @param {number} team
 * @param {boolean} bRestrictToThisScript
 * @return {void}
 */
global.SetPlayerTeam = function (player, team, bRestrictToThisScript) {
  return _in(0xe8dd8536, 0xf01de600, player, team, bRestrictToThisScript);
};

/**
 * SET_PLAYER_WANTED_LEVEL
 * nullsub, doesn't do anything
 *
 * @param {number} player
 * @param {number} wantedLevel
 * @param {boolean} disableNoMission
 * @return {void}
 */
global.SetPlayerWantedLevel = function (player, wantedLevel, disableNoMission) {
  return _in(0x384d4765, 0x395e006c, player, wantedLevel, disableNoMission);
};

/**
 * SET_PLAYER_WEAPON_DAMAGE_MODIFIER
 * This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown.
 *
 * @param {number} player
 * @param {number} modifier
 * @return {void}
 */
global.SetPlayerWeaponDamageModifier = function (player, modifier) {
  return _in(0x94d529f7, 0xb73d7a85, player, _fv(modifier));
};

/**
 * SET_PLAYER_WEAPON_DEFENSE_MODIFIER
 *
 * @param {number} player
 * @param {number} modifier
 * @return {void}
 */
global.SetPlayerWeaponDefenseModifier = function (player, modifier) {
  return _in(0xd15cc2d4, 0x93160be3, player, _fv(modifier));
};

/**
 * SET_PLAYER_WEAPON_TYPE_DAMAGE_MODIFIER
 *
 * @param {number} player
 * @param {number} weaponHash
 * @param {number} damageModifier
 * @return {void}
 */
global.SetPlayerWeaponTypeDamageModifier = function (player, weaponHash, damageModifier) {
  return _in(0xd04ad186, 0xce8bb129, player, _ch(weaponHash), _fv(damageModifier));
};

/**
 * SET_POLICE_RADAR_BLIPS
 * If toggle is set to false:
 *  The police won't be shown on the (mini)map
 * 
 * If toggle is set to true:
 *  The police will be shown on the (mini)map
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPoliceRadarBlips = function (toggle) {
  return _in(0x6fd7dd6b, 0x63f2820e, toggle);
};

/**
 * SET_SWIM_MULTIPLIER_FOR_PLAYER
 * Swim speed multiplier.
 * Multiplier goes up to 1.49f
 *
 * @param {number} player
 * @param {number} multiplier
 * @return {void}
 */
global.SetSwimMultiplierForPlayer = function (player, multiplier) {
  return _in(0xbfceabde, 0x34da5085, player, _fv(multiplier));
};

/**
 * SET_WANTED_LEVEL_MULTIPLIER
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetWantedLevelMultiplier = function (multiplier) {
  return _in(0xd7fa719c, 0xb54866c2, _fv(multiplier));
};

/**
 * SIMULATE_PLAYER_INPUT_GAIT
 *
 * @param {number} player
 * @param {number} speed
 * @param {number} duration
 * @param {number} heading
 * @param {boolean} p4
 * @param {boolean} p5
 * @return {void}
 */
global.SimulatePlayerInputGait = function (player, speed, duration, heading, p4, p5) {
  return _in(0xfa0c063c, 0x422c4355, player, _fv(speed), duration, _fv(heading), p4, p5);
};

/**
 * START_PLAYER_TELEPORT
 *
 * @param {number} player
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {boolean} p5
 * @param {boolean} p6
 * @param {boolean} p7
 * @param {boolean} p8
 * @return {void}
 */
global.StartPlayerTeleport = function (player, x, y, z, heading, p5, p6, p7, p8) {
  return _in(0xdf8822c5, 0x5edda65b, player, _fv(x), _fv(y), _fv(z), _fv(heading), p5, p6, p7, p8);
};

/**
 * STOP_PLAYER_TELEPORT
 * Disables the player's teleportation
 *

 * @return {void}
 */
global.StopPlayerTeleport = function () {
  return _in(0x0858b861, 0x46601be8);
};

/**
 * SUPPRESS_WITNESSES_CALLING_POLICE_THIS_FRAME
 *
 * @param {number} player
 * @return {void}
 */
global.SuppressWitnessesCallingPoliceThisFrame = function (player) {
  return _in(0x96722257, 0xe5381e00, player);
};

/**
 * UPDATE_PLAYER_TELEPORT
 *
 * @param {number} player
 * @return {boolean}
 */
global.UpdatePlayerTeleport = function (player) {
  return _in(0xc39dce46, 0x72cbfbc1, player, _r);
};

/**
 * UPDATE_WANTED_POSITION_THIS_FRAME
 *
 * @param {number} player
 * @return {void}
 */
global.UpdateWantedPositionThisFrame = function (player) {
  return _in(0xd0b0b044, 0x112bf424, player);
};

/**
 * _0x00B156AFEBCC5AE0
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x00B156AFEBCC5AE0 = function (p0) {
  return _in(0x00b156af, 0xebcc5ae0, p0);
};

/**
 * _0x00EB5A760638DB55
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x00EB5A760638DB55 = function (p0, p1, p2) {
  return _in(0x00eb5a76, 0x0638db55, p0, p1, p2);
};

/**
 * _0x03B4B759A8990505
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x03B4B759A8990505 = function (p0) {
  return _in(0x03b4b759, 0xa8990505, p0, _r);
};

/**
 * _0x06C3DB00B69D5435
 *
 * @param {number} player
 * @param {string | number} p1
 * @return {void}
 */
global.N_0x06C3DB00B69D5435 = function (player, p1) {
  return _in(0x06c3db00, 0xb69d5435, player, _ts(p1));
};

/**
 * _0x06E1FB78B1E59CA5
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x06E1FB78B1E59CA5 = function (ped, p1) {
  return _in(0x06e1fb78, 0xb1e59ca5, ped, p1);
};

/**
 * _0x086549F3B0381CB1
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x086549F3B0381CB1 = function (p0, p1) {
  return _in(0x086549f3, 0xb0381cb1, p0, p1);
};

/**
 * _0x0869D499A7848309
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.N_0x0869D499A7848309 = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0x0869d499, 0xa7848309, p0, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * _0x08E22898A6AF4905
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x08E22898A6AF4905 = function (p0, p1) {
  return _in(0x08e22898, 0xa6af4905, p0, p1);
};

/**
 * _0x0B7803F6F7BB43E0
 * Hardcoded to return zero/false.
 *

 * @return {any}
 */
global.N_0x0B7803F6F7BB43E0 = function () {
  return _in(0x0b7803f6, 0xf7bb43e0, _r);
};

/**
 * _0x0E9057A9DA78D0F8
 *
 * @param {number} player
 * @param {number} bitflag
 * @return {void}
 */
global.N_0x0E9057A9DA78D0F8 = function (player, bitflag) {
  return _in(0x0e9057a9, 0xda78d0f8, player, bitflag);
};

/**
 * _0x0F4EAF69DA41AF43
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x0F4EAF69DA41AF43 = function (p0) {
  return _in(0x0f4eaf69, 0xda41af43, p0, _r);
};

/**
 * _0x0F9CF06986300875
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0F9CF06986300875 = function (p0) {
  return _in(0x0f9cf069, 0x86300875, p0);
};

/**
 * _0x0FAF95D71ED67ADE
 *
 * @param {number} player
 * @param {string | number} p1
 * @return {void}
 */
global.N_0x0FAF95D71ED67ADE = function (player, p1) {
  return _in(0x0faf95d7, 0x1ed67ade, player, _ts(p1));
};

/**
 * _0x107F2A66E1C4C83A
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x107F2A66E1C4C83A = function (p0) {
  return _in(0x107f2a66, 0xe1c4c83a, p0);
};

/**
 * _0x113EF458AB6CDA67
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x113EF458AB6CDA67 = function (p0, p1) {
  return _in(0x113ef458, 0xab6cda67, p0, p1);
};

/**
 * _0x12E09E278C6C29B7
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x12E09E278C6C29B7 = function (p0) {
  return _in(0x12e09e27, 0x8c6c29b7, p0);
};

/**
 * _0x131E294EF60160DF
 *
 * @param {number} player
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0x131E294EF60160DF = function (player, p1, p2, p3, p4, p5) {
  return _in(0x131e294e, 0xf60160df, player, _fv(p1), _fv(p2), _fv(p3), _fv(p4), p5);
};

/**
 * _0x14E57F88BA0A07FC
 *
 * @param {number} location
 * @return {void}
 */
global.N_0x14E57F88BA0A07FC = function (location) {
  return _in(0x14e57f88, 0xba0a07fc, _ch(location));
};

/**
 * _0x19B2C7A6C34FAD54
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x19B2C7A6C34FAD54 = function (p0, p1) {
  return _in(0x19b2c7a6, 0xc34fad54, p0, p1, _r);
};

/**
 * _0x1A6E84F13C952094
 *
 * @param {number} player
 * @param {number} p1
 * @param {DataView} p2
 * @return {boolean}
 */
global.N_0x1A6E84F13C952094 = function (player, p1, p2) {
  return _in(0x1a6e84f1, 0x3c952094, player, p1, p2, _r);
};

/**
 * _0x1AD8AD999C27F44A
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x1AD8AD999C27F44A = function (p0) {
  return _in(0x1ad8ad99, 0x9c27f44a, p0);
};

/**
 * _0x1D256EED194F5B58
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x1D256EED194F5B58 = function (p0) {
  return _in(0x1d256eed, 0x194f5b58, p0);
};

/**
 * _0x1DA5C5B0923E1B85
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x1DA5C5B0923E1B85 = function (p0) {
  return _in(0x1da5c5b0, 0x923e1b85, p0, _r);
};

/**
 * _0x1E8099F449ABB0BA
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x1E8099F449ABB0BA = function (p0) {
  return _in(0x1e8099f4, 0x49abb0ba, p0, _r);
};

/**
 * _0x1F488807BC8E0630
 * _RESET_PLAYER_A* - _RESET_PLAYER_I*
 *
 * @param {number} player
 * @return {void}
 */
global.N_0x1F488807BC8E0630 = function (player) {
  return _in(0x1f488807, 0xbc8e0630, player);
};

/**
 * _0x1FDA57E8908F2609
 *
 * @param {number} player
 * @param {number} ped
 * @param {boolean} useSteerassist
 * @return {void}
 */
global.N_0x1FDA57E8908F2609 = function (player, ped, useSteerassist) {
  return _in(0x1fda57e8, 0x908f2609, player, ped, useSteerassist);
};

/**
 * _0x2009F8AB7A5E9D6D
 * _IS_PLAYER_F*
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0x2009F8AB7A5E9D6D = function (player) {
  return _in(0x2009f8ab, 0x7a5e9d6d, player, _r);
};

/**
 * _0x21091B4BEB6376EE
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x21091B4BEB6376EE = function (p0) {
  return _in(0x21091b4b, 0xeb6376ee, p0, _r);
};

/**
 * _0x216BC0D3D2E413D2
 *
 * @param {number} player
 * @param {any} p1
 * @return {void}
 */
global.N_0x216BC0D3D2E413D2 = function (player, p1) {
  return _in(0x216bc0d3, 0xd2e413d2, player, p1);
};

/**
 * _0x22B3CABEDDB538B2
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.N_0x22B3CABEDDB538B2 = function (player, p1) {
  return _in(0x22b3cabe, 0xddb538b2, player, _fv(p1));
};

/**
 * _0x22C8B10802301381
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x22C8B10802301381 = function (p0, p1) {
  return _in(0x22c8b108, 0x02301381, p0, p1);
};

/**
 * _0x263D69767F76059C
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.N_0x263D69767F76059C = function (player, p1) {
  return _in(0x263d6976, 0x7f76059c, player, p1);
};

/**
 * _0x27AD7162D3FED01E
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x27AD7162D3FED01E = function (p0, p1) {
  return _in(0x27ad7162, 0xd3fed01e, p0, p1, _r);
};

/**
 * _0x2B12B6FC8B8772AB
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.N_0x2B12B6FC8B8772AB = function (player, p1) {
  return _in(0x2b12b6fc, 0x8b8772ab, player, p1);
};

/**
 * _0x2BB8D58E88777499
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x2BB8D58E88777499 = function (p0) {
  return _in(0x2bb8d58e, 0x88777499, p0);
};

/**
 * _0x2BEED53B912537D0
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x2BEED53B912537D0 = function (p0, p1, p2) {
  return _in(0x2beed53b, 0x912537d0, p0, p1, p2);
};

/**
 * _0x2C2D287748E8E9B7
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x2C2D287748E8E9B7 = function (p0) {
  return _in(0x2c2d2877, 0x48e8e9b7, p0);
};

/**
 * _0x2E1ABE627C95ED9B
 *

 * @return {any}
 */
global.N_0x2E1ABE627C95ED9B = function () {
  return _in(0x2e1abe62, 0x7c95ed9b, _r);
};

/**
 * _0x2E67707BEC52CA4B
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x2E67707BEC52CA4B = function (p0) {
  return _in(0x2e67707b, 0xec52ca4b, p0);
};

/**
 * _0x310CE349E0C0EC4B
 *
 * @param {number} player
 * @param {number} ped
 * @param {number} p2
 * @return {void}
 */
global.N_0x310CE349E0C0EC4B = function (player, ped, p2) {
  return _in(0x310ce349, 0xe0c0ec4b, player, ped, p2);
};

/**
 * _0x325434C68358D282
 * Only used in script function UPDATE_PLAYER_JUST_DIED_STATE
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0x325434C68358D282 = function (toggle) {
  return _in(0x325434c6, 0x8358d282, toggle);
};

/**
 * _0x330CA55A3647FA1C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x330CA55A3647FA1C = function (p0, p1) {
  return _in(0x330ca55a, 0x3647fa1c, p0, p1);
};

/**
 * _0x35A33783EC3C3448
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x35A33783EC3C3448 = function (p0) {
  return _in(0x35a33783, 0xec3c3448, p0);
};

/**
 * _0x3813E11A378958A5
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x3813E11A378958A5 = function (p0) {
  return _in(0x3813e11a, 0x378958a5, p0, _r);
};

/**
 * _0x3946FC742AC305CD
 *
 * @param {number} player
 * @param {number} ped
 * @param {string | number} p2
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} targetEntity
 * @param {string | number} p7
 * @return {void}
 */
global.N_0x3946FC742AC305CD = function (player, ped, p2, x, y, z, targetEntity, p7) {
  return _in(0x3946fc74, 0x2ac305cd, player, ped, _ts(p2), _fv(x), _fv(y), _fv(z), targetEntity, _ts(p7));
};

/**
 * _0x39D8D7082BC34B72
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x39D8D7082BC34B72 = function (p0) {
  return _in(0x39d8d708, 0x2bc34b72, p0);
};

/**
 * _0x3A8611BD7BDE84F7
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3A8611BD7BDE84F7 = function (p0, p1) {
  return _in(0x3a8611bd, 0x7bde84f7, p0, p1);
};

/**
 * _0x3ACAC8832E77BC93
 * Used in script function INIT_DEADEYE_SLOWDOWN
 *
 * @param {number} player
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x3ACAC8832E77BC93 = function (player, p1) {
  return _in(0x3acac883, 0x2e77bc93, player, p1);
};

/**
 * _0x3AD212429E095EFB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3AD212429E095EFB = function (p0, p1) {
  return _in(0x3ad21242, 0x9e095efb, p0, p1);
};

/**
 * _0x3B296934DB026873
 * nullsub, doesn't do anything
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3B296934DB026873 = function (p0, p1) {
  return _in(0x3b296934, 0xdb026873, p0, p1);
};

/**
 * _0x3BB84F812E052C90
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x3BB84F812E052C90 = function (p0) {
  return _in(0x3bb84f81, 0x2e052c90, p0);
};

/**
 * _0x3C4AE8506638C7E2
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3C4AE8506638C7E2 = function (p0, p1) {
  return _in(0x3c4ae850, 0x6638c7e2, p0, p1);
};

/**
 * _0x3D9DA5C9EFD20D88
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3D9DA5C9EFD20D88 = function (p0, p1) {
  return _in(0x3d9da5c9, 0xefd20d88, p0, p1);
};

/**
 * _0x3DAABE78A23694BC
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3DAABE78A23694BC = function (p0, p1) {
  return _in(0x3daabe78, 0xa23694bc, p0, p1);
};

/**
 * _0x45EF176B532CA851
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x45EF176B532CA851 = function (p0, p1) {
  return _in(0x45ef176b, 0x532ca851, p0, p1);
};

/**
 * _0x497A18F8F88AA9D8
 *

 * @return {void}
 */
global.N_0x497A18F8F88AA9D8 = function () {
  return _in(0x497a18f8, 0xf88aa9d8);
};

/**
 * _0x4D1699543B1C023C
 * _SET_SPECIAL_ABILITY_*
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.N_0x4D1699543B1C023C = function (player, p1) {
  return _in(0x4d169954, 0x3b1c023c, player, _fv(p1));
};

/**
 * _0x4DBC4873707E8FD6
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x4DBC4873707E8FD6 = function (p0, p1, p2, p3) {
  return _in(0x4dbc4873, 0x707e8fd6, p0, p1, p2, p3);
};

/**
 * _0x4EC8BE63B8A5D4EF
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.N_0x4EC8BE63B8A5D4EF = function (player, p1) {
  return _in(0x4ec8be63, 0xb8a5d4ef, player, p1);
};

/**
 * _0x4F0D2256AAE94EDA
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x4F0D2256AAE94EDA = function (p0) {
  return _in(0x4f0d2256, 0xaae94eda, p0);
};

/**
 * _0x51139D8C17B16FBC
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x51139D8C17B16FBC = function (p0) {
  return _in(0x51139d8c, 0x17b16fbc, p0, _r);
};

/**
 * _0x57028FD99886F6F9
 * _IS_PLAYER_D* - _IS_PLAYER_F*
 *

 * @return {boolean}
 */
global.N_0x57028FD99886F6F9 = function () {
  return _in(0x57028fd9, 0x9886f6f9, _r);
};

/**
 * _0x570A13A4CA2799BB
 * Used in script function INIT_DEADEYE_SLOWDOWN
 *
 * @param {number} player
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x570A13A4CA2799BB = function (player, p1) {
  return _in(0x570a13a4, 0xca2799bb, player, p1);
};

/**
 * _0x57D9991DC1334151
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x57D9991DC1334151 = function (p0) {
  return _in(0x57d9991d, 0xc1334151, p0, _r);
};

/**
 * _0x585CE159DB46FADB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x585CE159DB46FADB = function (p0, p1) {
  return _in(0x585ce159, 0xdb46fadb, p0, p1);
};

/**
 * _0x5B7B97E99F84138B
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x5B7B97E99F84138B = function (p0) {
  return _in(0x5b7b97e9, 0x9f84138b, p0, _r);
};

/**
 * _0x5C2E5E3CAEEB1F58
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x5C2E5E3CAEEB1F58 = function (p0, p1, p2) {
  return _in(0x5c2e5e3c, 0xaeeb1f58, p0, p1, p2);
};

/**
 * _0x621D1B289CAF5978
 * _IS_PLAYER_S* - _IS_PLAYER_T*
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0x621D1B289CAF5978 = function (player) {
  return _in(0x621d1b28, 0x9caf5978, player, _r);
};

/**
 * _0x628E742FE1F79C4A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x628E742FE1F79C4A = function (p0, p1) {
  return _in(0x628e742f, 0xe1f79c4a, p0, p1);
};

/**
 * _0x65887EAC535A0B0C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x65887EAC535A0B0C = function (p0) {
  return _in(0x65887eac, 0x535a0b0c, p0);
};

/**
 * _0x67659A8F248E0141
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x67659A8F248E0141 = function (p0, p1) {
  return _in(0x67659a8f, 0x248e0141, p0, p1);
};

/**
 * _0x6852288340B43239
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x6852288340B43239 = function (p0, p1) {
  return _in(0x68522883, 0x40b43239, p0, p1, _r);
};

/**
 * _0x694FFA4308060CD1
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x694FFA4308060CD1 = function (p0, p1) {
  return _in(0x694ffa43, 0x08060cd1, p0, p1);
};

/**
 * _0x6C54E69516CC56BD
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x6C54E69516CC56BD = function (p0) {
  return _in(0x6c54e695, 0x16cc56bd, p0, _r);
};

/**
 * _0x6ECFC621A168424C
 *
 * @param {number} entity1
 * @param {number} entity2
 * @param {any} p2
 * @param {number} p3
 * @return {void}
 */
global.N_0x6ECFC621A168424C = function (entity1, entity2, p2, p3) {
  return _in(0x6ecfc621, 0xa168424c, entity1, entity2, p2, _fv(p3));
};

/**
 * _0x6EDB5D08CB03E763
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x6EDB5D08CB03E763 = function (p0, p1) {
  return _in(0x6edb5d08, 0xcb03e763, p0, p1);
};

/**
 * _0x72AD59F7B7FB6E24
 * _HAS_PLAYER_D*
 *
 * @param {number} player
 * @param {number} p1
 * @return {boolean}
 */
global.N_0x72AD59F7B7FB6E24 = function (player, p1) {
  return _in(0x72ad59f7, 0xb7fb6e24, player, p1, _r);
};

/**
 * _0x73EB2EF2E92D23BF
 *

 * @return {boolean}
 */
global.N_0x73EB2EF2E92D23BF = function () {
  return _in(0x73eb2ef2, 0xe92d23bf, _r);
};

/**
 * _0x747257807B8721CE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x747257807B8721CE = function (p0, p1) {
  return _in(0x74725780, 0x7b8721ce, p0, p1, _r);
};

/**
 * _0x76F7E1BCD623A429
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x76F7E1BCD623A429 = function (p0) {
  return _in(0x76f7e1bc, 0xd623a429, p0);
};

/**
 * _0x77B0B6D17A3AC9AA
 * nullsub, doesn't do anything
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x77B0B6D17A3AC9AA = function (p0, p1) {
  return _in(0x77b0b6d1, 0x7a3ac9aa, p0, p1);
};

/**
 * _0x77E83C315A3B31CA
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x77E83C315A3B31CA = function (p0) {
  return _in(0x77e83c31, 0x5a3b31ca, p0);
};

/**
 * _0x7AE93C45EC14A166
 * Only used in script function PROCESS_PED_INTERRUPT_DIALOGUE
 * _GET_PLAYER_*
 *
 * @param {number} player
 * @return {[boolean, Ped]}
 */
global.N_0x7AE93C45EC14A166 = function (player) {
  return _in(0x7ae93c45, 0xec14a166, player, _i, _r);
};

/**
 * _0x818241B3EDA84191
 * _SET_PLAYER_DAMAGE_* - _SET_PLAYER_DEFENSE_*
 *
 * @param {number} player
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x818241B3EDA84191 = function (player, p1) {
  return _in(0x818241b3, 0xeda84191, player, p1);
};

/**
 * _0x83C989D5B5B5B466
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x83C989D5B5B5B466 = function (p0, p1) {
  return _in(0x83c989d5, 0xb5b5b466, p0, p1);
};

/**
 * _0x84481018E668E1B8
 *
 * @param {number} player
 * @param {number} ped
 * @param {any} p2
 * @return {void}
 */
global.N_0x84481018E668E1B8 = function (player, ped, p2) {
  return _in(0x84481018, 0xe668e1b8, player, ped, p2);
};

/**
 * _0x8591EE69CC3ED257
 * SET_PLAYER_S/T*
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0x8591EE69CC3ED257 = function (player, toggle) {
  return _in(0x8591ee69, 0xcc3ed257, player, toggle);
};

/**
 * _0x8702D9150D9FBB3D
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x8702D9150D9FBB3D = function (p0, p1) {
  return _in(0x8702d915, 0x0d9fbb3d, p0, p1, _r);
};

/**
 * _0x8F44EBB3BA8F6D44
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x8F44EBB3BA8F6D44 = function (p0, p1) {
  return _in(0x8f44ebb3, 0xba8f6d44, p0, p1);
};

/**
 * _0x9044835BE9D9DBFE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x9044835BE9D9DBFE = function (p0, p1) {
  return _in(0x9044835b, 0xe9d9dbfe, p0, p1);
};

/**
 * _0x9073EC5456651A90
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x9073EC5456651A90 = function (p0, p1) {
  return _in(0x9073ec54, 0x56651a90, p0, p1);
};

/**
 * _0x908D4B72854C8F62
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x908D4B72854C8F62 = function (p0) {
  return _in(0x908d4b72, 0x854c8f62, p0);
};

/**
 * _0x927861B2C08DBEA5
 * _GET_A* - _GET_C*
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0x927861B2C08DBEA5 = function (player) {
  return _in(0x927861b2, 0xc08dbea5, player, _r);
};

/**
 * _0x929DDD5538F3DF1F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x929DDD5538F3DF1F = function (p0, p1) {
  return _in(0x929ddd55, 0x38f3df1f, p0, p1);
};

/**
 * _0x93624B36E8851B42
 *
 * @param {number} player
 * @return {void}
 */
global.N_0x93624B36E8851B42 = function (player) {
  return _in(0x93624b36, 0xe8851b42, player);
};

/**
 * _0x9422743A5BA50E10
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x9422743A5BA50E10 = function (p0) {
  return _in(0x9422743a, 0x5ba50e10, p0, _r);
};

/**
 * _0x9461A8FAB0378E5B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x9461A8FAB0378E5B = function (p0, p1) {
  return _in(0x9461a8fa, 0xb0378e5b, p0, p1);
};

/**
 * _0x988C9045531B9FCE
 *
 * @param {number} player
 * @param {string | number} p1
 * @return {void}
 */
global.N_0x988C9045531B9FCE = function (player, p1) {
  return _in(0x988c9045, 0x531b9fce, player, _ts(p1));
};

/**
 * _0x9AFCF9FE1884BF62
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x9AFCF9FE1884BF62 = function (p0, p1) {
  return _in(0x9afcf9fe, 0x1884bf62, p0, p1);
};

/**
 * _0x9FC5A003FB76EDBD
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x9FC5A003FB76EDBD = function (p0, p1) {
  return _in(0x9fc5a003, 0xfb76edbd, p0, p1);
};

/**
 * _0xA0C683284DF027C7
 * Params: p1 is mostly 15, sometimes 1 in R* Scripts (Function: PLAYER_TOGGLE_PICK_UP_HATS)
 * _SET_PLAYER_*
 *
 * @param {number} player
 * @param {number} p1
 * @param {boolean} enable
 * @return {void}
 */
global.N_0xA0C683284DF027C7 = function (player, p1, enable) {
  return _in(0xa0c68328, 0x4df027c7, player, p1, enable);
};

/**
 * _0xA28056CD1B04B250
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @return {void}
 */
global.N_0xA28056CD1B04B250 = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0xa28056cd, 0x1b04b250, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
};

/**
 * _0xA342495F93B7B838
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA342495F93B7B838 = function (p0, p1) {
  return _in(0xa342495f, 0x93b7b838, p0, p1);
};

/**
 * _0xA54000D4BFD90BDE
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xA54000D4BFD90BDE = function (p0) {
  return _in(0xa54000d4, 0xbfd90bde, p0, _r);
};

/**
 * _0xA62BBAAE67A05BB0
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xA62BBAAE67A05BB0 = function (p0) {
  return _in(0xa62bbaae, 0x67a05bb0, p0, _r);
};

/**
 * _0xAAED694CE814817F
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xAAED694CE814817F = function (p0) {
  return _in(0xaaed694c, 0xe814817f, p0, _r);
};

/**
 * _0xACA45DDCEF6071C4
 * _SET_PLAYER_CAN_BE_* - _SET_PLAYER_CAN_USE_*
 *
 * @param {number} player
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xACA45DDCEF6071C4 = function (player, p1) {
  return _in(0xaca45ddc, 0xef6071c4, player, p1);
};

/**
 * _0xB15CD2F9932C9AB5
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xB15CD2F9932C9AB5 = function (p0) {
  return _in(0xb15cd2f9, 0x932c9ab5, p0, _r);
};

/**
 * _0xB331D8A73F9D2BDF
 * _IS_PLAYER_I* - _IS_PLAYER_P*
 *
 * @param {number} player
 * @param {DataView} p1
 * @return {boolean}
 */
global.N_0xB331D8A73F9D2BDF = function (player, p1) {
  return _in(0xb331d8a7, 0x3f9d2bdf, player, p1, _r);
};

/**
 * _0xBA5CA1FEB5DE0DF6
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0xBA5CA1FEB5DE0DF6 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xba5ca1fe, 0xb5de0df6, p0, p1, p2, p3, p4, p5);
};

/**
 * _0xBB6EA5D59E926095
 * NPEW__ENUM__EMOTE_CATEGORY_INVALID = -1
 * NPEW__ENUM__EMOTE_CATEGORY_ACTIONS
 * NPEW__ENUM__EMOTE_CATEGORY_ANTAGONIZE
 * NPEW__ENUM__EMOTE_CATEGORY_REACTIONS
 * NPEW__ENUM__EMOTE_CATEGORY_GREET
 * NPEW__ENUM__NUM_EMOTE_CATEGORIES
 * NPEW__ENUM__NUM_DISPLAY_TEXTURES
 *
 * @param {number} category
 * @param {number} emote
 * @return {void}
 */
global.N_0xBB6EA5D59E926095 = function (category, emote) {
  return _in(0xbb6ea5d5, 0x9e926095, category, _ch(emote));
};

/**
 * _0xBBA140062B15A8AC
 * Used in script function INIT_DEADEYE_SLOWDOWN
 * _SPECIAL_ABILITY*
 *
 * @param {number} player
 * @return {void}
 */
global.N_0xBBA140062B15A8AC = function (player) {
  return _in(0xbba14006, 0x2b15a8ac, player);
};

/**
 * _0xBC02B3D151D3859F
 *
 * @param {number} entity
 * @param {any} p1
 * @return {void}
 */
global.N_0xBC02B3D151D3859F = function (entity, p1) {
  return _in(0xbc02b3d1, 0x51d3859f, entity, p1);
};

/**
 * _0xBD96185264DDAAEA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xBD96185264DDAAEA = function (p0, p1) {
  return _in(0xbd961852, 0x64ddaaea, p0, p1);
};

/**
 * _0xBEA3A6E5F5F79A6F
 * _GET_PLAYER_I*
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xBEA3A6E5F5F79A6F = function (p0, p1) {
  return _in(0xbea3a6e5, 0xf5f79a6f, p0, p1, _r);
};

/**
 * _0xBED386157F65942C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xBED386157F65942C = function (p0, p1) {
  return _in(0xbed38615, 0x7f65942c, p0, p1);
};

/**
 * _0xBEFED69CE8317F91
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xBEFED69CE8317F91 = function (p0) {
  return _in(0xbefed69c, 0xe8317f91, p0, _r);
};

/**
 * _0xC177C827CEFC0AA4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xC177C827CEFC0AA4 = function (p0, p1) {
  return _in(0xc177c827, 0xcefc0aa4, p0, p1);
};

/**
 * _0xC4873B053054C04B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.N_0xC4873B053054C04B = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xc4873b05, 0x3054c04b, p0, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * _0xC58CE6824E604DEC
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC58CE6824E604DEC = function (p0) {
  return _in(0xc58ce682, 0x4e604dec, p0);
};

/**
 * _0xC67A4910425F11F1
 * _DISABLE_*(PLAYER_FORCED_INTERACTION_LOCKON?)
 *
 * @param {number} player
 * @param {string | number} name
 * @return {void}
 */
global.N_0xC67A4910425F11F1 = function (player, name) {
  return _in(0xc67a4910, 0x425f11f1, player, _ts(name));
};

/**
 * _0xC71D07C96946E263
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xC71D07C96946E263 = function (p0, p1) {
  return _in(0xc71d07c9, 0x6946e263, p0, p1);
};

/**
 * _0xC74EB3F2EC169F6B
 * Hardcoded to return zero/false.
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC74EB3F2EC169F6B = function (p0) {
  return _in(0xc74eb3f2, 0xec169f6b, p0, _r);
};

/**
 * _0xC900A465364A85D6
 *
 * @param {number} player
 * @return {void}
 */
global.N_0xC900A465364A85D6 = function (player) {
  return _in(0xc900a465, 0x364a85d6, player);
};

/**
 * _0xC93A9A45430D484E
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC93A9A45430D484E = function (p0) {
  return _in(0xc93a9a45, 0x430d484e, p0, _r);
};

/**
 * _0xCA59808E51FD67C4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xCA59808E51FD67C4 = function (p0, p1) {
  return _in(0xca59808e, 0x51fd67c4, p0, p1);
};

/**
 * _0xCB0B9506BC91E441
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xCB0B9506BC91E441 = function (p0, p1) {
  return _in(0xcb0b9506, 0xbc91e441, p0, p1);
};

/**
 * _0xCB61A63AA53D7D22
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xCB61A63AA53D7D22 = function (p0, p1) {
  return _in(0xcb61a63a, 0xa53d7d22, p0, p1);
};

/**
 * _0xCBB54CC7FFFFAB86
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xCBB54CC7FFFFAB86 = function (p0, p1, p2, p3) {
  return _in(0xcbb54cc7, 0xffffab86, p0, p1, p2, p3);
};

/**
 * _0xCD7CA3013FD12749
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xCD7CA3013FD12749 = function (p0, p1) {
  return _in(0xcd7ca301, 0x3fd12749, p0, p1);
};

/**
 * _0xCDDD4B74660E2335
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xCDDD4B74660E2335 = function (p0, p1, p2) {
  return _in(0xcddd4b74, 0x660e2335, p0, p1, p2);
};

/**
 * _0xCEDC16930526F728
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xCEDC16930526F728 = function (p0) {
  return _in(0xcedc1693, 0x0526f728, p0);
};

/**
 * _0xCFB2EED4FCB7BD77
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xCFB2EED4FCB7BD77 = function (p0, p1, p2) {
  return _in(0xcfb2eed4, 0xfcb7bd77, p0, p1, p2);
};

/**
 * _0xCFFC3ECCD7A5CCEB
 *
 * @param {number} player
 * @param {number} weapon
 * @param {boolean} p2
 * @return {void}
 */
global.N_0xCFFC3ECCD7A5CCEB = function (player, weapon, p2) {
  return _in(0xcffc3ecc, 0xd7a5cceb, player, _ch(weapon), p2);
};

/**
 * _0xD1A70C1E8D1031FE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xD1A70C1E8D1031FE = function (p0, p1) {
  return _in(0xd1a70c1e, 0x8d1031fe, p0, p1);
};

/**
 * _0xD1F6B912785BFD35
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xD1F6B912785BFD35 = function (p0) {
  return _in(0xd1f6b912, 0x785bfd35, p0, _r);
};

/**
 * _0xD288E02E364972D2
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xD288E02E364972D2 = function (p0, p1, p2) {
  return _in(0xd288e02e, 0x364972d2, p0, p1, p2);
};

/**
 * _0xD48227263E3D06AE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @return {void}
 */
global.N_0xD48227263E3D06AE = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0xd4822726, 0x3e3d06ae, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
};

/**
 * _0xDA9D7BE231FE865F
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xDA9D7BE231FE865F = function (p0, p1, p2) {
  return _in(0xda9d7be2, 0x31fe865f, p0, p1, p2, _r);
};

/**
 * _0xDAB6A2FC56B7DE65
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xDAB6A2FC56B7DE65 = function (p0) {
  return _in(0xdab6a2fc, 0x56b7de65, p0, _r);
};

/**
 * _0xDC5E09D012D759C4
 *
 * @param {number} entity1
 * @param {number} entity2
 * @param {any} p2
 * @return {void}
 */
global.N_0xDC5E09D012D759C4 = function (entity1, entity2, p2) {
  return _in(0xdc5e09d0, 0x12d759c4, entity1, entity2, p2);
};

/**
 * _0xDD33A82352C4652F
 *
 * @param {number} player
 * @param {number} ped
 * @param {number} p2
 * @return {void}
 */
global.N_0xDD33A82352C4652F = function (player, ped, p2) {
  return _in(0xdd33a823, 0x52c4652f, player, ped, p2);
};

/**
 * _0xDE6C85975F9D4894
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xDE6C85975F9D4894 = function (p0) {
  return _in(0xde6c8597, 0x5f9d4894, p0, _r);
};

/**
 * _0xE1D356F5A66D0FFA
 *
 * @param {number} emote
 * @return {boolean}
 */
global.N_0xE1D356F5A66D0FFA = function (emote) {
  return _in(0xe1d356f5, 0xa66d0ffa, _ch(emote), _r);
};

/**
 * _0xE50A67C33514A390
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xE50A67C33514A390 = function (p0, p1) {
  return _in(0xe50a67c3, 0x3514a390, p0, p1, _r);
};

/**
 * _0xE5D3EB37ABC1EB03
 * _CLEAR_FACIAL_* - _CLEAR_PED_BLOOD*
 *
 * @param {number} player
 * @return {void}
 */
global.N_0xE5D3EB37ABC1EB03 = function (player) {
  return _in(0xe5d3eb37, 0xabc1eb03, player);
};

/**
 * _0xE631EAF35828FA67
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xE631EAF35828FA67 = function (p0) {
  return _in(0xe631eaf3, 0x5828fa67, p0, _r);
};

/**
 * _0xE7F8707269544B29
 * _IS_PLAYER_A* - _IS_PLAYER_BE*
 *
 * @param {number} player
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xE7F8707269544B29 = function (player, ped) {
  return _in(0xe7f87072, 0x69544b29, player, ped, _r);
};

/**
 * _0xE910932F4B30BE23
 *
 * @param {number} player
 * @return {void}
 */
global.N_0xE910932F4B30BE23 = function (player) {
  return _in(0xe910932f, 0x4b30be23, player);
};

/**
 * _0xE92261BD28C0878F
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xE92261BD28C0878F = function (p0) {
  return _in(0xe92261bd, 0x28c0878f, p0, _r);
};

/**
 * _0xE956C2340A76272E
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xE956C2340A76272E = function (p0) {
  return _in(0xe956c234, 0x0a76272e, p0, _r);
};

/**
 * _0xEACEBAAE0A33FB3F
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xEACEBAAE0A33FB3F = function (p0) {
  return _in(0xeacebaae, 0x0a33fb3f, p0);
};

/**
 * _0xEBB6E27AC2FF32DA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0xEBB6E27AC2FF32DA = function (p0, p1, p2, p3, p4) {
  return _in(0xebb6e27a, 0xc2ff32da, p0, p1, p2, p3, p4);
};

/**
 * _0xEBFF94328FF7A18A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xEBFF94328FF7A18A = function (p0, p1) {
  return _in(0xebff9432, 0x8ff7a18a, p0, p1);
};

/**
 * _0xF21C7A3F3FFBA629
 * _CLEAR_FACIAL_* - _CLEAR_PED_BLOOD*
 *
 * @param {number} player
 * @return {void}
 */
global.N_0xF21C7A3F3FFBA629 = function (player) {
  return _in(0xf21c7a3f, 0x3ffba629, player);
};

/**
 * _0xF4CB347D7B5EB0FD
 *

 * @return {any}
 */
global.N_0xF4CB347D7B5EB0FD = function () {
  return _in(0xf4cb347d, 0x7b5eb0fd, _r);
};

/**
 * _0xF993373285053D77
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xF993373285053D77 = function (p0, p1, p2) {
  return _in(0xf9933732, 0x85053d77, p0, p1, p2);
};

/**
 * _0xFA437FA0738C370C
 * Params: p1, p2, p3, p4 = 1.f, 0, 0, 0 in R* Scripts
 * _SPECIAL_ABILITY*
 *
 * @param {number} player
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.N_0xFA437FA0738C370C = function (player, p1, p2, p3, p4) {
  return _in(0xfa437fa0, 0x738c370c, player, _fv(p1), p2, p3, p4);
};

/**
 * _0xFA7DAAE3959E6C7B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xFA7DAAE3959E6C7B = function (p0, p1) {
  return _in(0xfa7daae3, 0x959e6c7b, p0, p1);
};

/**
 * _ADD_PLAYER_AS_FOLLOW_TARGET
 * Used in script function: NET_AUTO_FOLLOW_UPDATE_LEADER_VALUES
 * followMode:
 * HORSEFOLLOWMODE_AUTO = 0,
 * HORSEFOLLOWMODE_SIDE_ONLY,
 * HORSEFOLLOWMODE_BEHIND_ONLY,
 * HORSEFOLLOWMODE_BEHIND_AND_SIDE,
 * HORSEFOLLOWMODE_BEHIND_CLOSE
 * followPriority:
 * HORSEFOLLOWPRIORITY_STEER_ASSIST = 0,
 * HORSEFOLLOWPRIORITY_AMBIENT,
 * HORSEFOLLOWPRIORITY_NORMAL,
 * HORSEFOLLOWPRIORITY_HIGH
 *
 * @param {number} player
 * @param {number} ped
 * @param {number} p2
 * @param {number} p3
 * @param {number} followMode
 * @param {number} followPriority
 * @param {boolean} p6
 * @return {void}
 */
global.AddPlayerAsFollowTarget = function (player, ped, p2, p3, followMode, followPriority, p6) {
  return _in(0xac22aa6d, 0xf4d1c1de, player, ped, _fv(p2), _fv(p3), followMode, followPriority, p6);
};

/**
 * _CLEAR_BOUNTY_TARGET
 *
 * @param {number} player
 * @return {void}
 */
global.ClearBountyTarget = function (player) {
  return _in(0x8f2a81c0, 0x9da9124a, player);
};

/**
 * _EAGLE_EYE_DISABLE_TRACKING_TRAIL
 *
 * @param {number} entity
 * @param {string | number} trail
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.EagleEyeDisableTrackingTrail = function (entity, trail, p2, p3) {
  return _in(0x40ab7309, 0x2c95b5f5, entity, _ts(trail), p2, p3);
};

/**
 * _EAGLE_EYE_SET_COLOR
 * false: default eagleeye color
 * true: green eagleeye color
 *
 * @param {number} player
 * @param {boolean} p1
 * @param {DataView} p2
 * @return {void}
 */
global.EagleEyeSetColor = function (player, p1, p2) {
  return _in(0x2c41d93f, 0x550d5e37, player, p1, p2);
};

/**
 * _EAGLE_EYE_SET_CUSTOM_DISTANCE
 *
 * @param {number} entity
 * @param {number} distance
 * @return {void}
 */
global.EagleEyeSetCustomDistance = function (entity, distance) {
  return _in(0x907b16b3, 0x834c69e2, entity, _fv(distance));
};

/**
 * _EAGLE_EYE_SET_DRAIN_RATE_MODIFIER
 *
 * @param {number} player
 * @param {number} modifier
 * @return {void}
 */
global.EagleEyeSetDrainRateModifier = function (player, modifier) {
  return _in(0xe0d6c2a1, 0x46a5c993, player, _fv(modifier));
};

/**
 * _EAGLE_EYE_SET_FOCUS_ON_ASSOCIATED_CLUE_TRAIL
 *
 * @param {number} player
 * @param {number} linkedWaypointPed
 * @return {void}
 */
global.EagleEyeSetFocusOnAssociatedClueTrail = function (player, linkedWaypointPed) {
  return _in(0x2af423d6, 0xecb2c485, player, linkedWaypointPed);
};

/**
 * _EAGLE_EYE_SET_PLUS_FLAG_DISABLED
 *
 * @param {number} ped
 * @param {boolean} disabled
 * @return {void}
 */
global.EagleEyeSetPlusFlagDisabled = function (ped, disabled) {
  return _in(0xce285a44, 0x13b00b7f, ped, disabled);
};

/**
 * _EAGLE_EYE_SET_TRACKING_UPGRADE
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.EagleEyeSetTrackingUpgrade = function (player, p1) {
  return _in(0xdfc85c51, 0x99045026, player, _fv(p1));
};

/**
 * _EAGLE_EYE_SET_TRACKING_UPGRADE_2
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.EagleEyeSetTrackingUpgrade_2 = function (player, p1) {
  return _in(0x6fa957d1, 0xb55941c1, player, _fv(p1));
};

/**
 * _ENABLE_CUSTOM_DEADEYE_ABILITY
 *
 * @param {number} player
 * @param {boolean} enable
 * @return {void}
 */
global.EnableCustomDeadeyeAbility = function (player, enable) {
  return _in(0x95ee1dee, 0x1dcd9070, player, enable);
};

/**
 * _ENABLE_EAGLEEYE
 * (Un)lock Eagle Eye functionality
 *
 * @param {number} player
 * @param {boolean} enable
 * @return {void}
 */
global.EnableEagleeye = function (player, enable) {
  return _in(0xa63fcad3, 0xa6fec6d2, player, enable);
};

/**
 * _FORCE_REST_SCENARIO
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.ForceRestScenario = function (toggle) {
  return _in(0xe5a3dd2f, 0xf84e1a4b, toggle);
};

/**
 * _FORMAT_PLAYER_NAME_STRING
 *
 * @param {string | number} string
 * @return {string | number}
 */
global.FormatPlayerNameString = function (string) {
  return _in(0x5b619381, 0x3e03e4e9, _ts(string), _r, _s);
};

/**
 * _GET_ACTIVE_HORSE_FOR_PLAYER
 *
 * @param {number} player
 * @return {number}
 */
global.GetActiveHorseForPlayer = function (player) {
  return _in(0x46fa0ae1, 0x8f4c7fa9, player, _r, _ri);
};

/**
 * _GET_AI_PLAYER_DEFENSE_MODIFIER_AGAINST_AI
 *
 * @param {number} player
 * @return {number}
 */
global.GetAiPlayerDefenseModifierAgainstAi = function (player) {
  return _in(0x2e78d822, 0x208e740a, player, _r, _rf);
};

/**
 * _GET_CONSTRUCTED_DISCOVERED_CHARACTER_NAME
 * p0: mostly Ped Hashes
 *
 * @param {number} p0
 * @param {boolean} model
 * @param {boolean} outfit
 * @return {number}
 */
global.GetConstructedDiscoveredCharacterName = function (p0, model, outfit) {
  return _in(0x8e84119a, 0x23c16623, _ch(p0), model, outfit, _r, _ri);
};

/**
 * _GET_DEADEYE_ABILITY_LEVEL
 *
 * @param {number} player
 * @return {number}
 */
global.GetDeadeyeAbilityLevel = function (player) {
  return _in(0xcce7c695, 0xc164c35f, player, _r, _ri);
};

/**
 * _GET_HAS_PLAYER_DISCOVERED_CHARACTER_NAME_SP
 *
 * @param {number} player
 * @param {number} p1
 * @param {number} discoveryHash
 * @return {boolean}
 */
global.GetHasPlayerDiscoveredCharacterNameSp = function (player, p1, discoveryHash) {
  return _in(0x0772f87d, 0x7b07719a, player, p1, _ch(discoveryHash), _r);
};

/**
 * _GET_IS_DEADEYE_TAGGING_ENABLED
 *
 * @param {number} player
 * @return {boolean}
 */
global.GetIsDeadeyeTaggingEnabled = function (player) {
  return _in(0x32348719, 0xdced2969, player, _r);
};

/**
 * _GET_NUM_MARKED_DEADEYE_TARGETS
 *
 * @param {number} player
 * @return {number}
 */
global.GetNumMarkedDeadeyeTargets = function (player) {
  return _in(0xccd9b77f, 0x70d31c9d, player, _r, _ri);
};

/**
 * _GET_PLAYER_CACHED_DEAD_EYE_AMOUNT
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerCachedDeadEyeAmount = function (player) {
  return _in(0xdf66a379, 0x36d5f3d9, player, _r, _rf);
};

/**
 * _GET_PLAYER_DEAD_EYE
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerDeadEye = function (player) {
  return _in(0xa81d24ae, 0x0af99a5e, player, _r, _rf);
};

/**
 * _GET_PLAYER_DEAD_EYE_METER_LEVEL
 *
 * @param {number} player
 * @param {boolean} p1
 * @return {number}
 */
global.GetPlayerDeadEyeMeterLevel = function (player, p1) {
  return _in(0x3a6ae4ee, 0xe30370fe, player, p1, _r, _rf);
};

/**
 * _GET_PLAYER_HEALTH
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerHealth = function (player) {
  return _in(0x0317c947, 0xd062854e, player, _r, _rf);
};

/**
 * _GET_PLAYER_HEALTH_RECHARGE_MULTIPLIER
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerHealthRechargeMultiplier = function (player) {
  return _in(0x22cd23bb, 0x0c45e0cd, player, _r, _rf);
};

/**
 * _GET_PLAYER_HUNTING_WAGON
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerHuntingWagon = function (player) {
  return _in(0x5ca6bbd4, 0xa7d8145e, player, _r, _ri);
};

/**
 * _GET_PLAYER_MAX_DEAD_EYE
 *
 * @param {number} player
 * @param {any} p1
 * @return {number}
 */
global.GetPlayerMaxDeadEye = function (player, p1) {
  return _in(0x592f58bc, 0x4d2a2cf3, player, p1, _r, _rf);
};

/**
 * _GET_PLAYER_MOOD
 * See _SET_PLAYER_MOOD
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerMood = function (player) {
  return _in(0x05447316, 0x4c012699, player, _r, _ri);
};

/**
 * _GET_PLAYER_OWNER_OF_MOUNT
 *
 * @param {number} mount
 * @return {number}
 */
global.GetPlayerOwnerOfMount = function (mount) {
  return _in(0xad03b037, 0x37ce6810, mount, _r, _ri);
};

/**
 * _GET_PLAYER_OWNER_OF_VEHICLE
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetPlayerOwnerOfVehicle = function (vehicle) {
  return _in(0x7c803bdc, 0x8343228d, vehicle, _r, _ri);
};

/**
 * _GET_PLAYER_PED_2
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerPed_2 = function (player) {
  return _in(0x5ebe38a2, 0x0bc51c27, player, _r, _ri);
};

/**
 * _GET_PLAYER_REQUIRED_DEAD_EYE_AMOUNT
 * If player has less Dead Eye than required, Dead Eye cant be triggered.
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerRequiredDeadEyeAmount = function (player) {
  return _in(0x811a748b, 0x1be231ba, player, _r, _rf);
};

/**
 * _GET_PLAYER_RESET_FLAG
 * playerResetFlag: See 0x9F9A829C6751F3C7
 *
 * @param {number} player
 * @param {number} playerResetFlag
 * @return {boolean}
 */
global.GetPlayerResetFlag = function (player, playerResetFlag) {
  return _in(0xfe691e89, 0xc08937b6, player, playerResetFlag, _r);
};

/**
 * _GET_PLAYER_SPECIAL_ABILITY_MULTIPLIER
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerSpecialAbilityMultiplier = function (player) {
  return _in(0xab3773e7, 0xaa1e9dcc, player, _r, _rf);
};

/**
 * _GET_PLAYER_STAMINA
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerStamina = function (player) {
  return _in(0x0ff421e4, 0x67373fcf, player, _r, _rf);
};

/**
 * _GET_PLAYER_STAMINA_DEPLETION_MULTIPLIER
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerStaminaDepletionMultiplier = function (player) {
  return _in(0x68a0389e, 0x0718ac8f, player, _r, _rf);
};

/**
 * _GET_PLAYER_STAMINA_RECHARGE_MULTIPLIER
 *
 * @param {number} player
 * @return {number}
 */
global.GetPlayerStaminaRechargeMultiplier = function (player) {
  return _in(0x617d3494, 0xad58200f, player, _r, _rf);
};

/**
 * _GET_PLAYER_UI_PROMPT_FOR_PED_IS_ENABLED
 * Returns true if PromptType is enabled for ped (mount)
 * Params: See 0x0751D461F06E41CE
 *
 * @param {number} player
 * @param {number} ped
 * @param {number} promptType
 * @param {number} promptMode
 * @return {boolean}
 */
global.GetPlayerUiPromptForPedIsEnabled = function (player, ped, promptType, promptMode) {
  return _in(0xea8f168a, 0x76a0b9bc, player, ped, promptType, promptMode, _r);
};

/**
 * _GET_PLAYER_UI_PROMPT_IS_DISABLED
 * Returns false if PromptType is enabled
 * Params: See 0x0751D461F06E41CE
 *
 * @param {number} player
 * @param {number} promptType
 * @param {number} promptMode
 * @return {boolean}
 */
global.GetPlayerUiPromptIsDisabled = function (player, promptType, promptMode) {
  return _in(0x6614f903, 0x9bd31931, player, promptType, promptMode, _r);
};

/**
 * _GET_PLAYER_WEAPON_DAMAGE
 *
 * @param {number} player
 * @param {number} weaponHash
 * @return {number}
 */
global.GetPlayerWeaponDamage = function (player, weaponHash) {
  return _in(0xfe030405, 0x0261442c, player, _ch(weaponHash), _r, _rf);
};

/**
 * _GET_SADDLE_HORSE_FOR_PLAYER
 *
 * @param {number} player
 * @return {number}
 */
global.GetSaddleHorseForPlayer = function (player) {
  return _in(0xb48050d3, 0x26e9a2f3, player, _r, _ri);
};

/**
 * _GET_TEMP_PLAYER_HORSE
 *
 * @param {number} player
 * @return {number}
 */
global.GetTempPlayerHorse = function (player) {
  return _in(0xd3f7445c, 0xea2e5035, player, _r, _ri);
};

/**
 * _GET_VEHICLE_OWNED_BY_PLAYER
 *
 * @param {number} player
 * @return {number}
 */
global.GetVehicleOwnedByPlayer = function (player) {
  return _in(0xb9050a97, 0x594c8832, player, _r, _ri);
};

/**
 * _GET_WANTED_LEVEL_MULTIPLIER
 * Returns -1.0f if no multiplier has been set
 *

 * @return {number}
 */
global.GetWantedLevelMultiplier = function () {
  return _in(0xa82964b9, 0xd8d6a983, _r, _rf);
};

/**
 * _IS_DEADEYE_ABILITY_LOCKED
 *
 * @param {number} player
 * @param {number} abilityType
 * @return {boolean}
 */
global.IsDeadeyeAbilityLocked = function (player, abilityType) {
  return _in(0x8a0643b0, 0xb4ca276b, player, abilityType, _r);
};

/**
 * _IS_EAGLE_EYE_REGISTERED_FOR_ENTITY
 *
 * @param {number} player
 * @param {number} entity
 * @return {boolean}
 */
global.IsEagleEyeRegisteredForEntity = function (player, entity) {
  return _in(0x0e684647, 0x6906c9dd, player, entity, _r);
};

/**
 * _IS_PLAYER_FOLLOWING_TARGET
 *
 * @param {number} player
 * @param {number} ped
 * @return {boolean}
 */
global.IsPlayerFollowingTarget = function (player, ped) {
  return _in(0xe24c64d9, 0xaded2ef5, player, ped, _r);
};

/**
 * _IS_PLAYER_FREE_FOCUSING
 * Checks if player is focused on any entity
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsPlayerFreeFocusing = function (player) {
  return _in(0x1a51bfe6, 0x0708e482, player, _r);
};

/**
 * _IS_PLAYER_IN_SCOPE
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsPlayerInScope = function (player) {
  return _in(0x04d7f336, 0x40662fa2, player, _r);
};

/**
 * _IS_SECONDARY_SPECIAL_ABILITY_ACTIVE
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsSecondarySpecialAbilityActive = function (player) {
  return _in(0x45ab66d0, 0x2b601fa7, player, _r);
};

/**
 * _IS_SECONDARY_SPECIAL_ABILITY_ENABLED
 * Returns true if eagle eye is enabled for the player
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsSecondarySpecialAbilityEnabled = function (player) {
  return _in(0xe022cc1b, 0x545f1d9f, player, _r);
};

/**
 * _IS_SPECIAL_ABILITY_ACTIVE
 *
 * @param {number} player
 * @return {boolean}
 */
global.IsSpecialAbilityActive = function (player) {
  return _in(0xb16223cb, 0x7da965f0, player, _r);
};

/**
 * _MODIFY_INFINITE_TRAIL_VISION
 * Toggle handles wether Deadeye and Eagleeye are infinite or not.
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.ModifyInfiniteTrailVision = function (player, toggle) {
  return _in(0x28a13bf6, 0xb05c3d83, player, toggle);
};

/**
 * _MODIFY_PLAYER_DISCOVERED_CHARACTER_NAME_MP_SET_UNDISCOVERED
 *
 * @param {number} discoveryHash
 * @return {void}
 */
global.ModifyPlayerDiscoveredCharacterNameMpSetUndiscovered = function (discoveryHash) {
  return _in(0xfb0e622b, 0x401884d3, _ch(discoveryHash));
};

/**
 * _MODIFY_PLAYER_UI_PROMPT
 * Params: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptType
 * promptType is mostly 34 (PP_TRACK_ANIMAL), promptMode = 0 (PP_MODE_BLOCK) in R* Scripts
 *
 * @param {number} player
 * @param {number} promptType
 * @param {number} promptMode
 * @param {boolean} disabled
 * @return {void}
 */
global.ModifyPlayerUiPrompt = function (player, promptType, promptMode, disabled) {
  return _in(0x0751d461, 0xf06e41ce, player, promptType, promptMode, disabled);
};

/**
 * _MODIFY_PLAYER_UI_PROMPT_FOR_PED
 * Params: See 0x0751D461F06E41CE
 *
 * @param {number} player
 * @param {number} ped
 * @param {number} promptType
 * @param {number} promptMode
 * @param {boolean} enabled
 * @return {void}
 */
global.ModifyPlayerUiPromptForPed = function (player, ped, promptType, promptMode, enabled) {
  return _in(0xa3db37ed, 0xf9a74635, player, ped, promptType, promptMode, enabled);
};

/**
 * _NETWORK_HAS_PLAYER_VALID_PED
 * Returns true if the given player has a valid ped.
 *
 * @param {number} player
 * @return {boolean}
 */
global.NetworkHasPlayerValidPed = function (player) {
  return _in(0x0760d6f7, 0x0ebcc05c, player, _r);
};

/**
 * _REGISTER_EAGLE_EYE_FOR_ENTITY
 * Used for setting up eagle eye for entity
 * Params: p2 = re-register or not?
 *
 * @param {number} player
 * @param {number} entity
 * @param {boolean} p2
 * @return {void}
 */
global.RegisterEagleEyeForEntity = function (player, entity, p2) {
  return _in(0x543dfe14, 0xbe720027, player, entity, p2);
};

/**
 * _REGISTER_EAGLE_EYE_TRAILS_FOR_ENTITY
 *
 * @param {number} player
 * @param {number} entity
 * @param {any} p2
 * @return {void}
 */
global.RegisterEagleEyeTrailsForEntity = function (player, entity, p2) {
  return _in(0xac67098a, 0x1e54abb0, player, entity, p2);
};

/**
 * _REMOVE_PLAYER_AS_FOLLOW_TARGET
 *
 * @param {number} player
 * @param {number} ped
 * @return {void}
 */
global.RemovePlayerAsFollowTarget = function (player, ped) {
  return _in(0x0c6b8987, 0x6262a99d, player, ped);
};

/**
 * _SECONDARY_SPECIAL_ABILITY_SET_ACTIVE
 * Activates EagleEye, called together with 0x28A13BF6B05C3D83
 *
 * @param {number} player
 * @return {void}
 */
global.SecondarySpecialAbilitySetActive = function (player) {
  return _in(0x1710bc33, 0xcfb83634, player);
};

/**
 * _SECONDARY_SPECIAL_ABILITY_SET_DISABLED
 * Deactivates EagleEye, called together with 0xC0B21F235C02139C
 *
 * @param {number} player
 * @param {boolean} disabled
 * @return {void}
 */
global.SecondarySpecialAbilitySetDisabled = function (player, disabled) {
  return _in(0x64ff4bf9, 0xaf59e139, player, disabled);
};

/**
 * _SET_AI_PLAYER_DEFENSE_MODIFIER_AGAINST_AI
 * Sets Player's Defense against AI modifier
 *
 * @param {number} player
 * @param {number} modifier
 * @return {void}
 */
global.SetAiPlayerDefenseModifierAgainstAi = function (player, modifier) {
  return _in(0x914071ff, 0x93af2692, player, _fv(modifier));
};

/**
 * _SET_BOUNTY_TARGET
 *
 * @param {number} player
 * @param {number} target
 * @return {void}
 */
global.SetBountyTarget = function (player, target) {
  return _in(0x6adf821f, 0xbf21920e, player, target);
};

/**
 * _SET_BOW_DRAW_REDUCTION_TIME_IN_DEADEYE
 *
 * @param {number} player
 * @param {number} drawReductionTime
 * @return {void}
 */
global.SetBowDrawReductionTimeInDeadeye = function (player, drawReductionTime) {
  return _in(0xbe0c5249, 0x70892d41, player, _fv(drawReductionTime));
};

/**
 * _SET_BOW_STAMINA_DRAIN_SPEED
 * Decreases Stamina bar drain speed by % when drawing a bow.
 *
 * @param {number} player
 * @param {number} staminaDrain
 * @return {void}
 */
global.SetBowStaminaDrainSpeed = function (player, staminaDrain) {
  return _in(0xfe7c9cf3, 0x76d23342, player, _fv(staminaDrain));
};

/**
 * _SET_DAMAGE_CLOSE_DISTANCE_BONUS
 *
 * @param {number} player
 * @param {number} closeRangeLowerBound
 * @param {number} closeRangeUpperBound
 * @return {void}
 */
global.SetDamageCloseDistanceBonus = function (player, closeRangeLowerBound, closeRangeUpperBound) {
  return _in(0x7761a304, 0x32c91297, player, _fv(closeRangeLowerBound), _fv(closeRangeUpperBound));
};

/**
 * _SET_DAMAGE_CLOSE_DISTANCE_BONUS_TOTAL
 *
 * @param {number} player
 * @param {number} closeDamageBonus
 * @return {void}
 */
global.SetDamageCloseDistanceBonusTotal = function (player, closeDamageBonus) {
  return _in(0x5006c366, 0x52d6ec56, player, _fv(closeDamageBonus));
};

/**
 * _SET_DAMAGE_FAR_DISTANCE_BONUS
 *
 * @param {number} player
 * @param {number} farRangeLowerBound
 * @param {number} farRangeUpperBound
 * @return {void}
 */
global.SetDamageFarDistanceBonus = function (player, farRangeLowerBound, farRangeUpperBound) {
  return _in(0xed591cb1, 0x7c8ba216, player, _fv(farRangeLowerBound), _fv(farRangeUpperBound));
};

/**
 * _SET_DAMAGE_FAR_DISTANCE_BONUS_TOTAL
 *
 * @param {number} player
 * @param {number} farDamageBonus
 * @return {void}
 */
global.SetDamageFarDistanceBonusTotal = function (player, farDamageBonus) {
  return _in(0x1f0e3a44, 0x34565f8f, player, _fv(farDamageBonus));
};

/**
 * _SET_DEADEYE_ABILITY_DEPLETION_DELAY
 * Only used in R* SP Script short_update
 *
 * @param {number} player
 * @param {number} delay
 * @return {void}
 */
global.SetDeadeyeAbilityDepletionDelay = function (player, delay) {
  return _in(0x87063449, 0x3cb4372c, player, _fv(delay));
};

/**
 * _SET_DEADEYE_ABILITY_LEVEL
 * Max level is 5.
 *
 * @param {number} player
 * @param {number} level
 * @return {void}
 */
global.SetDeadeyeAbilityLevel = function (player, level) {
  return _in(0xf0fe8e79, 0x0bfeb5bb, player, level);
};

/**
 * _SET_DEADEYE_ABILITY_LOCKED
 *
 * @param {number} player
 * @param {number} abilityType
 * @param {boolean} toggle
 * @return {void}
 */
global.SetDeadeyeAbilityLocked = function (player, abilityType, toggle) {
  return _in(0x2797b8d6, 0x6dd0ebb8, player, abilityType, toggle);
};

/**
 * _SET_DEADEYE_TAGGING_CONFIG
 *
 * @param {number} player
 * @param {number} filter
 * @return {void}
 */
global.SetDeadeyeTaggingConfig = function (player, filter) {
  return _in(0x83fcd692, 0x1fc8fd05, player, filter);
};

/**
 * _SET_DEADEYE_TAGGING_ENABLED
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetDeadeyeTaggingEnabled = function (player, toggle) {
  return _in(0x6b5ddfb9, 0x67e5073d, player, toggle);
};

/**
 * _SET_DISABLE_PLAYER_WANTED_LEVEL
 * Disables the players ability to be wanted by lawmen
 *
 * @param {number} player
 * @param {boolean} disable
 * @return {void}
 */
global.SetDisablePlayerWantedLevel = function (player, disable) {
  return _in(0x8674d138, 0x391ffb1b, player, disable);
};

/**
 * _SET_LOCAL_PLAYER_PERSONA_ABILITY_FLAG
 * see personaabilities.meta
 * enum ePersonaAbilityFlag
 * {
 *   PERSONA_CAN_AUTOESCAPE_FROM_LASSO,
 *   PERSONA_HAT_BLOCKS_FIRST_HEADSHOT,
 *   PERSONA_FULL_AUTO_FOR_ALL_WEAPONS,
 *   PERSONA_MIGHT_LIVE_AFTER_DEADLY_DAMAGE,
 *   PERSONA_IGNORE_AIM_BEFORE_FIRING_RESTRICTIONS,
 *   PERSONA_DEADEYE_INSTANT_RELOAD,
 *   PERSONA_USE_PHOSPHOROUS_ROUNDS,
 *   PERSONA_CONT_DEADEYE_ON_TAKING_COVER,
 *   PERSONA_CONT_DEADEYE_ON_RELOAD,
 *   PERSONA_CONT_DEADEYE_ON_SHOOTING,
 *   PERSONA_CONT_DEADEYE_ON_EXITING_AIM,
 *   PERSONA_DISABLE_PLAYER_CANCELLING_DEADEYE,
 *   PERSONA_CONT_DEADEYE_ON_RAGDOLL,
 *   PERSONA_USE_EXPLOSIVE_ROUNDS,
 *   PERSONA_EXIT_DEADEYE_ON_TAKING_DAMAGE,
 *   PERSONA_CARRY_TWO_MONEYBAGS,
 *   PERSONA_ABILITY_LONG_PICK_HERBS,
 *   PERSONA_ABILITY_UNBREAKABLE_LASSO,
 *   PERSONA_CONT_DEADEYE_ON_SPRINTING,
 *   PERSONA_CANT_DEAL_HEADSHOTS,
 *   PERSONA_HANGMAN,
 *   PERSONA_ALLOW_DEADEYE_WITH_MELEE_WEAPONS,
 *   PERSONA_ALLOW_DEADEYE_WHILE_UNARMED,
 *   PERSONA_DISABLE_DEADEYE_PERFECT_ACCURACY,
 *   PERSONA_CANT_DEAL_HEADSHOTS_TO_PLAYERS,
 *   PERSONA_CANT_DEAL_CRITICAL_DAMAGE,
 *   PERSONA_CANT_DEAL_CRITICAL_DAMAGE_TO_PLAYERS,
 *   PERSONA_ALLOW_EAGLEEYE_IN_COMBAT,
 *   PERSONA_CONT_EAGLEEYE_ON_SPRINT,
 *   PERSONA_SUPPRESS_LENGENDARY_EAGLEEYE_TRAIL_COLOR
 * };
 *
 * @param {number} flagId
 * @param {boolean} toggle
 * @return {void}
 */
global.SetLocalPlayerPersonaAbilityFlag = function (flagId, toggle) {
  return _in(0x7146cf43, 0x0965927c, flagId, toggle);
};

/**
 * _SET_LOCKON_FOCUS_FIRE_VFX
 * Focus Fire VFX start for player: p1 = focusfire
 *
 * @param {number} player
 * @param {string | number} p1
 * @return {void}
 */
global.SetLockonFocusFireVfx = function (player, p1) {
  return _in(0x5f8e0303, 0xc229c84b, player, _ts(p1));
};

/**
 * _SET_MAX_WANTED_LEVEL_2
 *
 * @param {number} maxWantedLevel
 * @return {void}
 */
global.SetMaxWantedLevel_2 = function (maxWantedLevel) {
  return _in(0xea6de0cd, 0x15aecbe2, maxWantedLevel);
};

/**
 * _SET_MOUNT_PROMPT_DISABLED
 *
 * @param {boolean} disabled
 * @return {void}
 */
global.SetMountPromptDisabled = function (disabled) {
  return _in(0x5b9813ec, 0xf7633fe8, disabled);
};

/**
 * _SET_PED_ACTIVE_PLAYER_HORSE
 * Seems to work similar to 0xD2CB0FB0FDCB473D
 *
 * @param {number} player
 * @param {number} horse
 * @return {void}
 */
global.SetPedActivePlayerHorse = function (player, horse) {
  return _in(0x8fbf9edb, 0x378ccb8c, player, horse);
};

/**
 * _SET_PED_AS_SADDLE_HORSE_FOR_PLAYER
 *
 * @param {number} player
 * @param {number} mount
 * @return {void}
 */
global.SetPedAsSaddleHorseForPlayer = function (player, mount) {
  return _in(0xd2cb0fb0, 0xfdcb473d, player, mount);
};

/**
 * _SET_PLAYER_CAN_MERCY_KILL
 *
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPlayerCanMercyKill = function (player, toggle) {
  return _in(0x39363dfd, 0x04e91496, player, toggle);
};

/**
 * _SET_PLAYER_DAMAGE_INFO_OVERRIDE
 * damageInfo: STANDARD_PED_DAMAGE, STANDARD_FEMALE_PED_DAMAGE, STANDARD_PLAYER_PED_DAMAGE_MP, STANDARD_FEMALE_PLAYER_PED_DAMAGE_MP
 *
 * @param {number} player
 * @param {string | number} damageInfo
 * @return {void}
 */
global.SetPlayerDamageInfoOverride = function (player, damageInfo) {
  return _in(0x78b3d19a, 0xf6391a55, player, _ts(damageInfo));
};

/**
 * _SET_PLAYER_DEFENSE_MODIFIER
 * Sets stamina core drains peed using ranged damage scale and melee damage scale
 *
 * @param {number} player
 * @param {number} weaponDefenseMod
 * @param {number} meleeDefenseMod
 * @return {void}
 */
global.SetPlayerDefenseModifier = function (player, weaponDefenseMod, meleeDefenseMod) {
  return _in(0x497a6539, 0xbb0e8787, player, _fv(weaponDefenseMod), _fv(meleeDefenseMod));
};

/**
 * _SET_PLAYER_DEFENSE_TYPE_MODIFIER
 * bullet damage modifier: type = 4
 * explosive damage Defense mod: type = 7
 * fire damage Defense mod: type = 8, 15
 *
 * @param {number} player
 * @param {number} type
 * @param {number} defenseModifier
 * @return {void}
 */
global.SetPlayerDefenseTypeModifier = function (player, type, defenseModifier) {
  return _in(0x93f499ca, 0xe53fcd05, player, type, _fv(defenseModifier));
};

/**
 * _SET_PLAYER_EXPLOSIVE_WEAPON_DAMAGE_MODIFIER
 *
 * @param {number} player
 * @param {number} modifier
 * @return {void}
 */
global.SetPlayerExplosiveWeaponDamageModifier = function (player, modifier) {
  return _in(0x2d3ace3d, 0xe0a2b622, player, _fv(modifier));
};

/**
 * _SET_PLAYER_HAS_DISCOVERED_CHARACTER_NAME_MP
 *
 * @param {number} discoveryHash
 * @return {void}
 */
global.SetPlayerHasDiscoveredCharacterNameMp = function (discoveryHash) {
  return _in(0x7c32191d, 0x9fb2bdea, _ch(discoveryHash));
};

/**
 * _SET_PLAYER_HAS_DISCOVERED_CHARACTER_NAME_SP
 *
 * @param {number} player
 * @param {number} p1
 * @param {number} discoveryHash
 * @return {void}
 */
global.SetPlayerHasDiscoveredCharacterNameSp = function (player, p1, discoveryHash) {
  return _in(0x946d46cd, 0x6dfb9742, player, p1, _ch(discoveryHash));
};

/**
 * _SET_PLAYER_HEALTH_RECHARGE_TIME_MODIFIER
 * Setting player's Health recharge time to zero forces immediate health regen
 *
 * @param {number} player
 * @param {number} modifier
 * @return {void}
 */
global.SetPlayerHealthRechargeTimeModifier = function (player, modifier) {
  return _in(0x535ed460, 0x5f89ab6e, player, _fv(modifier));
};

/**
 * _SET_PLAYER_HUNTING_WAGON
 * Only applies to HUNTERCART01
 *
 * @param {number} player
 * @param {number} wagon
 * @return {void}
 */
global.SetPlayerHuntingWagon = function (player, wagon) {
  return _in(0x6a4404bd, 0xfa62ce2c, player, wagon);
};

/**
 * _SET_PLAYER_INTERACTION_NEGATIVE_RESPONSE
 *
 * @param {number} player
 * @param {string | number} speech
 * @return {void}
 */
global.SetPlayerInteractionNegativeResponse = function (player, speech) {
  return _in(0x98cd760d, 0xe43b612e, player, _ts(speech));
};

/**
 * _SET_PLAYER_INTERACTION_POSITIVE_RESPONSE
 *
 * @param {number} player
 * @param {string | number} speech
 * @return {void}
 */
global.SetPlayerInteractionPositiveResponse = function (player, speech) {
  return _in(0xc6366a58, 0x5659d15c, player, _ts(speech));
};

/**
 * _SET_PLAYER_IN_VEHICLE_TARGETING_MODE
 * Sets your targeting mode for when you're in a vehicle (perhaps a mount/horse).
 * see SET_PLAYER_TARGETING_MODE for eTargetingMode
 *
 * @param {number} targetMode
 * @return {void}
 */
global.SetPlayerInVehicleTargetingMode = function (targetMode) {
  return _in(0x19b4f717, 0x03902238, targetMode);
};

/**
 * _SET_PLAYER_LASSO_DAMAGE_PER_SECOND
 * _SET_PLAYER_A* - _SET_PLAYER_C*
 *
 * @param {number} player
 * @param {number} damage
 * @return {void}
 */
global.SetPlayerLassoDamagePerSecond = function (player, damage) {
  return _in(0x43f50a7c, 0xd2482156, player, _fv(damage));
};

/**
 * _SET_PLAYER_LOCAL_ACCURACY_FLOOR_MODIFIER
 *
 * @param {number} player
 * @param {number} accuracy
 * @return {void}
 */
global.SetPlayerLocalAccuracyFloorModifier = function (player, accuracy) {
  return _in(0x4ea69188, 0xfbce6a7d, player, _fv(accuracy));
};

/**
 * _SET_PLAYER_MANAGE_BUFF_SUPER_JUMP
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.SetPlayerManageBuffSuperJump = function (player, p1) {
  return _in(0x292f0b6e, 0xdc82e3a4, player, _fv(p1));
};

/**
 * _SET_PLAYER_MAX_AMMO_OVERRIDE_FOR_AMMO_TYPE
 *
 * @param {number} player
 * @param {number} ammoType
 * @param {number} amount
 * @return {void}
 */
global.SetPlayerMaxAmmoOverrideForAmmoType = function (player, ammoType, amount) {
  return _in(0xe133c1ec, 0x5300f740, player, _ch(ammoType), amount);
};

/**
 * _SET_PLAYER_MOOD
 * mood: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedMood
 *
 * @param {number} player
 * @param {number} mood
 * @return {void}
 */
global.SetPlayerMood = function (player, mood) {
  return _in(0x39bed552, 0xdb46ffa9, player, mood);
};

/**
 * _SET_PLAYER_MOUNT_STATE_ACTIVE
 * Name could potentially be inaccurate.
 * Used in Script Function HORSE_SETUP_PLAYER_HORSE_ATTRIBUTES (p1 = true)
 * _SET_PLAYER_L* - _SET_PLAYER_M*
 *
 * @param {number} player
 * @param {boolean} active
 * @return {void}
 */
global.SetPlayerMountStateActive = function (player, active) {
  return _in(0xdf939732, 0x51fb2ca5, player, active);
};

/**
 * _SET_PLAYER_OWNS_MOUNT
 * Seems to enable active horse equipment prompt when being near it and enables the control that opens the inventory as well
 *
 * @param {number} player
 * @param {number} mount
 * @return {void}
 */
global.SetPlayerOwnsMount = function (player, mount) {
  return _in(0xe6d4e435, 0xb56d5bd0, player, mount);
};

/**
 * _SET_PLAYER_OWNS_VEHICLE
 *
 * @param {number} player
 * @param {number} vehicle
 * @return {void}
 */
global.SetPlayerOwnsVehicle = function (player, vehicle) {
  return _in(0xd0e02aa6, 0x18020d17, player, vehicle);
};

/**
 * _SET_PLAYER_REMOTE_ACCURACY_FLOOR_MODIFIER
 *
 * @param {number} player
 * @param {number} accuracy
 * @return {void}
 */
global.SetPlayerRemoteAccuracyFloorModifier = function (player, accuracy) {
  return _in(0xdee80fed, 0xfdd43c9b, player, _fv(accuracy));
};

/**
 * _SET_PLAYER_RESET_FLAG
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePlayerResetFlags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/PLAYER_RESET_FLAGS
 *
 * @param {number} player
 * @param {number} playerResetFlag
 * @param {boolean} p2
 * @return {void}
 */
global.SetPlayerResetFlag = function (player, playerResetFlag, p2) {
  return _in(0x9f9a829c, 0x6751f3c7, player, playerResetFlag, p2);
};

/**
 * _SET_PLAYER_STAMINA_SPRINT_DEPLETION_MULTIPLIER
 *
 * @param {number} player
 * @param {number} multiplier
 * @return {void}
 */
global.SetPlayerStaminaSprintDepletionMultiplier = function (player, multiplier) {
  return _in(0xbbadfb5e, 0x5e5766fb, player, _fv(multiplier));
};

/**
 * _SET_PLAYER_STAT_FLAG_HASH
 * _N*, _O* or _PE*
 *
 * @param {number} player
 * @param {number} p1
 * @return {void}
 */
global.SetPlayerStatFlagHash = function (player, p1) {
  return _in(0x768e81ae, 0x285a4b67, player, _ch(p1));
};

/**
 * _SET_PLAYER_TOTAL_ACCURACY_MODIFIER
 *
 * @param {number} player
 * @param {number} accuracy
 * @return {void}
 */
global.SetPlayerTotalAccuracyModifier = function (player, accuracy) {
  return _in(0x967ff5bc, 0x0cfe6d26, player, _fv(accuracy));
};

/**
 * _SET_PLAYER_TRAMPLE_DAMAGE_MODIFIER
 *
 * @param {number} player
 * @param {number} modifier
 * @return {void}
 */
global.SetPlayerTrampleDamageModifier = function (player, modifier) {
  return _in(0xaf341032, 0xe97fb061, player, _fv(modifier));
};

/**
 * _SET_PLAYER_WEAPON_GROUP_AS_INSTANT_KILL
 *
 * @param {number} player
 * @param {number} weaponGroup
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPlayerWeaponGroupAsInstantKill = function (player, weaponGroup, toggle) {
  return _in(0x59f0aff3, 0xe0a1b019, player, _ch(weaponGroup), toggle);
};

/**
 * _SET_PLAYER_WEAPON_GROUP_DAMAGE_MODIFIER
 *
 * @param {number} player
 * @param {number} weaponGroup
 * @param {number} modifier
 * @return {void}
 */
global.SetPlayerWeaponGroupDamageModifier = function (player, weaponGroup, modifier) {
  return _in(0xfc79dcc9, 0x4d0a5897, player, _ch(weaponGroup), _fv(modifier));
};

/**
 * _SET_RECEIVED_HORSEBACK_DAMAGE_DECREASE
 * Decreases the damage the player receives while on horseback
 *
 * @param {number} player
 * @param {number} damageDecrease
 * @return {void}
 */
global.SetReceivedHorsebackDamageDecrease = function (player, damageDecrease) {
  return _in(0xb427911e, 0xa6dffef3, player, _fv(damageDecrease));
};

/**
 * _SET_SHOW_INFO_CARD
 *
 * @param {number} player
 * @param {boolean} showingInfoCard
 * @return {void}
 */
global.SetShowInfoCard = function (player, showingInfoCard) {
  return _in(0xdc68829b, 0xb3f37023, player, showingInfoCard);
};

/**
 * _SET_SPECIAL_ABILITY_ACTIVATION_COST
 *
 * @param {number} player
 * @param {number} activationCost
 * @param {number} p2
 * @return {void}
 */
global.SetSpecialAbilityActivationCost = function (player, activationCost, p2) {
  return _in(0xae4bcc79, 0xc587ebbf, player, _fv(activationCost), p2);
};

/**
 * _SET_SPECIAL_ABILITY_DISABLE_TIMER
 * Only used in R* SP Script short_update
 *
 * @param {number} player
 * @param {number} timer
 * @return {void}
 */
global.SetSpecialAbilityDisableTimer = function (player, timer) {
  return _in(0xc0b1c05b, 0x313693d1, player, _fv(timer));
};

/**
 * _SET_SPECIAL_ABILITY_DURATION_COST
 * durationCost: per second
 *
 * @param {number} player
 * @param {number} durationCost
 * @return {void}
 */
global.SetSpecialAbilityDurationCost = function (player, durationCost) {
  return _in(0xb783f759, 0x40b23014, player, _fv(durationCost));
};

/**
 * _SET_SPECIAL_ABILITY_MULTIPLIER
 *
 * @param {number} player
 * @param {number} multiplier
 * @return {void}
 */
global.SetSpecialAbilityMultiplier = function (player, multiplier) {
  return _in(0x5a498fca, 0x232f71e1, player, _fv(multiplier));
};

/**
 * _SET_SPECIAL_ABILITY_TYPE
 * SPECIAL_ABILITY_NONE = -1,
 * SPECIAL_ABILITY_CAR_SLOWDOWN,
 * SPECIAL_ABILITY_RAGE,
 * SPECIAL_ABILITY_BULLET_TIME,
 * SPECIAL_ABILITY_SNAPSHOT,
 * SPECIAL_ABILITY_INSULT,
 * SPECIAL_ABILITY_DEADEYE,
 * SPECIAL_ABILITY_REVIVE
 *
 * @param {number} player
 * @param {number} type
 * @return {void}
 */
global.SetSpecialAbilityType = function (player, type) {
  return _in(0x00ba333d, 0xa05adc23, player, type);
};

/**
 * _SET_USED_ITEM_EFFECT
 *
 * @param {number} health
 * @param {number} stamina
 * @param {number} deadeye
 * @param {number} healthCore
 * @param {number} staminaCore
 * @param {number} deadeyeCore
 * @return {void}
 */
global.SetUsedItemEffect = function (health, stamina, deadeye, healthCore, staminaCore, deadeyeCore) {
  return _in(0x0e1db1f8, 0xf5b561dc, _fv(health), _fv(stamina), _fv(deadeye), healthCore, staminaCore, deadeyeCore);
};

/**
 * _SET_WEAPON_DEGRADATION_MODIFIER
 *
 * @param {number} player
 * @param {number} modifier
 * @return {void}
 */
global.SetWeaponDegradationModifier = function (player, modifier) {
  return _in(0x11a7ff91, 0x8ef6bc66, player, _fv(modifier));
};

/**
 * _SPECIAL_ABILITY_DRAIN_BY_AMOUNT
 * Drains Deadeye by given amount.
 *
 * @param {number} player
 * @param {number} amount
 * @param {any} p2
 * @return {void}
 */
global.SpecialAbilityDrainByAmount = function (player, amount, p2) {
  return _in(0x200114e9, 0x9552462b, player, _fv(amount), p2);
};

/**
 * _SPECIAL_ABILITY_GET_AMOUNT_CACHED
 * Returns Deadeye value from player
 *
 * @param {number} player
 * @return {number}
 */
global.SpecialAbilityGetAmountCached = function (player) {
  return _in(0x029884fb, 0x65821b07, player, _r, _rf);
};

/**
 * _SPECIAL_ABILITY_RESTORE_BY_AMOUNT
 * Restores Deadeye by given amount.
 * Params: p2, p3, p4 = 0, 0, 1 in R* Scripts
 *
 * @param {number} player
 * @param {number} amount
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.SpecialAbilityRestoreByAmount = function (player, amount, p2, p3, p4) {
  return _in(0x51345ae2, 0x0f22c261, player, _fv(amount), p2, p3, p4);
};

/**
 * _SPECIAL_ABILITY_RESTORE_OUTER_RING
 * Only used in R* SP Script short_update
 * Restores Deadeye Outer Ring
 *
 * @param {number} player
 * @param {number} amount
 * @return {void}
 */
global.SpecialAbilityRestoreOuterRing = function (player, amount) {
  return _in(0x24980352, 0x89b5688f, player, _fv(amount));
};

/**
 * _SPECIAL_ABILITY_SET_DISABLED
 *
 * @param {number} player
 * @param {boolean} disabled
 * @return {void}
 */
global.SpecialAbilitySetDisabled = function (player, disabled) {
  return _in(0xae637bb8, 0xef017875, player, disabled);
};

/**
 * _SPECIAL_ABILITY_SET_EAGLE_EYE_DISABLED
 *
 * @param {number} player
 * @return {void}
 */
global.SpecialAbilitySetEagleEyeDisabled = function (player) {
  return _in(0xc0b21f23, 0x5c02139c, player);
};

/**
 * _SPECIAL_ABILITY_START_RESTORE
 * Params: p1 = -1 in R* Scripts
 *
 * @param {number} player
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.SpecialAbilityStartRestore = function (player, p1, p2) {
  return _in(0x1d77b47a, 0xfa584e90, player, p1, p2);
};

/**
 * _UNREGISTER_EAGLE_EYE_FOR_ENTITY
 *
 * @param {number} player
 * @param {number} entity
 * @return {void}
 */
global.UnregisterEagleEyeForEntity = function (player, entity) {
  return _in(0x9dae1380, 0xcc5c6451, player, entity);
};

/**
 * _UNREGISTER_EAGLE_EYE_TRAILS_FOR_ENTITY
 *
 * @param {number} player
 * @param {number} entity
 * @param {any} p2
 * @return {void}
 */
global.UnregisterEagleEyeTrailsForEntity = function (player, entity, p2) {
  return _in(0x9a957912, 0xce2eabd1, player, entity, p2);
};

/**
 * CLEAR_SPAWNER_INFO_PRIORITY
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.ClearSpawnerInfoPriority = function (p0, p1) {
  return _in(0x217a54de, 0x2d200305, _ch(p0), _ch(p1));
};

/**
 * DISABLE_AMBIENT_ROAD_POPULATION
 *
 * @param {boolean} unk
 * @return {void}
 */
global.DisableAmbientRoadPopulation = function (unk) {
  return _in(0xc6dcc2a3, 0xa8825c85, unk);
};

/**
 * ENABLE_AMBIENT_ROAD_POPULATION
 *

 * @return {void}
 */
global.EnableAmbientRoadPopulation = function () {
  return _in(0xbc90bdf4, 0xe5228ea1);
};

/**
 * GET_NUM_MODELS_IN_POPULATION_SET
 *
 * @param {number} popSetHash
 * @return {number}
 */
global.GetNumModelsInPopulationSet = function (popSetHash) {
  return _in(0xa1e3171e, 0xd0e47564, _ch(popSetHash), _r, _ri);
};

/**
 * GET_PED_MODEL_NAME_IN_POPULATION_SET
 *
 * @param {number} popSetHash
 * @param {number} index
 * @return {number}
 */
global.GetPedModelNameInPopulationSet = function (popSetHash, index) {
  return _in(0x3eafa1c5, 0x33b7139e, _ch(popSetHash), index, _r, _ri);
};

/**
 * GET_RANDOM_MODEL_FROM_POPULATION_SET
 *
 * @param {number} popSetHash
 * @param {number} flags
 * @param {number} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.GetRandomModelFromPopulationSet = function (popSetHash, flags, p2, p3, p4, x, y, z) {
  return _in(0x6b12ed8c, 0x77e8567b, _ch(popSetHash), flags, _ch(p2), p3, p4, _fv(x), _fv(y), _fv(z), _r, _ri);
};

/**
 * SET_POPZONE_POPULATION_SET
 *
 * @param {number} popZone
 * @param {number} populationSetHash
 * @return {void}
 */
global.SetPopzonePopulationSet = function (popZone, populationSetHash) {
  return _in(0x3e6a49d9, 0xb519e85c, popZone, _ch(populationSetHash));
};

/**
 * SET_SPAWNER_INFO_PRIORITY
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} priority
 * @return {void}
 */
global.SetSpawnerInfoPriority = function (p0, p1, priority) {
  return _in(0x60cde717, 0xa6d47769, _ch(p0), _ch(p1), priority);
};

/**
 * _0x08892122769770D5
 *
 * @param {number} popZone
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x08892122769770D5 = function (popZone, p1) {
  return _in(0x08892122, 0x769770d5, popZone, p1);
};

/**
 * _0x0F1861101C9A9944
 *
 * @param {number} popZone
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x0F1861101C9A9944 = function (popZone, p1) {
  return _in(0x0f186110, 0x1c9a9944, popZone, p1);
};

/**
 * _0x2161278C6322F740
 *
 * @param {number} includeFlags
 * @param {number} excludeFlags
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} volume
 * @return {void}
 */
global.N_0x2161278C6322F740 = function (includeFlags, excludeFlags, p2, p3, p4, volume) {
  return _in(0x2161278c, 0x6322f740, includeFlags, excludeFlags, p2, _ch(p3), p4, volume);
};

/**
 * _0x247F86595D396344
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x247F86595D396344 = function (p0) {
  return _in(0x247f8659, 0x5d396344, p0);
};

/**
 * _0x2660E7720EDC4BD0
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x2660E7720EDC4BD0 = function (p0, p1, p2) {
  return _in(0x2660e772, 0x0edc4bd0, p0, p1, p2);
};

/**
 * _0x324AB2A68AD8AEE5
 *

 * @return {void}
 */
global.N_0x324AB2A68AD8AEE5 = function () {
  return _in(0x324ab2a6, 0x8ad8aee5);
};

/**
 * _0x578E2FA64E847C60
 *
 * @param {number} popZone
 * @param {number} p1
 * @return {void}
 */
global.N_0x578E2FA64E847C60 = function (popZone, p1) {
  return _in(0x578e2fa6, 0x4e847c60, popZone, p1);
};

/**
 * _0x638FCFC6042A9473
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x638FCFC6042A9473 = function (p0, p1) {
  return _in(0x638fcfc6, 0x042a9473, p0, p1);
};

/**
 * _0x7E6BC0B94F5928F0
 *
 * @param {number} popZone
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0x7E6BC0B94F5928F0 = function (popZone, p1, p2) {
  return _in(0x7e6bc0b9, 0x4f5928f0, popZone, p1, p2);
};

/**
 * _0x8EC7CD701F872F87
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0x8EC7CD701F872F87 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x8ec7cd70, 0x1f872f87, p0, p1, p2, p3, p4, p5);
};

/**
 * _0xC4533E3E87125C9E
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC4533E3E87125C9E = function (p0) {
  return _in(0xc4533e3e, 0x87125c9e, p0);
};

/**
 * _0xDBBF12EA7C1029B2
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xDBBF12EA7C1029B2 = function (p0, p1) {
  return _in(0xdbbf12ea, 0x7c1029b2, p0, p1);
};

/**
 * _0xEC116EDB683AD479
 * Only used for Special Event (XMAS).
 * _SET_P*
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0xEC116EDB683AD479 = function (p0) {
  return _in(0xec116edb, 0x683ad479, p0);
};

/**
 * _0xF45E46DEECF7DF6E
 *
 * @param {number} bitFlag
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0xF45E46DEECF7DF6E = function (bitFlag, p1, p2, p3, p4) {
  return _in(0xf45e46de, 0xecf7df6e, bitFlag, p1, p2, p3, p4);
};

/**
 * _ADD_AMBIENT_AVOIDANCE_RESTRICTION
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/PedFilterFlags
 *
 * @param {number} volume
 * @param {number} includeFlags
 * @param {number} excludeFlags
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @return {void}
 */
global.AddAmbientAvoidanceRestriction = function (volume, includeFlags, excludeFlags, p3, p4, p5, p6) {
  return _in(0xb56d41a6, 0x94e42e86, volume, includeFlags, excludeFlags, _ch(p3), _ch(p4), _ch(p5), p6);
};

/**
 * _ADD_AMBIENT_SPAWN_RESTRICTION
 * flags: see 0xB56D41A694E42E86
 *
 * @param {number} volume
 * @param {number} includeFlags
 * @param {number} excludeFlags
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @return {void}
 */
global.AddAmbientSpawnRestriction = function (volume, includeFlags, excludeFlags, p3, p4, p5, p6) {
  return _in(0x18262caf, 0xebb5fbe1, volume, includeFlags, excludeFlags, _ch(p3), _ch(p4), _ch(p5), p6);
};

/**
 * _CREATE_POPZONE_FROM_VOLUME
 *
 * @param {number} volume
 * @return {number}
 */
global.CreatePopzoneFromVolume = function (volume) {
  return _in(0x9ac1c64f, 0xe46b6d09, volume, _r, _ri);
};

/**
 * _DELETE_SCRIPT_POPZONE
 *
 * @param {number} popZone
 * @return {void}
 */
global.DeleteScriptPopzone = function (popZone) {
  return _in(0xa6e6a66f, 0xc4ca4224, popZone);
};

/**
 * _GET_RANDOM_FISH_TYPE_FOR_LOCATION
 * Returns model hash of the closest fish
 *

 * @return {number}
 */
global.GetRandomFishTypeForLocation = function () {
  return _in(0x595478b3, 0xbbc3076d, _r, _ri);
};

/**
 * _IS_POPZONE_VALID
 *
 * @param {number} popZone
 * @return {boolean}
 */
global.IsPopzoneValid = function (popZone) {
  return _in(0xa5bd5850, 0x05efcad4, popZone, _r);
};

/**
 * _REMOVE_AMBIENT_AVOIDANCE_RESTRICTION
 * flags: see 0xB56D41A694E42E86
 *
 * @param {number} volume
 * @return {void}
 */
global.RemoveAmbientAvoidanceRestriction = function (volume) {
  return _in(0x74c2b3dc, 0x0b294102, volume);
};

/**
 * _REMOVE_AMBIENT_SPAWN_RESTRICTION
 *
 * @param {number} volume
 * @return {void}
 */
global.RemoveAmbientSpawnRestriction = function (volume) {
  return _in(0xa1cfb350, 0x69d23c23, volume);
};

/**
 * _SET_PED_SHOULD_IGNORE_AVOIDANCE_VOLUMES
 * Params: p1 = 1 & 2 in R* Scripts, 0 = Disable avoidance, 1 = Enabled avoidance, 2 = Enabled avoidance (?)
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.SetPedShouldIgnoreAvoidanceVolumes = function (ped, p1) {
  return _in(0xf74e134f, 0x40192884, ped, p1);
};

/**
 * POSSE_GET_POSSE_MEMBERSHIP_COUNT
 *

 * @return {number}
 */
global.PosseGetPosseMembershipCount = function () {
  return _in(0xc088ff65, 0x8b2e51da, _r, _ri);
};

/**
 * _0xC06CFF658B2E51DA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xC06CFF658B2E51DA = function (p0, p1, p2) {
  return _in(0xc06cff65, 0x8b2e51da, p0, p1, p2, _r);
};

/**
 * _0xC07CFF658B2E51DA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xC07CFF658B2E51DA = function (p0, p1) {
  return _in(0xc07cff65, 0x8b2e51da, p0, p1, _r);
};

/**
 * _0xC084FF658B2E52DA
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC084FF658B2E52DA = function (p0) {
  return _in(0xc084ff65, 0x8b2e52da, p0, _r);
};

/**
 * _0xC084FF658B2E53DA
 *

 * @return {any}
 */
global.N_0xC084FF658B2E53DA = function () {
  return _in(0xc084ff65, 0x8b2e53da, _r);
};

/**
 * _0xC084FF658B2E54DA
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC084FF658B2E54DA = function (p0) {
  return _in(0xc084ff65, 0x8b2e54da, p0, _r);
};

/**
 * _0xC084FF658B2E55DA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xC084FF658B2E55DA = function (p0, p1) {
  return _in(0xc084ff65, 0x8b2e55da, p0, p1, _r);
};

/**
 * _0xC084FF658B2E61DA
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC084FF658B2E61DA = function (p0) {
  return _in(0xc084ff65, 0x8b2e61da, p0, _r);
};

/**
 * _0xC084FF658B2E71DA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xC084FF658B2E71DA = function (p0, p1, p2) {
  return _in(0xc084ff65, 0x8b2e71da, p0, p1, p2, _r);
};

/**
 * _0xC084FF658B2E81DA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xC084FF658B2E81DA = function (p0, p1, p2) {
  return _in(0xc084ff65, 0x8b2e81da, p0, p1, p2, _r);
};

/**
 * _0xC086FF658B2E51DA
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC086FF658B2E51DA = function (p0) {
  return _in(0xc086ff65, 0x8b2e51da, p0, _r);
};

/**
 * _0xC086FF658B2E51DB
 *

 * @return {any}
 */
global.N_0xC086FF658B2E51DB = function () {
  return _in(0xc086ff65, 0x8b2e51db, _r);
};

/**
 * _0xC087FF658B2E51DA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xC087FF658B2E51DA = function (p0, p1) {
  return _in(0xc087ff65, 0x8b2e51da, p0, p1, _r);
};

/**
 * _0xC089FF658B2E51DA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xC089FF658B2E51DA = function (p0, p1) {
  return _in(0xc089ff65, 0x8b2e51da, p0, p1, _r);
};

/**
 * _0xC08AFF658B2E51DA
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC08AFF658B2E51DA = function (p0) {
  return _in(0xc08aff65, 0x8b2e51da, p0);
};

/**
 * _0xC08AFF658B2E51DB
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC08AFF658B2E51DB = function (p0) {
  return _in(0xc08aff65, 0x8b2e51db, p0);
};

/**
 * _0xC08BFF658B2E51DA
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC08BFF658B2E51DA = function (p0) {
  return _in(0xc08bff65, 0x8b2e51da, p0, _r);
};

/**
 * _0xC08CFF658B2E51DA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xC08CFF658B2E51DA = function (p0, p1) {
  return _in(0xc08cff65, 0x8b2e51da, p0, p1, _r);
};

/**
 * _0xC08DEF658B2E51DA
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC08DEF658B2E51DA = function (p0) {
  return _in(0xc08def65, 0x8b2e51da, p0, _r);
};

/**
 * _0xC08DFF658B2E51DA
 *

 * @return {any}
 */
global.N_0xC08DFF658B2E51DA = function () {
  return _in(0xc08dff65, 0x8b2e51da, _r);
};

/**
 * _0xC08DFF658B2E51DB
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC08DFF658B2E51DB = function (p0) {
  return _in(0xc08dff65, 0x8b2e51db, p0, _r);
};

/**
 * _0xC08EFF658B2E51DB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xC08EFF658B2E51DB = function (p0, p1) {
  return _in(0xc08eff65, 0x8b2e51db, p0, p1, _r);
};

/**
 * _0xC08FFF658B2E51DA
 *

 * @return {any}
 */
global.N_0xC08FFF658B2E51DA = function () {
  return _in(0xc08fff65, 0x8b2e51da, _r);
};

/**
 * _0xC08FFF658B2E51DB
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xC08FFF658B2E51DB = function (p0) {
  return _in(0xc08fff65, 0x8b2e51db, p0, _r);
};

/**
 * _0xC09CFF658B2E51DA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xC09CFF658B2E51DA = function (p0, p1, p2) {
  return _in(0xc09cff65, 0x8b2e51da, p0, p1, p2, _r);
};

/**
 * _0xC184FF658B2E55DA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xC184FF658B2E55DA = function (p0, p1) {
  return _in(0xc184ff65, 0x8b2e55da, p0, p1, _r);
};

/**
 * _0xC284FF658B2E55DA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xC284FF658B2E55DA = function (p0, p1, p2) {
  return _in(0xc284ff65, 0x8b2e55da, p0, p1, p2, _r);
};

/**
 * _0xC394FF658B2E55DA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0xC394FF658B2E55DA = function (p0, p1, p2, p3) {
  return _in(0xc394ff65, 0x8b2e55da, p0, p1, p2, p3, _r);
};

/**
 * _0xC484FF658B2E55DA
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC484FF658B2E55DA = function (p0) {
  return _in(0xc484ff65, 0x8b2e55da, p0);
};

/**
 * _0xC584FF658B2E55DA
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC584FF658B2E55DA = function (p0) {
  return _in(0xc584ff65, 0x8b2e55da, p0);
};

/**
 * _0xC684FF658B2E55DA
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC684FF658B2E55DA = function (p0) {
  return _in(0xc684ff65, 0x8b2e55da, p0);
};

/**
 * CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY
 *
 * @param {number} hash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} entity
 * @param {number} p5
 * @param {boolean} p6
 * @param {number} p7
 * @param {boolean} p8
 * @return {number}
 */
global.CreatePropSetInstanceAttachedToEntity = function (hash, x, y, z, entity, p5, p6, p7, p8) {
  return _in(0x9609dbdd, 0xe18fad8c, _ch(hash), _fv(x), _fv(y), _fv(z), entity, _fv(p5), p6, p7, p8, _r, _ri);
};

/**
 * DOES_PROP_SET_EXIST
 *
 * @param {number} propSet
 * @return {boolean}
 */
global.DoesPropSetExist = function (propSet) {
  return _in(0x7dddcf81, 0x5e650ff5, propSet, _r);
};

/**
 * IS_PROP_SET_FULLY_LOADED
 *
 * @param {number} propSet
 * @return {boolean}
 */
global.IsPropSetFullyLoaded = function (propSet) {
  return _in(0xf42db680, 0xa8b2a4d9, propSet, _r);
};

/**
 * _0x58E0B01D45CA7357
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x58E0B01D45CA7357 = function (p0) {
  return _in(0x58e0b01d, 0x45ca7357, p0);
};

/**
 * _0xC4B67EF3FD65622D
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0xC4B67EF3FD65622D = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xc4b67ef3, 0xfd65622d, p0, p1, p2, p3, p4, p5);
};

/**
 * _ADD_ADDITIONAL_PROP_SET_FOR_VEHICLE
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_propsets.lua
 *
 * @param {number} vehicle
 * @param {number} propset
 * @return {void}
 */
global.AddAdditionalPropSetForVehicle = function (vehicle, propset) {
  return _in(0x75f90e40, 0x51cc084c, vehicle, _ch(propset));
};

/**
 * _ADD_LIGHT_PROP_SET_TO_VEHICLE
 * To remove propsets either parse a zero as hash or call 0xE31C0CB1C3186D40
 * 0xA6A9712955F53D9C returns lightPropset Hashes
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_lantern_propsets.lua
 *
 * @param {number} vehicle
 * @param {number} lightPropset
 * @return {void}
 */
global.AddLightPropSetToVehicle = function (vehicle, lightPropset) {
  return _in(0xc0f0417a, 0x90402742, vehicle, _ch(lightPropset));
};

/**
 * _ADD_PROP_SET_FOR_VEHICLE
 * List of vehicle propsets (wagons & trains): https://pastebin.com/1CsnvGLu / https://pastebin.com/v7TtqTgE
 *
 * @param {number} vehicle
 * @param {number} propset
 * @return {void}
 */
global.AddPropSetForVehicle = function (vehicle, propset) {
  return _in(0xd80faf91, 0x9a2e56ea, vehicle, _ch(propset));
};

/**
 * _CREATE_PROP_SET
 * propsetType: https://github.com/femga/rdr3_discoveries/blob/master/objects/propsets_list.lua
 * placementType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/PlacementType
 *
 * @param {number} propsetType
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} placementType
 * @param {number} heading
 * @param {number} zProbe
 * @param {boolean} p7
 * @param {boolean} useVegMod
 * @return {number}
 */
global.CreatePropSet = function (propsetType, x, y, z, placementType, heading, zProbe, p7, useVegMod) {
  return _in(0xe65c5cba, 0x95f0e510, _ch(propsetType), _fv(x), _fv(y), _fv(z), placementType, _fv(heading), _fv(zProbe), p7, useVegMod, _r, _ri);
};

/**
 * _CREATE_PROP_SET_2
 * Same as _CREATE_PROP_SET
 *
 * @param {number} propsetType
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} placementType
 * @param {number} heading
 * @param {number} zProbe
 * @param {boolean} p7
 * @param {boolean} useVegMod
 * @return {number}
 */
global.CreatePropSet_2 = function (propsetType, x, y, z, placementType, heading, zProbe, p7, useVegMod) {
  return _in(0x899c97a1, 0xcce7d483, _ch(propsetType), _fv(x), _fv(y), _fv(z), placementType, _fv(heading), _fv(zProbe), p7, useVegMod, _r, _ri);
};

/**
 * _CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY_2
 * Same as CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY
 *
 * @param {number} hash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} entity
 * @param {number} p5
 * @param {boolean} p6
 * @param {number} p7
 * @param {boolean} p8
 * @return {number}
 */
global.CreatePropSetInstanceAttachedToEntity_2 = function (hash, x, y, z, entity, p5, p6, p7, p8) {
  return _in(0xaca7fb30, 0x269096d4, _ch(hash), _fv(x), _fv(y), _fv(z), entity, _fv(p5), p6, p7, p8, _r, _ri);
};

/**
 * _DELETE_PROP_SET
 *
 * @param {number} propSet
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.DeletePropSet = function (propSet, p1, p2) {
  return _in(0x58ac173a, 0x55d9d7b4, propSet, p1, p2);
};

/**
 * _DOES_PROP_SET_OF_TYPE_EXIST_NEAR_COORDS
 *
 * @param {number} propsetHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {boolean}
 */
global.DoesPropSetOfTypeExistNearCoords = function (propsetHash, x, y, z) {
  return _in(0x72068021, 0xf498e6e3, _ch(propsetHash), _fv(x), _fv(y), _fv(z), _r);
};

/**
 * _DOES_VEHICLE_HAVE_ANY_LIGHT_PROP_SET
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.DoesVehicleHaveAnyLightPropSet = function (vehicle) {
  return _in(0xc9b4b3a3, 0x6f81fd75, vehicle, _r);
};

/**
 * _DOES_VEHICLE_HAVE_ANY_PROP_SET
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.DoesVehicleHaveAnyPropSet = function (vehicle) {
  return _in(0x53784cea, 0x0159439b, vehicle, _r);
};

/**
 * _GET_ENTITIES_FROM_PROP_SET
 *
 * @param {number} propSet
 * @param {number} itemSet
 * @param {number} model
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {number}
 */
global.GetEntitiesFromPropSet = function (propSet, itemSet, model, p3, p4) {
  return _in(0x738271b6, 0x60fe0695, propSet, itemSet, _ch(model), p3, p4, _r, _ri);
};

/**
 * _GET_PROP_SET_AT_COORDS
 *
 * @param {number} propsetHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.GetPropSetAtCoords = function (propsetHash, x, y, z) {
  return _in(0xc061e50f, 0x8d299f95, _ch(propsetHash), _fv(x), _fv(y), _fv(z), _r, _ri);
};

/**
 * _GET_PROP_SET_MODEL
 *
 * @param {number} propSet
 * @return {number}
 */
global.GetPropSetModel = function (propSet) {
  return _in(0xa6a97129, 0x55f53d9c, propSet, _r, _ri);
};

/**
 * _GET_TRAIN_CARRIAGE_PROP_SET
 * Example before/after deleting a train carriage's propset: https://imgur.com/a/qRNrIrK
 *
 * @param {number} trainCarriage
 * @return {number}
 */
global.GetTrainCarriagePropSet = function (trainCarriage) {
  return _in(0xcfc0bd09, 0xbb1b73ff, trainCarriage, _r, _ri);
};

/**
 * _GET_VEHICLE_LIGHT_PROP_SET
 * Returns PropSet handle to be used with _GET_PROP_SET_MODEL
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleLightPropSet = function (vehicle) {
  return _in(0xa079300a, 0xf757fb1a, vehicle, _r, _ri);
};

/**
 * _GET_VEHICLE_PROP_SET
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehiclePropSet = function (vehicle) {
  return _in(0xce2acd6f, 0x602803e5, vehicle, _r, _ri);
};

/**
 * _GET_VEHICLE_PROP_SET_HASH
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehiclePropSetHash = function (vehicle) {
  return _in(0x36f69e7a, 0x22655653, vehicle, _r, _ri);
};

/**
 * _HAS_PROP_SET_LOADED
 *
 * @param {number} hash
 * @return {boolean}
 */
global.HasPropSetLoaded = function (hash) {
  return _in(0x48a88fc6, 0x84c55fdc, _ch(hash), _r);
};

/**
 * _HAS_PROP_SET_LOADED_2
 * Same as _HAS_PROP_SET_LOADED
 *
 * @param {number} hash
 * @return {boolean}
 */
global.HasPropSetLoaded_2 = function (hash) {
  return _in(0xd090abef, 0x4d6a7d96, _ch(hash), _r);
};

/**
 * _HAS_VEHICLE_TRAILER_PROP_SET_LOADED
 *
 * @param {number} vehicle
 * @param {number} wagonIndex
 * @return {boolean}
 */
global.HasVehicleTrailerPropSetLoaded = function (vehicle, wagonIndex) {
  return _in(0x8f3333f0, 0xa6900b3c, vehicle, wagonIndex, _r);
};

/**
 * _IS_PROP_SET_VISIBLE
 *
 * @param {number} propSet
 * @return {boolean}
 */
global.IsPropSetVisible = function (propSet) {
  return _in(0x0ce8aafe, 0x9e433a23, propSet, _r);
};

/**
 * _IS_VEHICLE_LIGHT_PROP_SET_LOADED
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsVehicleLightPropSetLoaded = function (vehicle) {
  return _in(0x0790473e, 0xee1977d3, vehicle, _r);
};

/**
 * _IS_VEHICLE_PROP_SET_LOADED
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsVehiclePropSetLoaded = function (vehicle) {
  return _in(0x155b2fbe, 0x72d7d1d0, vehicle, _r);
};

/**
 * _IS_VEHICLE_PROP_SET_LOADED_ADDITIONAL
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsVehiclePropSetLoadedAdditional = function (vehicle) {
  return _in(0x7264f9ca, 0x87a9830b, vehicle, _r);
};

/**
 * _RELEASE_PROP_SET
 *
 * @param {number} hash
 * @return {boolean}
 */
global.ReleasePropSet = function (hash) {
  return _in(0xb1964a83, 0xb345b4ab, _ch(hash), _r);
};

/**
 * _REMOVE_VEHICLE_LIGHT_PROP_SETS
 *
 * @param {number} vehicle
 * @return {void}
 */
global.RemoveVehicleLightPropSets = function (vehicle) {
  return _in(0xe31c0cb1, 0xc3186d40, vehicle);
};

/**
 * _REMOVE_VEHICLE_PROP_SETS
 *
 * @param {number} vehicle
 * @return {void}
 */
global.RemoveVehiclePropSets = function (vehicle) {
  return _in(0x3bcf32ff, 0x37ea9f1d, vehicle);
};

/**
 * _REQUEST_PROP_SET
 *
 * @param {number} hash
 * @return {boolean}
 */
global.RequestPropSet = function (hash) {
  return _in(0xf3de57a4, 0x6d5585e9, _ch(hash), _r);
};

/**
 * _REQUEST_PROP_SET_2
 * Same as _REQUEST_PROP_SET
 *
 * @param {number} hash
 * @return {boolean}
 */
global.RequestPropSet_2 = function (hash) {
  return _in(0xe72f5919, 0x58f3acab, _ch(hash), _r);
};

/**
 * _SET_PROP_SET_AS_NO_LONGER_NEEDED
 *
 * @param {number} propSet
 * @return {void}
 */
global.SetPropSetAsNoLongerNeeded = function (propSet) {
  return _in(0x909e3c7f, 0xae539fb1, propSet);
};

/**
 * _SET_PROP_SET_FLAG
 *
 * @param {number} propSet
 * @param {number} flag
 * @return {void}
 */
global.SetPropSetFlag = function (propSet, flag) {
  return _in(0xc1ab7eef, 0xd3e6ee49, propSet, flag);
};

/**
 * _SET_PROP_SET_VISIBLE
 *
 * @param {number} propSet
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPropSetVisible = function (propSet, toggle) {
  return _in(0x9d096a5b, 0xd02f953e, propSet, toggle);
};

/**
 * _EVENT_QUEUE_IS_EMPTY
 *
 * @param {number} hash
 * @return {boolean}
 */
global.EventQueueIsEmpty = function (hash) {
  return _in(0x402b5d7d, 0x269ff796, _ch(hash), _r);
};

/**
 * _EVENT_QUEUE_POP
 *
 * @param {number} hash
 * @return {void}
 */
global.EventQueuePop = function (hash) {
  return _in(0xd87df294, 0xb049211d, _ch(hash));
};

/**
 * REPLAY_PREVENT_RECORDING_THIS_FRAME
 * nullsub, doesn't do anything
 * 
 * Old name: _STOP_RECORDING_THIS_FRAME
 *

 * @return {void}
 */
global.ReplayPreventRecordingThisFrame = function () {
  return _in(0xa8c44c13, 0x419634f2);
};

/**
 * CLOSE_VIDEO_EDITOR
 * Hardcoded to return true.
 *
 * @param {any} p0
 * @return {boolean}
 */
global.CloseVideoEditor = function (p0) {
  return _in(0xceec64bd, 0x27a59312, p0, _r);
};

/**
 * IS_VIDEO_EDITOR_RUNNING
 * Hardcoded to return false.
 *

 * @return {boolean}
 */
global.IsVideoEditorRunning = function () {
  return _in(0x9eeb0073, 0x17fa3b9c, _r);
};

/**
 * OPEN_VIDEO_EDITOR
 * Hardcoded to return true.
 *

 * @return {boolean}
 */
global.OpenVideoEditor = function () {
  return _in(0xb3f28299, 0x07403c13, _r);
};

/**
 * REPLAY_SYSTEM_HAS_REQUESTED_A_SCRIPT_CLEANUP
 * Hardcoded to return false.
 * 
 * Old name: _IS_INTERIOR_RENDERING_DISABLED
 *

 * @return {boolean}
 */
global.ReplaySystemHasRequestedAScriptCleanup = function () {
  return _in(0x0f838d47, 0xde58edb2, _r);
};

/**
 * SET_SCRIPTS_HAVE_CLEANED_UP_FOR_REPLAY_SYSTEM
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.SetScriptsHaveCleanedUpForReplaySystem = function () {
  return _in(0x57c65250, 0x34e76eb0);
};

/**
 * SAVEGAME_IS_SAVE_PENDING
 *

 * @return {boolean}
 */
global.SavegameIsSavePending = function () {
  return _in(0x3cf46f55, 0xc6585590, _r);
};

/**
 * SAVEGAME_SAVE_MP
 * See SAVEGAME_SAVE_SP
 *
 * @param {number} savegameType
 * @return {boolean}
 */
global.SavegameSaveMp = function (savegameType) {
  return _in(0x1840f3b3, 0x0ed0105f, _ch(savegameType), _r);
};

/**
 * SAVEGAME_SAVE_SP
 * enum eSavegameType : Hash
 * {
 *   SAVEGAMETYPE_AMBIENT = 0x3CA4E1F8,
 *   SAVEGAMETYPE_DEFAULT = 0xCB6ED080,
 *   SAVEGAMETYPE_DELETE_CHAR = 0xCD35F947,
 *   SAVEGAMETYPE_END_CREATE_NEWCHAR = 0x4C50A3CE,
 *   SAVEGAMETYPE_END_MATCH = 0xE470ED50,
 *   SAVEGAMETYPE_END_MISSION = 0x9A444E54,
 *   SAVEGAMETYPE_END_SESSION = 0x6D23956C,
 *   SAVEGAMETYPE_END_SHOPPING = 0xA311A6C4,
 *   SAVEGAMETYPE_RANKUP = 0xE25F8017,
 *   SAVEGAMETYPE_SCRIPT_MP_GLOBALS = 0xAFF30AD4,
 *   SAVEGAMETYPE_SP_AUTOSAVE = 0xF4AE69EC,
 *   SAVEGAMETYPE_SP_DEBUG = 0x6A8122FD,
 *   SAVEGAMETYPE_SP_PROPERTY = 0xAE0AB38E
 * };
 *
 * @param {number} savegameType
 * @return {boolean}
 */
global.SavegameSaveSp = function (savegameType) {
  return _in(0x62c9eb51, 0x656d68ce, _ch(savegameType), _r);
};

/**
 * _0x1431540BCA1A1BD2
 *

 * @return {any}
 */
global.N_0x1431540BCA1A1BD2 = function () {
  return _in(0x1431540b, 0xca1a1bd2, _r);
};

/**
 * _0x443174C20B8B9E7F
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x443174C20B8B9E7F = function (p0, p1, p2) {
  return _in(0x443174c2, 0x0b8b9e7f, p0, p1, p2);
};

/**
 * _0x4FB5869E2B37FC00
 *

 * @return {void}
 */
global.N_0x4FB5869E2B37FC00 = function () {
  return _in(0x4fb5869e, 0x2b37fc00);
};

/**
 * _0x81F4E92BE3958364
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x81F4E92BE3958364 = function (p0, p1, p2) {
  return _in(0x81f4e92b, 0xe3958364, p0, p1, p2);
};

/**
 * _0x8E8FFB9E4AD051D2
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x8E8FFB9E4AD051D2 = function (p0, p1, p2, p3) {
  return _in(0x8e8ffb9e, 0x4ad051d2, p0, p1, p2, p3);
};

/**
 * _0x9BB83C4DD7BE0802
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x9BB83C4DD7BE0802 = function (p0, p1, p2, p3, p4) {
  return _in(0x9bb83c4d, 0xd7be0802, p0, p1, p2, p3, p4);
};

/**
 * _0xA7ECEBAFBAF997A5
 *
 * @param {number} savegameType
 * @return {any}
 */
global.N_0xA7ECEBAFBAF997A5 = function (savegameType) {
  return _in(0xa7ecebaf, 0xbaf997a5, _ch(savegameType), _r);
};

/**
 * _0xA844FEB5C22C2C74
 *

 * @return {void}
 */
global.N_0xA844FEB5C22C2C74 = function () {
  return _in(0xa844feb5, 0xc22c2c74);
};

/**
 * _0xB00CE33465B5406D
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xB00CE33465B5406D = function (p0, p1) {
  return _in(0xb00ce334, 0x65b5406d, p0, p1, _r);
};

/**
 * _0xC0ABF784590798A9
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC0ABF784590798A9 = function (p0) {
  return _in(0xc0abf784, 0x590798a9, p0);
};

/**
 * _0xE0B45E983BFC0768
 *

 * @return {void}
 */
global.N_0xE0B45E983BFC0768 = function () {
  return _in(0xe0b45e98, 0x3bfc0768);
};

/**
 * _0xE8346E62FD7FB962
 *

 * @return {void}
 */
global.N_0xE8346E62FD7FB962 = function () {
  return _in(0xe8346e62, 0xfd7fb962);
};

/**
 * _0xED4B0C1057892B2E
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xED4B0C1057892B2E = function (p0, p1, p2, p3) {
  return _in(0xed4b0c10, 0x57892b2e, p0, p1, p2, p3);
};

/**
 * _SAVEGAME_GET_BOOL
 * Does the exact same as 0x529B9CCD0972AF4E
 *
 * @param {DataView} p0
 * @param {string | number} variableName
 * @return {void}
 */
global.SavegameGetBool = function (p0, variableName) {
  return _in(0xbb7f4273, 0xc186bc4b, p0, _ts(variableName));
};

/**
 * _SAVEGAME_GET_FLOAT
 *
 * @param {DataView} p0
 * @param {string | number} variableName
 * @return {void}
 */
global.SavegameGetFloat = function (p0, variableName) {
  return _in(0x35defeca, 0xe36d4fae, p0, _ts(variableName));
};

/**
 * _SAVEGAME_GET_INT
 *
 * @param {DataView} p0
 * @param {string | number} variableName
 * @return {void}
 */
global.SavegameGetInt = function (p0, variableName) {
  return _in(0x529b9ccd, 0x0972af4e, p0, _ts(variableName));
};

/**
 * _SAVEGAME_GET_INT_2
 * Does the exact same as 0x529B9CCD0972AF4E
 * Commonly used with time/timestamps
 *
 * @param {DataView} p0
 * @param {string | number} variableName
 * @return {void}
 */
global.SavegameGetInt_2 = function (p0, variableName) {
  return _in(0x529b9ccd, 0x0972af4d, p0, _ts(variableName));
};

/**
 * _SAVEGAME_GET_INT_3
 * Does the exact same as 0x529B9CCD0972AF4E
 * Commonly used with enums and flags
 *
 * @param {DataView} p0
 * @param {string | number} variableName
 * @return {void}
 */
global.SavegameGetInt_3 = function (p0, variableName) {
  return _in(0xb25b5a37, 0x5be5be26, p0, _ts(variableName));
};

/**
 * _SAVEGAME_GET_TEXT_LABEL_23
 *
 * @param {DataView} p0
 * @param {string | number} variableName
 * @return {void}
 */
global.SavegameGetTextLabel_23 = function (p0, variableName) {
  return _in(0x5a10d650, 0x6b2f2c63, p0, _ts(variableName));
};

/**
 * _SAVEGAME_GET_TEXT_LABEL_31
 *
 * @param {DataView} p0
 * @param {string | number} variableName
 * @return {void}
 */
global.SavegameGetTextLabel_31 = function (p0, variableName) {
  return _in(0x4845e7e7, 0x643a908c, p0, _ts(variableName));
};

/**
 * _SAVEGAME_GET_TEXT_LABEL_63
 *
 * @param {DataView} p0
 * @param {string | number} variableName
 * @return {void}
 */
global.SavegameGetTextLabel_63 = function (p0, variableName) {
  return _in(0x186608a2, 0xac6f9e88, p0, _ts(variableName));
};

/**
 * AWARDS_GET_RESULT_ITEM
 *
 * @param {DataView} rpcGuid
 * @param {number} awardHash
 * @param {number} itemIndex
 * @param {DataView} outResultItem
 * @return {boolean}
 */
global.AwardsGetResultItem = function (rpcGuid, awardHash, itemIndex, outResultItem) {
  return _in(0xac8fab22, 0xa914ae34, rpcGuid, _ch(awardHash), itemIndex, outResultItem, _r);
};

/**
 * BAIL_TO_LANDING_PAGE
 *
 * @param {number} bailCode
 * @return {void}
 */
global.BailToLandingPage = function (bailCode) {
  return _in(0xbc2c927f, 0x5c264243, bailCode);
};

/**
 * BAIL_WITH_PASS_THROUGH_PARAMS
 *
 * @param {string | number} params
 * @return {void}
 */
global.BailWithPassThroughParams = function (params) {
  return _in(0xe98204d3, 0xc25ae14c, _ts(params));
};

/**
 * BG_DOES_LAUNCH_PARAM_EXIST
 *
 * @param {number} scriptIndex
 * @param {string | number} p1
 * @return {boolean}
 */
global.BgDoesLaunchParamExist = function (scriptIndex, p1) {
  return _in(0x4ae1dff3, 0x37a86fde, scriptIndex, _ts(p1), _r);
};

/**
 * BG_END_CONTEXT
 * Deletes the given context from the background scripts context map.
 *
 * @param {string | number} contextName
 * @return {void}
 */
global.BgEndContext = function (contextName) {
  return _in(0x3abf7ba1, 0xc3e2c8cf, _ts(contextName));
};

/**
 * BG_END_CONTEXT_HASH
 * Hashed version of BG_END_CONTEXT
 *
 * @param {number} contextHash
 * @return {void}
 */
global.BgEndContextHash = function (contextHash) {
  return _in(0x6d143174, 0x4182cde8, _ch(contextHash));
};

/**
 * BG_GET_LAUNCH_PARAM_VALUE
 *
 * @param {number} scriptIndex
 * @param {string | number} p1
 * @return {number}
 */
global.BgGetLaunchParamValue = function (scriptIndex, p1) {
  return _in(0x55c40b75, 0x92bad213, scriptIndex, _ts(p1), _r, _ri);
};

/**
 * BG_GET_SCRIPT_ID_FROM_NAME_HASH
 *
 * @param {number} p0
 * @return {number}
 */
global.BgGetScriptIdFromNameHash = function (p0) {
  return _in(0x829cd22e, 0x043a2577, _ch(p0), _r, _ri);
};

/**
 * BG_IS_EXITFLAG_SET
 * Returns true if GtaThread+0x77C is equal to 1.
 * 
 * Old name: _BG_EXITED_BECAUSE_BACKGROUND_THREAD_STOPPED
 *

 * @return {boolean}
 */
global.BgIsExitflagSet = function () {
  return _in(0x2238ec3e, 0xc631ab1f, _r);
};

/**
 * BG_SET_EXITFLAG_RESPONSE
 * Sets bit 0 in GtaThread+0x784
 *

 * @return {void}
 */
global.BgSetExitflagResponse = function () {
  return _in(0x4858148e, 0x3b8a75d0);
};

/**
 * BG_START_CONTEXT
 * Inserts the given context into the background scripts context map.
 *
 * @param {string | number} contextName
 * @return {void}
 */
global.BgStartContext = function (contextName) {
  return _in(0x49ba5678, 0xba040ca7, _ts(contextName));
};

/**
 * BG_START_CONTEXT_HASH
 * Hashed version of BG_START_CONTEXT
 *
 * @param {number} contextHash
 * @return {void}
 */
global.BgStartContextHash = function (contextHash) {
  return _in(0x2eb67d56, 0x4dcc09d5, _ch(contextHash));
};

/**
 * COUNT_PARTICIPANT_BITS
 *
 * @param {DataView} value
 * @return {number}
 */
global.CountParticipantBits = function (value) {
  return _in(0x2f050a3f, 0xf8738245, value, _r, _ri);
};

/**
 * COUNT_PLAYER_BITS
 *
 * @param {DataView} value
 * @return {number}
 */
global.CountPlayerBits = function (value) {
  return _in(0x462c687b, 0xea254bd9, value, _r, _ri);
};

/**
 * DOES_SCRIPT_EXIST
 *
 * @param {string | number} scriptName
 * @return {boolean}
 */
global.DoesScriptExist = function (scriptName) {
  return _in(0x552b171e, 0x3f69e5ae, _ts(scriptName), _r);
};

/**
 * DOES_SCRIPT_WITH_NAME_HASH_EXIST
 *
 * @param {number} scriptHash
 * @return {boolean}
 */
global.DoesScriptWithNameHashExist = function (scriptHash) {
  return _in(0xa34e8974, 0x9f628284, _ch(scriptHash), _r);
};

/**
 * DOES_THREAD_EXIST
 *
 * @param {number} threadId
 * @return {boolean}
 */
global.DoesThreadExist = function (threadId) {
  return _in(0xff975bc4, 0x435a0fa3, threadId, _r);
};

/**
 * GET_BLOCK_OF_PLAYER_BITS
 *
 * @param {DataView} value
 * @param {number} p1
 * @return {number}
 */
global.GetBlockOfPlayerBits = function (value, p1) {
  return _in(0xfa3b530a, 0x5cc693d5, value, p1, _r, _ri);
};

/**
 * GET_EVENT_AT_INDEX
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 * 
 * Returns event name hash: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * @param {number} eventGroup
 * @param {number} eventIndex
 * @return {number}
 */
global.GetEventAtIndex = function (eventGroup, eventIndex) {
  return _in(0xa85e6144, 0x30eff816, eventGroup, eventIndex, _r, _ri);
};

/**
 * GET_EVENT_DATA
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 * 
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 * 
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/EVENTS
 *
 * @param {number} eventGroup
 * @param {number} eventIndex
 * @param {DataView} eventData
 * @param {number} eventDataSize
 * @return {boolean}
 */
global.GetEventData = function (eventGroup, eventIndex, eventData, eventDataSize) {
  return _in(0x57ec5fa4, 0xd4d6afca, eventGroup, eventIndex, eventData, eventDataSize, _r);
};

/**
 * GET_EVENT_EXISTS
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 *
 * @param {number} eventGroup
 * @param {number} eventType
 * @return {boolean}
 */
global.GetEventExists = function (eventGroup, eventType) {
  return _in(0xc9f59c0a, 0x710ecd34, eventGroup, _ch(eventType), _r);
};

/**
 * GET_HASH_OF_THIS_SCRIPT_NAME
 *

 * @return {number}
 */
global.GetHashOfThisScriptName = function () {
  return _in(0xbc2c927f, 0x5c264960, _r, _ri);
};

/**
 * GET_ID_OF_THIS_THREAD
 *

 * @return {number}
 */
global.GetIdOfThisThread = function () {
  return _in(0x55525c34, 0x6bef6960, _r, _ri);
};

/**
 * GET_NO_LOADING_SCREEN
 *

 * @return {boolean}
 */
global.GetNoLoadingScreen = function () {
  return _in(0x323daf00, 0x687e0f28, _r);
};

/**
 * GET_NUMBER_OF_EVENTS
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_ERRORS (CEventGroupScriptErrors)
 *
 * @param {number} eventGroup
 * @return {number}
 */
global.GetNumberOfEvents = function (eventGroup) {
  return _in(0x5ce8de59, 0x09565748, eventGroup, _r, _ri);
};

/**
 * GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH
 * Gets the number of instances of the specified script is currently running.
 * 
 * Actually returns numRefs - 1.
 * if (program)
 *   v3 = rage::scrProgram::GetNumRefs(program) - 1;
 * return v3;
 * 
 * Old name: _GET_NUMBER_OF_REFERENCES_OF_SCRIPT_WITH_NAME_HASH
 *
 * @param {number} scriptHash
 * @return {number}
 */
global.GetNumberOfThreadsRunningTheScriptWithThisHash = function (scriptHash) {
  return _in(0x8e34c953, 0x364a76dd, _ch(scriptHash), _r, _ri);
};

/**
 * GET_THREAD_EXISTENCE_DETAILS
 *
 * @param {number} threadId
 * @return {[boolean, boolean]}
 */
global.GetThreadExistenceDetails = function (threadId) {
  return _in(0xd92fa81b, 0x64920e85, threadId, /* actually bool */ _i, /* actually bool */ _i);
};

/**
 * HAS_SCRIPT_LOADED
 * Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
 *
 * @param {string | number} scriptName
 * @return {boolean}
 */
global.HasScriptLoaded = function (scriptName) {
  return _in(0xe97bd365, 0x74f8b0a6, _ts(scriptName), _r);
};

/**
 * HAS_SCRIPT_WITH_NAME_HASH_LOADED
 *
 * @param {number} scriptHash
 * @return {boolean}
 */
global.HasScriptWithNameHashLoaded = function (scriptHash) {
  return _in(0xa5d8e0c2, 0xf3c7eebc, _ch(scriptHash), _r);
};

/**
 * HAVE_ALL_CHILD_SCRIPTS_TERMINATED
 * Waiting for child scripts to terminate / waiting for collapse of child scripts
 *
 * @param {number} p0
 * @return {boolean}
 */
global.HaveAllChildScriptsTerminated = function (p0) {
  return _in(0x380ffa15, 0xb72408fb, p0, _r);
};

/**
 * IS_LOADING_SCREEN_VISIBLE
 * Same as GET_IS_LOADING_SCREEN_ACTIVE
 *

 * @return {boolean}
 */
global.IsLoadingScreenVisible = function () {
  return _in(0xb54adbe6, 0x5d528fcb, _r);
};

/**
 * IS_THREAD_ACTIVE
 *
 * @param {number} threadId
 * @param {boolean} ignoreKilledState
 * @return {boolean}
 */
global.IsThreadActive = function (threadId, ignoreKilledState) {
  return _in(0x46e9ae36, 0xd8fa6417, threadId, ignoreKilledState, _r);
};

/**
 * IS_THREAD_EXIT_REQUESTED
 *

 * @return {boolean}
 */
global.IsThreadExitRequested = function () {
  return _in(0x9e4ef615, 0xe307fbbe, _r);
};

/**
 * REQUEST_SCRIPT
 *
 * @param {string | number} scriptName
 * @return {void}
 */
global.RequestScript = function (scriptName) {
  return _in(0x46ed607d, 0xdd40d7fe, _ts(scriptName));
};

/**
 * REQUEST_SCRIPT_WITH_NAME_HASH
 *
 * @param {number} scriptHash
 * @return {void}
 */
global.RequestScriptWithNameHash = function (scriptHash) {
  return _in(0xf6b9ce3f, 0x8d5b9b74, _ch(scriptHash));
};

/**
 * SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID
 * If the function returns 0, the end of the iteration has been reached.
 *

 * @return {number}
 */
global.ScriptThreadIteratorGetNextThreadId = function () {
  return _in(0x3ce3fb16, 0x7e837d7c, _r, _ri);
};

/**
 * SCRIPT_THREAD_ITERATOR_RESET
 * Starts a new iteration of the current threads.
 * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
 *

 * @return {void}
 */
global.ScriptThreadIteratorReset = function () {
  return _in(0x39382eb8, 0xdcd8684d);
};

/**
 * SET_BLOCK_OF_PLAYER_BITS
 *
 * @param {DataView} value
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.SetBlockOfPlayerBits = function (value, p1, p2) {
  return _in(0xc6dfb8c0, 0x4c86d5a5, value, p1, p2);
};

/**
 * SET_EVENT_FLAG_FOR_DELETION
 *
 * @param {number} eventGroup
 * @param {number} eventIndex
 * @param {boolean} p2
 * @return {void}
 */
global.SetEventFlagForDeletion = function (eventGroup, eventIndex, p2) {
  return _in(0x4768d525, 0x2eaeb76f, eventGroup, eventIndex, p2);
};

/**
 * SET_NO_LOADING_SCREEN
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetNoLoadingScreen = function (toggle) {
  return _in(0x5cb83156, 0xaa038f95, toggle);
};

/**
 * SET_SCRIPT_AS_NO_LONGER_NEEDED
 *
 * @param {string | number} scriptName
 * @return {void}
 */
global.SetScriptAsNoLongerNeeded = function (scriptName) {
  return _in(0x0086d306, 0x7e1cfd1c, _ts(scriptName));
};

/**
 * SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED
 *
 * @param {number} scriptHash
 * @return {void}
 */
global.SetScriptWithNameHashAsNoLongerNeeded = function (scriptHash) {
  return _in(0x50723a15, 0x67c8361e, _ch(scriptHash));
};

/**
 * SHUTDOWN_LOADING_SCREEN
 *

 * @return {void}
 */
global.ShutdownLoadingScreen = function () {
  return _in(0xfc179d7e, 0x8886dadf);
};

/**
 * START_NEW_SCRIPT
 *
 * @param {string | number} scriptName
 * @param {number} stackSize
 * @return {number}
 */
global.StartNewScript = function (scriptName, stackSize) {
  return _in(0xe81651ad, 0x79516e48, _ts(scriptName), stackSize, _r, _ri);
};

/**
 * START_NEW_SCRIPT_WITH_ARGS
 * return : script thread id, 0 if failed
 * Pass pointer to struct of args in p1, size of struct goes into p2
 *
 * @param {string | number} scriptName
 * @param {DataView} args
 * @param {number} argCount
 * @param {number} stackSize
 * @return {number}
 */
global.StartNewScriptWithArgs = function (scriptName, args, argCount, stackSize) {
  return _in(0xb8ba7f44, 0xdf1575e1, _ts(scriptName), args, argCount, stackSize, _r, _ri);
};

/**
 * START_NEW_SCRIPT_WITH_NAME_HASH
 *
 * @param {number} scriptHash
 * @param {number} stackSize
 * @return {number}
 */
global.StartNewScriptWithNameHash = function (scriptHash, stackSize) {
  return _in(0xeb1c67c3, 0xa5333a92, _ch(scriptHash), stackSize, _r, _ri);
};

/**
 * START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS
 *
 * @param {number} scriptHash
 * @param {DataView} args
 * @param {number} argCount
 * @param {number} stackSize
 * @return {number}
 */
global.StartNewScriptWithNameHashAndArgs = function (scriptHash, args, argCount, stackSize) {
  return _in(0xc4bb298b, 0xd441be78, _ch(scriptHash), args, argCount, stackSize, _r, _ri);
};

/**
 * STOP_DISPLAYING_MP_TRANSITION_LOADING_SCREENS
 *
 * @param {any} p0
 * @return {void}
 */
global.StopDisplayingMpTransitionLoadingScreens = function (p0) {
  return _in(0x778d4733, 0xe0f2f265, p0);
};

/**
 * TERMINATE_THIS_THREAD
 *

 * @return {void}
 */
global.TerminateThisThread = function () {
  return _in(0x5e8b6d17, 0xff91cd59);
};

/**
 * TERMINATE_THREAD
 *
 * @param {number} threadId
 * @return {void}
 */
global.TerminateThread = function (threadId) {
  return _in(0x87ed52ae, 0x40ea1a52, threadId);
};

/**
 * TRIGGER_SCRIPT_EVENT
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 * 
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 * 
 * playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
 *
 * @param {number} eventGroup
 * @param {DataView} eventData
 * @param {number} eventDataSize
 * @param {number} scriptMetadataIndex
 * @return {number}
 */
global.TriggerScriptEvent = function (eventGroup, eventData, eventDataSize, scriptMetadataIndex) {
  return _in(0x5ae99c57, 0x1d5bbe5d, eventGroup, eventData, eventDataSize, scriptMetadataIndex, _i);
};

/**
 * _0x0A79C81C418F5D38
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x0A79C81C418F5D38 = function (p0, p1) {
  return _in(0x0a79c81c, 0x418f5d38, p0, p1, _r);
};

/**
 * _0x11B0A0B282FA9B10
 * Used in Script Function DISABLE_REGISTERED_WORLD_BRAINS
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x11B0A0B282FA9B10 = function (p0) {
  return _in(0x11b0a0b2, 0x82fa9b10, p0);
};

/**
 * _0x1BDB5A07307F6929
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x1BDB5A07307F6929 = function (p0, p1) {
  return _in(0x1bdb5a07, 0x307f6929, p0, p1);
};

/**
 * _0x1C5EB3C27F7508CB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x1C5EB3C27F7508CB = function (p0, p1) {
  return _in(0x1c5eb3c2, 0x7f7508cb, p0, p1);
};

/**
 * _0x29FB4CE89472C3CB
 *
 * @param {any} p0
 * @param {any} p1
 * @param {number} p2
 * @param {number} p3
 * @param {string | number} p4
 * @param {string | number} p5
 * @param {string | number} p6
 * @param {number} p7
 * @return {void}
 */
global.N_0x29FB4CE89472C3CB = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0x29fb4ce8, 0x9472c3cb, p0, p1, _fv(p2), _fv(p3), _ts(p4), _ts(p5), _ts(p6), p7);
};

/**
 * _0x42A429CDFED6D99D
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x42A429CDFED6D99D = function (p0, p1, p2) {
  return _in(0x42a429cd, 0xfed6d99d, p0, p1, p2);
};

/**
 * _0x5827BE85A87B073D
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x5827BE85A87B073D = function (p0) {
  return _in(0x5827be85, 0xa87b073d, p0);
};

/**
 * _0x64F765D9A1F8F02C
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {DataView} p2
 * @return {void}
 */
global.N_0x64F765D9A1F8F02C = function (p0, p1, p2) {
  return _in(0x64f765d9, 0xa1f8f02c, p0, p1, p2);
};

/**
 * _0x6F700A4BF7C3331B
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x6F700A4BF7C3331B = function (p0) {
  return _in(0x6f700a4b, 0xf7c3331b, p0);
};

/**
 * _0x76CBCD9EADC00955
 *

 * @return {void}
 */
global.N_0x76CBCD9EADC00955 = function () {
  return _in(0x76cbcd9e, 0xadc00955);
};

/**
 * _0xA88E1D7FA1E20080
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xA88E1D7FA1E20080 = function (p0) {
  return _in(0xa88e1d7f, 0xa1e20080, p0, _r);
};

/**
 * _0xE4ABE20DCE7C7CFE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xE4ABE20DCE7C7CFE = function (p0, p1, p2) {
  return _in(0xe4abe20d, 0xce7c7cfe, p0, p1, p2);
};

/**
 * _0xE7282390542F570D
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xE7282390542F570D = function (p0) {
  return _in(0xe7282390, 0x542f570d, p0, _r);
};

/**
 * _0xF9E951A1E5517C06
 *

 * @return {void}
 */
global.N_0xF9E951A1E5517C06 = function () {
  return _in(0xf9e951a1, 0xe5517c06);
};

/**
 * _0xFFDDF802279BE128
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xFFDDF802279BE128 = function (p0, p1, p2) {
  return _in(0xffddf802, 0x279be128, p0, p1, p2);
};

/**
 * _ACTIVATE_GOAL_CONTEXT
 * goalContext: see <availableContexts> in common/data/stats_and_challenges/goals_*.meta
 *
 * @param {number} goalContext
 * @return {void}
 */
global.ActivateGoalContext = function (goalContext) {
  return _in(0x7d654266, 0x025e921b, _ch(goalContext));
};

/**
 * _AWARDS_GET_UNLOCK_CLAIM_DATA
 *
 * @param {DataView} rpcGuid
 * @param {number} awardHash
 * @param {number} dataIndex
 * @param {DataView} outUnlockData
 * @return {boolean}
 */
global.AwardsGetUnlockClaimData = function (rpcGuid, awardHash, dataIndex, outUnlockData) {
  return _in(0xb9467e41, 0xdab1cf2c, rpcGuid, _ch(awardHash), dataIndex, outUnlockData, _r);
};

/**
 * _BG_RELOAD_ALL_BACKGROUND_SCRIPTS
 *

 * @return {void}
 */
global.BgReloadAllBackgroundScripts = function () {
  return _in(0xbe7d814c, 0xfa181b56);
};

/**
 * _CLEAR_ALL_PLAYER_BITS
 *
 * @param {DataView} value
 * @return {void}
 */
global.ClearAllPlayerBits = function (value) {
  return _in(0xde544b7e, 0xc0c187cc, value);
};

/**
 * _CLEAR_PLAYER_BIT_AT_INDEX
 *
 * @param {DataView} value
 * @param {number} bitIndex
 * @return {void}
 */
global.ClearPlayerBitAtIndex = function (value, bitIndex) {
  return _in(0xd426e2e3, 0x288469d6, value, bitIndex);
};

/**
 * _DEACTIVATE_GOAL_CONTEXT
 * goalContext: see _ACTIVATE_GOAL_CONTEXT
 *
 * @param {number} goalContext
 * @return {void}
 */
global.DeactivateGoalContext = function (goalContext) {
  return _in(0x50b72a75, 0x4ee64a71, _ch(goalContext));
};

/**
 * _DISPLAY_LOADING_SCREENS
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {string | number} gamemodeName
 * @param {string | number} title
 * @param {string | number} subtitle
 * @return {void}
 */
global.DisplayLoadingScreens = function (p0, p1, p2, gamemodeName, title, subtitle) {
  return _in(0x1e5b70e5, 0x3db661e5, _ch(p0), _ch(p1), _ch(p2), _ts(gamemodeName), _ts(title), _ts(subtitle));
};

/**
 * _DOES_COMPRESSED_GLOBAL_BLOCK_BUFFER_EXIST
 *
 * @param {number} index
 * @return {boolean}
 */
global.DoesCompressedGlobalBlockBufferExist = function (index) {
  return _in(0x66ee5b93, 0xc308f734, index, _r);
};

/**
 * _GET_GLOBAL_BLOCK_CAN_BE_ACCESSED
 *
 * @param {number} index
 * @return {boolean}
 */
global.GetGlobalBlockCanBeAccessed = function (index) {
  return _in(0x42a7eb5c, 0x814c2de0, index, _r);
};

/**
 * _GET_HASH_OF_THREAD
 *
 * @param {number} threadId
 * @return {number}
 */
global.GetHashOfThread = function (threadId) {
  return _in(0x724cb89d, 0x35b283d0, threadId, _r, _ri);
};

/**
 * _GET_THREAD_EXIT_REASON
 * enum eThreadExitReason
 * {
 *   THREAD_EXIT_REASON_NONE,
 *   THREAD_EXIT_REASON_BACKGROUND_THREAD_STOPPED,
 *   THREAD_EXIT_REASON_SESSION_MERGE,
 *   THREAD_EXIT_REASON_SCENARIO_OUT_OF_SCOPE,
 *   THREAD_EXIT_REASON_REQUESTED_BY_SCRIPT
 * };
 *

 * @return {number}
 */
global.GetThreadExitReason = function () {
  return _in(0x54ae4fde, 0xefeab77e, _r, _ri);
};

/**
 * _IS_ANY_PLAYER_BIT_SET
 *

 * @return {[boolean, number]}
 */
global.IsAnyPlayerBitSet = function () {
  return _in(0x179a6f0e, 0xe2e79026, _i, _r);
};

/**
 * _IS_BACKGROUND_SCRIPT
 *
 * @param {number} threadId
 * @return {boolean}
 */
global.IsBackgroundScript = function (threadId) {
  return _in(0x20b7f69b, 0x40c6b755, threadId, _r);
};

/**
 * _IS_GOAL_CONTEXT_ACTIVE
 * goalContext: see _ACTIVATE_GOAL_CONTEXT
 *
 * @param {number} goalContext
 * @return {boolean}
 */
global.IsGoalContextActive = function (goalContext) {
  return _in(0x7409669c, 0x5ed50144, _ch(goalContext), _r);
};

/**
 * _IS_PLAYER_BIT_SET_AT_INDEX
 *
 * @param {DataView} value
 * @param {number} bitIndex
 * @return {boolean}
 */
global.IsPlayerBitSetAtIndex = function (value, bitIndex) {
  return _in(0x72b2e00c, 0x9bac6789, value, bitIndex, _r);
};

/**
 * _IS_THREAD_EXIT_REQUESTED_FOR_THREAD_WITH_THIS_ID
 *
 * @param {number} threadId
 * @return {boolean}
 */
global.IsThreadExitRequestedForThreadWithThisId = function (threadId) {
  return _in(0x30bed536, 0x46c86d11, threadId, _r);
};

/**
 * _LOOT_GET_LOOT_CLAIM_DATA
 *
 * @param {DataView} rpcGuid
 * @param {number} dataIndex
 * @param {DataView} outLootData
 * @return {boolean}
 */
global.LootGetLootClaimData = function (rpcGuid, dataIndex, outLootData) {
  return _in(0xf1e9045f, 0x5aa9e428, rpcGuid, dataIndex, outLootData, _r);
};

/**
 * _LOOT_GET_RESULT_ITEM
 *
 * @param {DataView} rpcGuid
 * @param {number} itemIndex
 * @param {DataView} outResultItem
 * @return {boolean}
 */
global.LootGetResultItem = function (rpcGuid, itemIndex, outResultItem) {
  return _in(0x4293b44a, 0x855f82cc, rpcGuid, itemIndex, outResultItem, _r);
};

/**
 * _NET_RPC_GUID_TO_STRING
 * Returns "INVALID_NET_RPC_GUID" if netRpcGuid is invalid.
 *
 * @param {DataView} netRpcGuid
 * @return {string | number}
 */
global.NetRpcGuidToString = function (netRpcGuid) {
  return _in(0xac9ff854, 0xbd4ba9b5, netRpcGuid, _r, _s);
};

/**
 * _REQUEST_THREAD_EXIT
 *
 * @param {number} threadId
 * @return {void}
 */
global.RequestThreadExit = function (threadId) {
  return _in(0x7de46431, 0x57ad646c, threadId);
};

/**
 * _REQUEST_THREAD_EXIT_FOR_ALL_THREADS_WITH_THIS_NAME
 *
 * @param {number} nameHash
 * @return {void}
 */
global.RequestThreadExitForAllThreadsWithThisName = function (nameHash) {
  return _in(0x7423f783, 0x5770f619, _ch(nameHash));
};

/**
 * _RESTORE_GLOBAL_BLOCK
 *
 * @param {number} index
 * @return {boolean}
 */
global.RestoreGlobalBlock = function (index) {
  return _in(0xdc3914a9, 0x9b4a5fdf, index, _r);
};

/**
 * _SET_ALL_GLOBAL_BLOCKS_HAVE_BEEN_LOADED
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetAllGlobalBlocksHaveBeenLoaded = function (toggle) {
  return _in(0x11986b05, 0x885564d2, toggle);
};

/**
 * _SET_ALL_PLAYER_BITS
 *
 * @param {DataView} value
 * @return {void}
 */
global.SetAllPlayerBits = function (value) {
  return _in(0x20f4cb76, 0x689acdbc, value);
};

/**
 * _SET_GLOBAL_BLOCK_CAN_BE_ACCESSED
 *
 * @param {number} index
 * @param {boolean} toggle
 * @return {void}
 */
global.SetGlobalBlockCanBeAccessed = function (index, toggle) {
  return _in(0xe66f392b, 0xfce734af, index, toggle);
};

/**
 * _SET_PLAYER_BIT_AT_INDEX
 *
 * @param {DataView} value
 * @param {number} bitIndex
 * @return {void}
 */
global.SetPlayerBitAtIndex = function (value, bitIndex) {
  return _in(0x31010318, 0xba9897ac, value, bitIndex);
};

/**
 * _STORE_GLOBAL_BLOCK
 *
 * @param {number} index
 * @return {boolean}
 */
global.StoreGlobalBlock = function (index) {
  return _in(0xb952a3ac, 0x41d58f2f, index, _r);
};

/**
 * _TRIGGER_SCRIPT_EVENT_2
 *
 * @param {DataView} eventData
 * @param {number} eventDataSize
 * @param {number} scriptMetadataIndex
 * @param {number} threadId
 * @return {void}
 */
global.TriggerScriptEvent_2 = function (eventData, eventDataSize, scriptMetadataIndex, threadId) {
  return _in(0x8b61c950, 0xa148ffa2, eventData, eventDataSize, scriptMetadataIndex, threadId);
};

/**
 * GET_SHAPE_TEST_RESULT
 * Returns the result of a shape test: 0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.
 * 
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 * 
 * enum eShapeTestStatus
 * {
 *   SHAPETEST_STATUS_NONEXISTENT,
 *   SHAPETEST_STATUS_RESULTS_NOTREADY,
 *   SHAPETEST_STATUS_RESULTS_READY
 * };
 *
 * @param {number} shapeTestHandle
 * @return {[number, boolean, Vector3, Vector3, Entity]}
 */
global.GetShapeTestResult = function (shapeTestHandle) {
  return _in(0xede8ac7c, 0x5108fb1d, shapeTestHandle, /* actually bool */ _i, _v, _v, _i, _r, _ri);
};

/**
 * START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE
 * Does the same as 0x7EE9F5D83DD4F90E, except blocking until the shape test completes.
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} flags
 * @param {number} entityToIgnore
 * @param {number} p8
 * @return {number}
 */
global.StartExpensiveSynchronousShapeTestLosProbe = function (x1, y1, z1, x2, y2, z2, flags, entityToIgnore, p8) {
  return _in(0x377906d8, 0xa31e5586, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), flags, entityToIgnore, p8, _r, _ri);
};

/**
 * START_SHAPE_TEST_BOX
 *
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} dimensionsX
 * @param {number} dimensionsY
 * @param {number} dimensionsZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} rotationOrder
 * @param {number} flags
 * @param {number} entityToIgnore
 * @param {number} options
 * @return {number}
 */
global.StartShapeTestBox = function (posX, posY, posZ, dimensionsX, dimensionsY, dimensionsZ, rotX, rotY, rotZ, rotationOrder, flags, entityToIgnore, options) {
  return _in(0xfe466162, 0xc4401d18, _fv(posX), _fv(posY), _fv(posZ), _fv(dimensionsX), _fv(dimensionsY), _fv(dimensionsZ), _fv(rotX), _fv(rotY), _fv(rotZ), rotationOrder, flags, entityToIgnore, options, _r, _ri);
};

/**
 * START_SHAPE_TEST_CAPSULE
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} radius
 * @param {number} flags
 * @param {number} entityToIgnore
 * @param {number} p9
 * @return {number}
 */
global.StartShapeTestCapsule = function (x1, y1, z1, x2, y2, z2, radius, flags, entityToIgnore, p9) {
  return _in(0x28579d1b, 0x8f8aac80, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _fv(radius), flags, entityToIgnore, p9, _r, _ri);
};

/**
 * START_SHAPE_TEST_LOS_PROBE
 * Asynchronously starts a line-of-sight (raycast) world probe shape test.
 * 
 * Use the handle with 0x3D87450E15D98694 or 0x65287525D951F6BE until it returns 0 or 2.
 * 
 * p8 is a bit mask with bits 1, 2 and/or 4, relating to collider types; 4 should usually be used.
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} flags
 * @param {number} entity
 * @param {number} p8
 * @return {number}
 */
global.StartShapeTestLosProbe = function (x1, y1, z1, x2, y2, z2, flags, entity, p8) {
  return _in(0x7ee9f5d8, 0x3dd4f90e, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), flags, entity, p8, _r, _ri);
};

/**
 * START_SHAPE_TEST_MOUSE_CURSOR_LOS_PROBE
 * Old name: _START_SHAPE_TEST_SURROUNDING_COORDS
 *
 * @param {number} flag
 * @param {number} entity
 * @param {number} flag2
 * @return {[ScrHandle, Vector3, Vector3]}
 */
global.StartShapeTestMouseCursorLosProbe = function (flag, entity, flag2) {
  return _in(0x9839013d, 0x8b6014f1, _v, _v, flag, entity, flag2, _r, _ri);
};

/**
 * START_SHAPE_TEST_SWEPT_SPHERE
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} radius
 * @param {number} flags
 * @param {number} entity
 * @param {any} p9
 * @return {number}
 */
global.StartShapeTestSweptSphere = function (x1, y1, z1, x2, y2, z2, radius, flags, entity, p9) {
  return _in(0xaa5b7c83, 0x09f73230, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), _fv(radius), flags, entity, p9, _r, _ri);
};

/**
 * _0x04AA59CA40571C2E
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x04AA59CA40571C2E = function (p0, p1) {
  return _in(0x04aa59ca, 0x40571c2e, p0, p1, _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_DISPLAY_NAME
 *

 * @return {[boolean, string]}
 */
global.ScCommunityEventGetDisplayName = function () {
  return _in(0x89d9bde7, 0x334b110f, p0, _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_BY_ID
 *
 * @param {number} p0
 * @return {[boolean, string]}
 */
global.ScCommunityEventGetDisplayNameById = function (p0) {
  return _in(0x11ea52ca, 0xd1b55910, p0, p1, _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_FOR_TYPE
 *
 * @param {string | number} p1
 * @return {[boolean, string]}
 */
global.ScCommunityEventGetDisplayNameForType = function (p1) {
  return _in(0x85ea0bec, 0x7b1f7622, p0, _ts(p1), _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_EVENT_ID
 *

 * @return {number}
 */
global.ScCommunityEventGetEventId = function () {
  return _in(0xd635df6b, 0xaa5a6017, _r, _ri);
};

/**
 * SC_COMMUNITY_EVENT_GET_EVENT_ID_FOR_TYPE
 *
 * @param {string | number} p0
 * @return {number}
 */
global.ScCommunityEventGetEventIdForType = function (p0) {
  return _in(0x03c03abb, 0xabbef752, _ts(p0), _r, _ri);
};

/**
 * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT
 *
 * @param {string | number} p0
 * @return {[boolean, number]}
 */
global.ScCommunityEventGetExtraDataFloat = function (p0) {
  return _in(0x060bbad6, 0x34c2b44b, _ts(p0), _f, _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_BY_ID
 *
 * @param {number} p0
 * @param {string | number} p1
 * @return {[boolean, number]}
 */
global.ScCommunityEventGetExtraDataFloatById = function (p0, p1) {
  return _in(0x91c9e2a0, 0xf9dd6dd4, p0, _ts(p1), _f, _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_FOR_TYPE
 *
 * @param {string | number} p0
 * @param {string | number} p2
 * @return {[boolean, number]}
 */
global.ScCommunityEventGetExtraDataFloatForType = function (p0, p2) {
  return _in(0x1bdb56db, 0x258f052d, _ts(p0), _f, _ts(p2), _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT
 *
 * @param {string | number} p0
 * @return {[boolean, number]}
 */
global.ScCommunityEventGetExtraDataInt = function (p0) {
  return _in(0xb4411d4d, 0x6b81438e, _ts(p0), _i, _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_BY_ID
 *
 * @param {number} p0
 * @param {string | number} p1
 * @return {[boolean, number]}
 */
global.ScCommunityEventGetExtraDataIntById = function (p0, p1) {
  return _in(0x7c981de0, 0x5a7403a0, p0, _ts(p1), _i, _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_FOR_TYPE
 *
 * @param {string | number} p0
 * @param {string | number} p2
 * @return {[boolean, number]}
 */
global.ScCommunityEventGetExtraDataIntForType = function (p0, p2) {
  return _in(0x3519cc35, 0x25319a96, _ts(p0), _i, _ts(p2), _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING
 *
 * @param {string | number} p0
 * @return {[boolean, string]}
 */
global.ScCommunityEventGetExtraDataString = function (p0) {
  return _in(0x9f6dcd0c, 0x939c71e9, _ts(p0), p1, _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_BY_ID
 *
 * @param {number} p0
 * @param {string | number} p1
 * @return {[boolean, string]}
 */
global.ScCommunityEventGetExtraDataStringById = function (p0, p1) {
  return _in(0x049d2196, 0xd9d11184, p0, _ts(p1), p2, _r);
};

/**
 * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_FOR_TYPE
 *
 * @param {string | number} p0
 * @param {string | number} p2
 * @return {[boolean, string]}
 */
global.ScCommunityEventGetExtraDataStringForType = function (p0, p2) {
  return _in(0xc8fc3b24, 0x32e8229d, _ts(p0), p1, _ts(p2), _r);
};

/**
 * SC_COMMUNITY_EVENT_IS_ACTIVE
 *

 * @return {boolean}
 */
global.ScCommunityEventIsActive = function () {
  return _in(0xcbf743c9, 0x84695cf3, _r);
};

/**
 * SC_COMMUNITY_EVENT_IS_ACTIVE_BY_ID
 *
 * @param {number} p0
 * @return {boolean}
 */
global.ScCommunityEventIsActiveById = function (p0) {
  return _in(0x62b384fe, 0xfde06817, p0, _r);
};

/**
 * SC_COMMUNITY_EVENT_IS_ACTIVE_FOR_TYPE
 *
 * @param {string | number} p0
 * @return {boolean}
 */
global.ScCommunityEventIsActiveForType = function (p0) {
  return _in(0x09937eb0, 0xcebc2f9f, _ts(p0), _r);
};

/**
 * SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX
 *
 * @param {number} msgIndex
 * @return {boolean}
 */
global.ScInboxGetMessageIsReadAtIndex = function (msgIndex) {
  return _in(0x74cf39e0, 0x30a382c4, msgIndex, _r);
};

/**
 * SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX
 *
 * @param {number} msgIndex
 * @return {number}
 */
global.ScInboxGetMessageTypeAtIndex = function (msgIndex) {
  return _in(0xff92537c, 0x4ddc1241, msgIndex, _r, _ri);
};

/**
 * SC_INBOX_GET_TOTAL_NUM_MESSAGES
 *

 * @return {number}
 */
global.ScInboxGetTotalNumMessages = function () {
  return _in(0x8ef0f633, 0x280c0663, _r, _ri);
};

/**
 * SC_INBOX_MESSAGE_GET_DATA_INT
 *
 * @param {number} p0
 * @param {string | number} context
 * @return {[boolean, number]}
 */
global.ScInboxMessageGetDataInt = function (p0, context) {
  return _in(0x95bb39c4, 0xda99f348, p0, _ts(context), _i, _r);
};

/**
 * SC_INBOX_MESSAGE_GET_DATA_STRING
 *
 * @param {number} p0
 * @param {string | number} context
 * @return {[boolean, string]}
 */
global.ScInboxMessageGetDataString = function (p0, context) {
  return _in(0x66f77fd5, 0x8506ff6b, p0, _ts(context), out, _r);
};

/**
 * SC_INBOX_MESSAGE_GET_RAW_TYPE_AT_INDEX
 *
 * @param {number} p0
 * @return {string | number}
 */
global.ScInboxMessageGetRawTypeAtIndex = function (p0) {
  return _in(0x176d0776, 0x85cd83e4, p0, _r, _s);
};

/**
 * SC_INBOX_SET_MESSAGE_AS_READ_AT_INDEX
 *
 * @param {number} msgIndex
 * @return {boolean}
 */
global.ScInboxSetMessageAsReadAtIndex = function (msgIndex) {
  return _in(0x63cac501, 0xfff66dc4, msgIndex, _r);
};

/**
 * SC_PRESENCE_ATTR_SET_FLOAT
 *
 * @param {number} attrHash
 * @param {number} value
 * @return {boolean}
 */
global.ScPresenceAttrSetFloat = function (attrHash, value) {
  return _in(0xa31dafcd, 0xc33775e9, _ch(attrHash), _fv(value), _r);
};

/**
 * SC_PRESENCE_ATTR_SET_FLOAT_EX
 *
 * @param {string | number} attrName
 * @param {number} value
 * @param {boolean} p2
 * @return {boolean}
 */
global.ScPresenceAttrSetFloatEx = function (attrName, value, p2) {
  return _in(0x00000000, 0x467f4caa, _ts(attrName), _fv(value), p2, _r);
};

/**
 * SC_PRESENCE_ATTR_SET_INT_EX
 *
 * @param {string | number} attrName
 * @param {number} value
 * @param {boolean} p2
 * @return {boolean}
 */
global.ScPresenceAttrSetIntEx = function (attrName, value, p2) {
  return _in(0x00000000, 0x85488c49, _ts(attrName), value, p2, _r);
};

/**
 * SC_PRESENCE_ATTR_SET_STRING_EX
 *
 * @param {string | number} attrName
 * @param {string | number} value
 * @param {boolean} p2
 * @return {boolean}
 */
global.ScPresenceAttrSetStringEx = function (attrName, value, p2) {
  return _in(0x00000000, 0xeb2d93b3, _ts(attrName), _ts(value), p2, _r);
};

/**
 * SC_PROFANITY_CHECK_STRING
 * Starts a task to check an entered string for profanity on the ROS/Social Club services.
 *
 * @param {string | number} string
 * @return {[boolean, number]}
 */
global.ScProfanityCheckString = function (string) {
  return _in(0x9c74ac9d, 0x87b3fff4, _ts(string), _i, _r);
};

/**
 * SC_PROFANITY_GET_CHECK_IS_PENDING
 *
 * @param {number} token
 * @return {boolean}
 */
global.ScProfanityGetCheckIsPending = function (token) {
  return _in(0x3a10bcd0, 0xc8aa0b82, token, _r);
};

/**
 * SC_PROFANITY_GET_CHECK_IS_VALID
 *
 * @param {number} token
 * @return {boolean}
 */
global.ScProfanityGetCheckIsValid = function (token) {
  return _in(0x08c8052a, 0xf40c4247, token, _r);
};

/**
 * SC_PROFANITY_GET_STRING_PASSED
 *
 * @param {number} token
 * @return {boolean}
 */
global.ScProfanityGetStringPassed = function (token) {
  return _in(0xf302973b, 0xb8be70e6, token, _r);
};

/**
 * SC_PROFANITY_GET_STRING_STATUS
 *
 * @param {number} token
 * @return {number}
 */
global.ScProfanityGetStringStatus = function (token) {
  return _in(0x0cf3bfb9, 0x9ebbe5b1, token, _r, _ri);
};

/**
 * SC_FEED_HUB_HAS_NEW_DATA
 *

 * @return {boolean}
 */
global.ScFeedHubHasNewData = function () {
  return _in(0x068332d2, 0x0cb6f897, _r);
};

/**
 * _SC_FEED_SUBMIT_PRESET_MESSAGE
 *
 * @param {number} type
 * @param {number} subType
 * @return {number}
 */
global.ScFeedSubmitPresetMessage = function (type, subType) {
  return _in(0xefb64240, 0xf6b17817, type, subType, _r, _ri);
};

/**
 * _SPACTIONPROXY_GET_NEXT_PENDING_BUY_ACTION
 *
 * @param {DataView} data
 * @return {boolean}
 */
global.SpactionproxyGetNextPendingBuyAction = function (data) {
  return _in(0x1f471b79, 0xacc98bef, data, _r);
};

/**
 * _SPACTIONPROXY_GET_NEXT_PENDING_CRAFTING_ACTION
 *
 * @param {DataView} data
 * @return {boolean}
 */
global.SpactionproxyGetNextPendingCraftingAction = function (data) {
  return _in(0x1f471b79, 0xacc97bef, data, _r);
};

/**
 * _SPACTIONPROXY_MANAGER_IS_FAILED
 *

 * @return {boolean}
 */
global.SpactionproxyManagerIsFailed = function () {
  return _in(0x1f471b79, 0xacc91bec, _r);
};

/**
 * _SPACTIONPROXY_MANAGER_IS_READY
 *

 * @return {boolean}
 */
global.SpactionproxyManagerIsReady = function () {
  return _in(0x1f471b79, 0xacc91bed, _r);
};

/**
 * _SPACTIONPROXY_PROCESS_ACTION
 *
 * @param {any} p0
 * @param {boolean} p1
 * @return {boolean}
 */
global.SpactionproxyProcessAction = function (p0, p1) {
  return _in(0x1f471b79, 0xacc94bef, p0, p1, _r);
};

/**
 * _SPACTIONPROXY_START_MANAGER
 *

 * @return {boolean}
 */
global.SpactionproxyStartManager = function () {
  return _in(0x1f471b79, 0xacc91bee, _r);
};

/**
 * CHAL_ACHIEVEMENT_GET_PROGRESS_INT
 *
 * @param {number} p0
 * @param {number} p1
 * @return {number}
 */
global.ChalAchievementGetProgressInt = function (p0, p1) {
  return _in(0x808712e4, 0x28f697b8, _ch(p0), _ch(p1), _r, _ri);
};

/**
 * CHAL_ACHIEVEMENT_IS_COMPLETE
 *
 * @param {number} p0
 * @param {number} p1
 * @return {boolean}
 */
global.ChalAchievementIsComplete = function (p0, p1) {
  return _in(0x77b97a82, 0x7739d434, _ch(p0), _ch(p1), _r);
};

/**
 * CHAL_ADD_GOAL_PROGRESS_FLOAT
 *
 * @param {number} chalHash
 * @param {number} goalHash
 * @param {number} value
 * @return {void}
 */
global.ChalAddGoalProgressFloat = function (chalHash, goalHash, value) {
  return _in(0x86922d8c, 0x02fb7703, _ch(chalHash), _ch(goalHash), _fv(value));
};

/**
 * CHAL_ADD_GOAL_PROGRESS_FLOAT_BY_SCORE_ID
 *
 * @param {number} p0
 * @param {number} value
 * @return {void}
 */
global.ChalAddGoalProgressFloatByScoreId = function (p0, value) {
  return _in(0x86922d8c, 0x02fb7705, _ch(p0), _fv(value));
};

/**
 * CHAL_ADD_GOAL_PROGRESS_INT
 *
 * @param {number} chalHash
 * @param {number} goalHash
 * @param {number} value
 * @return {void}
 */
global.ChalAddGoalProgressInt = function (chalHash, goalHash, value) {
  return _in(0xddbd5607, 0x45b1ee9a, _ch(chalHash), _ch(goalHash), value);
};

/**
 * CHAL_ADD_GOAL_PROGRESS_INT_BY_SCORE_ID
 *
 * @param {number} p0
 * @param {number} value
 * @return {void}
 */
global.ChalAddGoalProgressIntByScoreId = function (p0, value) {
  return _in(0xddbd5607, 0x45b1ee9c, _ch(p0), value);
};

/**
 * CHAL_GET_MAX_RANKS
 *
 * @param {number} chalHash
 * @return {number}
 */
global.ChalGetMaxRanks = function (chalHash) {
  return _in(0x58cb53db, 0x63f84dea, _ch(chalHash), _r, _ri);
};

/**
 * CHAL_GET_NUM_RANKS_COMPLETED
 *
 * @param {number} chalHash
 * @return {number}
 */
global.ChalGetNumRanksCompleted = function (chalHash) {
  return _in(0x58cb53db, 0x63f84de9, _ch(chalHash), _r, _ri);
};

/**
 * CHAL_IS_GOAL_ACTIVE
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/challenge_goals.lua
 *
 * @param {number} chalHash
 * @param {number} goalHash
 * @return {boolean}
 */
global.ChalIsGoalActive = function (chalHash, goalHash) {
  return _in(0x04dac392, 0x9796eb87, _ch(chalHash), _ch(goalHash), _r);
};

/**
 * CHAL_MISSION_ADD_GOAL_PROGRESS_INT
 *
 * @param {number} missionHash
 * @param {number} goalHash
 * @param {number} value
 * @return {void}
 */
global.ChalMissionAddGoalProgressInt = function (missionHash, goalHash, value) {
  return _in(0x97e18e7c, 0x098626de, _ch(missionHash), _ch(goalHash), value);
};

/**
 * CHAL_MISSION_GET_NUM_GOALS
 *
 * @param {number} missionHash
 * @return {number}
 */
global.ChalMissionGetNumGoals = function (missionHash) {
  return _in(0x0b0576dd, 0x3a75e58d, _ch(missionHash), _r, _ri);
};

/**
 * CHAL_MISSION_GET_NUM_GOALS_COMPLETE
 *
 * @param {number} missionHash
 * @return {number}
 */
global.ChalMissionGetNumGoalsComplete = function (missionHash) {
  return _in(0xa785a52b, 0x59b7e7b2, _ch(missionHash), _r, _ri);
};

/**
 * CHAL_MISSION_IS_GOAL_COMPLETE
 *
 * @param {number} missionHash
 * @param {number} goalHash
 * @return {boolean}
 */
global.ChalMissionIsGoalComplete = function (missionHash, goalHash) {
  return _in(0xc0bb7747, 0x87bbf301, _ch(missionHash), _ch(goalHash), _r);
};

/**
 * CHAL_NET_START_CHAL
 *
 * @param {number} chalHash
 * @return {void}
 */
global.ChalNetStartChal = function (chalHash) {
  return _in(0x4abf7e4d, 0xb6279e8f, _ch(chalHash));
};

/**
 * CHAL_NET_START_GOAL
 *
 * @param {number} chalHash
 * @param {number} goalHash
 * @return {void}
 */
global.ChalNetStartGoal = function (chalHash, goalHash) {
  return _in(0xc3fcb473, 0x44dcb638, _ch(chalHash), _ch(goalHash));
};

/**
 * CHAL_NET_STOP_CHAL
 *
 * @param {number} chalHash
 * @return {void}
 */
global.ChalNetStopChal = function (chalHash) {
  return _in(0x43b01631, 0x54a50c86, _ch(chalHash));
};

/**
 * CHAL_NET_STOP_GOAL
 *
 * @param {number} chalHash
 * @param {number} goalHash
 * @return {void}
 */
global.ChalNetStopGoal = function (chalHash, goalHash) {
  return _in(0x00ce6a93, 0x324a590b, _ch(chalHash), _ch(goalHash));
};

/**
 * CHAL_SET_GOAL_DISABLED
 *
 * @param {number} chalHash
 * @param {number} goalHash
 * @param {boolean} disabled
 * @return {void}
 */
global.ChalSetGoalDisabled = function (chalHash, goalHash, disabled) {
  return _in(0xf63df9ee, 0x16393343, _ch(chalHash), _ch(goalHash), disabled);
};

/**
 * CHAL_SET_GOAL_PROGRESS_INT
 *
 * @param {number} chalHash
 * @param {number} goalHash
 * @param {number} value
 * @return {void}
 */
global.ChalSetGoalProgressInt = function (chalHash, goalHash, value) {
  return _in(0xddbd5607, 0x45b1ee9b, _ch(chalHash), _ch(goalHash), value);
};

/**
 * STATSTRACKER_DEED_STARTED
 *
 * @param {number} p0
 * @param {any} p1
 * @return {void}
 */
global.StatstrackerDeedStarted = function (p0, p1) {
  return _in(0xb2a38826, 0xe5886e83, _ch(p0), p1);
};

/**
 * STATSTRACKER_IS_INITIALIZED
 *
 * @param {number} p0
 * @return {boolean}
 */
global.StatstrackerIsInitialized = function (p0) {
  return _in(0x01f4d242, 0x765c6b24, _ch(p0), _r);
};

/**
 * STAT_ADD_BOUNTY_TARGET
 *
 * @param {number} unlockHash
 * @param {number} ped
 * @return {void}
 */
global.StatAddBountyTarget = function (unlockHash, ped) {
  return _in(0x6b1044fd, 0xc2b09101, _ch(unlockHash), ped);
};

/**
 * STAT_BOUNTY_CAPTURED
 *
 * @param {number} entity
 * @return {void}
 */
global.StatBountyCaptured = function (entity) {
  return _in(0x262ef7cf, 0x49cf1eb9, entity);
};

/**
 * STAT_BOUNTY_ESCAPED
 *
 * @param {number} ped
 * @return {void}
 */
global.StatBountyEscaped = function (ped) {
  return _in(0xb22f0573, 0x2f72f70c, ped);
};

/**
 * STAT_ID_GET_BOOL
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @return {[boolean, boolean]}
 */
global.StatIdGetBool = function (statId) {
  return _in(0x11b5e6d2, 0xae73f48f, statId, /* actually bool */ _i, _r);
};

/**
 * STAT_ID_GET_DATE
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @param {DataView} date
 * @return {boolean}
 */
global.StatIdGetDate = function (statId, date) {
  return _in(0x8b0facef, 0xc36c824c, statId, date, _r);
};

/**
 * STAT_ID_GET_FLOAT
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @return {[boolean, number]}
 */
global.StatIdGetFloat = function (statId) {
  return _in(0xd7ae6c9c, 0x9c6ac54d, statId, _f, _r);
};

/**
 * STAT_ID_GET_INT
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @return {[boolean, number]}
 */
global.StatIdGetInt = function (statId) {
  return _in(0x767fbc2a, 0xc802ef3e, statId, _i, _r);
};

/**
 * STAT_ID_IS_VALID
 * struct StatId
 * {
 *   alignas(8) Hash BaseId;
 *   alignas(8) Hash PermutationId;
 * }
 *
 * @param {DataView} statId
 * @return {boolean}
 */
global.StatIdIsValid = function (statId) {
  return _in(0xc48fe197, 0x1c9743ff, statId, _r);
};

/**
 * STAT_ID_SET_BOOL
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @param {boolean} value
 * @param {boolean} p2
 * @return {boolean}
 */
global.StatIdSetBool = function (statId, value, p2) {
  return _in(0x3b510735, 0x3267d7a1, statId, value, p2, _r);
};

/**
 * STAT_ID_SET_DATE
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @param {DataView} date
 * @param {boolean} p2
 * @return {boolean}
 */
global.StatIdSetDate = function (statId, date, p2) {
  return _in(0x1fae9b2f, 0xaa2dfe06, statId, date, p2, _r);
};

/**
 * STAT_ID_SET_FLOAT
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @param {number} value
 * @param {boolean} p2
 * @return {boolean}
 */
global.StatIdSetFloat = function (statId, value, p2) {
  return _in(0x481bdf6a, 0x10c5ef68, statId, _fv(value), p2, _r);
};

/**
 * STAT_ID_SET_GXT_LABEL
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @param {string | number} label
 * @param {boolean} p2
 * @return {boolean}
 */
global.StatIdSetGxtLabel = function (statId, label, p2) {
  return _in(0x05060a54, 0x834f2382, statId, _ts(label), p2, _r);
};

/**
 * STAT_ID_SET_INT
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @param {number} value
 * @param {boolean} p2
 * @return {boolean}
 */
global.StatIdSetInt = function (statId, value, p2) {
  return _in(0xa4ddf5df, 0x95e65eee, statId, value, p2, _r);
};

/**
 * STAT_ID_SET_TO_POSSE_ID
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @return {void}
 */
global.StatIdSetToPosseId = function (statId) {
  return _in(0x34b22de3, 0x8477edb4, statId);
};

/**
 * STAT_PHOTOGRAPH_TAKEN
 *
 * @param {number} itemset
 * @return {void}
 */
global.StatPhotographTaken = function (itemset) {
  return _in(0x4d31051a, 0x4ca83787, itemset);
};

/**
 * STAT_REGISTER_LEGENDARY_ANIMAL_DEED
 *
 * @param {number} deedHash
 * @return {void}
 */
global.StatRegisterLegendaryAnimalDeed = function (deedHash) {
  return _in(0xcd0d69c6, 0x5bb0e8b9, _ch(deedHash));
};

/**
 * WEEKLY_COLLECTIBLE_GET_ITEM_IN_SET
 *
 * @param {number} chalHash
 * @param {number} setIndex
 * @param {number} itemIndex
 * @return {[boolean, number, number]}
 */
global.WeeklyCollectibleGetItemInSet = function (chalHash, setIndex, itemIndex) {
  return _in(0xba61ba62, 0x05a3f5a8, _ch(chalHash), setIndex, itemIndex, _i, _i, _r);
};

/**
 * WEEKLY_COLLECTIBLE_GET_ITEM_SET_BUY_AWARD
 *
 * @param {number} chalHash
 * @param {number} index
 * @return {number}
 */
global.WeeklyCollectibleGetItemSetBuyAward = function (chalHash, index) {
  return _in(0x610783f6, 0x46894d25, _ch(chalHash), index, _r, _ri);
};

/**
 * WEEKLY_COLLECTIBLE_GET_ITEM_SET_LABEL
 *
 * @param {number} chalHash
 * @param {number} index
 * @return {number}
 */
global.WeeklyCollectibleGetItemSetLabel = function (chalHash, index) {
  return _in(0xbffa8852, 0x2ff0f730, _ch(chalHash), index, _r, _ri);
};

/**
 * WEEKLY_COLLECTIBLE_GET_NUM_ITEMS_IN_SET
 *
 * @param {number} chalHash
 * @param {number} index
 * @return {number}
 */
global.WeeklyCollectibleGetNumItemsInSet = function (chalHash, index) {
  return _in(0x7d675c9d, 0xddb365be, _ch(chalHash), index, _r, _ri);
};

/**
 * WEEKLY_COLLECTIBLE_GET_NUM_SETS
 *
 * @param {number} chalHash
 * @return {number}
 */
global.WeeklyCollectibleGetNumSets = function (chalHash) {
  return _in(0x8f531772, 0x9f791d10, _ch(chalHash), _r, _ri);
};

/**
 * _0x025E98E317652CDD
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x025E98E317652CDD = function (p0) {
  return _in(0x025e98e3, 0x17652cdd, p0);
};

/**
 * _0x0FEE2561120F3333
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @return {void}
 */
global.N_0x0FEE2561120F3333 = function (statId) {
  return _in(0x0fee2561, 0x120f3333, statId);
};

/**
 * _0x218F7710A139D012
 *

 * @return {void}
 */
global.N_0x218F7710A139D012 = function () {
  return _in(0x218f7710, 0xa139d012);
};

/**
 * _0x302E71C1D9EE75B9
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @param {number} p1
 * @return {[boolean, number]}
 */
global.N_0x302E71C1D9EE75B9 = function (statId, p1) {
  return _in(0x302e71c1, 0xd9ee75b9, statId, _ch(p1), _i, _r);
};

/**
 * _0x378D3B1B11D9385B
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x378D3B1B11D9385B = function (p0) {
  return _in(0x378d3b1b, 0x11d9385b, p0);
};

/**
 * _0x3AEABAE3F3C7600C
 *

 * @return {boolean}
 */
global.N_0x3AEABAE3F3C7600C = function () {
  return _in(0x3aeabae3, 0xf3c7600c, _r);
};

/**
 * _0x3EB2791A1FBC8A42
 *
 * @param {number} statItem
 * @param {number} p1
 * @return {void}
 */
global.N_0x3EB2791A1FBC8A42 = function (statItem, p1) {
  return _in(0x3eb2791a, 0x1fbc8a42, _ch(statItem), p1);
};

/**
 * _0x3F6FD87D2030ADC6
 *

 * @return {string | number}
 */
global.N_0x3F6FD87D2030ADC6 = function () {
  return _in(0x3f6fd87d, 0x2030adc6, _r, _s);
};

/**
 * _0x4DAC398297981B87
 * Only used in R* SP Scripts
 *
 * @param {number} p0
 * @return {boolean}
 */
global.N_0x4DAC398297981B87 = function (p0) {
  return _in(0x4dac3982, 0x97981b87, p0, _r);
};

/**
 * _0x4E463A3CDEFFFE96
 * Only used in R* Script net_char_creator
 *

 * @return {void}
 */
global.N_0x4E463A3CDEFFFE96 = function () {
  return _in(0x4e463a3c, 0xdefffe96);
};

/**
 * _0x4F2D5FA23DB992DE
 * Only used in R* Script net_char_creator
 *

 * @return {void}
 */
global.N_0x4F2D5FA23DB992DE = function () {
  return _in(0x4f2d5fa2, 0x3db992de);
};

/**
 * _0x4FCBCC0584CD08E9
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x4FCBCC0584CD08E9 = function (p0) {
  return _in(0x4fcbcc05, 0x84cd08e9, _ch(p0));
};

/**
 * _0x6123E2832C34243D
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x6123E2832C34243D = function (p0, p1, p2, p3, p4) {
  return _in(0x6123e283, 0x2c34243d, p0, p1, p2, p3, p4);
};

/**
 * _0x8312F09C56149A8A
 * Only used in R* SP Scripts
 *
 * @param {number} animalType
 * @return {void}
 */
global.N_0x8312F09C56149A8A = function (animalType) {
  return _in(0x8312f09c, 0x56149a8a, _ch(animalType));
};

/**
 * _0x8BA3D7B1E83EF803
 *
 * @param {number} p0
 * @return {number}
 */
global.N_0x8BA3D7B1E83EF803 = function (p0) {
  return _in(0x8ba3d7b1, 0xe83ef803, _ch(p0), _r, _ri);
};

/**
 * _0x8C889E4CBB4B2356
 *
 * @param {any} p0
 * @param {number} ped
 * @return {void}
 */
global.N_0x8C889E4CBB4B2356 = function (p0, ped) {
  return _in(0x8c889e4c, 0xbb4b2356, p0, ped);
};

/**
 * _0x91A4F58E01ED5E4C
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @param {number} value
 * @return {void}
 */
global.N_0x91A4F58E01ED5E4C = function (statId, value) {
  return _in(0x91a4f58e, 0x01ed5e4c, statId, value);
};

/**
 * _0x99230691875FC218
 *
 * @param {any} p0
 * @param {number} p1
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.N_0x99230691875FC218 = function (p0, p1, x, y, z) {
  return _in(0x99230691, 0x875fc218, p0, _ch(p1), _fv(x), _fv(y), _fv(z));
};

/**
 * _0x9D0F5D2E1951CD84
 *

 * @return {number}
 */
global.N_0x9D0F5D2E1951CD84 = function () {
  return _in(0x9d0f5d2e, 0x1951cd84, _r, _rf);
};

/**
 * _0xA2E2BEA4E83F6270
 *
 * @param {number} p0
 * @return {any}
 */
global.N_0xA2E2BEA4E83F6270 = function (p0) {
  return _in(0xa2e2bea4, 0xe83f6270, _ch(p0), _r);
};

/**
 * _0xA59590050F80FF2E
 * Only used in R* SP Scripts
 *
 * @param {any} p0
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {void}
 */
global.N_0xA59590050F80FF2E = function (p0, p1, p2, p3) {
  return _in(0xa5959005, 0x0f80ff2e, p0, p1, p2, p3);
};

/**
 * _0xA596890CF55B5095
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xA596890CF55B5095 = function (ped, p1) {
  return _in(0xa596890c, 0xf55b5095, ped, p1);
};

/**
 * _0xB112B9262EC29C20
 *
 * @param {number} p0
 * @param {number} p1
 * @return {string | number}
 */
global.N_0xB112B9262EC29C20 = function (p0, p1) {
  return _in(0xb112b926, 0x2ec29c20, _ch(p0), p1, _r, _s);
};

/**
 * _0xB5E2EDA2135E0FA1
 *
 * @param {number} p0
 * @param {number} p1
 * @return {[boolean, number]}
 */
global.N_0xB5E2EDA2135E0FA1 = function (p0, p1) {
  return _in(0xb5e2eda2, 0x135e0fa1, _ch(p0), p1, _i, _r);
};

/**
 * _0xBE66B26B6529E943
 *
 * @param {number} unlockHash
 * @param {number} ped
 * @param {number} animalType
 * @return {void}
 */
global.N_0xBE66B26B6529E943 = function (unlockHash, ped, animalType) {
  return _in(0xbe66b26b, 0x6529e943, _ch(unlockHash), ped, _ch(animalType));
};

/**
 * _0xCA1F0B5103936891
 *
 * @param {number} p0
 * @return {boolean}
 */
global.N_0xCA1F0B5103936891 = function (p0) {
  return _in(0xca1f0b51, 0x03936891, _ch(p0), _r);
};

/**
 * _0xCA41E86545413B5B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.N_0xCA41E86545413B5B = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xca41e865, 0x45413b5b, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _0xD64DBC8B0424135F
 *
 * @param {number} ped
 * @param {number} animalType
 * @return {void}
 */
global.N_0xD64DBC8B0424135F = function (ped, animalType) {
  return _in(0xd64dbc8b, 0x0424135f, ped, _ch(animalType));
};

/**
 * _0xDA26263C07CCE9C2
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0xDA26263C07CCE9C2 = function (p0) {
  return _in(0xda26263c, 0x07cce9c2, p0);
};

/**
 * _0xDDBD560745B1EE98
 *
 * @param {number} chalHash
 * @param {number} goalHash
 * @param {number} player
 * @return {number}
 */
global.N_0xDDBD560745B1EE98 = function (chalHash, goalHash, player) {
  return _in(0xddbd5607, 0x45b1ee98, _ch(chalHash), _ch(goalHash), player, _r, _ri);
};

/**
 * _0xDF95DF488A645CE7
 *

 * @return {void}
 */
global.N_0xDF95DF488A645CE7 = function () {
  return _in(0xdf95df48, 0x8a645ce7);
};

/**
 * _0xE141F6B40B1E3683
 * statId: see STAT_ID_IS_VALID
 * Only used in R* SP Scripts
 * _STAT_ID_SET_*
 *
 * @param {DataView} statId
 * @param {number} value
 * @return {void}
 */
global.N_0xE141F6B40B1E3683 = function (statId, value) {
  return _in(0xe141f6b4, 0x0b1e3683, statId, _fv(value));
};

/**
 * _0xE5A680A5D8B1F687
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0xE5A680A5D8B1F687 = function (p0) {
  return _in(0xe5a680a5, 0xd8b1f687, p0);
};

/**
 * _0xF21A5D66874FCEDD
 *
 * @param {any} p0
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0xF21A5D66874FCEDD = function (p0, p1, p2) {
  return _in(0xf21a5d66, 0x874fcedd, p0, _ch(p1), _ch(p2));
};

/**
 * _0xF2B5ABDE09958689
 *
 * @param {number} unlockHash
 * @param {number} ped1
 * @param {number} ped2
 * @return {void}
 */
global.N_0xF2B5ABDE09958689 = function (unlockHash, ped1, ped2) {
  return _in(0xf2b5abde, 0x09958689, _ch(unlockHash), ped1, ped2);
};

/**
 * _0xF8181B5EF156862C
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xF8181B5EF156862C = function (ped) {
  return _in(0xf8181b5e, 0xf156862c, ped);
};

/**
 * _STATSTRACKER_DEED_STATUS
 *
 * @param {number} deedType
 * @param {number} deedHash
 * @param {number} missionStatus
 * @param {DataView} data
 * @return {void}
 */
global.StatstrackerDeedStatus = function (deedType, deedHash, missionStatus, data) {
  return _in(0xd5910ecf, 0x81a2278c, deedType, _ch(deedHash), missionStatus, data);
};

/**
 * _STAT_ADD_ANIMAL_SAMPLE_TARGET
 * Related to animal tagging
 *
 * @param {number} animalType
 * @return {void}
 */
global.StatAddAnimalSampleTarget = function (animalType) {
  return _in(0x90e9a5da, 0xdbabc918, _ch(animalType));
};

/**
 * _STAT_CALCULATE_COOLDOWN
 * Calculation: (value / 1000) / 60 % 60
 *
 * @param {number} value
 * @return {number}
 */
global.StatCalculateCooldown = function (value) {
  return _in(0x1e7384ab, 0x5d4f4581, value, _r, _ri);
};

/**
 * _STAT_CARRIED_SATCHEL_ITEM_FROM_PED
 *
 * @param {number} ped
 * @return {void}
 */
global.StatCarriedSatchelItemFromPed = function (ped) {
  return _in(0x831bf01c, 0x56149a8a, ped);
};

/**
 * _STAT_DONATE_INCREMENT_ITEM
 *
 * @param {number} item
 * @param {number} slot
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.StatDonateIncrementItem = function (item, slot, p2, p3) {
  return _in(0x7c2abf6e, 0x556b21fc, item, slot, p2, p3);
};

/**
 * _STAT_ID_DECREMENT_INT
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @param {number} value
 * @return {void}
 */
global.StatIdDecrementInt = function (statId, value) {
  return _in(0xbd861ae8, 0xa5181ed7, statId, value);
};

/**
 * _STAT_ID_INCREMENT_FLOAT
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @param {number} value
 * @return {void}
 */
global.StatIdIncrementFloat = function (statId, value) {
  return _in(0x4a47e38e, 0xa3d60939, statId, _fv(value));
};

/**
 * _STAT_ID_INCREMENT_INT
 * statId: see STAT_ID_IS_VALID
 *
 * @param {DataView} statId
 * @param {number} value
 * @return {void}
 */
global.StatIdIncrementInt = function (statId, value) {
  return _in(0x6a0184e9, 0x04cdf25e, statId, value);
};

/**
 * _STAT_ITEM_FISH_CAUGHT
 *
 * @param {number} fish
 * @param {number} weight
 * @param {number} category
 * @param {number} subcategory
 * @return {void}
 */
global.StatItemFishCaught = function (fish, weight, category, subcategory) {
  return _in(0xda26263c, 0x87cce9c1, fish, _fv(weight), _ch(category), _ch(subcategory));
};

/**
 * _STAT_PHEROMONE_COOLDOWN_LEGENDARY_ANIMAL
 * statId: see STAT_ID_IS_VALID
 *
 * @param {number} entity
 * @param {DataView} statId
 * @return {boolean}
 */
global.StatPheromoneCooldownLegendaryAnimal = function (entity, statId) {
  return _in(0x5420d398, 0xa42917fc, entity, statId, _r);
};

/**
 * BEGIN_SRL
 *

 * @return {void}
 */
global.BeginSrl = function () {
  return _in(0x03607100, 0x33be60d9);
};

/**
 * CLEAR_FOCUS
 *

 * @return {void}
 */
global.ClearFocus = function () {
  return _in(0x86ccaf7c, 0xe493efbe);
};

/**
 * CLEAR_HD_AREA
 *

 * @return {void}
 */
global.ClearHdArea = function () {
  return _in(0xd83b2243, 0x4e52728d);
};

/**
 * DOES_ANIM_DICT_EXIST
 *
 * @param {string | number} animDict
 * @return {boolean}
 */
global.DoesAnimDictExist = function (animDict) {
  return _in(0x537f44cb, 0x0d7f150d, _ts(animDict), _r);
};

/**
 * END_SRL
 *

 * @return {void}
 */
global.EndSrl = function () {
  return _in(0x1ce71fb3, 0x3ca079fe);
};

/**
 * GET_NUMBER_OF_STREAMING_REQUESTS
 *

 * @return {number}
 */
global.GetNumberOfStreamingRequests = function () {
  return _in(0x30cccc4d, 0x88e654ca, _r, _ri);
};

/**
 * GET_POPULATION_BUDGET_MULTIPLIER
 *

 * @return {number}
 */
global.GetPopulationBudgetMultiplier = function () {
  return _in(0x8a394540, 0x5b31048f, _r, _rf);
};

/**
 * HAS_ANIM_DICT_LOADED
 *
 * @param {string | number} animDict
 * @return {boolean}
 */
global.HasAnimDictLoaded = function (animDict) {
  return _in(0x27ff6fe8, 0x009b40ca, _ts(animDict), _r);
};

/**
 * HAS_CLIP_SET_LOADED
 * Alias for HAS_ANIM_SET_LOADED.
 *
 * @param {string | number} clipSet
 * @return {boolean}
 */
global.HasClipSetLoaded = function (clipSet) {
  return _in(0x1f23d6b6, 0xda1cc3b2, _ts(clipSet), _r);
};

/**
 * HAS_COLLISION_FOR_MODEL_LOADED
 *
 * @param {number} model
 * @return {boolean}
 */
global.HasCollisionForModelLoaded = function (model) {
  return _in(0x210a79c9, 0xec89778f, _ch(model), _r);
};

/**
 * HAS_MODEL_LOADED
 * Checks if the specified model has loaded into memory.
 *
 * @param {number} model
 * @return {boolean}
 */
global.HasModelLoaded = function (model) {
  return _in(0x1283b8b8, 0x9dd5d1b6, _ch(model), _r);
};

/**
 * HAS_MOVE_NETWORK_DEF_LOADED
 *
 * @param {string | number} name
 * @return {boolean}
 */
global.HasMoveNetworkDefLoaded = function (name) {
  return _in(0x2c04d89a, 0x0fb4e244, _ts(name), _r);
};

/**
 * HAS_NAMED_PTFX_ASSET_LOADED
 *
 * @param {number} fxNameHash
 * @return {boolean}
 */
global.HasNamedPtfxAssetLoaded = function (fxNameHash) {
  return _in(0x65bb72f2, 0x9138f5d6, _ch(fxNameHash), _r);
};

/**
 * HAS_PTFX_ASSET_LOADED
 *

 * @return {boolean}
 */
global.HasPtfxAssetLoaded = function () {
  return _in(0x13a3f30a, 0x9ed0bc31, _r);
};

/**
 * IPL_GROUP_SWAP_CANCEL
 *

 * @return {void}
 */
global.IplGroupSwapCancel = function () {
  return _in(0x31108bb5, 0x715d035f);
};

/**
 * IPL_GROUP_SWAP_FINISH
 *

 * @return {void}
 */
global.IplGroupSwapFinish = function () {
  return _in(0x040ee319, 0xefd1d3b5);
};

/**
 * IPL_GROUP_SWAP_IS_ACTIVE
 *

 * @return {boolean}
 */
global.IplGroupSwapIsActive = function () {
  return _in(0xfc464598, 0xf6ee97b0, _r);
};

/**
 * IPL_GROUP_SWAP_IS_READY
 *

 * @return {boolean}
 */
global.IplGroupSwapIsReady = function () {
  return _in(0xc2c05def, 0xe85a0b64, _r);
};

/**
 * IPL_GROUP_SWAP_START
 *
 * @param {string | number} iplName1
 * @param {string | number} iplName2
 * @return {void}
 */
global.IplGroupSwapStart = function (iplName1, iplName2) {
  return _in(0x20d50499, 0x4fdc4412, _ts(iplName1), _ts(iplName2));
};

/**
 * IS_ENTITY_FOCUS
 *
 * @param {number} entity
 * @return {boolean}
 */
global.IsEntityFocus = function (entity) {
  return _in(0xf87de697, 0xe9a06ec6, entity, _r);
};

/**
 * IS_IPL_ACTIVE_BY_HASH
 * Old name: _IS_IMAP_ACTIVE_2
 *
 * @param {number} iplHash
 * @return {boolean}
 */
global.IsIplActiveByHash = function (iplHash) {
  return _in(0x93ac1b91, 0xcb6d9913, _ch(iplHash), _r);
};

/**
 * IS_IPL_ACTIVE_HASH
 * Old name: _IS_IMAP_ACTIVE
 *
 * @param {number} iplHash
 * @return {boolean}
 */
global.IsIplActiveHash = function (iplHash) {
  return _in(0xd779b9b9, 0x10bd3b7c, _ch(iplHash), _r);
};

/**
 * IS_LOAD_SCENE_ACTIVE
 *

 * @return {boolean}
 */
global.IsLoadSceneActive = function () {
  return _in(0xcf45df50, 0xc7775f2a, _r);
};

/**
 * IS_LOAD_SCENE_LOADED
 *

 * @return {boolean}
 */
global.IsLoadSceneLoaded = function () {
  return _in(0x0909f71b, 0x5c070797, _r);
};

/**
 * IS_MODEL_A_PED
 *
 * @param {number} model
 * @return {boolean}
 */
global.IsModelAPed = function (model) {
  return _in(0xc3f09de9, 0xd6d17dda, _ch(model), _r);
};

/**
 * IS_MODEL_A_VEHICLE
 * Returns whether the specified model represents a vehicle.
 *
 * @param {number} model
 * @return {boolean}
 */
global.IsModelAVehicle = function (model) {
  return _in(0x354f6267, 0x2de7db0a, _ch(model), _r);
};

/**
 * IS_MODEL_IN_CDIMAGE
 * Returns whether the specified model exists in the game.
 *
 * @param {number} model
 * @return {boolean}
 */
global.IsModelInCdimage = function (model) {
  return _in(0xd6f3b6d7, 0x716cff8e, _ch(model), _r);
};

/**
 * IS_MODEL_VALID
 * Returns whether the specified model is valid
 *
 * @param {number} model
 * @return {boolean}
 */
global.IsModelValid = function (model) {
  return _in(0x392c8d8e, 0x07b70efc, _ch(model), _r);
};

/**
 * IS_PLAYER_SWITCH_IN_PROGRESS
 *

 * @return {boolean}
 */
global.IsPlayerSwitchInProgress = function () {
  return _in(0xed20cb1f, 0x5297791d, _r);
};

/**
 * IS_RENDERED_SCENE_LOADED
 *

 * @return {boolean}
 */
global.IsRenderedSceneLoaded = function () {
  return _in(0x45bf3a62, 0x39a576b7, _r);
};

/**
 * IS_SRL_LOADED
 *

 * @return {boolean}
 */
global.IsSrlLoaded = function () {
  return _in(0x5c2c8851, 0x2cf6dafb, _r);
};

/**
 * LOAD_SCENE_START
 *
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @param {number} radius
 * @param {number} p7
 * @return {boolean}
 */
global.LoadSceneStart = function (posX, posY, posZ, offsetX, offsetY, offsetZ, radius, p7) {
  return _in(0x387ad749, 0xe3b69b70, _fv(posX), _fv(posY), _fv(posZ), _fv(offsetX), _fv(offsetY), _fv(offsetZ), _fv(radius), p7, _r);
};

/**
 * LOAD_SCENE_START_SPHERE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {any} p4
 * @return {boolean}
 */
global.LoadSceneStartSphere = function (x, y, z, radius, p4) {
  return _in(0x513f8aa5, 0xbf2f17cf, _fv(x), _fv(y), _fv(z), _fv(radius), p4, _r);
};

/**
 * LOAD_SCENE_STOP
 *

 * @return {void}
 */
global.LoadSceneStop = function () {
  return _in(0x5a8b0119, 0x9c3e79c3);
};

/**
 * PREFETCH_SRL
 *
 * @param {string | number} srl
 * @return {void}
 */
global.PrefetchSrl = function (srl) {
  return _in(0x354837e5, 0xa5baa5af, _ts(srl));
};

/**
 * REMOVE_ANIM_DICT
 *
 * @param {string | number} animDict
 * @return {void}
 */
global.RemoveAnimDict = function (animDict) {
  return _in(0x47631450, 0x53a33d46, _ts(animDict));
};

/**
 * REMOVE_CLIP_SET
 * Alias for REMOVE_ANIM_SET.
 *
 * @param {string | number} clipSet
 * @return {void}
 */
global.RemoveClipSet = function (clipSet) {
  return _in(0x817fa1b1, 0xee7cd6f0, _ts(clipSet));
};

/**
 * REMOVE_IPL_BY_HASH
 * Old name: _REMOVE_IMAP_2
 *
 * @param {number} iplHash
 * @return {void}
 */
global.RemoveIplByHash = function (iplHash) {
  return _in(0x431e3ab7, 0x60629b34, _ch(iplHash));
};

/**
 * REMOVE_IPL_HASH
 * Old name: _REMOVE_IMAP
 *
 * @param {number} iplHash
 * @return {void}
 */
global.RemoveIplHash = function (iplHash) {
  return _in(0x5a3e5cf7, 0xb4014b96, _ch(iplHash));
};

/**
 * REMOVE_MOVE_NETWORK_DEF
 *
 * @param {string | number} name
 * @return {void}
 */
global.RemoveMoveNetworkDef = function (name) {
  return _in(0x57a197ad, 0x83f66bbf, _ts(name));
};

/**
 * REMOVE_NAMED_PTFX_ASSET
 *
 * @param {number} fxNameHash
 * @return {void}
 */
global.RemoveNamedPtfxAsset = function (fxNameHash) {
  return _in(0xf2086682, 0x9e1c81a2, _ch(fxNameHash));
};

/**
 * REMOVE_PTFX_ASSET
 *

 * @return {void}
 */
global.RemovePtfxAsset = function () {
  return _in(0x042f9049, 0xea419e86);
};

/**
 * REQUEST_ADDITIONAL_COLLISION_AT_COORD
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.RequestAdditionalCollisionAtCoord = function (x, y, z) {
  return _in(0x83a8d716, 0x50d1894f, _fv(x), _fv(y), _fv(z));
};

/**
 * REQUEST_ANIM_DICT
 *
 * @param {string | number} animDict
 * @return {void}
 */
global.RequestAnimDict = function (animDict) {
  return _in(0xa862a2ad, 0x321f94b4, _ts(animDict));
};

/**
 * REQUEST_CLIP_SET
 *
 * @param {string | number} clipSet
 * @return {void}
 */
global.RequestClipSet = function (clipSet) {
  return _in(0xef7611b5, 0x7a820126, _ts(clipSet));
};

/**
 * REQUEST_COLLISION_AT_COORD
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.RequestCollisionAtCoord = function (x, y, z) {
  return _in(0x0a3720f1, 0x62a033c9, _fv(x), _fv(y), _fv(z));
};

/**
 * REQUEST_COLLISION_FOR_MODEL
 *
 * @param {number} model
 * @return {void}
 */
global.RequestCollisionForModel = function (model) {
  return _in(0xf1767be3, 0x7f661551, _ch(model));
};

/**
 * REQUEST_IPL_BY_HASH
 * Old name: _REQUEST_IMAP_2
 *
 * @param {number} iplHash
 * @return {void}
 */
global.RequestIplByHash = function (iplHash) {
  return _in(0x9e211a37, 0x8f95c97c, _ch(iplHash));
};

/**
 * REQUEST_IPL_HASH
 * Old name: _REQUEST_IMAP
 *
 * @param {number} iplHash
 * @return {void}
 */
global.RequestIplHash = function (iplHash) {
  return _in(0x59767c5a, 0x7a9ae6da, _ch(iplHash));
};

/**
 * REQUEST_MODEL
 * Request a model to be loaded into memory.
 *
 * @param {number} model
 * @param {boolean} p1
 * @return {void}
 */
global.RequestModel = function (model, p1) {
  return _in(0xfa28fe3a, 0x6246fc30, _ch(model), p1);
};

/**
 * REQUEST_MOVE_NETWORK_DEF
 *
 * @param {string | number} name
 * @return {void}
 */
global.RequestMoveNetworkDef = function (name) {
  return _in(0x2b6529c5, 0x4d29037a, _ts(name));
};

/**
 * REQUEST_NAMED_PTFX_ASSET
 *
 * @param {number} fxNameHash
 * @return {void}
 */
global.RequestNamedPtfxAsset = function (fxNameHash) {
  return _in(0xf2b2353b, 0xbc0d4e8f, _ch(fxNameHash));
};

/**
 * REQUEST_PTFX_ASSET
 *

 * @return {void}
 */
global.RequestPtfxAsset = function () {
  return _in(0x001ff438, 0x43028e0c);
};

/**
 * SET_ALL_MAPDATA_CULLED
 * nullsub, doesn't do anything
 *
 * @param {any} p0
 * @return {void}
 */
global.SetAllMapdataCulled = function (p0) {
  return _in(0x19abcc58, 0x1d28e6f9, p0);
};

/**
 * SET_FOCUS_ENTITY
 * It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
 *
 * @param {number} entity
 * @return {void}
 */
global.SetFocusEntity = function (entity) {
  return _in(0x955aedd5, 0x8f4bd309, entity);
};

/**
 * SET_FOCUS_POS_AND_VEL
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @return {void}
 */
global.SetFocusPosAndVel = function (x, y, z, offsetX, offsetY, offsetZ) {
  return _in(0x25f6ef88, 0x664540e2, _fv(x), _fv(y), _fv(z), _fv(offsetX), _fv(offsetY), _fv(offsetZ));
};

/**
 * SET_GAME_PAUSES_FOR_STREAMING
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetGamePausesForStreaming = function (toggle) {
  return _in(0xb3bc8250, 0xf4fe8b63, toggle);
};

/**
 * SET_HD_AREA
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {void}
 */
global.SetHdArea = function (x, y, z, radius) {
  return _in(0xb88b905a, 0xfa35cb4d, _fv(x), _fv(y), _fv(z), _fv(radius));
};

/**
 * SET_MAPDATACULLBOX_ENABLED
 *
 * @param {string | number} name
 * @param {boolean} toggle
 * @return {void}
 */
global.SetMapdatacullboxEnabled = function (name, toggle) {
  return _in(0x3cacc83f, 0x6fed837c, _ts(name), toggle);
};

/**
 * SET_MODEL_AS_NO_LONGER_NEEDED
 * Marks the model as no longer needed.
 *
 * @param {number} model
 * @return {void}
 */
global.SetModelAsNoLongerNeeded = function (model) {
  return _in(0x4ad96ef9, 0x28bd4f9a, _ch(model));
};

/**
 * SET_POPULATION_BUDGET_MULTIPLIER
 *
 * @param {number} fBudgetMultiplier
 * @return {void}
 */
global.SetPopulationBudgetMultiplier = function (fBudgetMultiplier) {
  return _in(0x2f9ac754, 0xfe179d58, _fv(fBudgetMultiplier));
};

/**
 * SET_SCENE_STREAMING_TRACKS_CAM_POS_THIS_FRAME
 *

 * @return {void}
 */
global.SetSceneStreamingTracksCamPosThisFrame = function () {
  return _in(0xa03a6812, 0x529ad9c8);
};

/**
 * SET_SRL_LONG_JUMP_MODE
 *
 * @param {boolean} p0
 * @return {void}
 */
global.SetSrlLongJumpMode = function (p0) {
  return _in(0x7c907e8a, 0x725e5fd2, p0);
};

/**
 * SET_SRL_READAHEAD_TIMES
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.SetSrlReadaheadTimes = function (p0, p1, p2, p3) {
  return _in(0xd346248c, 0x1dce0d76, p0, p1, p2, p3);
};

/**
 * SET_SRL_TIME
 *
 * @param {number} p0
 * @return {void}
 */
global.SetSrlTime = function (p0) {
  return _in(0x18231aef, 0x458bcff2, _fv(p0));
};

/**
 * _0x032A14D082A9B269
 * _SET_E* or _SET_F*
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x032A14D082A9B269 = function (p0) {
  return _in(0x032a14d0, 0x82a9b269, _ch(p0));
};

/**
 * _0x03DDBF2D73799F9E
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x03DDBF2D73799F9E = function (p0) {
  return _in(0x03ddbf2d, 0x73799f9e, p0);
};

/**
 * _0x05DD384F39DE1C8C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x05DD384F39DE1C8C = function (p0, p1) {
  return _in(0x05dd384f, 0x39de1c8c, p0, p1, _r);
};

/**
 * _0x071769BCB24379E5
 *

 * @return {any}
 */
global.N_0x071769BCB24379E5 = function () {
  return _in(0x071769bc, 0xb24379e5, _r);
};

/**
 * _0x07559B29950301FF
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x07559B29950301FF = function (p0, p1) {
  return _in(0x07559b29, 0x950301ff, p0, p1);
};

/**
 * _0x09FBF15D73EFC900
 *

 * @return {void}
 */
global.N_0x09FBF15D73EFC900 = function () {
  return _in(0x09fbf15d, 0x73efc900);
};

/**
 * _0x198B85CC3C7A4593
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x198B85CC3C7A4593 = function (p0, p1) {
  return _in(0x198b85cc, 0x3c7a4593, p0, p1, _r);
};

/**
 * _0x27AF48C62B281341
 *

 * @return {any}
 */
global.N_0x27AF48C62B281341 = function () {
  return _in(0x27af48c6, 0x2b281341, _r);
};

/**
 * _0x2A6D1DAAB9EBB262
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x2A6D1DAAB9EBB262 = function (p0) {
  return _in(0x2a6d1daa, 0xb9ebb262, p0, _r);
};

/**
 * _0x2E24C27B112B5B12
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x2E24C27B112B5B12 = function (p0) {
  return _in(0x2e24c27b, 0x112b5b12, p0);
};

/**
 * _0x2F4D53023F826FF0
 *

 * @return {any}
 */
global.N_0x2F4D53023F826FF0 = function () {
  return _in(0x2f4d5302, 0x3f826ff0, _r);
};

/**
 * _0x5288B7F0690F7C1F
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x5288B7F0690F7C1F = function (p0) {
  return _in(0x5288b7f0, 0x690f7c1f, p0, _r);
};

/**
 * _0x53764309C4618087
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x53764309C4618087 = function (p0) {
  return _in(0x53764309, 0xc4618087, p0, _r);
};

/**
 * _0x5D5E2102B174B8D2
 *

 * @return {any}
 */
global.N_0x5D5E2102B174B8D2 = function () {
  return _in(0x5d5e2102, 0xb174b8d2, _r);
};

/**
 * _0x62D5F0588915B277
 *

 * @return {void}
 */
global.N_0x62D5F0588915B277 = function () {
  return _in(0x62d5f058, 0x8915b277);
};

/**
 * _0x66BC28E50E85270E
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x66BC28E50E85270E = function (p0) {
  return _in(0x66bc28e5, 0x0e85270e, p0, _r);
};

/**
 * _0x6A6E79FBE8678C98
 *

 * @return {void}
 */
global.N_0x6A6E79FBE8678C98 = function () {
  return _in(0x6a6e79fb, 0xe8678c98);
};

/**
 * _0x7B8C2B846C05E5AD
 *

 * @return {any}
 */
global.N_0x7B8C2B846C05E5AD = function () {
  return _in(0x7b8c2b84, 0x6c05e5ad, _r);
};

/**
 * _0x80B3E0597366ADF1
 *

 * @return {void}
 */
global.N_0x80B3E0597366ADF1 = function () {
  return _in(0x80b3e059, 0x7366adf1);
};

/**
 * _0x85B8F04555AB49B8
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x85B8F04555AB49B8 = function (p0) {
  return _in(0x85b8f045, 0x55ab49b8, p0, _r);
};

/**
 * _0x8D56BDA343D9519F
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x8D56BDA343D9519F = function (p0) {
  return _in(0x8d56bda3, 0x43d9519f, p0, _r);
};

/**
 * _0x99F92061EFE908BA
 *

 * @return {any}
 */
global.N_0x99F92061EFE908BA = function () {
  return _in(0x99f92061, 0xefe908ba, _r);
};

/**
 * _0x9F348DE670423460
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9F348DE670423460 = function (p0) {
  return _in(0x9f348de6, 0x70423460, p0);
};

/**
 * _0xA0AE7653E8181725
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xA0AE7653E8181725 = function (p0) {
  return _in(0xa0ae7653, 0xe8181725, p0, _r);
};

/**
 * _0xAE00387E53B1E9FC
 *

 * @return {void}
 */
global.N_0xAE00387E53B1E9FC = function () {
  return _in(0xae00387e, 0x53b1e9fc);
};

/**
 * _0xAFA87A7D41EE346A
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xAFA87A7D41EE346A = function (p0) {
  return _in(0xafa87a7d, 0x41ee346a, p0);
};

/**
 * _0xB223249B7798EEED
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0xB223249B7798EEED = function (p0, p1, p2, p3) {
  return _in(0xb223249b, 0x7798eeed, p0, p1, p2, p3, _r);
};

/**
 * _0xB9B9E47EDB9D63DB
 * Sorts some unknown data.
 * 
 * Likely SORT_*
 *

 * @return {void}
 */
global.N_0xB9B9E47EDB9D63DB = function () {
  return _in(0xb9b9e47e, 0xdb9d63db);
};

/**
 * _0xBE8DAA9D8D01DA6A
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xBE8DAA9D8D01DA6A = function (p0, p1, p2) {
  return _in(0xbe8daa9d, 0x8d01da6a, p0, p1, p2);
};

/**
 * _0xCC61D8D6C19D9F14
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xCC61D8D6C19D9F14 = function (p0) {
  return _in(0xcc61d8d6, 0xc19d9f14, p0);
};

/**
 * _0xD6E39DC5D46DF4AB
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xD6E39DC5D46DF4AB = function (p0) {
  return _in(0xd6e39dc5, 0xd46df4ab, p0, _r);
};

/**
 * _0xD840C130D7AACFA5
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xD840C130D7AACFA5 = function (p0, p1, p2) {
  return _in(0xd840c130, 0xd7aacfa5, p0, p1, p2);
};

/**
 * _0xD9F2FF4AF394D926
 *

 * @return {void}
 */
global.N_0xD9F2FF4AF394D926 = function () {
  return _in(0xd9f2ff4a, 0xf394d926);
};

/**
 * _0xDA7FDEFF4DE86839
 *

 * @return {any}
 */
global.N_0xDA7FDEFF4DE86839 = function () {
  return _in(0xda7fdeff, 0x4de86839, _r);
};

/**
 * _0xDABFE48BA0D457AA
 *

 * @return {any}
 */
global.N_0xDABFE48BA0D457AA = function () {
  return _in(0xdabfe48b, 0xa0d457aa, _r);
};

/**
 * _0xDEEE1F265B7ECEF5
 *

 * @return {void}
 */
global.N_0xDEEE1F265B7ECEF5 = function () {
  return _in(0xdeee1f26, 0x5b7ecef5);
};

/**
 * _0xE5B76E5B56CD77DD
 *

 * @return {any}
 */
global.N_0xE5B76E5B56CD77DD = function () {
  return _in(0xe5b76e5b, 0x56cd77dd, _r);
};

/**
 * _0xEF1A8A484118735E
 *

 * @return {void}
 */
global.N_0xEF1A8A484118735E = function () {
  return _in(0xef1a8a48, 0x4118735e);
};

/**
 * _0xF01D21DF39554115
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xF01D21DF39554115 = function (p0) {
  return _in(0xf01d21df, 0x39554115, p0);
};

/**
 * _0xF11D7CB962FCD747
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xF11D7CB962FCD747 = function (p0) {
  return _in(0xf11d7cb9, 0x62fcd747, p0);
};

/**
 * _GET_IPL_BOUNDING_SPHERE
 * Outputs IPL position and radius (previously wrongly named heading)
 * https://github.com/femga/rdr3_discoveries/blob/master/imaps/imaps_with_coords_and_heading.lua
 *
 * @param {number} iplHash
 * @return {[boolean, Vector3, number]}
 */
global.GetIplBoundingSphere = function (iplHash) {
  return _in(0x9c77964b, 0x0e07b633, _ch(iplHash), _v, _f, _r);
};

/**
 * _HAS_COLLISION_LOADED_AT_COORD
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {boolean}
 */
global.HasCollisionLoadedAtCoord = function (x, y, z) {
  return _in(0xda8b2eaf, 0x29e872e2, _fv(x), _fv(y), _fv(z), _r);
};

/**
 * _HAS_SCENARIO_TYPE_LOADED
 *
 * @param {number} scenarioType
 * @param {boolean} p1
 * @return {boolean}
 */
global.HasScenarioTypeLoaded = function (scenarioType, p1) {
  return _in(0x9427c94d, 0x2e4094a4, _ch(scenarioType), p1, _r);
};

/**
 * _IS_MODEL_AN_OBJECT
 *
 * @param {number} model
 * @return {boolean}
 */
global.IsModelAnObject = function (model) {
  return _in(0x274ee1b9, 0x0cfa669e, _ch(model), _r);
};

/**
 * _IS_POSITION_INSIDE_IPL_STREAMING_EXTENTS
 * Returns true if IPL is streamed in (?)
 *
 * @param {number} iplHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {boolean}
 */
global.IsPositionInsideIplStreamingExtents = function (iplHash, x, y, z) {
  return _in(0x73b40d97, 0xd7baad77, _ch(iplHash), _fv(x), _fv(y), _fv(z), _r);
};

/**
 * _REMOVE_SCENARIO_ASSET
 *
 * @param {number} scenarioType
 * @return {any}
 */
global.RemoveScenarioAsset = function (scenarioType) {
  return _in(0x4eddd9e9, 0xca5af985, _ch(scenarioType), _r);
};

/**
 * _REQUEST_CLIP_SET_BY_HASH
 *
 * @param {number} clipSetHash
 * @return {void}
 */
global.RequestClipSetByHash = function (clipSetHash) {
  return _in(0xac37644a, 0x538f7524, _ch(clipSetHash));
};

/**
 * _REQUEST_METADATA_AT_COORD
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.RequestMetadataAtCoord = function (x, y, z) {
  return _in(0xa8432a14, 0xd4dc2101, _fv(x), _fv(y), _fv(z));
};

/**
 * _REQUEST_SCENARIO_TYPE
 *
 * @param {number} scenarioType
 * @param {number} p1
 * @param {any} p2
 * @param {any} p3
 * @return {number}
 */
global.RequestScenarioType = function (scenarioType, p1, p2, p3) {
  return _in(0x19a6be7d, 0x9c6884d3, _ch(scenarioType), p1, p2, p3, _r, _ri);
};

/**
 * _SET_GUARMA_WORLDHORIZON_ACTIVE
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetGuarmaWorldhorizonActive = function (toggle) {
  return _in(0x74e2261d, 0x2a66849a, toggle);
};

/**
 * ADD_COVER_BLOCKING_AREA
 *
 * @param {number} playerX
 * @param {number} playerY
 * @param {number} playerZ
 * @param {number} radiusX
 * @param {number} radiusY
 * @param {number} radiusZ
 * @param {boolean} p6
 * @param {boolean} p7
 * @param {boolean} p8
 * @param {boolean} p9
 * @return {void}
 */
global.AddCoverBlockingArea = function (playerX, playerY, playerZ, radiusX, radiusY, radiusZ, p6, p7, p8, p9) {
  return _in(0x45c59709, 0x7dd7cb81, _fv(playerX), _fv(playerY), _fv(playerZ), _fv(radiusX), _fv(radiusY), _fv(radiusZ), p6, p7, p8, p9);
};

/**
 * ADD_COVER_POINT
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {boolean} p7
 * @return {number}
 */
global.AddCoverPoint = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xd5c12a75, 0xc7b9497f, _fv(p0), _fv(p1), _fv(p2), _fv(p3), p4, p5, p6, p7, _r, _ri);
};

/**
 * ADD_FLEE_TARGET_PED
 * Params: p2 is always -1.f in R* Scripts
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {number} p2
 * @return {void}
 */
global.AddFleeTargetPed = function (ped, targetPed, p2) {
  return _in(0x3923ec95, 0x8249657d, ped, targetPed, _fv(p2));
};

/**
 * ADD_PATROL_ROUTE_LINK
 *
 * @param {number} node1
 * @param {number} node2
 * @return {void}
 */
global.AddPatrolRouteLink = function (node1, node2) {
  return _in(0x23083260, 0xdec3a551, node1, node2);
};

/**
 * ADD_PATROL_ROUTE_NODE
 *
 * @param {number} nodeId
 * @param {string | number} scenarioName
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} lookPosX
 * @param {number} lookPosY
 * @param {number} lookPosZ
 * @param {number} duration
 * @param {boolean} p9
 * @return {void}
 */
global.AddPatrolRouteNode = function (nodeId, scenarioName, x, y, z, lookPosX, lookPosY, lookPosZ, duration, p9) {
  return _in(0x8edf9501, 0x67586b7c, nodeId, _ts(scenarioName), _fv(x), _fv(y), _fv(z), _fv(lookPosX), _fv(lookPosY), _fv(lookPosZ), duration, p9);
};

/**
 * ARE_COMPOSITE_LOOTABLE_ENTITY_DEF_ASSETS_LOADED
 * Returns true when requested asset is loaded
 *
 * @param {number} asset
 * @return {boolean}
 */
global.AreCompositeLootableEntityDefAssetsLoaded = function (asset) {
  return _in(0x5e5d96be, 0x25e9df68, _ch(asset), _r);
};

/**
 * ASSISTED_MOVEMENT_IS_ROUTE_LOADED
 *
 * @param {string | number} route
 * @return {boolean}
 */
global.AssistedMovementIsRouteLoaded = function (route) {
  return _in(0x60f9a439, 0x3a21f741, _ts(route), _r);
};

/**
 * ASSISTED_MOVEMENT_REMOVE_ROUTE
 *
 * @param {string | number} route
 * @return {void}
 */
global.AssistedMovementRemoveRoute = function (route) {
  return _in(0x35485364, 0x85dd792b, _ts(route));
};

/**
 * ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES
 *
 * @param {string | number} route
 * @param {number} props
 * @return {void}
 */
global.AssistedMovementSetRouteProperties = function (route, props) {
  return _in(0xd5002d78, 0xb7162e1b, _ts(route), props);
};

/**
 * CAN_START_ITEM_INTERACTION
 *
 * @param {number} ped
 * @param {number} itemHash
 * @param {number} interactionAnimHash
 * @param {number} p3
 * @return {boolean}
 */
global.CanStartItemInteraction = function (ped, itemHash, interactionAnimHash, p3) {
  return _in(0x2d19bc4d, 0xf626cbe7, ped, _ch(itemHash), _ch(interactionAnimHash), p3, _r);
};

/**
 * CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearDrivebyTaskUnderneathDrivingTask = function (ped) {
  return _in(0xc35b5cdb, 0x2824cf69, ped);
};

/**
 * CLEAR_PED_SECONDARY_TASK
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearPedSecondaryTask = function (ped) {
  return _in(0x176cecf6, 0xf920d707, ped);
};

/**
 * CLEAR_PED_TASKS
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.ClearPedTasks = function (ped, p1, p2) {
  return _in(0xe1ef3c12, 0x16aff2cd, ped, p1, p2);
};

/**
 * CLEAR_PED_TASKS_IMMEDIATELY
 * Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
 * 
 * resetCrouch TRUE = ped will stand up if crouching, FALSE = ped will remain crouching if crouched
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} resetCrouch
 * @return {void}
 */
global.ClearPedTasksImmediately = function (ped, p1, resetCrouch) {
  return _in(0xaaa34f8a, 0x7cb32098, ped, p1, resetCrouch);
};

/**
 * CLEAR_SEQUENCE_TASK
 *

 * @return {number}
 */
global.ClearSequenceTask = function () {
  return _in(0x3841422e, 0x9c488d8c, _i);
};

/**
 * CLOSE_PATROL_ROUTE
 *

 * @return {void}
 */
global.ClosePatrolRoute = function () {
  return _in(0xb043eca8, 0x01b8cbc1);
};

/**
 * CLOSE_SEQUENCE_TASK
 *
 * @param {number} taskSequenceId
 * @return {void}
 */
global.CloseSequenceTask = function (taskSequenceId) {
  return _in(0x39e72bc9, 0x9e6360cb, taskSequenceId);
};

/**
 * CREATE_PATROL_ROUTE
 *

 * @return {void}
 */
global.CreatePatrolRoute = function () {
  return _in(0xaf8a443c, 0xcc8018dc);
};

/**
 * CREATE_SCENARIO_POINT_HASH
 * Returns scenario
 *
 * @param {number} scenarioHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {any} p5
 * @param {any} p6
 * @param {boolean} p7
 * @return {number}
 */
global.CreateScenarioPointHash = function (scenarioHash, x, y, z, heading, p5, p6, p7) {
  return _in(0x94b745ce, 0x41db58a1, _ch(scenarioHash), _fv(x), _fv(y), _fv(z), _fv(heading), p5, p6, p7, _r, _ri);
};

/**
 * CREATE_SCENARIO_POINT_HASH_ATTACHED_TO_ENTITY
 * Returns scenario
 *
 * @param {number} entity
 * @param {number} scenarioHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {any} p6
 * @param {any} p7
 * @param {boolean} p8
 * @return {number}
 */
global.CreateScenarioPointHashAttachedToEntity = function (entity, scenarioHash, x, y, z, heading, p6, p7, p8) {
  return _in(0x794ab137, 0x9a74064d, entity, _ch(scenarioHash), _fv(x), _fv(y), _fv(z), _fv(heading), p6, p7, p8, _r, _ri);
};

/**
 * DELETE_PATROL_ROUTE
 *
 * @param {string | number} patrolRoute
 * @return {void}
 */
global.DeletePatrolRoute = function (patrolRoute) {
  return _in(0x7767dd9d, 0x65e91319, _ts(patrolRoute));
};

/**
 * DOES_SCENARIO_EXIST_IN_AREA
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {boolean} p4
 * @param {any} p5
 * @param {boolean} p6
 * @return {boolean}
 */
global.DoesScenarioExistInArea = function (x, y, z, radius, p4, p5, p6) {
  return _in(0x5a59271f, 0xfadd33c1, _fv(x), _fv(y), _fv(z), _fv(radius), p4, p5, p6, _r);
};

/**
 * DOES_SCENARIO_GROUP_EXIST
 *
 * @param {string | number} scenarioGroup
 * @return {boolean}
 */
global.DoesScenarioGroupExist = function (scenarioGroup) {
  return _in(0xf9034c13, 0x6c9e00d3, _ts(scenarioGroup), _r);
};

/**
 * DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA_HASH
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} typeHash
 * @param {number} radius
 * @param {boolean} p5
 * @return {boolean}
 */
global.DoesScenarioOfTypeExistInAreaHash = function (x, y, z, typeHash, radius, p5) {
  return _in(0x6eead6af, 0x637da752, _fv(x), _fv(y), _fv(z), _ch(typeHash), _fv(radius), p5, _r);
};

/**
 * DOES_SCENARIO_POINT_EXIST
 *
 * @param {number} scenario
 * @return {boolean}
 */
global.DoesScenarioPointExist = function (scenario) {
  return _in(0x841475ac, 0x96e794d1, scenario, _r);
};

/**
 * DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS
 * Checks if there is a cover point at position
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {boolean}
 */
global.DoesScriptedCoverPointExistAtCoords = function (p0, p1, p2, p3) {
  return _in(0xa98b8e3c, 0x088e5a31, p0, p1, p2, p3, _r);
};

/**
 * END_DUEL
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {number} p2
 * @return {void}
 */
global.EndDuel = function (ped, p1, p2) {
  return _in(0xeed08a3a, 0x98b847e2, ped, p1, _fv(p2));
};

/**
 * FIND_SCENARIO_OF_TYPE_HASH
 *
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {number} scenarioType
 * @param {number} distance
 * @param {any} p5
 * @param {boolean} p6
 * @return {number}
 */
global.FindScenarioOfTypeHash = function (xPos, yPos, zPos, scenarioType, distance, p5, p6) {
  return _in(0xf533d68f, 0xf970d190, _fv(xPos), _fv(yPos), _fv(zPos), _ch(scenarioType), _fv(distance), p5, p6, _r, _ri);
};

/**
 * FORCE_SCENARIO_GROUP_PRIORITY
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.ForceScenarioGroupPriority = function (p0, p1) {
  return _in(0x444c910a, 0x5058e568, p0, p1);
};

/**
 * GET_ACTIVE_VEHICLE_MISSION_TYPE
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetActiveVehicleMissionType = function (vehicle) {
  return _in(0x534aeba6, 0xe5ed4cab, vehicle, _r, _ri);
};

/**
 * GET_IS_CARRIABLE_ENTITY
 *
 * @param {number} entity
 * @return {boolean}
 */
global.GetIsCarriableEntity = function (entity) {
  return _in(0x0ccfe72b, 0x43c9cf96, entity, _r);
};

/**
 * GET_IS_PED_AIMING_IN_THE_AIR
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetIsPedAimingInTheAir = function (ped) {
  return _in(0x8785e6e4, 0x0c7a8819, ped, _r);
};

/**
 * GET_IS_TASK_ACTIVE
 *
 * @param {number} ped
 * @param {number} taskIndex
 * @return {boolean}
 */
global.GetIsTaskActive = function (ped, taskIndex) {
  return _in(0xb0760331, 0xc7aa4155, ped, taskIndex, _r);
};

/**
 * GET_IS_WAYPOINT_RECORDING_LOADED
 *
 * @param {string | number} waypointRecording
 * @return {boolean}
 */
global.GetIsWaypointRecordingLoaded = function (waypointRecording) {
  return _in(0xcb4e8be8, 0xa0063c5d, _ts(waypointRecording), _r);
};

/**
 * GET_ITEM_INTERACTION_ITEM_ID
 *
 * @param {number} ped
 * @return {number}
 */
global.GetItemInteractionItemId = function (ped) {
  return _in(0x804425c4, 0xbbd00883, ped, _r, _ri);
};

/**
 * GET_ITEM_INTERACTION_PROMPT_PROGRESS
 *
 * @param {number} ped
 * @param {number} inputContext
 * @return {number}
 */
global.GetItemInteractionPromptProgress = function (ped, inputContext) {
  return _in(0xbc864a70, 0xad55e0c1, ped, _ch(inputContext), _r, _rf);
};

/**
 * GET_ITEM_INTERACTION_STATE
 *
 * @param {number} ped
 * @return {number}
 */
global.GetItemInteractionState = function (ped) {
  return _in(0x6aa3dca2, 0xc6f5eb6d, ped, _r, _ri);
};

/**
 * GET_PED_DESIRED_MOVE_BLEND_RATIO
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedDesiredMoveBlendRatio = function (ped) {
  return _in(0x8517d4a6, 0xca8513ed, ped, _r, _rf);
};

/**
 * GET_PED_WAYPOINT_DISTANCE
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedWaypointDistance = function (ped) {
  return _in(0xe6a877c6, 0x4caf1bc5, ped, _r, _rf);
};

/**
 * GET_PED_WAYPOINT_OVERRIDE_SPEED
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedWaypointOverrideSpeed = function (ped) {
  return _in(0xd39a2f3e, 0x7fcaff08, ped, _r, _rf);
};

/**
 * GET_PED_WAYPOINT_PROGRESS
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedWaypointProgress = function (ped) {
  return _in(0x2720aaa7, 0x5001e094, ped, _r, _ri);
};

/**
 * GET_PROP_FOR_SCENARIO_POINT
 * Old name: _GET_SCENARIO_POINT_ENTITY
 *
 * @param {number} scenarioPoint
 * @param {string | number} name
 * @return {number}
 */
global.GetPropForScenarioPoint = function (scenarioPoint, name) {
  return _in(0x295514f1, 0x98efd0ca, scenarioPoint, _ts(name), _r, _ri);
};

/**
 * GET_RANSACK_SCENARIO_POINT_PED_IS_USING
 *
 * @param {number} ped
 * @return {any}
 */
global.GetRansackScenarioPointPedIsUsing = function (ped) {
  return _in(0xd04241bb, 0xf6d03a5e, ped, _r);
};

/**
 * GET_SCENARIO_POINTS_IN_AREA
 * Note: scenariosInRadius is an array, and its size and values should be aligned to 8 bytes.
 *
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} radius
 * @param {DataView} scenariosInRadius
 * @param {number} size
 * @return {number}
 */
global.GetScenarioPointsInArea = function (posX, posY, posZ, radius, scenariosInRadius, size) {
  return _in(0x345ec3b7, 0xebde1cb5, _fv(posX), _fv(posY), _fv(posZ), _fv(radius), scenariosInRadius, size, _r, _ri);
};

/**
 * GET_SCRIPTED_COVER_POINT_COORDS
 *
 * @param {number} coverpoint
 * @return {Vector3}
 */
global.GetScriptedCoverPointCoords = function (coverpoint) {
  return _in(0x594a1028, 0xfc2a3e85, coverpoint, _r, _rv);
};

/**
 * GET_SCRIPT_TASK_STATUS
 * Gets the status of a script-assigned task, and returns an int between 0-8
 * taskHash: https://alloc8or.re/rdr3/doc/enums/eScriptTaskHash.txt 
 * 
 * WAITING_TO_START_TASK = 0,
 * PERFORMING_TASK
 * DORMANT_TASK
 * VACANT_STAGE
 * GROUP_TASK_STAGE
 * ATTRACTOR_SCRIPT_TASK_STAGE
 * SECONDARY_TASK_STAGE
 * TASK_NOT_FOUND
 * FINISHED_TASK
 *
 * @param {number} ped
 * @param {number} taskHash
 * @param {boolean} p2
 * @return {number}
 */
global.GetScriptTaskStatus = function (ped, taskHash, p2) {
  return _in(0x77f1beb8, 0x863288d5, ped, _ch(taskHash), p2, _r, _ri);
};

/**
 * GET_SEQUENCE_PROGRESS
 * returned values:
 * 0 to 7 = task that's currently in progress, 0 meaning the first one.
 * -1 no task sequence in progress.
 *
 * @param {number} ped
 * @return {number}
 */
global.GetSequenceProgress = function (ped) {
  return _in(0x00a9010c, 0xfe1e3533, ped, _r, _ri);
};

/**
 * GET_TASK_MOVE_NETWORK_EVENT
 *
 * @param {number} ped
 * @param {string | number} eventName
 * @return {boolean}
 */
global.GetTaskMoveNetworkEvent = function (ped, eventName) {
  return _in(0xb4f47213, 0xdf45a64c, ped, _ts(eventName), _r);
};

/**
 * GET_TASK_MOVE_NETWORK_STATE
 *
 * @param {number} ped
 * @return {string | number}
 */
global.GetTaskMoveNetworkState = function (ped) {
  return _in(0x717e4d1f, 0x2048376d, ped, _r, _s);
};

/**
 * GET_VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED
 *
 * @param {any} p0
 * @return {any}
 */
global.GetVehicleWaypointPlaybackOverrideSpeed = function (p0) {
  return _in(0x3dc971eb, 0x22f73447, p0, _r);
};

/**
 * GET_VEHICLE_WAYPOINT_PROGRESS
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleWaypointProgress = function (vehicle) {
  return _in(0x9824cff8, 0xfc66e159, vehicle, _r, _ri);
};

/**
 * GET_VEHICLE_WAYPOINT_TARGET_POINT
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleWaypointTargetPoint = function (vehicle) {
  return _in(0x416b62ac, 0x8b9e5bbd, vehicle, _r, _ri);
};

/**
 * GET_WAYPOINT_DISTANCE_ALONG_ROUTE
 *
 * @param {string | number} waypointRecording
 * @param {number} p1
 * @return {number}
 */
global.GetWaypointDistanceAlongRoute = function (waypointRecording, p1) {
  return _in(0xa5b76905, 0x8763e497, _ts(waypointRecording), p1, _r, _rf);
};

/**
 * IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsDrivebyTaskUnderneathDrivingTask = function (ped) {
  return _in(0x8785e6e4, 0x0c7a8818, ped, _r);
};

/**
 * IS_EMOTE_TASK_RUNNING
 *
 * @param {number} ped
 * @param {any} p1
 * @return {boolean}
 */
global.IsEmoteTaskRunning = function (ped, p1) {
  return _in(0xcf9b71c0, 0xaf824036, ped, p1, _r);
};

/**
 * IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsMountedWeaponTaskUnderneathDrivingTask = function (ped) {
  return _in(0xa320ef04, 0x6186fa3b, ped, _r);
};

/**
 * IS_MOVE_BLEND_RATIO_RUNNING
 *
 * @param {number} moveBlendRatio
 * @return {boolean}
 */
global.IsMoveBlendRatioRunning = function (moveBlendRatio) {
  return _in(0xd4d8636c, 0x0199a939, _fv(moveBlendRatio), _r);
};

/**
 * IS_MOVE_BLEND_RATIO_SPRINTING
 *
 * @param {number} moveBlendRatio
 * @return {boolean}
 */
global.IsMoveBlendRatioSprinting = function (moveBlendRatio) {
  return _in(0x24a2ad74, 0xfa9814e2, _fv(moveBlendRatio), _r);
};

/**
 * IS_MOVE_BLEND_RATIO_STILL
 *
 * @param {number} moveBlendRatio
 * @return {boolean}
 */
global.IsMoveBlendRatioStill = function (moveBlendRatio) {
  return _in(0x349ce7b5, 0x6dafd95c, _fv(moveBlendRatio), _r);
};

/**
 * IS_MOVE_BLEND_RATIO_WALKING
 *
 * @param {number} moveBlendRatio
 * @return {boolean}
 */
global.IsMoveBlendRatioWalking = function (moveBlendRatio) {
  return _in(0xf133bbbe, 0x91e1691f, _fv(moveBlendRatio), _r);
};

/**
 * IS_PED_ACTIVE_IN_SCENARIO
 *
 * @param {number} ped
 * @param {number} scenario
 * @return {boolean}
 */
global.IsPedActiveInScenario = function (ped, scenario) {
  return _in(0xaa135f94, 0x82c82cc3, ped, scenario, _r);
};

/**
 * IS_PED_BEING_ARRESTED
 * This function is hard-coded to always return false.
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedBeingArrested = function (ped) {
  return _in(0x90a09f3a, 0x45fed688, ped, _r);
};

/**
 * IS_PED_CUFFED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedCuffed = function (ped) {
  return _in(0x74e559b3, 0xbc910685, ped, _r);
};

/**
 * IS_PED_EXITING_SCENARIO
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsPedExitingScenario = function (ped, p1) {
  return _in(0x0c3cb2e6, 0x00c8977d, ped, p1, _r);
};

/**
 * IS_PED_GETTING_UP
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedGettingUp = function (ped) {
  return _in(0x2a74e1d5, 0xf2f00eec, ped, _r);
};

/**
 * IS_PED_IN_HIT_REACT
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInHitReact = function (ped) {
  return _in(0xf330a5c0, 0x62b29bed, ped, _r);
};

/**
 * IS_PED_IN_WRITHE
 * This native checks if a ped is on the ground, in pain from a (gunshot) wound.
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedInWrithe = function (ped) {
  return _in(0xdeb6d521, 0x26e7d640, ped, _r);
};

/**
 * IS_PED_RUNNING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedRunning = function (ped) {
  return _in(0xc5286ffc, 0x176f28a2, ped, _r);
};

/**
 * IS_PED_RUNNING_INSPECTION_TASK
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedRunningInspectionTask = function (ped) {
  return _in(0x038b1f16, 0x74f0e242, ped, _r);
};

/**
 * IS_PED_RUNNING_TASK_ITEM_INTERACTION
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedRunningTaskItemInteraction = function (ped) {
  return _in(0xec7e480f, 0xf8bd0bed, ped, _r);
};

/**
 * IS_PED_SCENARIO_REACT_LOOKING
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {boolean}
 */
global.IsPedScenarioReactLooking = function (ped, p1) {
  return _in(0x916b8e07, 0x5abc8b4e, ped, p1, _r);
};

/**
 * IS_PED_SPRINTING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedSprinting = function (ped) {
  return _in(0x57e457cd, 0x2c0fc168, ped, _r);
};

/**
 * IS_PED_STILL
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedStill = function (ped) {
  return _in(0xac29253e, 0xef8f0180, ped, _r);
};

/**
 * IS_PED_WALKING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedWalking = function (ped) {
  return _in(0xde4c184b, 0x2b9b071a, ped, _r);
};

/**
 * IS_SCENARIO_GROUP_ENABLED
 *
 * @param {string | number} scenarioGroup
 * @return {boolean}
 */
global.IsScenarioGroupEnabled = function (scenarioGroup) {
  return _in(0x367a09de, 0xd4e05b99, _ts(scenarioGroup), _r);
};

/**
 * IS_SCENARIO_OCCUPIED
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {boolean} p4
 * @return {boolean}
 */
global.IsScenarioOccupied = function (p0, p1, p2, p3, p4) {
  return _in(0x788756d7, 0x3ac2e07c, _fv(p0), _fv(p1), _fv(p2), _fv(p3), p4, _r);
};

/**
 * IS_SCENARIO_TYPE_ENABLED
 *
 * @param {string | number} scenarioType
 * @return {boolean}
 */
global.IsScenarioTypeEnabled = function (scenarioType) {
  return _in(0x3a815db3, 0xea088722, _ts(scenarioType), _r);
};

/**
 * IS_TASK_MOVE_NETWORK_ACTIVE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsTaskMoveNetworkActive = function (ped) {
  return _in(0x921ce12c, 0x489c4c41, ped, _r);
};

/**
 * IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsTaskMoveNetworkReadyForTransition = function (ped) {
  return _in(0x30ed88d5, 0xe0c56a37, ped, _r);
};

/**
 * IS_TEAM_CARRIABLE_ENTITY
 *
 * @param {any} p0
 * @param {any} p1
 * @return {boolean}
 */
global.IsTeamCarriableEntity = function (p0, p1) {
  return _in(0x559a6f8c, 0x5133b4ee, p0, p1, _r);
};

/**
 * IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED
 *
 * @param {number} ped
 * @param {string | number} waypointRecording
 * @return {boolean}
 */
global.IsWaypointPlaybackGoingOnForPed = function (ped, waypointRecording) {
  return _in(0xe03b3f2d, 0x3dc59b64, ped, _ts(waypointRecording), _r);
};

/**
 * IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {boolean}
 */
global.IsWaypointPlaybackGoingOnForVehicle = function (p0, p1) {
  return _in(0xf5134943, 0xea29868c, p0, p1, _r);
};

/**
 * MAKE_OBJECT_NOT_CARRIABLE
 *
 * @param {number} object
 * @return {void}
 */
global.MakeObjectNotCarriable = function (object) {
  return _in(0x67bfced2, 0x2909834d, object);
};

/**
 * OPEN_PATROL_ROUTE
 * Note: patrolRoute must be prefixed with 'miss_' for it to be valid
 *
 * @param {string | number} patrolRoute
 * @return {void}
 */
global.OpenPatrolRoute = function (patrolRoute) {
  return _in(0xa36bfb5e, 0xe89f3d82, _ts(patrolRoute));
};

/**
 * OPEN_SEQUENCE_TASK
 *

 * @return {number}
 */
global.OpenSequenceTask = function () {
  return _in(0xe8854a43, 0x26b9e12b, _i);
};

/**
 * PED_HAS_USE_SCENARIO_TASK
 *
 * @param {number} ped
 * @return {boolean}
 */
global.PedHasUseScenarioTask = function (ped) {
  return _in(0x295e3cce, 0xc879ccd7, ped, _r);
};

/**
 * PLAY_ANIM_ON_RUNNING_SCENARIO
 *
 * @param {number} ped
 * @param {string | number} animDict
 * @param {string | number} animName
 * @return {void}
 */
global.PlayAnimOnRunningScenario = function (ped, animDict, animName) {
  return _in(0x74804046, 0x0f8df5dc, ped, _ts(animDict), _ts(animName));
};

/**
 * PLAY_ENTITY_SCRIPTED_ANIM
 *
 * @param {number} entity
 * @param {DataView} args
 * @return {void}
 */
global.PlayEntityScriptedAnim = function (entity, args) {
  return _in(0x77a1eec5, 0x47e7fcf1, entity, args);
};

/**
 * REACT_LOOK_AT
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 * 
 * exitAnimation: LOOK_RETURN_GENERIC = 1,
 * LOOK_RETURN_DISMISSIVE = 2,
 * LOOK_RETURN_RELIEVED = 3
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {number} lookIntensity
 * @param {number} exitAnimation
 * @param {number} duration
 * @param {number} p5
 * @param {number} targetPed2
 * @param {any} p7
 * @param {any} p8
 * @return {void}
 */
global.ReactLookAt = function (ped, targetPed, lookIntensity, exitAnimation, duration, p5, targetPed2, p7, p8) {
  return _in(0xe7fa0762, 0x4574b79a, ped, targetPed, lookIntensity, exitAnimation, _fv(duration), p5, targetPed2, p7, p8);
};

/**
 * REACT_LOOK_AT_END
 *
 * @param {number} ped
 * @param {number} exitAnimation
 * @param {boolean} p2
 * @return {void}
 */
global.ReactLookAtEnd = function (ped, exitAnimation, p2) {
  return _in(0x541e5b41, 0xdca45828, ped, exitAnimation, p2);
};

/**
 * REMOVE_ALL_COVER_BLOCKING_AREAS
 *

 * @return {void}
 */
global.RemoveAllCoverBlockingAreas = function () {
  return _in(0xdb6708c0, 0xb46f56d8);
};

/**
 * REMOVE_COVER_POINT
 *
 * @param {number} coverpoint
 * @return {void}
 */
global.RemoveCoverPoint = function (coverpoint) {
  return _in(0xae287c92, 0x3d891715, coverpoint);
};

/**
 * REMOVE_WAYPOINT_RECORDING
 *
 * @param {string | number} waypointRecording
 * @return {void}
 */
global.RemoveWaypointRecording = function (waypointRecording) {
  return _in(0xff1b8b4a, 0xa1c25dc8, _ts(waypointRecording));
};

/**
 * REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION
 *
 * @param {number} ped
 * @param {string | number} name
 * @return {void}
 */
global.RequestTaskMoveNetworkStateTransition = function (ped, name) {
  return _in(0xd01015c7, 0x316ae176, ped, _ts(name));
};

/**
 * REQUEST_WAYPOINT_RECORDING
 *
 * @param {string | number} waypointRecording
 * @return {void}
 */
global.RequestWaypointRecording = function (waypointRecording) {
  return _in(0x9eefb62e, 0xb27b5792, _ts(waypointRecording));
};

/**
 * RESET_SCENARIO_GROUPS_ENABLED
 *

 * @return {void}
 */
global.ResetScenarioGroupsEnabled = function () {
  return _in(0xdd902d03, 0x49afad3a);
};

/**
 * RESET_SCENARIO_TYPES_ENABLED
 *

 * @return {void}
 */
global.ResetScenarioTypesEnabled = function () {
  return _in(0x0d40ee2a, 0x7f2b2d6d);
};

/**
 * SET_ANIM_FILTER
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.SetAnimFilter = function (p0, p1, p2, p3) {
  return _in(0x87b66d77, 0xd545db66, p0, p1, p2, p3);
};

/**
 * SET_ANIM_RATE
 *
 * @param {any} p0
 * @param {number} p1
 * @param {any} p2
 * @param {boolean} p3
 * @return {void}
 */
global.SetAnimRate = function (p0, p1, p2, p3) {
  return _in(0x032d49c5, 0xe359c847, p0, _fv(p1), p2, p3);
};

/**
 * SET_DRIVEBY_TASK_TARGET
 *
 * @param {number} shootingPed
 * @param {number} targetPed
 * @param {number} targetVehicle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.SetDrivebyTaskTarget = function (shootingPed, targetPed, targetVehicle, x, y, z) {
  return _in(0xe5b30211, 0x4d8162ee, shootingPed, targetPed, targetVehicle, _fv(x), _fv(y), _fv(z));
};

/**
 * SET_DRIVE_TASK_CRUISE_SPEED
 *
 * @param {number} driver
 * @param {number} cruiseSpeed
 * @return {void}
 */
global.SetDriveTaskCruiseSpeed = function (driver, cruiseSpeed) {
  return _in(0x5c9b84bd, 0x7d31d908, driver, _fv(cruiseSpeed));
};

/**
 * SET_DRIVE_TASK_MAX_CRUISE_SPEED
 * Not implemented.
 *
 * @param {number} ped
 * @param {number} maxCruiseSpeed
 * @return {void}
 */
global.SetDriveTaskMaxCruiseSpeed = function (ped, maxCruiseSpeed) {
  return _in(0x404a5aa9, 0xb9f0b746, ped, _fv(maxCruiseSpeed));
};

/**
 * SET_ENABLE_SPEED_RESTRAIN_FOR_WAYPOINT_RECORDING_LEADER
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.SetEnableSpeedRestrainForWaypointRecordingLeader = function (p0, p1) {
  return _in(0x295f03dc, 0x97beebc1, p0, p1);
};

/**
 * SET_ENHANCED_BREAK_FREE
 * clipset: CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@GROUND, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@SHOULDER, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@MOUNT
 * clipset can also be 0
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {string | number} clipset
 * @return {boolean}
 */
global.SetEnhancedBreakFree = function (ped, p1, clipset) {
  return _in(0x1bf9d36a, 0x5eaffbae, ped, p1, _ts(clipset), _r);
};

/**
 * SET_HIGH_FALL_TASK
 * Makes the ped ragdoll like when falling from a great height
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.SetHighFallTask = function (ped, p1, p2, p3) {
  return _in(0x8c825bdc, 0x7741d37c, ped, p1, p2, p3);
};

/**
 * SET_PED_DESIRED_MOVE_BLEND_RATIO
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.SetPedDesiredMoveBlendRatio = function (ped, p1) {
  return _in(0x1e982ac8, 0x716912c5, ped, _fv(p1));
};

/**
 * SET_PED_PATH_AVOID_FIRE
 *
 * @param {number} ped
 * @param {boolean} avoidFire
 * @return {void}
 */
global.SetPedPathAvoidFire = function (ped, avoidFire) {
  return _in(0x4455517b, 0x28441e60, ped, avoidFire);
};

/**
 * SET_PED_PATH_CAN_DROP_FROM_HEIGHT
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedPathCanDropFromHeight = function (ped, toggle) {
  return _in(0xe361c5c7, 0x1c431a4f, ped, toggle);
};

/**
 * SET_PED_PATH_CAN_USE_CLIMBOVERS
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedPathCanUseClimbovers = function (ped, toggle) {
  return _in(0x8e06a6fe, 0x76c9eff4, ped, toggle);
};

/**
 * SET_PED_PATH_CAN_USE_LADDERS
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedPathCanUseLadders = function (ped, toggle) {
  return _in(0x77a5b103, 0xc87f476e, ped, toggle);
};

/**
 * SET_PED_PATH_CLIMB_COST_MODIFIER
 *
 * @param {number} ped
 * @param {number} modifier
 * @return {void}
 */
global.SetPedPathClimbCostModifier = function (ped, modifier) {
  return _in(0x88e32db8, 0xc1a4aa4b, ped, _fv(modifier));
};

/**
 * SET_PED_PATH_DEEP_SNOW_COST_MODIFIER
 *
 * @param {number} ped
 * @param {number} modifier
 * @return {void}
 */
global.SetPedPathDeepSnowCostModifier = function (ped, modifier) {
  return _in(0xe8c296b7, 0x5eacc357, ped, _fv(modifier));
};

/**
 * SET_PED_PATH_FOLIAGE_COST_MODIFIER
 *
 * @param {number} ped
 * @param {number} modifier
 * @return {void}
 */
global.SetPedPathFoliageCostModifier = function (ped, modifier) {
  return _in(0x3ad8eff9, 0x703be657, ped, _fv(modifier));
};

/**
 * SET_PED_PATH_MAY_ENTER_WATER
 *
 * @param {number} ped
 * @param {boolean} mayEnterWater
 * @return {void}
 */
global.SetPedPathMayEnterWater = function (ped, mayEnterWater) {
  return _in(0xf35425a4, 0x204367ec, ped, mayEnterWater);
};

/**
 * SET_PED_PATH_PREFER_TO_AVOID_WATER
 *
 * @param {number} ped
 * @param {boolean} avoidWater
 * @param {number} p2
 * @return {void}
 */
global.SetPedPathPreferToAvoidWater = function (ped, avoidWater, p2) {
  return _in(0x38fe1ec7, 0x3743793c, ped, avoidWater, _fv(p2));
};

/**
 * SET_PED_WAYPOINT_ROUTE_OFFSET
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @return {any}
 */
global.SetPedWaypointRouteOffset = function (ped, p1, p2, p3) {
  return _in(0xed98e10b, 0x0afce4b4, ped, _fv(p1), _fv(p2), _fv(p3), _r);
};

/**
 * SET_SCENARIO_GROUP_ENABLED
 *
 * @param {string | number} scenarioGroup
 * @param {boolean} toggle
 * @return {void}
 */
global.SetScenarioGroupEnabled = function (scenarioGroup, toggle) {
  return _in(0x02c8e5b4, 0x9848664e, _ts(scenarioGroup), toggle);
};

/**
 * SET_SCENARIO_TYPE_ENABLED
 *
 * @param {string | number} scenarioType
 * @param {boolean} toggle
 * @return {void}
 */
global.SetScenarioTypeEnabled = function (scenarioType, toggle) {
  return _in(0xeb47ec4e, 0x34fb7ee1, _ts(scenarioType), toggle);
};

/**
 * SET_SEQUENCE_TO_REPEAT
 * repeatMode: 0 = REPEAT_NOT; 1 = REPEAT_FOREVER
 *
 * @param {number} taskSequenceId
 * @param {number} repeatMode
 * @return {void}
 */
global.SetSequenceToRepeat = function (taskSequenceId, repeatMode) {
  return _in(0x58c70cf3, 0xa41e4ae7, taskSequenceId, repeatMode);
};

/**
 * SET_TASK_MOVE_NETWORK_SIGNAL_BOOL
 *
 * @param {number} ped
 * @param {string | number} signalName
 * @param {boolean} value
 * @return {void}
 */
global.SetTaskMoveNetworkSignalBool = function (ped, signalName, value) {
  return _in(0xb0a6cfd2, 0xc69c1088, ped, _ts(signalName), value);
};

/**
 * SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT
 *
 * @param {number} ped
 * @param {string | number} signalName
 * @param {number} value
 * @return {void}
 */
global.SetTaskMoveNetworkSignalFloat = function (ped, signalName, value) {
  return _in(0xd5bb4025, 0xae449a4e, ped, _ts(signalName), _fv(value));
};

/**
 * SET_TEAM_CARRIABLE_ENTITY
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.SetTeamCarriableEntity = function (p0, p1, p2) {
  return _in(0x545bf19f, 0x86e80f11, p0, p1, p2);
};

/**
 * SET_UP_SPEED_RESTRAIN_INFORMATION_FOR_PLAYER_FOLLOWER
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {void}
 */
global.SetUpSpeedRestrainInformationForPlayerFollower = function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0xb5c51dd5, 0x44f14f58, p0, p1, p2, p3, p4, p5, p6, p7, p8);
};

/**
 * START_TASK_ITEM_INTERACTION
 * Params: p3 = 0, 1; p5 = 0.0f, -1.0f
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
 *
 * @param {number} ped
 * @param {number} itemHash
 * @param {number} interactionAnimHash
 * @param {number} p3
 * @param {number} flag
 * @param {number} p5
 * @return {void}
 */
global.StartTaskItemInteraction = function (ped, itemHash, interactionAnimHash, p3, flag, p5) {
  return _in(0xae72e7df, 0x013aaa61, ped, _ch(itemHash), _ch(interactionAnimHash), p3, flag, _fv(p5));
};

/**
 * STOP_ANIM_PLAYBACK
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.StopAnimPlayback = function (ped, p1, p2) {
  return _in(0xee08c992, 0xd238c5d1, ped, p1, p2);
};

/**
 * STOP_ANIM_TASK
 *
 * @param {number} ped
 * @param {string | number} animDictionary
 * @param {string | number} animationName
 * @param {number} p3
 * @return {void}
 */
global.StopAnimTask = function (ped, animDictionary, animationName, p3) {
  return _in(0x97ff36a1, 0xd40ea00a, ped, _ts(animDictionary), _ts(animationName), _fv(p3));
};

/**
 * TASK_ACHIEVE_HEADING
 * Makes the specified ped achieve the specified heading.
 * 
 * pedHandle: The handle of the ped to assign the task to.
 * heading: The desired heading.
 * timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is canceled, and the ped will stay at the heading it managed to reach in the time.
 *
 * @param {number} ped
 * @param {number} heading
 * @param {number} timeout
 * @return {void}
 */
global.TaskAchieveHeading = function (ped, heading, timeout) {
  return _in(0x93b93a37, 0x987f1f3d, ped, _fv(heading), timeout);
};

/**
 * TASK_AIM_AT_COORD
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.TaskAimAtCoord = function (ped, p1, p2, p3, p4, p5, p6) {
  return _in(0x4af1d738, 0x61212f52, ped, p1, p2, p3, p4, p5, p6);
};

/**
 * TASK_AIM_AT_ENTITY
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.TaskAimAtEntity = function (ped, p1, p2, p3, p4) {
  return _in(0xcf7569bd, 0x0fb480a0, ped, p1, p2, p3, p4);
};

/**
 * TASK_AIM_GUN_AT_COORD
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} time
 * @param {boolean} p5
 * @param {boolean} p6
 * @return {void}
 */
global.TaskAimGunAtCoord = function (ped, x, y, z, time, p5, p6) {
  return _in(0x6671f3ee, 0xc681bda1, ped, _fv(x), _fv(y), _fv(z), time, p5, p6);
};

/**
 * TASK_AIM_GUN_AT_ENTITY
 * duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 *
 * @param {number} ped
 * @param {number} targetEntity
 * @param {number} duration
 * @param {boolean} p3
 * @param {number} p4
 * @return {void}
 */
global.TaskAimGunAtEntity = function (ped, targetEntity, duration, p3, p4) {
  return _in(0x9b53bb6e, 0x8943af53, ped, targetEntity, duration, p3, p4);
};

/**
 * TASK_AMBIENT_ANIMAL_HUNT
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TaskAmbientAnimalHunt = function (ped, p1, p2) {
  return _in(0x4b39d8f9, 0xd0fe7749, ped, p1, p2);
};

/**
 * TASK_AMBIENT_ANIMAL_STALK
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TaskAmbientAnimalStalk = function (ped, p1, p2) {
  return _in(0x37c13863, 0xaba1b4a3, ped, p1, p2);
};

/**
 * TASK_ANIMAL_ALERTED
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TaskAnimalAlerted = function (ped, p1, p2) {
  return _in(0x979d9337, 0x2fc8c565, ped, p1, p2);
};

/**
 * TASK_ANIMAL_FLEE
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {any} p2
 * @return {void}
 */
global.TaskAnimalFlee = function (ped, targetPed, p2) {
  return _in(0xa899b61c, 0x66f09134, ped, targetPed, p2);
};

/**
 * TASK_ANIMAL_INTERACTION
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ANIMAL_INTERACTION
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {number} interactionType
 * @param {number} interactionModel
 * @param {boolean} skipIdleAnimationClip
 * @return {void}
 */
global.TaskAnimalInteraction = function (ped, targetPed, interactionType, interactionModel, skipIdleAnimationClip) {
  return _in(0xcd181a95, 0x9cfdd7f4, ped, targetPed, _ch(interactionType), _ch(interactionModel), skipIdleAnimationClip);
};

/**
 * TASK_ANIMAL_UNALERTED
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.TaskAnimalUnalerted = function (ped, p1, p2, p3, p4) {
  return _in(0x21fdf9a2, 0x5cfe1ce5, ped, p1, p2, p3, p4);
};

/**
 * TASK_ANIMAL_WRITHE
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TaskAnimalWrithe = function (ped, p1, p2) {
  return _in(0x8c038a39, 0xc4a4b6d6, ped, p1, p2);
};

/**
 * TASK_ARREST_PED
 *
 * @param {number} ped
 * @param {number} target
 * @return {void}
 */
global.TaskArrestPed = function (ped, target) {
  return _in(0xf3b9a78a, 0x178572b1, ped, target);
};

/**
 * TASK_BARK
 *
 * @param {number} ped
 * @param {number} barkAtTarget
 * @param {number} mood
 * @return {void}
 */
global.TaskBark = function (ped, barkAtTarget, mood) {
  return _in(0x83bfc1f8, 0x36b2f3f2, ped, barkAtTarget, _ch(mood));
};

/**
 * TASK_BOAT_MISSION
 *
 * @param {number} pedDriver
 * @param {number} boat
 * @param {any} p2
 * @param {any} p3
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {any} p7
 * @param {number} maxSpeed
 * @param {number} drivingStyle
 * @param {number} p10
 * @param {any} p11
 * @return {void}
 */
global.TaskBoatMission = function (pedDriver, boat, p2, p3, x, y, z, p7, maxSpeed, drivingStyle, p10, p11) {
  return _in(0x15c86013, 0x127ce63f, pedDriver, boat, p2, p3, _fv(x), _fv(y), _fv(z), p7, _fv(maxSpeed), drivingStyle, _fv(p10), p11);
};

/**
 * TASK_BREAK_VEHICLE_DOOR_LOCK
 *
 * @param {number} ped
 * @param {number} vehicle
 * @return {void}
 */
global.TaskBreakVehicleDoorLock = function (ped, vehicle) {
  return _in(0xbb28d1bc, 0x9ea8a6a5, ped, vehicle);
};

/**
 * TASK_CARRIABLE
 * carriableSlot:
 *  7 > Back of a horse
 *  6 > Right side of a horse
 *  5 > Left side of a horse
 * flags:
 *  512: enables the prompt being the name of the item when using a generic item
 *
 * @param {number} entity
 * @param {number} carryConfig
 * @param {number} carrier
 * @param {number} carriableSlot
 * @param {number} flags
 * @return {void}
 */
global.TaskCarriable = function (entity, carryConfig, carrier, carriableSlot, flags) {
  return _in(0xf0b4f759, 0xf35cc7f5, entity, _ch(carryConfig), carrier, carriableSlot, flags);
};

/**
 * TASK_CLEAR_DEFENSIVE_AREA
 *
 * @param {number} ped
 * @return {void}
 */
global.TaskClearDefensiveArea = function (ped) {
  return _in(0x95a6c46a, 0x31d1917d, ped);
};

/**
 * TASK_CLEAR_LOOK_AT
 *
 * @param {number} ped
 * @return {void}
 */
global.TaskClearLookAt = function (ped) {
  return _in(0x0f804f1d, 0xb19b9689, ped);
};

/**
 * TASK_CLIMB
 * Climbs or vaults the nearest thing.
 *
 * @param {number} ped
 * @param {boolean} unused
 * @return {void}
 */
global.TaskClimb = function (ped, unused) {
  return _in(0x89d9fcc2, 0x435112f1, ped, unused);
};

/**
 * TASK_CLIMB_LADDER
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {void}
 */
global.TaskClimbLadder = function (ped, p1, p2, p3) {
  return _in(0xb6c987f9, 0x285a3814, ped, _fv(p1), p2, p3);
};

/**
 * TASK_COMBAT_ANIMAL_CHARGE_PED
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {boolean} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.TaskCombatAnimalChargePed = function (ped, targetPed, p2, p3, p4, p5, p6) {
  return _in(0xee3aa414, 0xcf99f368, ped, targetPed, p2, p3, p4, p5, p6);
};

/**
 * TASK_COMBAT_ANIMAL_WARN
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TaskCombatAnimalWarn = function (ped, p1, p2) {
  return _in(0xf960f3d5, 0x7b660e96, ped, p1, p2);
};

/**
 * TASK_COMBAT_HATED_TARGETS
 *
 * @param {number} ped
 * @param {number} radius
 * @return {void}
 */
global.TaskCombatHatedTargets = function (ped, radius) {
  return _in(0x8182b561, 0xa29bd597, ped, _fv(radius));
};

/**
 * TASK_COMBAT_HATED_TARGETS_AROUND_PED
 * Despite its name, it only attacks ONE hated target. The one closest hated target.
 *
 * @param {number} ped
 * @param {number} radius
 * @param {number} flags
 * @param {any} p3
 * @return {void}
 */
global.TaskCombatHatedTargetsAroundPed = function (ped, radius, flags, p3) {
  return _in(0x7bf835bb, 0x9e2698c8, ped, _fv(radius), flags, p3);
};

/**
 * TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED
 *
 * @param {number} ped
 * @param {number} radius
 * @param {number} time
 * @param {number} flags
 * @return {void}
 */
global.TaskCombatHatedTargetsAroundPedTimed = function (ped, radius, time, flags) {
  return _in(0x2bba30b8, 0x54534a0c, ped, _fv(radius), time, flags);
};

/**
 * TASK_COMBAT_HATED_TARGETS_IN_AREA
 * Despite its name, it only attacks ONE hated target. The one closest to the specified position.
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} flags
 * @param {any} p6
 * @return {void}
 */
global.TaskCombatHatedTargetsInArea = function (ped, x, y, z, radius, flags, p6) {
  return _in(0x4cf5f55d, 0xac3280a0, ped, _fv(x), _fv(y), _fv(z), _fv(radius), flags, p6);
};

/**
 * TASK_COMBAT_HATED_TARGETS_NO_LOS_TEST
 *
 * @param {number} ped
 * @param {number} radius
 * @return {void}
 */
global.TaskCombatHatedTargetsNoLosTest = function (ped, radius) {
  return _in(0xb5bc69d9, 0xc4060bc3, ped, _fv(radius));
};

/**
 * TASK_COMBAT_PED
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.TaskCombatPed = function (ped, targetPed, p2, p3) {
  return _in(0xf166e484, 0x07bac484, ped, targetPed, p2, p3);
};

/**
 * TASK_COMBAT_PED_TIMED
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {number} p2
 * @param {any} p3
 * @return {void}
 */
global.TaskCombatPedTimed = function (ped, targetPed, p2, p3) {
  return _in(0x944f30dc, 0xb7096bde, ped, targetPed, p2, p3);
};

/**
 * TASK_COMPANION_AMBIENT
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.TaskCompanionAmbient = function (ped, p1) {
  return _in(0xe017cf6e, 0x2527fe4f, ped, p1);
};

/**
 * TASK_CONFRONT
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {number} p2
 * @return {boolean}
 */
global.TaskConfront = function (ped, targetPed, p2) {
  return _in(0x3a2a2071, 0xdf5cc569, ped, targetPed, p2, _r);
};

/**
 * TASK_COWER
 *
 * @param {number} ped
 * @param {number} duration
 * @param {number} pedToCowerFrom
 * @param {string | number} p3
 * @return {void}
 */
global.TaskCower = function (ped, duration, pedToCowerFrom, p3) {
  return _in(0x3eb1fe9e, 0x8e908e15, ped, duration, pedToCowerFrom, _ts(p3));
};

/**
 * TASK_DISEMBARK_NEAREST_TRAIN_CARRIAGE
 * flags: See TASK_ENTER_VEHICLE
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} flags
 * @return {void}
 */
global.TaskDisembarkNearestTrainCarriage = function (ped, p1, flags) {
  return _in(0x0a11f3bd, 0xec03ed5f, ped, _fv(p1), flags);
};

/**
 * TASK_DISMOUNT_ANIMAL
 * Dismounts the ped from the animal it's mounted on. taskFlag affects what side the rider gets off. p2-p5 are almost always 0.
 * flags: See TASK_ENTER_VEHICLE
 *
 * @param {number} rider
 * @param {number} taskFlag
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {number} targetPed
 * @return {void}
 */
global.TaskDismountAnimal = function (rider, taskFlag, p2, p3, p4, targetPed) {
  return _in(0x48e92d3d, 0xde23c23a, rider, taskFlag, p2, p3, p4, targetPed);
};

/**
 * TASK_DRIVE_BY
 *
 * @param {number} driverPed
 * @param {number} targetPed
 * @param {number} targetVehicle
 * @param {number} targetX
 * @param {number} targetY
 * @param {number} targetZ
 * @param {number} distanceToShoot
 * @param {number} pedAccuracy
 * @param {boolean} p8
 * @param {number} firingPattern
 * @return {void}
 */
global.TaskDriveBy = function (driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, p8, firingPattern) {
  return _in(0x2f8af0e8, 0x2773a171, driverPed, targetPed, targetVehicle, _fv(targetX), _fv(targetY), _fv(targetZ), _fv(distanceToShoot), pedAccuracy, p8, _ch(firingPattern));
};

/**
 * TASK_DUCK
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.TaskDuck = function (ped, p1) {
  return _in(0xa14b5fbf, 0x986bac23, ped, p1);
};

/**
 * TASK_DUEL
 * Params: p4 either 0.2f, 0.25f, 0.31f, 0.4f
 *
 * @param {number} ped
 * @param {any} p1
 * @param {number} p2
 * @param {number} entity
 * @param {number} p4
 * @param {number} p5
 * @param {number} vPosOpponentX
 * @param {number} vPosOpponentY
 * @param {number} vPosOpponentZ
 * @param {number} fOpponentHead
 * @param {number} p10
 * @return {void}
 */
global.TaskDuel = function (ped, p1, p2, entity, p4, p5, vPosOpponentX, vPosOpponentY, vPosOpponentZ, fOpponentHead, p10) {
  return _in(0x5d5b0d5b, 0xc3626e5a, ped, p1, _fv(p2), entity, _fv(p4), p5, _fv(vPosOpponentX), _fv(vPosOpponentY), _fv(vPosOpponentZ), _fv(fOpponentHead), p10);
};

/**
 * TASK_DUMP_CARRIABLE_FROM_PARENT
 *
 * @param {number} ped
 * @param {number} ped2
 * @param {number} entity
 * @return {void}
 */
global.TaskDumpCarriableFromParent = function (ped, ped2, entity) {
  return _in(0x17ca9870, 0x7b15926a, ped, ped2, entity);
};

/**
 * TASK_EAT
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TaskEat = function (ped, p1, p2) {
  return _in(0xbd7949bd, 0x07299672, ped, p1, p2);
};

/**
 * TASK_ENTER_ANIM_SCENE
 * flags:
 * MOVE_WHILST_WAITING_FOR_PATH = (1 << 0),
 * DO_NOT_STAND_STILL_AT_END_OF_PATH = (1 << 1),
 * SKIP_NAVIGATION = (1 << 2),
 * TEASF_AUTO_START_ANIM_SCENE = (1 << 3),
 * FORCE_STAND_STILL_AT_END_OF_PATH = (1 << 6),
 * ENTER_ANIM_SCENE_DONT_FOLLOW_NAVMESH = (1 << 7)
 *
 * @param {number} ped
 * @param {number} animScene
 * @param {string | number} entityName
 * @param {string | number} playbackListName
 * @param {number} enterSpeed
 * @param {boolean} bAutoStart
 * @param {number} flag
 * @param {number} p7
 * @param {number} p8
 * @return {void}
 */
global.TaskEnterAnimScene = function (ped, animScene, entityName, playbackListName, enterSpeed, bAutoStart, flag, p7, p8) {
  return _in(0xc2329b02, 0x06426644, ped, animScene, _ts(entityName), _ts(playbackListName), _fv(enterSpeed), bAutoStart, flag, p7, _fv(p8));
};

/**
 * TASK_ENTER_VEHICLE
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEnterExitVehicleFlags
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {number} timeout
 * @param {number} seat
 * @param {number} speed
 * @param {number} flag
 * @param {any} p6
 * @return {void}
 */
global.TaskEnterVehicle = function (ped, vehicle, timeout, seat, speed, flag, p6) {
  return _in(0xc20e50aa, 0x46d09ca8, ped, vehicle, timeout, seat, _fv(speed), flag, p6);
};

/**
 * TASK_EVASIVE_ANIM
 * Params: p2 is returned by BUILTIN::SHIFT_LEFT
 *
 * @param {number} ped1
 * @param {number} ped2
 * @param {number} p2
 * @return {void}
 */
global.TaskEvasiveAnim = function (ped1, ped2, p2) {
  return _in(0x5f22926e, 0x1bce9b08, ped1, ped2, p2);
};

/**
 * TASK_EVERYONE_LEAVE_VEHICLE_IN_ORDER
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.TaskEveryoneLeaveVehicleInOrder = function (vehicle, p1) {
  return _in(0x6f1c49f2, 0x75bd25b3, vehicle, p1);
};

/**
 * TASK_EXTEND_ROUTE
 * Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.
 * 
 * A maximum of 8 points can be added.
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.TaskExtendRoute = function (x, y, z) {
  return _in(0x1e788977, 0x8264843a, _fv(x), _fv(y), _fv(z));
};

/**
 * TASK_FLEE_COORD
 * Params: p5 = some flag?, p6 = -1.0f, p8 = 0 in R* Scripts
 * fleeStyle: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eFleeStyle
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} fleeStyle
 * @param {number} p5
 * @param {number} p6
 * @param {number} duration
 * @param {number} p8
 * @return {void}
 */
global.TaskFleeCoord = function (ped, x, y, z, fleeStyle, p5, p6, duration, p8) {
  return _in(0x58428248, 0xbf4b64e4, ped, _fv(x), _fv(y), _fv(z), fleeStyle, p5, _fv(p6), duration, p8);
};

/**
 * TASK_FLEE_COORD_VIA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @return {void}
 */
global.TaskFleeCoordVia = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
  return _in(0x390e0b69, 0x7d25eaf5, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
};

/**
 * TASK_FLEE_PED
 * Params: p4 = -1.0f, p5 = -1, p6 = 0 in R* Scripts
 * fleeStyle: see TASK_FLEE_COORD
 *
 * @param {number} ped
 * @param {number} fleeFromTarget
 * @param {number} fleeStyle
 * @param {number} flag
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @return {void}
 */
global.TaskFleePed = function (ped, fleeFromTarget, fleeStyle, flag, p4, p5, p6) {
  return _in(0xfd45175a, 0x6dfd7ce9, ped, fleeFromTarget, fleeStyle, flag, _fv(p4), p5, p6);
};

/**
 * TASK_FLEE_PED_VIA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @return {void}
 */
global.TaskFleePedVia = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x5802e0f9, 0x10e4cf1d, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
};

/**
 * TASK_FLUSH_ROUTE
 * Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
 *

 * @return {void}
 */
global.TaskFlushRoute = function () {
  return _in(0x841142a1, 0x376e9006);
};

/**
 * TASK_FLYING_CIRCLE
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.TaskFlyingCircle = function (ped, p1, p2, p3, p4, p5, p6) {
  return _in(0x72997893, 0xbfb8eccc, ped, p1, p2, p3, p4, p5, p6);
};

/**
 * TASK_FLY_AWAY
 *
 * @param {number} ped
 * @param {number} fleeFromTarget
 * @return {void}
 */
global.TaskFlyAway = function (ped, fleeFromTarget) {
  return _in(0xe86a537b, 0x5a3c297c, ped, fleeFromTarget);
};

/**
 * TASK_FLY_TO_COORD
 *
 * @param {number} ped
 * @param {number} travelMbr
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} p5
 * @param {boolean} p6
 * @return {void}
 */
global.TaskFlyToCoord = function (ped, travelMbr, x, y, z, p5, p6) {
  return _in(0xd6cfc2d5, 0x9da72042, ped, _fv(travelMbr), _fv(x), _fv(y), _fv(z), p5, p6);
};

/**
 * TASK_FOLLOW_AND_CONVERSE_WITH_PED
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {any} p2
 * @param {any} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {any} p7
 * @param {any} p8
 * @param {number} p9
 * @param {number} p10
 * @return {void}
 */
global.TaskFollowAndConverseWithPed = function (ped, targetPed, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0x489ffccc, 0xe7392b55, ped, targetPed, p2, p3, _fv(p4), _fv(p5), p6, p7, p8, _fv(p9), _fv(p10));
};

/**
 * TASK_FOLLOW_ENTITY_ALONG_WAYPOINT_RECORDING_AT_OFFSET
 *
 * @param {number} ped0
 * @param {number} ped1
 * @param {string | number} waypointRecording
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {boolean} p8
 * @return {void}
 */
global.TaskFollowEntityAlongWaypointRecordingAtOffset = function (ped0, ped1, waypointRecording, p3, p4, p5, p6, p7, p8) {
  return _in(0x4d2b787b, 0xae9ab760, ped0, ped1, _ts(waypointRecording), _fv(p3), _fv(p4), p5, p6, p7, p8);
};

/**
 * TASK_FOLLOW_ENTITY_WHILE_AIMING_AT_ENTITY
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.TaskFollowEntityWhileAimingAtEntity = function (ped, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0x2d532eaa, 0x142cf83f, ped, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * TASK_FOLLOW_NAV_MESH_TO_COORD
 * If no timeout, set timeout to -1.
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} speedMultiplier
 * @param {number} timeout
 * @param {number} stoppingRange
 * @param {number} flags
 * @param {number} heading
 * @return {void}
 */
global.TaskFollowNavMeshToCoord = function (ped, x, y, z, speedMultiplier, timeout, stoppingRange, flags, heading) {
  return _in(0x15d3a79d, 0x4e44b913, ped, _fv(x), _fv(y), _fv(z), _fv(speedMultiplier), timeout, _fv(stoppingRange), flags, _fv(heading));
};

/**
 * TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} speedMultiplier
 * @param {number} timeout
 * @param {number} stoppingRange
 * @param {number} flags
 * @param {number} p8
 * @param {number} p9
 * @param {number} p10
 * @param {number} entity
 * @param {number} unk
 * @return {void}
 */
global.TaskFollowNavMeshToCoordAdvanced = function (ped, x, y, z, speedMultiplier, timeout, stoppingRange, flags, p8, p9, p10, entity, unk) {
  return _in(0x17f58b88, 0xd085dbac, ped, _fv(x), _fv(y), _fv(z), _fv(speedMultiplier), timeout, _fv(stoppingRange), flags, _fv(p8), _fv(p9), _fv(p10), entity, _fv(unk));
};

/**
 * TASK_FOLLOW_PAVEMENT_TO_COORD
 *
 * @param {number} ped
 * @param {DataView} args
 * @return {void}
 */
global.TaskFollowPavementToCoord = function (ped, args) {
  return _in(0x1b147541, 0x4e70dd8e, ped, args);
};

/**
 * TASK_FOLLOW_POINT_ROUTE
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.TaskFollowPointRoute = function (ped, p1, p2, p3, p4, p5) {
  return _in(0x0e14c555, 0x0dc3cd1d, ped, p1, p2, p3, p4, p5);
};

/**
 * TASK_FOLLOW_TO_OFFSET_OF_COORD
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @param {any} p13
 * @param {any} p14
 * @return {void}
 */
global.TaskFollowToOffsetOfCoord = function (ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
  return _in(0x2e367628, 0x2c18a692, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
};

/**
 * TASK_FOLLOW_TO_OFFSET_OF_ENTITY
 *
 * @param {number} ped
 * @param {number} entity
 * @param {number} offsetX
 * @param {number} offsetY
 * @param {number} offsetZ
 * @param {number} movementSpeed
 * @param {number} timeout
 * @param {number} stoppingRange
 * @param {boolean} persistFollowing
 * @param {boolean} p9
 * @param {boolean} walkOnly
 * @param {boolean} p11
 * @param {boolean} p12
 * @param {boolean} p13
 * @return {void}
 */
global.TaskFollowToOffsetOfEntity = function (ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing, p9, walkOnly, p11, p12, p13) {
  return _in(0x304ae42e, 0x357b8c7e, ped, entity, _fv(offsetX), _fv(offsetY), _fv(offsetZ), _fv(movementSpeed), timeout, _fv(stoppingRange), persistFollowing, p9, walkOnly, p11, p12, p13);
};

/**
 * TASK_FOLLOW_WAYPOINT_RECORDING
 *
 * @param {number} ped
 * @param {string | number} waypointRecording
 * @param {number} p2
 * @param {number} flag
 * @param {number} p4
 * @param {boolean} p5
 * @param {any} p6
 * @param {number} p7
 * @return {void}
 */
global.TaskFollowWaypointRecording = function (ped, waypointRecording, p2, flag, p4, p5, p6, p7) {
  return _in(0x07595918, 0x19534f7b, ped, _ts(waypointRecording), p2, flag, p4, p5, p6, p7);
};

/**
 * TASK_FOLLOW_WAYPOINT_RECORDING_ADVANCED
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.TaskFollowWaypointRecordingAdvanced = function (ped, p1) {
  return _in(0x0cfc13eb, 0xc19bca52, ped, p1);
};

/**
 * TASK_FOLLOW_WAYPOINT_RECORDING_AT_OFFSET
 *
 * @param {number} ped
 * @param {string | number} waypointRecording
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {boolean} p6
 * @return {void}
 */
global.TaskFollowWaypointRecordingAtOffset = function (ped, waypointRecording, p2, p3, p4, p5, p6) {
  return _in(0xbe9b0520, 0xbd7c445b, ped, _ts(waypointRecording), _fv(p2), p3, p4, p5, p6);
};

/**
 * TASK_FORCE_MOTION_STATE
 * motionStateHash: see FORCE_PED_MOTION_STATE
 *
 * @param {number} ped
 * @param {number} motionStateHash
 * @param {boolean} p2
 * @return {void}
 */
global.TaskForceMotionState = function (ped, motionStateHash, p2) {
  return _in(0x4f056e1a, 0xffef17ab, ped, _ch(motionStateHash), p2);
};

/**
 * TASK_GOTO_ENTITY_AIMING
 * ped = Ped you want to perform this task.
 * target = the Entity they should aim at.
 * distanceToStopAt = distance from the target, where the ped should stop to aim.
 * StartAimingDist = distance where the ped should start to aim.
 *
 * @param {number} ped
 * @param {number} target
 * @param {number} distanceToStopAt
 * @param {number} startAimingDist
 * @return {void}
 */
global.TaskGotoEntityAiming = function (ped, target, distanceToStopAt, startAimingDist) {
  return _in(0xa9da48fa, 0xb8a76c12, ped, target, _fv(distanceToStopAt), _fv(startAimingDist));
};

/**
 * TASK_GOTO_ENTITY_OFFSET
 *
 * @param {number} ped
 * @param {number} entity
 * @param {any} p2
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} duration
 * @return {void}
 */
global.TaskGotoEntityOffset = function (ped, entity, p2, x, y, z, duration) {
  return _in(0xe39b4ff4, 0xfdebde27, ped, entity, p2, _fv(x), _fv(y), _fv(z), duration);
};

/**
 * TASK_GOTO_ENTITY_OFFSET_XY
 *
 * @param {number} ped
 * @param {number} entity
 * @param {number} duration
 * @param {number} targetRadius
 * @param {number} xOffset
 * @param {number} yOffset
 * @param {number} moveBlendRatio
 * @param {number} offsetFlags
 * @return {void}
 */
global.TaskGotoEntityOffsetXy = function (ped, entity, duration, targetRadius, xOffset, yOffset, moveBlendRatio, offsetFlags) {
  return _in(0x338e7ef5, 0x2b6095a9, ped, entity, duration, _fv(targetRadius), _fv(xOffset), _fv(yOffset), _fv(moveBlendRatio), offsetFlags);
};

/**
 * TASK_GOTO_ENTITY_OFFSET_XYZ
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {void}
 */
global.TaskGotoEntityOffsetXyz = function (ped, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0xfa6da9d1, 0x51769392, ped, p1, p2, p3, p4, p5, p6, p7, p8);
};

/**
 * TASK_GOTO_ENTITY_OFFSET_XYZ_AIMING
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @return {void}
 */
global.TaskGotoEntityOffsetXyzAiming = function (ped, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x41b0832c, 0xa96b5351, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9);
};

/**
 * TASK_GOTO_ENTITY_OFFSET_XY_AIMING
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {void}
 */
global.TaskGotoEntityOffsetXyAiming = function (ped, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0x901bd699, 0x84400f62, ped, p1, p2, p3, p4, p5, p6, p7, p8);
};

/**
 * TASK_GO_STRAIGHT_TO_COORD
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} moveBlendSpeedY
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @return {void}
 */
global.TaskGoStraightToCoord = function (ped, x, y, z, moveBlendSpeedY, p5, p6, p7, p8) {
  return _in(0xd76b57b4, 0x4f1e6f8b, ped, _fv(x), _fv(y), _fv(z), _fv(moveBlendSpeedY), p5, _fv(p6), _fv(p7), p8);
};

/**
 * TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.TaskGoStraightToCoordRelativeToEntity = function (ped, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0x61e360b7, 0xe040d12e, ped, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD
 *
 * @param {number} ped
 * @param {number} goToLocationX
 * @param {number} goToLocationY
 * @param {number} goToLocationZ
 * @param {number} focusLocationX
 * @param {number} focusLocationY
 * @param {number} focusLocationZ
 * @param {number} speed
 * @param {boolean} shootAtEnemies
 * @param {number} distanceToStopAt
 * @param {number} noRoadsDistance
 * @param {boolean} unkTrue
 * @param {number} unkFlag
 * @param {number} aimingFlag
 * @param {number} firingPattern
 * @return {void}
 */
global.TaskGoToCoordAndAimAtHatedEntitiesNearCoord = function (ped, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, unkTrue, unkFlag, aimingFlag, firingPattern) {
  return _in(0xa5554780, 0x1eb331fc, ped, _fv(goToLocationX), _fv(goToLocationY), _fv(goToLocationZ), _fv(focusLocationX), _fv(focusLocationY), _fv(focusLocationZ), _fv(speed), shootAtEnemies, _fv(distanceToStopAt), _fv(noRoadsDistance), unkTrue, unkFlag, aimingFlag, _ch(firingPattern));
};

/**
 * TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD_USING_COMBAT_STYLE
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @param {any} p13
 * @param {any} p14
 * @return {void}
 */
global.TaskGoToCoordAndAimAtHatedEntitiesNearCoordUsingCombatStyle = function (ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
  return _in(0x87bd711f, 0xc31ea273, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
};

/**
 * TASK_GO_TO_COORD_ANY_MEANS
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} speed
 * @param {number} entity
 * @param {boolean} p6
 * @param {number} walkingStyle
 * @param {number} p8
 * @return {void}
 */
global.TaskGoToCoordAnyMeans = function (ped, x, y, z, speed, entity, p6, walkingStyle, p8) {
  return _in(0x5bc448cb, 0x78fa3e88, ped, _fv(x), _fv(y), _fv(z), _fv(speed), entity, p6, walkingStyle, _fv(p8));
};

/**
 * TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} speed
 * @param {any} p5
 * @param {boolean} p6
 * @param {number} walkingStyle
 * @param {number} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @return {void}
 */
global.TaskGoToCoordAnyMeansExtraParams = function (ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11, p12) {
  return _in(0x1dd45f9e, 0xcfdb1bc9, ped, _fv(x), _fv(y), _fv(z), _fv(speed), p5, p6, walkingStyle, _fv(p8), p9, p10, p11, p12);
};

/**
 * TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED
 * This native allows to control the cruise speed of where you want the ped to go
 * 3rd param might be the entity ped is in? like boat or wagon, 12th param might be the cruiseSpeed of the entity ped is in?
 * EXAMPLE: TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(PlayerPedId(), vector3(x, y, z), 3.0, entity, 1, 0, -1082130432, 0, 101004800, 520, 3.0, 1082130432, 0)
 *
 * @param {number} ped
 * @param {number} cruiseSpeed
 * @param {number} entity
 * @param {number} p4
 * @param {number} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {number} cruiseSpeed
 * @param {any} p13
 * @param {any} p14
 * @return {Vector3}
 */
global.TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed = function (ped, cruiseSpeed, entity, p4, p5, p6, p7, p8, p9, p10, p11, cruiseSpeed, p13, p14) {
  return _in(0xb8ecd61f, 0x531a7b02, ped, _v, _fv(cruiseSpeed), entity, p4, p5, p6, p7, p8, p9, p10, p11, _fv(cruiseSpeed), p13, p14);
};

/**
 * TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @param {any} p13
 * @param {any} p14
 * @param {any} p15
 * @return {void}
 */
global.TaskGoToCoordWhileAimingAtCoord = function (ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15) {
  return _in(0x11315ab3, 0x385b8ac0, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15);
};

/**
 * TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD_USING_COMBAT_STYLE
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @param {any} p13
 * @param {any} p14
 * @param {any} p15
 * @return {void}
 */
global.TaskGoToCoordWhileAimingAtCoordUsingCombatStyle = function (ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15) {
  return _in(0x639c0425, 0xa0b4e77e, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15);
};

/**
 * TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY
 *
 * @param {number} ped1
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} ped2
 * @param {number} p5
 * @param {any} p6
 * @param {number} p7
 * @param {number} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {number} firingPattern
 * @param {number} p13
 * @param {any} p14
 * @return {void}
 */
global.TaskGoToCoordWhileAimingAtEntity = function (ped1, x, y, z, ped2, p5, p6, p7, p8, p9, p10, p11, firingPattern, p13, p14) {
  return _in(0xb2a16444, 0xead9ae47, ped1, _fv(x), _fv(y), _fv(z), ped2, _fv(p5), p6, _fv(p7), _fv(p8), p9, p10, p11, _ch(firingPattern), p13, p14);
};

/**
 * TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY_USING_COMBAT_STYLE
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @param {any} p13
 * @param {any} p14
 * @return {void}
 */
global.TaskGoToCoordWhileAimingAtEntityUsingCombatStyle = function (ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
  return _in(0x78426d09, 0x82d083c9, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
};

/**
 * TASK_GO_TO_ENTITY
 *
 * @param {number} ped
 * @param {number} target
 * @param {number} duration
 * @param {number} distance
 * @param {number} speed
 * @param {number} p5
 * @param {number} p6
 * @return {void}
 */
global.TaskGoToEntity = function (ped, target, duration, distance, speed, p5, p6) {
  return _in(0x6a071245, 0xeb0d1882, ped, target, duration, _fv(distance), _fv(speed), _fv(p5), p6);
};

/**
 * TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY
 * shootatEntity:
 * If true, peds will shoot at Entity till it is dead.
 * If false, peds will just walk till they reach the entity and will cease shooting.
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @return {void}
 */
global.TaskGoToEntityWhileAimingAtEntity = function (ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0x97465886, 0xd35210e9, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
};

/**
 * TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY_USING_COMBAT_STYLE
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @return {void}
 */
global.TaskGoToEntityWhileAimingAtEntityUsingCombatStyle = function (ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0xcef0117c, 0x233026ad, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
};

/**
 * TASK_GO_TO_WHISTLE
 * enum eWhistleType
 * {
 *   WHISTLE_MAIN,
 *   WHISTLE_SECONDARY,
 *   WHISTLE_DOUBLE,
 *   WHISTLE_URGENT,
 *   WHISTLE_LONG
 * };
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} whistleType
 * @return {void}
 */
global.TaskGoToWhistle = function (ped, p1, whistleType) {
  return _in(0xbad65456, 0x08ceca6e, ped, p1, whistleType);
};

/**
 * TASK_GRAPPLE
 * grappleStyle: AR_GRAPPLE_MOUNT_STANDING_FROM_FRONT, AR_GRAPPLE_MOUNT_STANDING_FROM_RIGHT, AR_GRAPPLE_MOUNT_STANDING_FROM_BACK, AR_GRAPPLE_MOUNT_STANDING_FROM_LEFT, AR_GRAPPLE_MOUNT_FROM_FRONT, AR_WOLF_EXECUTION_ENTER_FROM_BACK, AR_GRAPPLE_DRAG_FRONT_ON_ASS, AR_GRAPPLE_FRONT_FROM_LEFT_FAR, AR_BEAR_CHALLENGE_FRONT, AR_GRAPPLE_FRONT_FROM_FRONT, AR_GRAPPLE_MOUNT_FACEUP_FROM_FRONT
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {number} grappleStyle
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @return {boolean}
 */
global.TaskGrapple = function (ped, targetPed, grappleStyle, p3, p4, p5, p6) {
  return _in(0x779a2ffa, 0xcefaea7b, ped, targetPed, _ch(grappleStyle), p3, _fv(p4), p5, p6, _r);
};

/**
 * TASK_GUARD
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TaskGuard = function (ped, p1, p2) {
  return _in(0xb9fb242e, 0xaccaf30f, ped, p1, p2);
};

/**
 * TASK_GUARD_ASSIGNED_DEFENSIVE_AREA
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {any} p6
 * @return {void}
 */
global.TaskGuardAssignedDefensiveArea = function (ped, p1, p2, p3, p4, p5, p6) {
  return _in(0xd2a207ee, 0xbdf9889b, ped, _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), p6);
};

/**
 * TASK_GUARD_CURRENT_POSITION
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {boolean} p3
 * @return {void}
 */
global.TaskGuardCurrentPosition = function (ped, p1, p2, p3) {
  return _in(0x4a58a47a, 0x72e3fcb4, ped, _fv(p1), _fv(p2), p3);
};

/**
 * TASK_HANDS_UP
 * flags: 0 = HANDS_UP_NOTHING; 1 = HANDS_UP_STRAIGHT_TO_LOOP
 *
 * @param {number} ped
 * @param {number} duration
 * @param {number} facingPed
 * @param {number} timeToFacePed
 * @param {number} flags
 * @return {void}
 */
global.TaskHandsUp = function (ped, duration, facingPed, timeToFacePed, flags) {
  return _in(0xf2eab319, 0x79a7f910, ped, duration, facingPed, timeToFacePed, flags);
};

/**
 * TASK_HITCH_ANIMAL
 *
 * @param {number} ped
 * @param {number} scenarioPoint
 * @param {number} flag
 * @return {void}
 */
global.TaskHitchAnimal = function (ped, scenarioPoint, flag) {
  return _in(0x9030ad4b, 0x6207bfe8, ped, scenarioPoint, flag);
};

/**
 * TASK_HOGTIEABLE
 *
 * @param {number} ped
 * @return {void}
 */
global.TaskHogtieable = function (ped) {
  return _in(0x6afd8fe0, 0xd723328f, ped);
};

/**
 * TASK_HOGTIE_TARGET_PED
 *
 * @param {number} ped
 * @param {number} targetPed
 * @return {void}
 */
global.TaskHogtieTargetPed = function (ped, targetPed) {
  return _in(0x27829afd, 0x3e03ac1a, ped, targetPed);
};

/**
 * TASK_HORSE_ACTION
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_HORSE_ACTION
 * Params: p2, p3 are set to 0 in R* Scripts
 *
 * @param {number} ped
 * @param {number} action
 * @param {number} targetPed
 * @param {any} p3
 * @return {void}
 */
global.TaskHorseAction = function (ped, action, targetPed, p3) {
  return _in(0xa09cfd29, 0x100f06c3, ped, action, targetPed, p3);
};

/**
 * TASK_INVESTIGATE
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.TaskInvestigate = function (ped, p1, p2, p3, p4, p5) {
  return _in(0x5c851454, 0x0d27fbfb, ped, p1, p2, p3, p4, p5);
};

/**
 * TASK_JUMP
 *
 * @param {number} ped
 * @param {boolean} unused
 * @return {void}
 */
global.TaskJump = function (ped, unused) {
  return _in(0x0ae40861, 0x04e067b1, ped, unused);
};

/**
 * TASK_KNOCKED_OUT
 *
 * @param {number} ped
 * @param {number} p1
 * @param {boolean} permanently
 * @return {void}
 */
global.TaskKnockedOut = function (ped, p1, permanently) {
  return _in(0xf90427f0, 0x0a495a28, ped, _fv(p1), permanently);
};

/**
 * TASK_KNOCKED_OUT_AND_HOGTIED
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.TaskKnockedOutAndHogtied = function (ped, p1, p2) {
  return _in(0x42ac6401, 0xabb8c7e5, ped, _fv(p1), p2);
};

/**
 * TASK_LASSO_PED
 *
 * @param {number} ped
 * @param {number} targetPed
 * @return {void}
 */
global.TaskLassoPed = function (ped, targetPed) {
  return _in(0xc716eb2b, 0xd16370a3, ped, targetPed);
};

/**
 * TASK_LEAD_AND_CONVERSE
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {void}
 */
global.TaskLeadAndConverse = function (ped, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0xaa19711d, 0x33c6708c, ped, p1, p2, p3, p4, p5, p6, p7, p8);
};

/**
 * TASK_LEAD_HORSE
 *
 * @param {number} ped
 * @param {number} horse
 * @return {void}
 */
global.TaskLeadHorse = function (ped, horse) {
  return _in(0x9a7a4a54, 0x596fe09d, ped, horse);
};

/**
 * TASK_LEAVE_ANY_VEHICLE
 * flags: See TASK_ENTER_VEHICLE
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} taskFlag
 * @return {void}
 */
global.TaskLeaveAnyVehicle = function (ped, p1, taskFlag) {
  return _in(0x504d54df, 0x3f6f2247, ped, p1, taskFlag);
};

/**
 * TASK_LEAVE_VEHICLE
 * flags: See TASK_ENTER_VEHICLE
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {number} flags
 * @param {number} unkPed
 * @return {void}
 */
global.TaskLeaveVehicle = function (ped, vehicle, flags, unkPed) {
  return _in(0xd3dbce61, 0xa490be02, ped, vehicle, flags, unkPed);
};

/**
 * TASK_LOOK_AT_COORD
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} duration
 * @param {number} flags
 * @param {number} p6
 * @param {boolean} p7
 * @return {void}
 */
global.TaskLookAtCoord = function (ped, x, y, z, duration, flags, p6, p7) {
  return _in(0x6fa46612, 0x594f7973, ped, _fv(x), _fv(y), _fv(z), duration, flags, p6, p7);
};

/**
 * TASK_LOOK_AT_ENTITY
 * param3: duration in ms, use -1 to look forever
 * param4: using 2048 is fine
 * param5: using 3 is fine
 *
 * @param {number} ped
 * @param {number} lookAtTarget
 * @param {number} duration
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @return {void}
 */
global.TaskLookAtEntity = function (ped, lookAtTarget, duration, p3, p4, p5) {
  return _in(0x69f4be8c, 0x8cc4796c, ped, lookAtTarget, duration, p3, p4, p5);
};

/**
 * TASK_LOOT_ENTITY
 *
 * @param {number} ped
 * @param {number} entity
 * @return {void}
 */
global.TaskLootEntity = function (ped, entity) {
  return _in(0x48fae038, 0x401a2888, ped, entity);
};

/**
 * TASK_LOOT_NEAREST_ENTITY
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p4
 * @param {number} p5
 * @return {void}
 */
global.TaskLootNearestEntity = function (ped, x, y, z, p4, p5) {
  return _in(0xcf1501cb, 0xc4059412, ped, _fv(x), _fv(y), _fv(z), p4, _fv(p5));
};

/**
 * TASK_MELEE
 * Params: p2: AR_TAKEDOWN_FRONT, AR_EXECUTION_FRONT, 0 in R* Scripts
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {number} p2
 * @param {any} p3
 * @param {any} p4
 * @param {number} p5
 * @param {any} p6
 * @param {number} p7
 * @return {boolean}
 */
global.TaskMelee = function (ped, targetPed, p2, p3, p4, p5, p6, p7) {
  return _in(0x482c99d0, 0xb38d1b0a, ped, targetPed, _ch(p2), p3, p4, _fv(p5), p6, _fv(p7), _r);
};

/**
 * TASK_MOUNT_ANIMAL
 * timer: in ms, if it reaches 0 it will auto warp the ped on the horse
 * mountStyle: See TASK_ENTER_VEHICLE
 * Flags will still apply to mountStyle
 *
 * @param {number} ped
 * @param {number} mount
 * @param {number} timer
 * @param {number} seatIndex
 * @param {number} pedSpeed
 * @param {number} mountStyle
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.TaskMountAnimal = function (ped, mount, timer, seatIndex, pedSpeed, mountStyle, p6, p7) {
  return _in(0x92db0739, 0x813c5186, ped, mount, timer, seatIndex, _fv(pedSpeed), mountStyle, p6, p7);
};

/**
 * TASK_MOVE_BE_IN_FORMATION
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.TaskMoveBeInFormation = function (ped, p1, p2, p3, p4, p5, p6) {
  return _in(0x4aa5aa97, 0xc65e4a2f, ped, p1, p2, p3, p4, p5, p6);
};

/**
 * TASK_MOVE_FOLLOW_ROAD_USING_NAVMESH
 * Params: moveBlendRatio commonly 1.25f, p5 is always 0 in R* Scripts
 *
 * @param {number} ped
 * @param {number} moveBlendRatio
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {any} p5
 * @return {void}
 */
global.TaskMoveFollowRoadUsingNavmesh = function (ped, moveBlendRatio, x, y, z, p5) {
  return _in(0x79482c12, 0x482a860d, ped, _fv(moveBlendRatio), _fv(x), _fv(y), _fv(z), p5);
};

/**
 * TASK_MOVE_IN_TRAFFIC
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TaskMoveInTraffic = function (ped, p1, p2, p3) {
  return _in(0x8aa1593a, 0xec087a29, ped, p1, p2, p3);
};

/**
 * TASK_MOVE_IN_TRAFFIC_AWAY_FROM_ENTITY
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.TaskMoveInTrafficAwayFromEntity = function (ped, p1, p2, p3, p4) {
  return _in(0x13ded0bc, 0x45600fe1, ped, p1, p2, p3, p4);
};

/**
 * TASK_MOVE_IN_TRAFFIC_TO_DESTINATION
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.TaskMoveInTrafficToDestination = function (ped, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0xdca3a13f, 0x7a45338b, ped, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * TASK_MOVE_NETWORK_ADVANCED_BY_NAME_WITH_INIT_PARAMS
 *
 * @param {number} ped
 * @param {string | number} moveNetworkDefName
 * @param {DataView} taskData
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {number} xRot
 * @param {number} yRot
 * @param {number} zRot
 * @param {number} p9
 * @param {number} p10
 * @param {number} p11
 * @param {number} p12
 * @param {number} flag
 * @param {number} p14
 * @return {void}
 */
global.TaskMoveNetworkAdvancedByNameWithInitParams = function (ped, moveNetworkDefName, taskData, xPos, yPos, zPos, xRot, yRot, zRot, p9, p10, p11, p12, flag, p14) {
  return _in(0x7b6a04f9, 0x8bbafb2c, ped, _ts(moveNetworkDefName), taskData, _fv(xPos), _fv(yPos), _fv(zPos), _fv(xRot), _fv(yRot), _fv(zRot), p9, _fv(p10), p11, p12, flag, p14);
};

/**
 * TASK_MOVE_NETWORK_ADVANCED_BY_NAME_WITH_INIT_PARAMS_ATTACHED
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @param {any} p13
 * @param {any} p14
 * @param {any} p15
 * @param {any} p16
 * @param {any} p17
 * @return {void}
 */
global.TaskMoveNetworkAdvancedByNameWithInitParamsAttached = function (ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17) {
  return _in(0xf9217109, 0x3bcabed4, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17);
};

/**
 * TASK_MOVE_NETWORK_BY_NAME
 *
 * @param {number} ped
 * @param {string | number} task
 * @param {number} multiplier
 * @param {boolean} p3
 * @param {string | number} animDict
 * @param {number} flags
 * @return {void}
 */
global.TaskMoveNetworkByName = function (ped, task, multiplier, p3, animDict, flags) {
  return _in(0x2d537ba1, 0x94896636, ped, _ts(task), _fv(multiplier), p3, _ts(animDict), flags);
};

/**
 * TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS
 *
 * @param {number} ped
 * @param {string | number} moveNetworkDefName
 * @param {DataView} taskData
 * @param {number} p3
 * @param {boolean} p4
 * @param {string | number} animDict
 * @param {number} flags
 * @return {void}
 */
global.TaskMoveNetworkByNameWithInitParams = function (ped, moveNetworkDefName, taskData, p3, p4, animDict, flags) {
  return _in(0x139805c2, 0xa67c4795, ped, _ts(moveNetworkDefName), taskData, _fv(p3), p4, _ts(animDict), flags);
};

/**
 * TASK_PATROL
 *
 * @param {number} ped
 * @param {string | number} patrolRoute
 * @param {any} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {void}
 */
global.TaskPatrol = function (ped, patrolRoute, p2, p3, p4) {
  return _in(0xbda5df49, 0xd080fe4e, ped, _ts(patrolRoute), p2, p3, p4);
};

/**
 * TASK_PAUSE
 * This tasks the ped to do nothing for the specified amount of milliseconds.
 * This is useful if you want to add a delay between tasks when using a sequence task.
 *
 * @param {number} ped
 * @param {number} ms
 * @return {void}
 */
global.TaskPause = function (ped, ms) {
  return _in(0xe73a266d, 0xb0ca9042, ped, ms);
};

/**
 * TASK_PED_SLIDE_TO_COORD
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {number} p5
 * @return {void}
 */
global.TaskPedSlideToCoord = function (ped, x, y, z, heading, p5) {
  return _in(0xd04fe676, 0x5d990a06, ped, _fv(x), _fv(y), _fv(z), _fv(heading), _fv(p5));
};

/**
 * TASK_PERFORM_SEQUENCE
 *
 * @param {number} ped
 * @param {number} taskSequenceId
 * @return {void}
 */
global.TaskPerformSequence = function (ped, taskSequenceId) {
  return _in(0x5aba3986, 0xd90d8a3b, ped, taskSequenceId);
};

/**
 * TASK_PERFORM_SEQUENCE_FROM_PROGRESS
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TaskPerformSequenceFromProgress = function (ped, p1, p2, p3) {
  return _in(0x89221b16, 0x730234f0, ped, p1, p2, p3);
};

/**
 * TASK_PERSISTENT_CHARACTER
 *
 * @param {number} ped
 * @return {void}
 */
global.TaskPersistentCharacter = function (ped) {
  return _in(0x4391700c, 0xbd89c3d8, ped);
};

/**
 * TASK_PICKUP_CARRIABLE_ENTITY
 *
 * @param {number} ped
 * @param {number} entity
 * @return {void}
 */
global.TaskPickupCarriableEntity = function (ped, entity) {
  return _in(0x502ec17b, 0x1bed4bfa, ped, entity);
};

/**
 * TASK_PICK_UP_WEAPON
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.TaskPickUpWeapon = function (ped, p1) {
  return _in(0x55b0ecfd, 0x98596624, ped, p1);
};

/**
 * TASK_PLACE_CARRIED_ENTITY_AT_COORD
 *
 * @param {number} ped
 * @param {number} entity
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p5
 * @param {number} flags
 * @return {void}
 */
global.TaskPlaceCarriedEntityAtCoord = function (ped, entity, x, y, z, p5, flags) {
  return _in(0xc7f0b43d, 0xcdc57e3d, ped, entity, _fv(x), _fv(y), _fv(z), _fv(p5), flags);
};

/**
 * TASK_PLACE_CARRIED_ENTITY_ON_MOUNT
 *
 * @param {number} ped
 * @param {number} entity
 * @param {number} mount
 * @param {number} p3
 * @return {void}
 */
global.TaskPlaceCarriedEntityOnMount = function (ped, entity, mount, p3) {
  return _in(0x6d3d87c5, 0x7b3d52c7, ped, entity, mount, _fv(p3));
};

/**
 * TASK_PLANT_BOMB
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @return {void}
 */
global.TaskPlantBomb = function (ped, x, y, z, heading) {
  return _in(0x965fec69, 0x1d55e9bf, ped, _fv(x), _fv(y), _fv(z), _fv(heading));
};

/**
 * TASK_PLAY_ANIM
 * https://github.com/femga/rdr3_discoveries/tree/master/animations
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScriptedAnimFlags
 * ikFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eIkControlFlags 
 *
 * @param {number} ped
 * @param {string | number} animDict
 * @param {string | number} animName
 * @param {number} speed
 * @param {number} speedMultiplier
 * @param {number} duration
 * @param {number} flags
 * @param {number} playbackRate
 * @param {boolean} p8
 * @param {number} ikFlags
 * @param {boolean} p10
 * @param {string | number} taskFilter
 * @param {boolean} p12
 * @return {void}
 */
global.TaskPlayAnim = function (ped, animDict, animName, speed, speedMultiplier, duration, flags, playbackRate, p8, ikFlags, p10, taskFilter, p12) {
  return _in(0xea47fe37, 0x19165b94, ped, _ts(animDict), _ts(animName), _fv(speed), _fv(speedMultiplier), duration, flags, _fv(playbackRate), p8, ikFlags, p10, _ts(taskFilter), p12);
};

/**
 * TASK_PLAY_ANIM_ADVANCED
 * flags: see TASK_PLAY_ANIM
 * ikFlags: see TASK_PLAY_ANIM
 *
 * @param {number} ped
 * @param {string | number} animDict
 * @param {string | number} animName
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} speed
 * @param {number} speedMultiplier
 * @param {number} duration
 * @param {number} flags
 * @param {number} p13
 * @param {number} p14
 * @param {number} p15
 * @param {number} p16
 * @return {void}
 */
global.TaskPlayAnimAdvanced = function (ped, animDict, animName, posX, posY, posZ, rotX, rotY, rotZ, speed, speedMultiplier, duration, flags, p13, p14, p15, p16) {
  return _in(0x83cdb10e, 0xa29b370b, ped, _ts(animDict), _ts(animName), _fv(posX), _fv(posY), _fv(posZ), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(speed), _fv(speedMultiplier), duration, flags, _fv(p13), p14, p15, p16);
};

/**
 * TASK_PLAY_EMOTE_WITH_HASH
 * https://github.com/femga/rdr3_discoveries/blob/master/animations/kit_emotes_list.lua
 * emote: https://alloc8or.re/rdr3/doc/enums/eEmote.txt
 * 
 * enum eEmoteType
 * {
 *   EMOTE_TYPE_INVALID = -1,
 *   EMOTE_TYPE_REACT,
 *   EMOTE_TYPE_ACTION,
 *   EMOTE_TYPE_TAUNT,
 *   EMOTE_TYPE_GREET,
 *   EMOTE_TYPE_TWIRL_GUN,
 *   EMOTE_TYPE_DANCE_FLOOR
 * };
 * 
 * enum eEmotePlaybackMode
 * {
 *   EMOTE_PM_INVALID = -1,
 *   EMOTE_PM_UPPERBODY,
 *   EMOTE_PM_UPPERBODY_LOOP,
 *   EMOTE_PM_FULLBODY,
 * };
 *
 * @param {number} ped
 * @param {number} emoteType
 * @param {number} playbackMode
 * @param {number} emote
 * @param {boolean} isSecondaryTask
 * @param {boolean} canBreakOut
 * @param {boolean} disableEarlyOutAnimTag
 * @param {boolean} ignoreInvalidMainTask
 * @param {boolean} destroyProps
 * @return {void}
 */
global.TaskPlayEmoteWithHash = function (ped, emoteType, playbackMode, emote, isSecondaryTask, canBreakOut, disableEarlyOutAnimTag, ignoreInvalidMainTask, destroyProps) {
  return _in(0xb31a277c, 0x1ac7b7ff, ped, emoteType, playbackMode, _ch(emote), isSecondaryTask, canBreakOut, disableEarlyOutAnimTag, ignoreInvalidMainTask, destroyProps);
};

/**
 * TASK_PLAY_UPPER_ANIM_FACING_ENTITY
 *
 * @param {number} ped
 * @param {string | number} animDict
 * @param {string | number} animName
 * @param {number} entity
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {boolean} p9
 * @param {boolean} p10
 * @param {number} p11
 * @param {string | number} p12
 * @param {number} p13
 * @param {number} p14
 * @return {void}
 */
global.TaskPlayUpperAnimFacingEntity = function (ped, animDict, animName, entity, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
  return _in(0xad672142, 0x36ab1cfe, ped, _ts(animDict), _ts(animName), entity, p4, _fv(p5), _fv(p6), p7, _fv(p8), p9, p10, _fv(p11), _ts(p12), p13, _fv(p14));
};

/**
 * TASK_POLICE
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {boolean}
 */
global.TaskPolice = function (ped, p1) {
  return _in(0x87be5672, 0x4650408e, ped, p1, _r);
};

/**
 * TASK_PUT_PED_DIRECTLY_INTO_COVER
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} timeout
 * @param {boolean} p5
 * @param {number} p6
 * @param {any} p7
 * @param {any} p8
 * @param {number} coverpoint
 * @param {boolean} p10
 * @param {boolean} p11
 * @param {any} p12
 * @return {void}
 */
global.TaskPutPedDirectlyIntoCover = function (ped, x, y, z, timeout, p5, p6, p7, p8, coverpoint, p10, p11, p12) {
  return _in(0x4172393e, 0x6be1fece, ped, _fv(x), _fv(y), _fv(z), timeout, p5, _fv(p6), p7, p8, coverpoint, p10, p11, p12);
};

/**
 * TASK_PUT_PED_DIRECTLY_INTO_GRAPPLE
 * grappleStyle: AR_GRAPPLE_STRUGGLE, AR_ALLIGATOR_LEG_GRAB_CHALLENGE_FAIL, AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_BACK_DEFEND, AR_GRAPPLE_FRONT_FROM_FRONT
 *
 * @param {number} ped
 * @param {number} grappleTarget
 * @param {number} grappleStyle
 * @param {number} p3
 * @param {number} p4
 * @param {boolean} p5
 * @param {number} p6
 * @return {void}
 */
global.TaskPutPedDirectlyIntoGrapple = function (ped, grappleTarget, grappleStyle, p3, p4, p5, p6) {
  return _in(0xa05f3f20, 0x889d7a5b, ped, grappleTarget, _ch(grappleStyle), _fv(p3), _fv(p4), p5, p6);
};

/**
 * TASK_PUT_PED_DIRECTLY_INTO_MELEE
 * meleeStyles: AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_MOUNT_FACEDOWN_FROM_FRONT, AR_ALLIGATOR_LEAPKILL, AR_ALLIGATOR_WAIST_AUTOKILL_FRONT
 *
 * @param {number} ped
 * @param {number} meleeTarget
 * @param {number} meleeStyle
 * @param {number} p3
 * @param {number} animBlendRatio
 * @param {boolean} p5
 * @param {number} p6
 * @return {void}
 */
global.TaskPutPedDirectlyIntoMelee = function (ped, meleeTarget, meleeStyle, p3, animBlendRatio, p5, p6) {
  return _in(0x1c6cd14a, 0x876ffe39, ped, meleeTarget, _ch(meleeStyle), _fv(p3), _fv(animBlendRatio), p5, p6);
};

/**
 * TASK_REACT
 * Makes a ped react to an entity.
 * Params: reactingTo Entity can be 0, p8 is always 4
 *
 * @param {number} ped
 * @param {number} reactingTo
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {string | number} reactionName
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @return {void}
 */
global.TaskReact = function (ped, reactingTo, x, y, z, reactionName, p6, p7, p8) {
  return _in(0xc4c32c31, 0x920e1b70, ped, reactingTo, _fv(x), _fv(y), _fv(z), _ts(reactionName), _fv(p6), _fv(p7), p8);
};

/**
 * TASK_RELOAD_WEAPON
 *
 * @param {number} ped
 * @param {boolean} unused
 * @return {void}
 */
global.TaskReloadWeapon = function (ped, unused) {
  return _in(0x62d2916f, 0x56b9cd2d, ped, unused);
};

/**
 * TASK_REVIVE_TARGET
 *
 * @param {number} ped
 * @param {number} reviver
 * @param {number} tool
 * @return {void}
 */
global.TaskReviveTarget = function (ped, reviver, tool) {
  return _in(0x35608852, 0x7d9ebaad, ped, reviver, _ch(tool));
};

/**
 * TASK_RIDE_TRAIN
 *
 * @param {number} ped
 * @param {number} train
 * @param {number} scenarioPoint
 * @param {number} scenarioHash
 * @return {void}
 */
global.TaskRideTrain = function (ped, train, scenarioPoint, scenarioHash) {
  return _in(0x37fb1c87, 0x0e2ec2c6, ped, train, scenarioPoint, _ch(scenarioHash));
};

/**
 * TASK_ROB_PED
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.TaskRobPed = function (ped, p1, p2, p3, p4) {
  return _in(0x7bb967f8, 0x5d8ccbdb, ped, p1, p2, p3, p4);
};

/**
 * TASK_SCRIPTED_ANIMATION
 *
 * @param {number} ped
 * @param {DataView} args
 * @return {void}
 */
global.TaskScriptedAnimation = function (ped, args) {
  return _in(0x126ef75f, 0x1e17abe5, ped, args);
};

/**
 * TASK_SEEK_CLEAR_LOS_TO_ENTITY
 *
 * @param {number} ped
 * @param {number} entity
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.TaskSeekClearLosToEntity = function (ped, entity, p2, p3, p4) {
  return _in(0x8d7f2a63, 0x688c20a4, ped, entity, _fv(p2), _fv(p3), _fv(p4));
};

/**
 * TASK_SEEK_COVER_FROM_PED
 *
 * @param {number} ped
 * @param {number} fromPed
 * @param {number} duration
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.TaskSeekCoverFromPed = function (ped, fromPed, duration, p3, p4, p5) {
  return _in(0x84d32b3b, 0xec531324, ped, fromPed, duration, p3, p4, p5);
};

/**
 * TASK_SEEK_COVER_FROM_POS
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} duration
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.TaskSeekCoverFromPos = function (ped, x, y, z, duration, p5, p6, p7) {
  return _in(0x75ac2b60, 0x386d89f2, ped, _fv(x), _fv(y), _fv(z), duration, p5, p6, p7);
};

/**
 * TASK_SEEK_COVER_TO_COORDS
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @return {void}
 */
global.TaskSeekCoverToCoords = function (ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0x39246a69, 0x58ef072c, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
};

/**
 * TASK_SEEK_COVER_TO_COVER_POINT
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {void}
 */
global.TaskSeekCoverToCoverPoint = function (ped, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0xd43d95c7, 0xa869447f, ped, p1, p2, p3, p4, p5, p6, p7, p8);
};

/**
 * TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.TaskSetBlockingOfNonTemporaryEvents = function (ped, toggle) {
  return _in(0x90d21561, 0x98831d69, ped, toggle);
};

/**
 * TASK_SET_CROUCH_MOVEMENT
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {any} p2
 * @param {boolean} p3
 * @return {void}
 */
global.TaskSetCrouchMovement = function (ped, p1, p2, p3) {
  return _in(0x17293c63, 0x3c8ac019, ped, p1, p2, p3);
};

/**
 * TASK_SET_SPHERE_DEFENSIVE_AREA
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.TaskSetSphereDefensiveArea = function (ped, p1, p2, p3, p4) {
  return _in(0x933c0651, 0x8b52a9a4, ped, _fv(p1), _fv(p2), _fv(p3), _fv(p4));
};

/**
 * TASK_SET_STEALTH_MOVEMENT
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {any} p2
 * @param {boolean} p3
 * @return {void}
 */
global.TaskSetStealthMovement = function (ped, p1, p2, p3) {
  return _in(0x4c3fa937, 0xb44a90fa, ped, p1, p2, p3);
};

/**
 * TASK_SHOCKING_EVENT_REACT
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TaskShockingEventReact = function (ped, p1, p2) {
  return _in(0x452419cb, 0xd838065b, ped, p1, p2);
};

/**
 * TASK_SHOOT_AT_COORD
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} duration
 * @param {number} firingPattern
 * @param {any} p6
 * @return {void}
 */
global.TaskShootAtCoord = function (ped, x, y, z, duration, firingPattern, p6) {
  return _in(0x46a6cc01, 0xe0826106, ped, _fv(x), _fv(y), _fv(z), duration, _ch(firingPattern), p6);
};

/**
 * TASK_SHOOT_AT_ENTITY
 *
 * @param {number} entity
 * @param {number} targetEntity
 * @param {number} duration
 * @param {number} firingPattern
 * @param {boolean} affectCockedState
 * @return {void}
 */
global.TaskShootAtEntity = function (entity, targetEntity, duration, firingPattern, affectCockedState) {
  return _in(0x08da95e8, 0x298ae772, entity, targetEntity, duration, _ch(firingPattern), affectCockedState);
};

/**
 * TASK_SHOOT_WITH_WEAPON
 *
 * @param {number} ped
 * @param {DataView} args
 * @return {void}
 */
global.TaskShootWithWeapon = function (ped, args) {
  return _in(0x08aa95e8, 0x298ae772, ped, args);
};

/**
 * TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT
 * Makes the specified ped shuffle to the next vehicle seat.
 * The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
 *
 * @param {number} ped
 * @param {number} vehicle
 * @return {void}
 */
global.TaskShuffleToNextVehicleSeat = function (ped, vehicle) {
  return _in(0x7aa80209, 0xbda643eb, ped, vehicle);
};

/**
 * TASK_SMART_FLEE_COORD
 * Makes the specified ped flee the specified distance from the specified position.
 * fleeType: see TASK_FLEE_COORD
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} distance
 * @param {number} time
 * @param {number} fleeType
 * @param {number} fleeSpeed
 * @return {void}
 */
global.TaskSmartFleeCoord = function (ped, x, y, z, distance, time, fleeType, fleeSpeed) {
  return _in(0x94587f17, 0xe9c365d5, ped, _fv(x), _fv(y), _fv(z), _fv(distance), time, fleeType, _fv(fleeSpeed));
};

/**
 * TASK_SMART_FLEE_PED
 * Makes a ped run away from another ped (fleeFromTarget)
 * 
 * fleeDistance = ped will flee this distance
 * fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
 * fleeType = see TASK_FLEE_COORD, can be 0, R* Scripts: fm_mission/race_controller: 66048; fme_escaped_convicts: 2260992, 2523136, 2359296; la_alligator/fox: 2097152; net_fetch: 17301536; net_stable_mount: 540928
 * fleeSpeed = mostly 3f, rarely 1f in R* Scripts
 *
 * @param {number} ped
 * @param {number} fleeFromTarget
 * @param {number} fleeDistance
 * @param {number} fleeTime
 * @param {number} fleeType
 * @param {number} fleeSpeed
 * @param {number} targetPed
 * @return {void}
 */
global.TaskSmartFleePed = function (ped, fleeFromTarget, fleeDistance, fleeTime, fleeType, fleeSpeed, targetPed) {
  return _in(0x22b0d0e3, 0x7ccb840d, ped, fleeFromTarget, _fv(fleeDistance), fleeTime, fleeType, _fv(fleeSpeed), targetPed);
};

/**
 * TASK_STAND_GUARD
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {string | number} scenarioName
 * @return {void}
 */
global.TaskStandGuard = function (ped, x, y, z, heading, scenarioName) {
  return _in(0xae032f8b, 0xba959e90, ped, _fv(x), _fv(y), _fv(z), _fv(heading), _ts(scenarioName));
};

/**
 * TASK_STAND_STILL
 * Makes the specified ped stand still for (time) milliseconds.
 *
 * @param {number} ped
 * @param {number} time
 * @return {void}
 */
global.TaskStandStill = function (ped, time) {
  return _in(0x919be13e, 0xed931959, ped, time);
};

/**
 * TASK_START_SCENARIO_AT_POSITION
 *
 * @param {number} ped
 * @param {number} scenarioHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {number} duration
 * @param {boolean} sittingScenario
 * @param {boolean} teleport
 * @param {string | number} p9
 * @param {number} p10
 * @param {boolean} p11
 * @return {void}
 */
global.TaskStartScenarioAtPosition = function (ped, scenarioHash, x, y, z, heading, duration, sittingScenario, teleport, p9, p10, p11) {
  return _in(0x4d1f61fc, 0x34af3cd1, ped, _ch(scenarioHash), _fv(x), _fv(y), _fv(z), _fv(heading), duration, sittingScenario, teleport, _ts(p9), _fv(p10), p11);
};

/**
 * TASK_START_SCENARIO_IN_PLACE_HASH
 * https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
 * Params: duration in milliseconds
 * 
 * conditionalHash (optionally):
 * 0 = play random conditional anim.
 * Every conditional anim has requirements to play it.
 * If requirements are not met, ped plays random allowed conditional anim or can be stuck.
 * For example, this scenario type has possible conditional anim WORLD_HUMAN_LEAN_BACK_WALL_SMOKING_MALE_D, but it can not be played by player, because condition is set to NOT be CAIConditionIsPlayer (check file amb_rest.meta and amb_rest_CA.meta with OPENIV to clarify requirements).
 *
 * @param {number} ped
 * @param {number} scenarioHash
 * @param {number} duration
 * @param {boolean} playEnterAnim
 * @param {number} conditionalHash
 * @param {number} heading
 * @param {boolean} p6
 * @return {void}
 */
global.TaskStartScenarioInPlaceHash = function (ped, scenarioHash, duration, playEnterAnim, conditionalHash, heading, p6) {
  return _in(0x524b5436, 0x1229154f, ped, _ch(scenarioHash), duration, playEnterAnim, _ch(conditionalHash), _fv(heading), p6);
};

/**
 * TASK_STAY_IN_COVER
 * Makes the ped run to take cover
 *
 * @param {number} ped
 * @return {void}
 */
global.TaskStayInCover = function (ped) {
  return _in(0xe5da8615, 0xa6180789, ped);
};

/**
 * TASK_STOP_LEADING_HORSE
 *
 * @param {number} ped
 * @return {void}
 */
global.TaskStopLeadingHorse = function (ped) {
  return _in(0xed275607, 0x03f37258, ped);
};

/**
 * TASK_SWAP_FISHING_BAIT
 * Baits: see 0x9B0C7FA063E67629
 *
 * @param {number} ped
 * @param {string | number} bait
 * @param {boolean} withoutBuoy
 * @return {void}
 */
global.TaskSwapFishingBait = function (ped, bait, withoutBuoy) {
  return _in(0x2c28ac30, 0xa72722da, ped, _ts(bait), withoutBuoy);
};

/**
 * TASK_SWAP_WEAPON
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.TaskSwapWeapon = function (ped, p1, p2, p3, p4) {
  return _in(0xa21c5125, 0x5b205245, ped, p1, p2, p3, p4);
};

/**
 * TASK_THROW_PROJECTILE
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TaskThrowProjectile = function (ped, p1, p2, p3) {
  return _in(0x7285951d, 0xbf6b5a51, ped, p1, p2, p3);
};

/**
 * TASK_TURN_PED_TO_FACE_COORD
 * duration in milliseconds
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} duration
 * @return {void}
 */
global.TaskTurnPedToFaceCoord = function (ped, x, y, z, duration) {
  return _in(0x1dda930a, 0x0ac38571, ped, _fv(x), _fv(y), _fv(z), duration);
};

/**
 * TASK_TURN_PED_TO_FACE_ENTITY
 * duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 *
 * @param {number} ped
 * @param {number} targetEntity
 * @param {number} duration
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @return {void}
 */
global.TaskTurnPedToFaceEntity = function (ped, targetEntity, duration, p3, p4, p5) {
  return _in(0x5ad23d40, 0x115353ac, ped, targetEntity, duration, _fv(p3), _fv(p4), _fv(p5));
};

/**
 * TASK_TURN_TO_FACE_CLOSEST_PED
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.TaskTurnToFaceClosestPed = function (ped, p1, p2, p3) {
  return _in(0x84179419, 0xdbdd36f2, ped, _fv(p1), _fv(p2), p3);
};

/**
 * TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} distance
 * @param {boolean} p5
 * @param {boolean} p6
 * @param {boolean} p7
 * @param {boolean} p8
 * @return {void}
 */
global.TaskUseNearestScenarioChainToCoord = function (ped, x, y, z, distance, p5, p6, p7, p8) {
  return _in(0x9fda1b3d, 0x7e7028b3, ped, _fv(x), _fv(y), _fv(z), _fv(distance), p5, p6, p7, p8);
};

/**
 * TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} distance
 * @param {boolean} p5
 * @param {boolean} p6
 * @param {boolean} p7
 * @param {boolean} p8
 * @return {void}
 */
global.TaskUseNearestScenarioChainToCoordWarp = function (ped, x, y, z, distance, p5, p6, p7, p8) {
  return _in(0x97a28e63, 0xf0ba5631, ped, _fv(x), _fv(y), _fv(z), _fv(distance), p5, p6, p7, p8);
};

/**
 * TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} distance
 * @param {number} duration
 * @param {boolean} p6
 * @param {boolean} p7
 * @param {boolean} p8
 * @param {boolean} p9
 * @return {void}
 */
global.TaskUseNearestScenarioToCoordWarp = function (ped, x, y, z, distance, duration, p6, p7, p8, p9) {
  return _in(0x58e2e0f2, 0x3f6b76c3, ped, _fv(x), _fv(y), _fv(z), _fv(distance), duration, p6, p7, p8, p9);
};

/**
 * TASK_USE_NEAREST_TRAIN_SCENARIO_TO_COORD_WARP
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} distance
 * @return {void}
 */
global.TaskUseNearestTrainScenarioToCoordWarp = function (ped, x, y, z, distance) {
  return _in(0x3774b034, 0x56dd6106, ped, _fv(x), _fv(y), _fv(z), _fv(distance));
};

/**
 * TASK_USE_RANDOM_SCENARIO_IN_GROUP
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.TaskUseRandomScenarioInGroup = function (ped, p1, p2, p3, p4) {
  return _in(0x14747f4a, 0x5971de4e, ped, p1, p2, p3, p4);
};

/**
 * TASK_USE_SCENARIO_POINT
 *
 * @param {number} ped
 * @param {number} scenario
 * @param {string | number} conditionalAnim
 * @param {number} p3
 * @param {boolean} p4
 * @param {boolean} p5
 * @param {number} p6
 * @param {boolean} p7
 * @param {number} p8
 * @param {boolean} p9
 * @return {void}
 */
global.TaskUseScenarioPoint = function (ped, scenario, conditionalAnim, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0xccdae632, 0x4b6a821c, ped, scenario, _ts(conditionalAnim), p3, p4, p5, _ch(p6), p7, _fv(p8), p9);
};

/**
 * TASK_VEHICLE_AIM_AT_COORD
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.TaskVehicleAimAtCoord = function (ped, x, y, z) {
  return _in(0x447c1e9e, 0xf844bc0f, ped, _fv(x), _fv(y), _fv(z));
};

/**
 * TASK_VEHICLE_AIM_AT_PED
 *
 * @param {number} ped
 * @param {number} target
 * @return {void}
 */
global.TaskVehicleAimAtPed = function (ped, target) {
  return _in(0xe4188559, 0x2b08b097, ped, target);
};

/**
 * TASK_VEHICLE_DRIVE_STRAIGHT_TO_POINT
 * Old name: _TASK_VEHICLE_DRIVE_TO_POINT
 * flag: 524419 and 0 in shop_horse_shop R* Script
 *
 * @param {number} driver
 * @param {number} vehicle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p5
 * @param {number} p6
 * @param {number} flag
 * @return {void}
 */
global.TaskVehicleDriveStraightToPoint = function (driver, vehicle, x, y, z, p5, p6, flag) {
  return _in(0x089ff2fb, 0x965f0a29, driver, vehicle, _fv(x), _fv(y), _fv(z), _fv(p5), _fv(p6), flag);
};

/**
 * TASK_VEHICLE_DRIVE_TO_COORD
 * stopRange: how close vehicle will get to destination before stopping, default 4.0
 * straightLineDist: distance at which AI switches to heading for target directly instead of following nodes, default -1
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} speed
 * @param {any} style
 * @param {number} vehicleModel
 * @param {number} drivingMode
 * @param {number} stopRange
 * @param {number} straightLineDist
 * @return {void}
 */
global.TaskVehicleDriveToCoord = function (ped, vehicle, x, y, z, speed, style, vehicleModel, drivingMode, stopRange, straightLineDist) {
  return _in(0xe2a2aa2f, 0x659d77a7, ped, vehicle, _fv(x), _fv(y), _fv(z), _fv(speed), style, _ch(vehicleModel), drivingMode, _fv(stopRange), _fv(straightLineDist));
};

/**
 * TASK_VEHICLE_DRIVE_TO_DESTINATION
 * flags: 67108864, 2097152, 524564, 524675 (eDrivingFlags)
 * p7 = 6 or 3
 * p8 = x coordinate
 * p9 - 8.f
 * p10 = false
 *
 * @param {number} driver
 * @param {number} vehicle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} speed
 * @param {number} drivingFlags
 * @param {number} p7
 * @param {number} stoppingRange1
 * @param {number} stoppingRange2
 * @param {boolean} p10
 * @return {void}
 */
global.TaskVehicleDriveToDestination = function (driver, vehicle, x, y, z, speed, drivingFlags, p7, stoppingRange1, stoppingRange2, p10) {
  return _in(0x7f241a0d, 0x14354583, driver, vehicle, _fv(x), _fv(y), _fv(z), _fv(speed), drivingFlags, p7, _fv(stoppingRange1), _fv(stoppingRange2), p10);
};

/**
 * TASK_VEHICLE_DRIVE_WANDER
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {number} speed
 * @param {number} drivingStyle
 * @return {void}
 */
global.TaskVehicleDriveWander = function (ped, vehicle, speed, drivingStyle) {
  return _in(0x48014295, 0x9d337d00, ped, vehicle, _fv(speed), drivingStyle);
};

/**
 * TASK_VEHICLE_ESCORT
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {number} targetVehicle
 * @param {number} mode
 * @param {number} speed
 * @param {number} drivingStyle
 * @param {number} minDistance
 * @param {number} p7
 * @param {number} noRoadsDistance
 * @return {void}
 */
global.TaskVehicleEscort = function (ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, p7, noRoadsDistance) {
  return _in(0x0fa6e4b7, 0x5f302400, ped, vehicle, targetVehicle, mode, _fv(speed), drivingStyle, _fv(minDistance), p7, _fv(noRoadsDistance));
};

/**
 * TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {string | number} waypointRecording
 * @param {number} drivingMode
 * @param {any} p4
 * @param {number} eWaypoint
 * @param {number} flag
 * @param {number} p7
 * @param {boolean} p8
 * @param {number} stoppingDist
 * @param {any} p10
 * @return {void}
 */
global.TaskVehicleFollowWaypointRecording = function (ped, vehicle, waypointRecording, drivingMode, p4, eWaypoint, flag, p7, p8, stoppingDist, p10) {
  return _in(0x3123faa6, 0xdb1cf7ed, ped, vehicle, _ts(waypointRecording), drivingMode, p4, eWaypoint, flag, _fv(p7), p8, _fv(stoppingDist), p10);
};

/**
 * TASK_VEHICLE_GOTO_NAVMESH
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} speed
 * @param {number} behaviorFlag
 * @param {number} stoppingRange
 * @return {void}
 */
global.TaskVehicleGotoNavmesh = function (ped, vehicle, x, y, z, speed, behaviorFlag, stoppingRange) {
  return _in(0x195aeeb1, 0x3cefe2ee, ped, vehicle, _fv(x), _fv(y), _fv(z), _fv(speed), behaviorFlag, _fv(stoppingRange));
};

/**
 * TASK_VEHICLE_MISSION
 *
 * @param {number} driver
 * @param {number} vehicle
 * @param {number} vehicleTarget
 * @param {number} missionType
 * @param {number} p4
 * @param {any} p5
 * @param {number} p6
 * @param {number} p7
 * @param {boolean} driveAgainstTraffic
 * @return {void}
 */
global.TaskVehicleMission = function (driver, vehicle, vehicleTarget, missionType, p4, p5, p6, p7, driveAgainstTraffic) {
  return _in(0x659427e0, 0xef36bcde, driver, vehicle, vehicleTarget, missionType, _fv(p4), p5, _fv(p6), _fv(p7), driveAgainstTraffic);
};

/**
 * TASK_VEHICLE_MISSION_PED_TARGET
 * See TASK_VEHICLE_MISSION
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {number} pedTarget
 * @param {number} mode
 * @param {number} maxSpeed
 * @param {number} drivingStyle
 * @param {number} minDistance
 * @param {number} p7
 * @param {boolean} driveAgainstTraffic
 * @return {void}
 */
global.TaskVehicleMissionPedTarget = function (ped, vehicle, pedTarget, mode, maxSpeed, drivingStyle, minDistance, p7, driveAgainstTraffic) {
  return _in(0x9454528d, 0xf15d657a, ped, vehicle, pedTarget, mode, _fv(maxSpeed), drivingStyle, _fv(minDistance), _fv(p7), driveAgainstTraffic);
};

/**
 * TASK_VEHICLE_SHOOT_AT_COORD
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p4
 * @return {void}
 */
global.TaskVehicleShootAtCoord = function (ped, x, y, z, p4) {
  return _in(0x5190796e, 0xd39c9b6d, ped, _fv(x), _fv(y), _fv(z), _fv(p4));
};

/**
 * TASK_VEHICLE_SHOOT_AT_PED
 *
 * @param {number} ped
 * @param {number} target
 * @param {number} p2
 * @return {void}
 */
global.TaskVehicleShootAtPed = function (ped, target, p2) {
  return _in(0x10ab107b, 0x887214d8, ped, target, _fv(p2));
};

/**
 * TASK_VEHICLE_TEMP_ACTION
 * Documentation from GTA V, might be the same in RDR:
 * 
 * '1 - brake
 * '3 - brake + reverse
 * '4 - turn left 90 + braking
 * '5 - turn right 90 + braking
 * '6 - brake strong (handbrake?) until time ends
 * '7 - turn left + accelerate
 * '7 - turn right + accelerate
 * '9 - weak acceleration
 * '10 - turn left + restore wheel pos to center in the end
 * '11 - turn right + restore wheel pos to center in the end
 * '13 - turn left + go reverse
 * '14 - turn left + go reverse
 * '16 - crash the game after like 2 seconds :)
 * '17 - keep actual state, game crashed after few tries
 * '18 - game crash
 * '19 - strong brake + turn left/right
 * '20 - weak brake + turn left then turn right
 * '21 - weak brake + turn right then turn left
 * '22 - brake + reverse
 * '23 - accelerate fast
 * '24 - brake
 * '25 - brake turning left then when almost stopping it turns left more
 * '26 - brake turning right then when almost stopping it turns right more
 * '27 - brake until car stop or until time ends
 * '28 - brake + strong reverse acceleration
 * '30 - performs a burnout (brake until stop + brake and accelerate)
 * '31 - accelerate + handbrake
 * '32 - accelerate very strong
 * 
 * Seems to be this:
 * Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
 *
 * @param {number} driver
 * @param {number} vehicle
 * @param {number} action
 * @param {number} time
 * @return {void}
 */
global.TaskVehicleTempAction = function (driver, vehicle, action, time) {
  return _in(0xc429dcee, 0xb339e129, driver, vehicle, action, time);
};

/**
 * TASK_WALK_AWAY
 *
 * @param {number} ped
 * @param {number} entity
 * @return {void}
 */
global.TaskWalkAway = function (ped, entity) {
  return _in(0x04acfac7, 0x1e6858f9, ped, entity);
};

/**
 * TASK_WANDER_AND_CONVERSE_WITH_PED
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TaskWanderAndConverseWithPed = function (ped, p1, p2, p3) {
  return _in(0x8ac76d14, 0x08731732, ped, p1, p2, p3);
};

/**
 * TASK_WANDER_IN_AREA
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @return {void}
 */
global.TaskWanderInArea = function (ped, x, y, z, radius, p5, p6, p7) {
  return _in(0xe054346c, 0xa3a0f315, ped, _fv(x), _fv(y), _fv(z), _fv(radius), _fv(p5), _fv(p6), p7);
};

/**
 * TASK_WANDER_IN_VOLUME
 *
 * @param {number} ped
 * @param {number} volume
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @return {void}
 */
global.TaskWanderInVolume = function (ped, volume, p2, p3, p4) {
  return _in(0x9fda1687, 0x77b28424, ped, volume, _fv(p2), _fv(p3), p4);
};

/**
 * TASK_WANDER_STANDARD
 * Makes ped walk around the area.
 * 
 * set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.TaskWanderStandard = function (ped, p1, p2) {
  return _in(0xbb9ce077, 0x274f6a1b, ped, _fv(p1), p2);
};

/**
 * TASK_WANDER_SWIM
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.TaskWanderSwim = function (ped, p1) {
  return _in(0x527ea3db, 0x8bc7f03b, ped, p1);
};

/**
 * TASK_WARP_PED_INTO_VEHICLE
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {number} seat
 * @return {void}
 */
global.TaskWarpPedIntoVehicle = function (ped, vehicle, seat) {
  return _in(0x9a7d0914, 0x11c5f684, ped, vehicle, seat);
};

/**
 * TASK_WEAPON
 *
 * @param {number} ped
 * @return {void}
 */
global.TaskWeapon = function (ped) {
  return _in(0x7157b82d, 0x60e4bc46, ped);
};

/**
 * TASK_WHISTLE_ANIM
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/aud_ped_whistle_types.lua
 * p2: UNSPECIFIED
 *
 * @param {number} ped
 * @param {number} audPedWhistleType
 * @param {number} p2
 * @return {void}
 */
global.TaskWhistleAnim = function (ped, audPedWhistleType, p2) {
  return _in(0xd6401a1b, 0x2f63bed6, ped, _ch(audPedWhistleType), _ch(p2));
};

/**
 * UNCUFF_PED
 *
 * @param {number} ped
 * @return {void}
 */
global.UncuffPed = function (ped) {
  return _in(0x67406f2c, 0x8f87fc4f, ped);
};

/**
 * UNHOGTIE_PED
 * getupSetHash: see nm_blend_out_sets.meta
 *
 * @param {number} ped
 * @param {number} flags
 * @param {number} getupSetHash
 * @param {string | number} p3
 * @param {string | number} p4
 * @param {number} p5
 * @return {void}
 */
global.UnhogtiePed = function (ped, flags, getupSetHash, p3, p4, p5) {
  return _in(0x79559bad, 0x83ccd038, ped, flags, _ch(getupSetHash), _ts(p3), _ts(p4), _fv(p5));
};

/**
 * UPDATE_TASK_HANDS_UP_DURATION
 *
 * @param {number} ped
 * @param {number} duration
 * @return {void}
 */
global.UpdateTaskHandsUpDuration = function (ped, duration) {
  return _in(0xa98fcafd, 0x7893c834, ped, duration);
};

/**
 * USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE
 *
 * @param {string | number} waypointRecording
 * @param {boolean} p1
 * @param {number} p2
 * @param {number} p3
 * @param {boolean} p4
 * @return {void}
 */
global.UseWaypointRecordingAsAssistedMovementRoute = function (waypointRecording, p1, p2, p3, p4) {
  return _in(0x5a353b8e, 0x6b1095b5, _ts(waypointRecording), p1, _fv(p2), _fv(p3), p4);
};

/**
 * VEHICLE_WAYPOINT_PLAYBACK_GET_IS_PAUSED
 *
 * @param {any} p0
 * @return {any}
 */
global.VehicleWaypointPlaybackGetIsPaused = function (p0) {
  return _in(0x4d6d30ab, 0x18b0b089, p0, _r);
};

/**
 * VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED
 *
 * @param {number} vehicle
 * @param {number} speed
 * @return {void}
 */
global.VehicleWaypointPlaybackOverrideSpeed = function (vehicle, speed) {
  return _in(0x121f0593, 0xe0a431d7, vehicle, _fv(speed));
};

/**
 * VEHICLE_WAYPOINT_PLAYBACK_PAUSE
 *
 * @param {number} vehicle
 * @return {void}
 */
global.VehicleWaypointPlaybackPause = function (vehicle) {
  return _in(0x8a4e6ac3, 0x73666bc5, vehicle);
};

/**
 * VEHICLE_WAYPOINT_PLAYBACK_RESUME
 *
 * @param {number} vehicle
 * @return {void}
 */
global.VehicleWaypointPlaybackResume = function (vehicle) {
  return _in(0xdc04fcaa, 0x7839d492, vehicle);
};

/**
 * VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED
 *
 * @param {number} vehicle
 * @return {void}
 */
global.VehicleWaypointPlaybackUseDefaultSpeed = function (vehicle) {
  return _in(0x5ceb25a7, 0xd2848963, vehicle);
};

/**
 * WAYPOINT_PLAYBACK_GET_IS_AIMING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.WaypointPlaybackGetIsAiming = function (ped) {
  return _in(0xd73a5d1f, 0x0325c71c, ped, _r);
};

/**
 * WAYPOINT_PLAYBACK_GET_IS_PAUSED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.WaypointPlaybackGetIsPaused = function (ped) {
  return _in(0x701375a7, 0xd43f01cb, ped, _r);
};

/**
 * WAYPOINT_PLAYBACK_GET_IS_SHOOTING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.WaypointPlaybackGetIsShooting = function (ped) {
  return _in(0xa5b94df8, 0xaf058f46, ped, _r);
};

/**
 * WAYPOINT_PLAYBACK_OVERRIDE_SPEED
 *
 * @param {number} ped
 * @param {number} speed
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.WaypointPlaybackOverrideSpeed = function (ped, speed, p2, p3, p4) {
  return _in(0x7d7d2b47, 0xfa788e85, ped, _fv(speed), p2, p3, p4);
};

/**
 * WAYPOINT_PLAYBACK_PAUSE
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.WaypointPlaybackPause = function (ped, p1, p2, p3) {
  return _in(0x0f342546, 0xaa06fed5, ped, p1, p2, p3);
};

/**
 * WAYPOINT_PLAYBACK_RESUME
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {number} p2
 * @param {number} p3
 * @return {void}
 */
global.WaypointPlaybackResume = function (ped, p1, p2, p3) {
  return _in(0x244f70c8, 0x4c547d2d, ped, p1, p2, p3);
};

/**
 * WAYPOINT_PLAYBACK_START_AIMING_AT_COORD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.WaypointPlaybackStartAimingAtCoord = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x8968400d, 0x900ed8b3, p0, p1, p2, p3, p4, p5);
};

/**
 * WAYPOINT_PLAYBACK_START_AIMING_AT_ENTITY
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.WaypointPlaybackStartAimingAtEntity = function (p0, p1, p2, p3) {
  return _in(0x4f158205, 0xe0c74385, p0, p1, p2, p3);
};

/**
 * WAYPOINT_PLAYBACK_START_AIMING_AT_PED
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.WaypointPlaybackStartAimingAtPed = function (p0, p1, p2, p3) {
  return _in(0x20e33093, 0x7c399d29, p0, p1, p2, p3);
};

/**
 * WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.WaypointPlaybackStartShootingAtCoord = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x057a25cf, 0xcc9db671, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * WAYPOINT_PLAYBACK_START_SHOOTING_AT_ENTITY
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.WaypointPlaybackStartShootingAtEntity = function (p0, p1, p2, p3, p4) {
  return _in(0x4af458f7, 0x1c1196d2, p0, p1, p2, p3, p4);
};

/**
 * WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.WaypointPlaybackStartShootingAtPed = function (p0, p1, p2, p3, p4) {
  return _in(0xe70ba7b9, 0x0f8390dc, p0, p1, p2, p3, p4);
};

/**
 * WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING
 *
 * @param {any} p0
 * @return {void}
 */
global.WaypointPlaybackStopAimingOrShooting = function (p0) {
  return _in(0x47efa040, 0xebb8e2ea, p0);
};

/**
 * WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED
 *
 * @param {number} ped
 * @return {void}
 */
global.WaypointPlaybackUseDefaultSpeed = function (ped) {
  return _in(0x6599d834, 0xb12d0800, ped);
};

/**
 * WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT
 *
 * @param {string | number} waypointRecording
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {[boolean, number]}
 */
global.WaypointRecordingGetClosestWaypoint = function (waypointRecording, x, y, z) {
  return _in(0xb629a298, 0x081f876f, _ts(waypointRecording), _fv(x), _fv(y), _fv(z), _i, _r);
};

/**
 * WAYPOINT_RECORDING_GET_COORD
 *
 * @param {string | number} waypointRecording
 * @param {number} point
 * @return {[boolean, Vector3]}
 */
global.WaypointRecordingGetCoord = function (waypointRecording, point) {
  return _in(0x2fb89740, 0x5c90b361, _ts(waypointRecording), point, _v, _r);
};

/**
 * WAYPOINT_RECORDING_GET_NUM_POINTS
 *
 * @param {string | number} waypointRecording
 * @return {[boolean, number]}
 */
global.WaypointRecordingGetNumPoints = function (waypointRecording) {
  return _in(0x5343532c, 0x01a07234, _ts(waypointRecording), _i, _r);
};

/**
 * WAYPOINT_RECORDING_GET_SPEED_AT_POINT
 *
 * @param {string | number} waypointRecording
 * @param {number} point
 * @return {number}
 */
global.WaypointRecordingGetSpeedAtPoint = function (waypointRecording, point) {
  return _in(0x005622ae, 0xbc33aca9, _ts(waypointRecording), point, _r, _rf);
};

/**
 * _0x0000A8ACDC2E1B6A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0000A8ACDC2E1B6A = function (p0, p1) {
  return _in(0x0000a8ac, 0xdc2e1b6a, p0, p1);
};

/**
 * _0x00FFE0F85253C572
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x00FFE0F85253C572 = function (p0) {
  return _in(0x00ffe0f8, 0x5253c572, p0, _r);
};

/**
 * _0x01AF8A3729231A43
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x01AF8A3729231A43 = function (p0) {
  return _in(0x01af8a37, 0x29231a43, p0, _r);
};

/**
 * _0x0365000D8BF86531
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x0365000D8BF86531 = function (p0) {
  return _in(0x0365000d, 0x8bf86531, p0, _r);
};

/**
 * _0x03D741CB4052E26C
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x03D741CB4052E26C = function (p0) {
  return _in(0x03d741cb, 0x4052e26c, p0, _r);
};

/**
 * _0x06ECF3925BC2ABAE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x06ECF3925BC2ABAE = function (p0, p1) {
  return _in(0x06ecf392, 0x5bc2abae, p0, p1);
};

/**
 * _0x098036CAB8373D36
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x098036CAB8373D36 = function (p0) {
  return _in(0x098036ca, 0xb8373d36, p0);
};

/**
 * _0x098CAA6DBE7D8D82
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x098CAA6DBE7D8D82 = function (p0, p1) {
  return _in(0x098caa6d, 0xbe7d8d82, p0, p1);
};

/**
 * _0x0A98A362C5A19A43
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x0A98A362C5A19A43 = function (p0) {
  return _in(0x0a98a362, 0xc5a19a43, p0, _r);
};

/**
 * _0x0D322AEF8878B8FE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0D322AEF8878B8FE = function (p0, p1) {
  return _in(0x0d322aef, 0x8878b8fe, p0, p1);
};

/**
 * _0x0E184495B27BB57D
 *

 * @return {void}
 */
global.N_0x0E184495B27BB57D = function () {
  return _in(0x0e184495, 0xb27bb57d);
};

/**
 * _0x0F4F6C4CE471259D
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0F4F6C4CE471259D = function (p0, p1) {
  return _in(0x0f4f6c4c, 0xe471259d, p0, p1);
};

/**
 * _0x0FE797DD9F70DFA6
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x0FE797DD9F70DFA6 = function (p0, p1, p2, p3) {
  return _in(0x0fe797dd, 0x9f70dfa6, p0, p1, p2, p3);
};

/**
 * _0x10ADFDF07B7DFFBA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x10ADFDF07B7DFFBA = function (p0, p1, p2) {
  return _in(0x10adfdf0, 0x7b7dffba, p0, p1, p2, _r);
};

/**
 * _0x10C44F633E2D6D9E
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x10C44F633E2D6D9E = function (p0) {
  return _in(0x10c44f63, 0x3e2d6d9e, p0);
};

/**
 * _0x11C7CE1AE38911B5
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x11C7CE1AE38911B5 = function (p0) {
  return _in(0x11c7ce1a, 0xe38911b5, p0, _r);
};

/**
 * _0x12990818C1D35886
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x12990818C1D35886 = function (p0, p1, p2) {
  return _in(0x12990818, 0xc1d35886, p0, p1, p2);
};

/**
 * _0x141BC64C8D7C5529
 *
 * @param {number} vehicle
 * @return {void}
 */
global.N_0x141BC64C8D7C5529 = function (vehicle) {
  return _in(0x141bc64c, 0x8d7c5529, vehicle);
};

/**
 * _0x152664AA3188B193
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {any}
 */
global.N_0x152664AA3188B193 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x152664aa, 0x3188b193, p0, p1, p2, p3, p4, p5, _r);
};

/**
 * _0x1632EB9386CDBE64
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x1632EB9386CDBE64 = function (p0, p1) {
  return _in(0x1632eb93, 0x86cdbe64, p0, p1);
};

/**
 * _0x19BC99C678FBA139
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x19BC99C678FBA139 = function (p0, p1, p2) {
  return _in(0x19bc99c6, 0x78fba139, p0, p1, p2);
};

/**
 * _0x1A7D63CB1B0BB223
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x1A7D63CB1B0BB223 = function (p0) {
  return _in(0x1a7d63cb, 0x1b0bb223, p0);
};

/**
 * _0x1AC5A8AB50CFAA33
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x1AC5A8AB50CFAA33 = function (p0) {
  return _in(0x1ac5a8ab, 0x50cfaa33, p0, _r);
};

/**
 * _0x1ACBC313966C21F3
 *
 * @param {number} scenario
 * @return {any}
 */
global.N_0x1ACBC313966C21F3 = function (scenario) {
  return _in(0x1acbc313, 0x966c21f3, scenario, _r);
};

/**
 * _0x1D125814EBC517EB
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x1D125814EBC517EB = function (p0, p1, p2, p3) {
  return _in(0x1d125814, 0xebc517eb, p0, p1, p2, p3);
};

/**
 * _0x1ECF56C040FD839C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x1ECF56C040FD839C = function (p0, p1) {
  return _in(0x1ecf56c0, 0x40fd839c, p0, p1);
};

/**
 * _0x1F298C7BD30D1240
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x1F298C7BD30D1240 = function (ped) {
  return _in(0x1f298c7b, 0xd30d1240, ped);
};

/**
 * _0x1F7A9A9C38C13A56
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x1F7A9A9C38C13A56 = function (p0) {
  return _in(0x1f7a9a9c, 0x38c13a56, p0, _r);
};

/**
 * _0x2064B33F6E6B92D4
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x2064B33F6E6B92D4 = function (p0, p1, p2, p3) {
  return _in(0x2064b33f, 0x6e6b92d4, p0, p1, p2, p3);
};

/**
 * _0x216343750545A486
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x216343750545A486 = function (p0, p1, p2) {
  return _in(0x21634375, 0x0545a486, p0, p1, p2);
};

/**
 * _0x22CD2C33ED4467A1
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x22CD2C33ED4467A1 = function (p0) {
  return _in(0x22cd2c33, 0xed4467a1, p0, _r);
};

/**
 * _0x22CDBF317C40A122
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x22CDBF317C40A122 = function (ped) {
  return _in(0x22cdbf31, 0x7c40a122, ped);
};

/**
 * _0x23767D80C7EED7C6
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x23767D80C7EED7C6 = function (p0, p1) {
  return _in(0x23767d80, 0xc7eed7c6, p0, p1);
};

/**
 * _0x2416EC2F31F75266
 *
 * @param {number} entity
 * @param {number} targetEntity
 * @param {number} duration
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x2416EC2F31F75266 = function (entity, targetEntity, duration, p3, p4) {
  return _in(0x2416ec2f, 0x31f75266, entity, targetEntity, duration, p3, p4);
};

/**
 * _0x244430C13BA5258E
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0x244430C13BA5258E = function (p0, p1, p2, p3) {
  return _in(0x244430c1, 0x3ba5258e, p0, p1, p2, p3, _r);
};

/**
 * _0x28EF780BDEA8A639
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x28EF780BDEA8A639 = function (ped, p1) {
  return _in(0x28ef780b, 0xdea8a639, ped, p1);
};

/**
 * _0x2948235DB2058E99
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x2948235DB2058E99 = function (p0, p1) {
  return _in(0x2948235d, 0xb2058e99, p0, p1);
};

/**
 * _0x2A10538D0A005E81
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x2A10538D0A005E81 = function (p0, p1) {
  return _in(0x2a10538d, 0x0a005e81, p0, p1);
};

/**
 * _0x2B8AF29A78024BD3
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x2B8AF29A78024BD3 = function (p0) {
  return _in(0x2b8af29a, 0x78024bd3, p0);
};

/**
 * _0x2C497BDEF897C6DF
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x2C497BDEF897C6DF = function (p0) {
  return _in(0x2c497bde, 0xf897c6df, p0, _r);
};

/**
 * _0x2D657B10F211C572
 *
 * @param {number} ped
 * @param {number} p1
 * @return {any}
 */
global.N_0x2D657B10F211C572 = function (ped, p1) {
  return _in(0x2d657b10, 0xf211c572, ped, _fv(p1), _r);
};

/**
 * _0x2E1D6D87346BB7D2
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x2E1D6D87346BB7D2 = function (p0, p1, p2, p3) {
  return _in(0x2e1d6d87, 0x346bb7d2, p0, p1, p2, p3);
};

/**
 * _0x2EB977293923C723
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x2EB977293923C723 = function (p0, p1) {
  return _in(0x2eb97729, 0x3923c723, p0, p1);
};

/**
 * _0x30146C25686B7836
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x30146C25686B7836 = function (p0, p1) {
  return _in(0x30146c25, 0x686b7836, p0, p1, _r);
};

/**
 * _0x30B391915538EBE2
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x30B391915538EBE2 = function (p0) {
  return _in(0x30b39191, 0x5538ebe2, p0);
};

/**
 * _0x31BB338F64D5C861
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x31BB338F64D5C861 = function (ped, p1) {
  return _in(0x31bb338f, 0x64d5c861, ped, p1);
};

/**
 * _0x351F74ED6177EBE7
 *

 * @return {any}
 */
global.N_0x351F74ED6177EBE7 = function () {
  return _in(0x351f74ed, 0x6177ebe7, _r);
};

/**
 * _0x358A1A751B335A11
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x358A1A751B335A11 = function (p0) {
  return _in(0x358a1a75, 0x1b335a11, p0);
};

/**
 * _0x370F57C47F68EBCA
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x370F57C47F68EBCA = function (p0) {
  return _in(0x370f57c4, 0x7f68ebca, p0, _r);
};

/**
 * _0x3ACC128510142B9D
 *
 * @param {string | number} waypointRecording
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.N_0x3ACC128510142B9D = function (waypointRecording, x, y, z) {
  return _in(0x3acc1285, 0x10142b9d, _ts(waypointRecording), _fv(x), _fv(y), _fv(z), _r, _rf);
};

/**
 * _0x3BBEECC5B8F35318
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3BBEECC5B8F35318 = function (p0, p1) {
  return _in(0x3bbeecc5, 0xb8f35318, p0, p1);
};

/**
 * _0x3F8387DB1B9F31B7
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x3F8387DB1B9F31B7 = function (p0, p1) {
  return _in(0x3f8387db, 0x1b9f31b7, p0, p1, _r);
};

/**
 * _0x3FEB770D8ED9047A
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x3FEB770D8ED9047A = function (p0) {
  return _in(0x3feb770d, 0x8ed9047a, p0, _r);
};

/**
 * _0x3FFCD7BBA074CC80
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {void}
 */
global.N_0x3FFCD7BBA074CC80 = function (ped, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0x3ffcd7bb, 0xa074cc80, ped, p1, p2, p3, p4, p5, p6, p7, p8);
};

/**
 * _0x41323F4E0C4AE94B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.N_0x41323F4E0C4AE94B = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x41323f4e, 0x0c4ae94b, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _0x4161648394262FDF
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x4161648394262FDF = function (p0, p1, p2, p3) {
  return _in(0x41616483, 0x94262fdf, p0, p1, p2, p3);
};

/**
 * _0x41D1331AFAD5A091
 * _SET_PED_*
 *
 * @param {number} ped
 * @param {number} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x41D1331AFAD5A091 = function (ped, p1, p2) {
  return _in(0x41d1331a, 0xfad5a091, ped, p1, p2);
};

/**
 * _0x42CFD8FD8CC8DC69
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x42CFD8FD8CC8DC69 = function (p0, p1) {
  return _in(0x42cfd8fd, 0x8cc8dc69, p0, p1);
};

/**
 * _0x450080DDEDB91258
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x450080DDEDB91258 = function (p0, p1) {
  return _in(0x450080dd, 0xedb91258, p0, p1);
};

/**
 * _0x4A7D73989F52EB37
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x4A7D73989F52EB37 = function (p0, p1) {
  return _in(0x4a7d7398, 0x9f52eb37, p0, p1);
};

/**
 * _0x4BA972D0E5AD8122
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x4BA972D0E5AD8122 = function (p0, p1) {
  return _in(0x4ba972d0, 0xe5ad8122, p0, p1);
};

/**
 * _0x4E806A395D43A458
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x4E806A395D43A458 = function (p0) {
  return _in(0x4e806a39, 0x5d43a458, p0);
};

/**
 * _0x4F57397388E1DFF8
 *

 * @return {void}
 */
global.N_0x4F57397388E1DFF8 = function () {
  return _in(0x4f573973, 0x88e1dff8);
};

/**
 * _0x508F5053E3F6F0C4
 * Only used in R* SP Scripts
 * Params: p4 = 1.0f - 30.0f
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p4
 * @return {boolean}
 */
global.N_0x508F5053E3F6F0C4 = function (ped, x, y, z, p4) {
  return _in(0x508f5053, 0xe3f6f0c4, ped, _fv(x), _fv(y), _fv(z), _fv(p4), _r);
};

/**
 * _0x50AA09A0DA64E73C
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.N_0x50AA09A0DA64E73C = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x50aa09a0, 0xda64e73c, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _0x517D01BF27B682D1
 *
 * @param {number} ped
 * @param {number} entity
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @return {void}
 */
global.N_0x517D01BF27B682D1 = function (ped, entity, p2, p3, p4, p5, p6) {
  return _in(0x517d01bf, 0x27b682d1, ped, entity, _fv(p2), _fv(p3), _fv(p4), _fv(p5), p6);
};

/**
 * _0x5217B7B6DB78E1F3
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x5217B7B6DB78E1F3 = function (p0, p1, p2, p3, p4) {
  return _in(0x5217b7b6, 0xdb78e1f3, p0, p1, p2, p3, p4);
};

/**
 * _0x583AE9AF9CEE0958
 *
 * @param {number} vehicle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {boolean}
 */
global.N_0x583AE9AF9CEE0958 = function (vehicle, x, y, z) {
  return _in(0x583ae9af, 0x9cee0958, vehicle, _fv(x), _fv(y), _fv(z), _r);
};

/**
 * _0x5952DFA38FA529FE
 *

 * @return {any}
 */
global.N_0x5952DFA38FA529FE = function () {
  return _in(0x5952dfa3, 0x8fa529fe, _r);
};

/**
 * _0x59872EA4CBD11C56
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {any}
 */
global.N_0x59872EA4CBD11C56 = function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0x59872ea4, 0xcbd11c56, p0, p1, p2, p3, p4, p5, p6, p7, p8, _r);
};

/**
 * _0x59AE5CA4FFB4E378
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x59AE5CA4FFB4E378 = function (p0, p1) {
  return _in(0x59ae5ca4, 0xffb4e378, p0, p1, _r);
};

/**
 * _0x59AEA4DC640814B9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x59AEA4DC640814B9 = function (p0, p1) {
  return _in(0x59aea4dc, 0x640814b9, p0, p1);
};

/**
 * _0x5B68D0007D9C92EB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x5B68D0007D9C92EB = function (p0, p1) {
  return _in(0x5b68d000, 0x7d9c92eb, p0, p1);
};

/**
 * _0x5D9B0BAAF04CF65B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x5D9B0BAAF04CF65B = function (p0, p1, p2, p3) {
  return _in(0x5d9b0baa, 0xf04cf65b, p0, p1, p2, p3);
};

/**
 * _0x5EA655F01D93667A
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x5EA655F01D93667A = function (p0) {
  return _in(0x5ea655f0, 0x1d93667a, p0, _r);
};

/**
 * _0x615DC4A82E90BB48
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x615DC4A82E90BB48 = function (p0, p1, p2) {
  return _in(0x615dc4a8, 0x2e90bb48, p0, p1, p2);
};

/**
 * _0x640A602946A8C972
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x640A602946A8C972 = function (p0) {
  return _in(0x640a6029, 0x46a8c972, p0, _r);
};

/**
 * _0x643FD1556F621772
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x643FD1556F621772 = function (p0, p1, p2) {
  return _in(0x643fd155, 0x6f621772, p0, p1, p2, _r);
};

/**
 * _0x651F0530083C0E5A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x651F0530083C0E5A = function (p0, p1) {
  return _in(0x651f0530, 0x083c0e5a, p0, p1);
};

/**
 * _0x65D281985F2BDFC2
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x65D281985F2BDFC2 = function (p0, p1) {
  return _in(0x65d28198, 0x5f2bdfc2, p0, p1);
};

/**
 * _0x673A8779D229BA5A
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0x673A8779D229BA5A = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x673a8779, 0xd229ba5a, p0, p1, p2, p3, p4, p5);
};

/**
 * _0x678D3226CF70B9C8
 * Only used in R* SP Script beat_washed_ashore
 * Returns Object prop for TASK::_TASK_ITEM_INTERACTION_2
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {number}
 */
global.N_0x678D3226CF70B9C8 = function (ped, p1) {
  return _in(0x678d3226, 0xcf70b9c8, ped, p1, _r, _ri);
};

/**
 * _0x6A1AF481407BF6E9
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6A1AF481407BF6E9 = function (p0) {
  return _in(0x6a1af481, 0x407bf6e9, p0);
};

/**
 * _0x6AFD84AEAA3EA538
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x6AFD84AEAA3EA538 = function (p0) {
  return _in(0x6afd84ae, 0xaa3ea538, p0, _r);
};

/**
 * _0x6AFDA2264925BD11
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6AFDA2264925BD11 = function (p0) {
  return _in(0x6afda226, 0x4925bd11, p0);
};

/**
 * _0x6BA606AB3A83BC4D
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x6BA606AB3A83BC4D = function (p0) {
  return _in(0x6ba606ab, 0x3a83bc4d, p0, _r);
};

/**
 * _0x6C269F673C47031E
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x6C269F673C47031E = function (p0) {
  return _in(0x6c269f67, 0x3c47031e, p0, _r);
};

/**
 * _0x6C50B9DCCCA70023
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x6C50B9DCCCA70023 = function (p0) {
  return _in(0x6c50b9dc, 0xcca70023, p0, _r);
};

/**
 * _0x6DAC799857EF3F11
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x6DAC799857EF3F11 = function (p0, p1) {
  return _in(0x6dac7998, 0x57ef3f11, p0, p1, _r);
};

/**
 * _0x722D6A49200174FE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x722D6A49200174FE = function (p0, p1, p2, p3, p4) {
  return _in(0x722d6a49, 0x200174fe, p0, p1, p2, p3, p4);
};

/**
 * _0x748D5E0D2A1A4C61
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x748D5E0D2A1A4C61 = function (p0, p1, p2) {
  return _in(0x748d5e0d, 0x2a1a4c61, p0, p1, p2);
};

/**
 * _0x74F0209674864CBD
 *

 * @return {any}
 */
global.N_0x74F0209674864CBD = function () {
  return _in(0x74f02096, 0x74864cbd, _r);
};

/**
 * _0x756C7B4C43DF0422
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x756C7B4C43DF0422 = function (p0) {
  return _in(0x756c7b4c, 0x43df0422, p0, _r);
};

/**
 * _0x764DB5A48390FBAD
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x764DB5A48390FBAD = function (p0, p1) {
  return _in(0x764db5a4, 0x8390fbad, p0, p1);
};

/**
 * _0x76610D12A838EBDE
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x76610D12A838EBDE = function (p0) {
  return _in(0x76610d12, 0xa838ebde, p0, _r);
};

/**
 * _0x78D8C1D4EB80C588
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x78D8C1D4EB80C588 = function (p0) {
  return _in(0x78d8c1d4, 0xeb80c588, p0, _r);
};

/**
 * _0x79197F7D2BB5E73A
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {any}
 */
global.N_0x79197F7D2BB5E73A = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x79197f7d, 0x2bb5e73a, p0, p1, p2, p3, p4, p5, _r);
};

/**
 * _0x7C015D8BCEC72CF4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x7C015D8BCEC72CF4 = function (p0, p1) {
  return _in(0x7c015d8b, 0xcec72cf4, p0, p1);
};

/**
 * _0x7CB99FADDE73CD1B
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x7CB99FADDE73CD1B = function (p0) {
  return _in(0x7cb99fad, 0xde73cd1b, p0, _r);
};

/**
 * _0x7FB78B2199C10E92
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x7FB78B2199C10E92 = function (p0) {
  return _in(0x7fb78b21, 0x99c10e92, p0);
};

/**
 * _0x801BD27403F3CBA0
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x801BD27403F3CBA0 = function (p0, p1, p2, p3) {
  return _in(0x801bd274, 0x03f3cba0, p0, p1, p2, p3);
};

/**
 * _0x816A3ACD265E2297
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x816A3ACD265E2297 = function (p0, p1) {
  return _in(0x816a3acd, 0x265e2297, p0, p1);
};

/**
 * _0x827A58CED9D4D5B4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x827A58CED9D4D5B4 = function (p0, p1) {
  return _in(0x827a58ce, 0xd9d4d5b4, p0, p1);
};

/**
 * _0x82ED59F095056550
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x82ED59F095056550 = function (p0, p1) {
  return _in(0x82ed59f0, 0x95056550, p0, p1);
};

/**
 * _0x849791EBBDBA0362
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x849791EBBDBA0362 = function (p0) {
  return _in(0x849791eb, 0xbdba0362, p0, _r);
};

/**
 * _0x865732725536EE39
 *
 * @param {any} p0
 * @return {Vector3}
 */
global.N_0x865732725536EE39 = function (p0) {
  return _in(0x86573272, 0x5536ee39, p0, _r, _rv);
};

/**
 * _0x8798CF6815B8FE0F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x8798CF6815B8FE0F = function (p0, p1) {
  return _in(0x8798cf68, 0x15b8fe0f, p0, p1);
};

/**
 * _0x885D19AC2B6FBFF4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x885D19AC2B6FBFF4 = function (p0, p1) {
  return _in(0x885d19ac, 0x2b6fbff4, p0, p1);
};

/**
 * _0x88FD60D846D9CD63
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0x88FD60D846D9CD63 = function (ped) {
  return _in(0x88fd60d8, 0x46d9cd63, ped);
};

/**
 * _0x8B1FDF63C3193EDA
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x8B1FDF63C3193EDA = function (ped, p1) {
  return _in(0x8b1fdf63, 0xc3193eda, ped, _fv(p1));
};

/**
 * _0x8BB283A7888AD1AD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x8BB283A7888AD1AD = function (p0, p1, p2) {
  return _in(0x8bb283a7, 0x888ad1ad, p0, p1, p2);
};

/**
 * _0x8E1DDE26D270CC5E
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x8E1DDE26D270CC5E = function (p0, p1) {
  return _in(0x8e1dde26, 0xd270cc5e, p0, p1);
};

/**
 * _0x8F8C84363810691A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x8F8C84363810691A = function (p0, p1) {
  return _in(0x8f8c8436, 0x3810691a, p0, p1);
};

/**
 * _0x9050DF2C53801208
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x9050DF2C53801208 = function (ped, p1) {
  return _in(0x9050df2c, 0x53801208, ped, _fv(p1));
};

/**
 * _0x90703A8F75EE4ABD
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x90703A8F75EE4ABD = function (p0, p1) {
  return _in(0x90703a8f, 0x75ee4abd, p0, p1, _r);
};

/**
 * _0x908BB14BCE85C80E
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x908BB14BCE85C80E = function (p0) {
  return _in(0x908bb14b, 0xce85c80e, p0, _r);
};

/**
 * _0x91CB5E431F579BA1
 *
 * @param {any} p0
 * @return {Vector3}
 */
global.N_0x91CB5E431F579BA1 = function (p0) {
  return _in(0x91cb5e43, 0x1f579ba1, p0, _r, _rv);
};

/**
 * _0x920684BE432875B1
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x920684BE432875B1 = function (p0) {
  return _in(0x920684be, 0x432875b1, p0, _r);
};

/**
 * _0x9420FB11B8D77948
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x9420FB11B8D77948 = function (p0) {
  return _in(0x9420fb11, 0xb8d77948, p0, _r);
};

/**
 * _0x954451EA2D2120FB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x954451EA2D2120FB = function (p0, p1) {
  return _in(0x954451ea, 0x2d2120fb, p0, p1);
};

/**
 * _0x9585FF23C4B8EDE0
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x9585FF23C4B8EDE0 = function (p0, p1) {
  return _in(0x9585ff23, 0xc4b8ede0, p0, p1);
};

/**
 * _0x9667CCE29BFA0780
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9667CCE29BFA0780 = function (p0) {
  return _in(0x9667cce2, 0x9bfa0780, p0);
};

/**
 * _0x974DA3408DEC4E79
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x974DA3408DEC4E79 = function (p0) {
  return _in(0x974da340, 0x8dec4e79, p0, _r);
};

/**
 * _0x9ADDBB9242179D56
 *
 * @param {number} object
 * @param {number} ped
 * @return {void}
 */
global.N_0x9ADDBB9242179D56 = function (object, ped) {
  return _in(0x9addbb92, 0x42179d56, object, ped);
};

/**
 * _0x9B6A58FDB0024F12
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x9B6A58FDB0024F12 = function (p0, p1) {
  return _in(0x9b6a58fd, 0xb0024f12, p0, p1);
};

/**
 * _0x9C8F42A5D1859DC1
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9C8F42A5D1859DC1 = function (p0) {
  return _in(0x9c8f42a5, 0xd1859dc1, p0);
};

/**
 * _0x9EBD34958AB6F824
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9EBD34958AB6F824 = function (p0) {
  return _in(0x9ebd3495, 0x8ab6f824, p0);
};

/**
 * _0x9FF5F9B24E870748
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x9FF5F9B24E870748 = function (p0) {
  return _in(0x9ff5f9b2, 0x4e870748, p0, _r);
};

/**
 * _0xA052608A12559BBB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA052608A12559BBB = function (p0, p1) {
  return _in(0xa052608a, 0x12559bbb, p0, p1);
};

/**
 * _0xA21AA2F0C2180125
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA21AA2F0C2180125 = function (p0, p1) {
  return _in(0xa21aa2f0, 0xc2180125, p0, p1);
};

/**
 * _0xA263ADBBC8056214
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA263ADBBC8056214 = function (p0, p1) {
  return _in(0xa263adbb, 0xc8056214, p0, p1);
};

/**
 * _0xA42DC7919159CCCF
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xA42DC7919159CCCF = function (p0) {
  return _in(0xa42dc791, 0x9159cccf, p0);
};

/**
 * _0xA6A76D666A281F2D
 *
 * @param {any} p0
 * @param {number} item
 * @return {void}
 */
global.N_0xA6A76D666A281F2D = function (p0, item) {
  return _in(0xa6a76d66, 0x6a281f2d, p0, _ch(item));
};

/**
 * _0xA7479FB665361EDB
 * _SET_SCENARIO_*
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA7479FB665361EDB = function (p0, p1) {
  return _in(0xa7479fb6, 0x65361edb, p0, p1);
};

/**
 * _0xA9E7672F8C6C6F74
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xA9E7672F8C6C6F74 = function (p0) {
  return _in(0xa9e7672f, 0x8c6c6f74, p0, _r);
};

/**
 * _0xAC5045AB7F1A34FD
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xAC5045AB7F1A34FD = function (p0) {
  return _in(0xac5045ab, 0x7f1a34fd, p0, _r);
};

/**
 * _0xADC45010BC17AF0E
 * _SET_SCENARIO_POINT_*
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xADC45010BC17AF0E = function (p0, p1) {
  return _in(0xadc45010, 0xbc17af0e, p0, p1);
};

/**
 * _0xAF2EF28CE3084505
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xAF2EF28CE3084505 = function (p0, p1, p2, p3) {
  return _in(0xaf2ef28c, 0xe3084505, p0, p1, p2, p3);
};

/**
 * _0xB2D15D3551FE4FAE
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xB2D15D3551FE4FAE = function (p0) {
  return _in(0xb2d15d35, 0x51fe4fae, p0);
};

/**
 * _0xB2F47A1AFDFCC595
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xB2F47A1AFDFCC595 = function (p0, p1) {
  return _in(0xb2f47a1a, 0xfdfcc595, p0, p1);
};

/**
 * _0xB35370D5353995CB
 *
 * @param {number} ped
 * @param {number} item
 * @param {number} p2
 * @return {void}
 */
global.N_0xB35370D5353995CB = function (ped, item, p2) {
  return _in(0xb35370d5, 0x353995cb, ped, _ch(item), _fv(p2));
};

/**
 * _0xB520DBDA7FCF573F
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xB520DBDA7FCF573F = function (ped) {
  return _in(0xb520dbda, 0x7fcf573f, ped, _r);
};

/**
 * _0xB79817DB31FF72B9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xB79817DB31FF72B9 = function (p0, p1) {
  return _in(0xb79817db, 0x31ff72b9, p0, p1);
};

/**
 * _0xB8E213D02F37947D
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.N_0xB8E213D02F37947D = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xb8e213d0, 0x2f37947d, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _0xB8E3486D107F4194
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xB8E3486D107F4194 = function (p0, p1) {
  return _in(0xb8e3486d, 0x107f4194, p0, p1);
};

/**
 * _0xB8F52A3F84A7CC59
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xB8F52A3F84A7CC59 = function (p0) {
  return _in(0xb8f52a3f, 0x84a7cc59, p0, _r);
};

/**
 * _0xBAAB791AA72C2821
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xBAAB791AA72C2821 = function (p0, p1) {
  return _in(0xbaab791a, 0xa72c2821, p0, p1);
};

/**
 * _0xBC3F847AE2C3DC65
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xBC3F847AE2C3DC65 = function (p0, p1) {
  return _in(0xbc3f847a, 0xe2c3dc65, p0, p1);
};

/**
 * _0xBD1C3C0F271C39D3
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xBD1C3C0F271C39D3 = function (p0, p1) {
  return _in(0xbd1c3c0f, 0x271c39d3, p0, p1);
};

/**
 * _0xBD70108D01875299
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xBD70108D01875299 = function (p0) {
  return _in(0xbd70108d, 0x01875299, p0, _r);
};

/**
 * _0xBEDBE39B5FD98FD6
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0xBEDBE39B5FD98FD6 = function (ped) {
  return _in(0xbedbe39b, 0x5fd98fd6, ped, _r);
};

/**
 * _0xBEEFBB608D2AA68A
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xBEEFBB608D2AA68A = function (p0) {
  return _in(0xbeefbb60, 0x8d2aa68a, p0);
};

/**
 * _0xC6170856E54557B2
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xC6170856E54557B2 = function (p0, p1, p2) {
  return _in(0xc6170856, 0xe54557b2, p0, p1, p2);
};

/**
 * _0xCE4E669400E5F8AA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xCE4E669400E5F8AA = function (p0, p1, p2, p3) {
  return _in(0xce4e6694, 0x00e5f8aa, p0, p1, p2, p3);
};

/**
 * _0xD0ABC4EA3B5E21A0
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xD0ABC4EA3B5E21A0 = function (p0, p1) {
  return _in(0xd0abc4ea, 0x3b5e21a0, p0, p1, _r);
};

/**
 * _0xD508FA229F1C4900
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {any}
 */
global.N_0xD508FA229F1C4900 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xd508fa22, 0x9f1c4900, p0, p1, p2, p3, p4, p5, _r);
};

/**
 * _0xD999E379265A4501
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xD999E379265A4501 = function (p0, p1, p2) {
  return _in(0xd999e379, 0x265a4501, p0, p1, p2);
};

/**
 * _0xDE0C8B145EA466FF
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0xDE0C8B145EA466FF = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xde0c8b14, 0x5ea466ff, p0, p1, p2, p3, p4, p5);
};

/**
 * _0xDF56A2B50C04DEA4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xDF56A2B50C04DEA4 = function (p0, p1) {
  return _in(0xdf56a2b5, 0x0c04dea4, p0, p1, _r);
};

/**
 * _0xDF94844D474F31E5
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xDF94844D474F31E5 = function (ped) {
  return _in(0xdf94844d, 0x474f31e5, ped);
};

/**
 * _0xE01C8DC8EDD28D31
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE01C8DC8EDD28D31 = function (p0, p1) {
  return _in(0xe01c8dc8, 0xedd28d31, p0, p1);
};

/**
 * _0xE01F55B2896F6B37
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE01F55B2896F6B37 = function (p0, p1) {
  return _in(0xe01f55b2, 0x896f6b37, p0, p1);
};

/**
 * _0xE05A5D39BE6E93AF
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE05A5D39BE6E93AF = function (p0) {
  return _in(0xe05a5d39, 0xbe6e93af, p0);
};

/**
 * _0xE116F6F2DA2D777E
 *
 * @param {any} p0
 * @return {Vector3}
 */
global.N_0xE116F6F2DA2D777E = function (p0) {
  return _in(0xe116f6f2, 0xda2d777e, p0, _r, _rv);
};

/**
 * _0xE1C105E6BBA48270
 *

 * @return {any}
 */
global.N_0xE1C105E6BBA48270 = function () {
  return _in(0xe1c105e6, 0xbba48270, _r);
};

/**
 * _0xE2CF104ADD49D4BF
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE2CF104ADD49D4BF = function (p0) {
  return _in(0xe2cf104a, 0xdd49d4bf, p0);
};

/**
 * _0xE55478C5EDF70AC2
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xE55478C5EDF70AC2 = function (p0) {
  return _in(0xe55478c5, 0xedf70ac2, p0, _r);
};

/**
 * _0xE5831AA1E2FD147C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE5831AA1E2FD147C = function (p0) {
  return _in(0xe5831aa1, 0xe2fd147c, p0);
};

/**
 * _0xE62754D09354F6CF
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xE62754D09354F6CF = function (p0) {
  return _in(0xe62754d0, 0x9354f6cf, p0, _r);
};

/**
 * _0xE69FDA40AAC3EFC0
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE69FDA40AAC3EFC0 = function (p0, p1) {
  return _in(0xe69fda40, 0xaac3efc0, p0, p1);
};

/**
 * _0xE6A151364C600B24
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xE6A151364C600B24 = function (p0) {
  return _in(0xe6a15136, 0x4c600b24, p0, _r);
};

/**
 * _0xE7BBC4E56B989449
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xE7BBC4E56B989449 = function (p0, p1, p2) {
  return _in(0xe7bbc4e5, 0x6b989449, p0, p1, p2, _r);
};

/**
 * _0xE9225354FB7437A7
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xE9225354FB7437A7 = function (p0, p1) {
  return _in(0xe9225354, 0xfb7437a7, p0, p1);
};

/**
 * _0xE9A6400D1A0E7A55
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xE9A6400D1A0E7A55 = function (p0) {
  return _in(0xe9a6400d, 0x1a0e7a55, p0, _r);
};

/**
 * _0xEAF87DA2BE78A15B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xEAF87DA2BE78A15B = function (p0, p1) {
  return _in(0xeaf87da2, 0xbe78a15b, p0, p1);
};

/**
 * _0xEB67D4E056C85A81
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xEB67D4E056C85A81 = function (p0) {
  return _in(0xeb67d4e0, 0x56c85a81, p0, _r);
};

/**
 * _0xEBA2081E0A5F4D17
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xEBA2081E0A5F4D17 = function (p0) {
  return _in(0xeba2081e, 0x0a5f4d17, p0);
};

/**
 * _0xEC516FE805D2CB2D
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xEC516FE805D2CB2D = function (p0) {
  return _in(0xec516fe8, 0x05d2cb2d, p0);
};

/**
 * _0xEFD875C2791EBEFD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0xEFD875C2791EBEFD = function (p0, p1, p2, p3) {
  return _in(0xefd875c2, 0x791ebefd, p0, p1, p2, p3, _r);
};

/**
 * _0xF3C3503276F4A034
 *
 * @param {number} entity
 * @param {any} p1
 * @return {void}
 */
global.N_0xF3C3503276F4A034 = function (entity, p1) {
  return _in(0xf3c35032, 0x76f4a034, entity, p1);
};

/**
 * _0xF40A109B4B79A848
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xF40A109B4B79A848 = function (p0, p1, p2) {
  return _in(0xf40a109b, 0x4b79a848, p0, p1, p2);
};

/**
 * _0xF718931A82EEB898
 *

 * @return {void}
 */
global.N_0xF718931A82EEB898 = function () {
  return _in(0xf718931a, 0x82eeb898);
};

/**
 * _0xF948F4356F010F11
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xF948F4356F010F11 = function (p0, p1, p2) {
  return _in(0xf948f435, 0x6f010f11, p0, p1, p2);
};

/**
 * _0xF97F462779B31786
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xF97F462779B31786 = function (p0) {
  return _in(0xf97f4627, 0x79b31786, p0, _r);
};

/**
 * _0xFA30E2254461ADEB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xFA30E2254461ADEB = function (p0, p1) {
  return _in(0xfa30e225, 0x4461adeb, p0, p1);
};

/**
 * _0xFC7F71CF49F70B6B
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xFC7F71CF49F70B6B = function (p0) {
  return _in(0xfc7f71cf, 0x49f70b6b, p0);
};

/**
 * _0xFDECCA06E8B81346
 *
 * @param {number} ped
 * @return {any}
 */
global.N_0xFDECCA06E8B81346 = function (ped) {
  return _in(0xfdecca06, 0xe8b81346, ped, _r);
};

/**
 * _0xFE5D28B9B7837CC1
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0xFE5D28B9B7837CC1 = function (p0, p1, p2, p3) {
  return _in(0xfe5d28b9, 0xb7837cc1, p0, p1, p2, p3, _r);
};

/**
 * _0xFF745B0346E19E2C
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xFF745B0346E19E2C = function (p0) {
  return _in(0xff745b03, 0x46e19e2c, p0);
};

/**
 * _0xFF8AFCA532B500D4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xFF8AFCA532B500D4 = function (p0, p1) {
  return _in(0xff8afca5, 0x32b500d4, p0, p1);
};

/**
 * _0xFFB520A3E16F7B7B
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0xFFB520A3E16F7B7B = function (ped, p1) {
  return _in(0xffb520a3, 0xe16f7b7b, ped, _fv(p1));
};

/**
 * _ADD_COVER_BLOCKING_VOLUME
 *
 * @param {number} volume
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {void}
 */
global.AddCoverBlockingVolume = function (volume, p1, p2, p3, p4) {
  return _in(0xeb2ed1dc, 0x3aec0654, volume, p1, p2, p3, p4);
};

/**
 * _ADD_FLEE_TARGET_COORDS
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p4
 * @return {void}
 */
global.AddFleeTargetCoords = function (ped, x, y, z, p4) {
  return _in(0xe8f1a5b4, 0xced3725a, ped, _fv(x), _fv(y), _fv(z), _fv(p4));
};

/**
 * _ASSOCIATE_PROP_WITH_SCENARIO
 *
 * @param {number} scenario
 * @param {number} entity
 * @param {string | number} propName
 * @param {boolean} p3
 * @return {boolean}
 */
global.AssociatePropWithScenario = function (scenario, entity, propName, p3) {
  return _in(0x8360c473, 0x80b6f351, scenario, entity, _ts(propName), p3, _r);
};

/**
 * _CREATE_HERB_COMPOSITES
 * groundSetting: 0: spawn on ground, 2 (1?): do not spawn on ground
 * p7: -1 in R* Scripts
 * Returns compositeId
 *
 * @param {number} asset
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {number} groundSetting
 * @param {DataView} p6
 * @param {number} p7
 * @return {number}
 */
global.CreateHerbComposites = function (asset, x, y, z, heading, groundSetting, p6, p7) {
  return _in(0x5b4bbe80, 0xad5972dc, _ch(asset), _fv(x), _fv(y), _fv(z), _fv(heading), groundSetting, p6, p7, _r, _ri);
};

/**
 * _CREATE_WAYPOINT_PATH
 *
 * @param {string | number} pathName
 * @param {DataView} p1
 * @param {number} nodes
 * @param {number} p3
 * @return {boolean}
 */
global.CreateWaypointPath = function (pathName, p1, nodes, p3) {
  return _in(0x5c885e09, 0x78b6ad60, _ts(pathName), p1, nodes, p3, _r);
};

/**
 * _CUFF_PED
 *
 * @param {number} ped
 * @return {void}
 */
global.CuffPed = function (ped) {
  return _in(0x7981037a, 0x96e7d174, ped);
};

/**
 * _DELETE_PATCH_OBJECTS_FROM_HERB_COMPOSITES
 * Params: p1 is always false except in script nb_egg_protector
 *
 * @param {number} compositeId
 * @param {boolean} p1
 * @return {void}
 */
global.DeletePatchObjectsFromHerbComposites = function (compositeId, p1) {
  return _in(0x5758b1ee, 0x0c3fd4ac, compositeId, p1);
};

/**
 * _DELETE_SCENARIO_POINT
 *
 * @param {number} scenario
 * @return {void}
 */
global.DeleteScenarioPoint = function (scenario) {
  return _in(0x81948dfe, 0x4f5a0283, scenario);
};

/**
 * _DETACH_CARRIABLE_PED
 *
 * @param {number} ped
 * @return {void}
 */
global.DetachCarriablePed = function (ped) {
  return _in(0x36d188ae, 0xcb26094b, ped);
};

/**
 * _DISASSOCIATE_PROP_FROM_SCENARIO
 *
 * @param {number} scenario
 * @param {string | number} propName
 * @return {boolean}
 */
global.DisassociatePropFromScenario = function (scenario, propName) {
  return _in(0x6ef4e31b, 0x4d5d2da0, scenario, _ts(propName), _r);
};

/**
 * _DOES_SCENARIO_GROUP_EXIST_HASH
 *
 * @param {number} scenarioGroup
 * @return {boolean}
 */
global.DoesScenarioGroupExistHash = function (scenarioGroup) {
  return _in(0x76e98b52, 0x369a289c, _ch(scenarioGroup), _r);
};

/**
 * _DOES_SCENARIO_POINT_HAVE_PROPS
 *
 * @param {number} scenario
 * @return {boolean}
 */
global.DoesScenarioPointHaveProps = function (scenario) {
  return _in(0xea31f199, 0xa73801d3, scenario, _r);
};

/**
 * _FIND_MODEL_FOR_ITEM
 *
 * @param {number} item
 * @return {number}
 */
global.FindModelForItem = function (item) {
  return _in(0xe47dd64b, 0x9f02677d, _ch(item), _r, _ri);
};

/**
 * _GET_HERB_COMPOSITE_NUM_ENTITIES
 * Flowers, Stalks or whatever the composite has
 *
 * @param {number} compositeId
 * @param {DataView} outEntities
 * @return {number}
 */
global.GetHerbCompositeNumEntities = function (compositeId, outEntities) {
  return _in(0x96c6ed22, 0xfb742c3e, compositeId, outEntities, _r, _ri);
};

/**
 * _GET_HOGTIE_ESCAPE_TIMER
 *
 * @param {number} ped
 * @return {number}
 */
global.GetHogtieEscapeTimer = function (ped) {
  return _in(0x4687e69d, 0x258bbe41, ped, _r, _rf);
};

/**
 * _GET_ITEM_INTERACTION_ENTITY_FROM_PED
 * item hashes: PRIMARYITEM, P_MUGCOFFEE01X_PH_R_HAND, P_BOTTLEBEER01X_PH_R_HAND
 * http://prntscr.com/1qtp3bz
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
 *
 * @param {number} ped
 * @param {number} item
 * @return {number}
 */
global.GetItemInteractionEntityFromPed = function (ped, item) {
  return _in(0x05a0100e, 0xa714db68, ped, _ch(item), _r, _ri);
};

/**
 * _GET_LED_HORSE_FROM_PED
 *
 * @param {number} ped
 * @return {number}
 */
global.GetLedHorseFromPed = function (ped) {
  return _in(0xed1f514a, 0xf4732258, ped, _r, _ri);
};

/**
 * _GET_PED_IS_IGNORING_DEAD_BODIES
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetPedIsIgnoringDeadBodies = function (ped) {
  return _in(0x1948bbe5, 0x61a2375a, ped, _r);
};

/**
 * _GET_PED_USING_SCENARIO_POINT
 *
 * @param {number} scenario
 * @return {number}
 */
global.GetPedUsingScenarioPoint = function (scenario) {
  return _in(0x5ba65995, 0x5369b0e2, scenario, _r, _ri);
};

/**
 * _GET_SCENARIO_CONTAINER_OPENING_STATE
 * Returns m_eContainerState
 *
 * @param {number} entity
 * @return {boolean}
 */
global.GetScenarioContainerOpeningState = function (entity) {
  return _in(0xb219612b, 0x5568e9ec, entity, _r);
};

/**
 * _GET_SCENARIO_POINT_COORDS
 * Params: p1 is always true in R* Scripts
 *
 * @param {number} scenario
 * @param {boolean} p1
 * @return {Vector3}
 */
global.GetScenarioPointCoords = function (scenario, p1) {
  return _in(0xa8452dd3, 0x21607029, scenario, p1, _r, _rv);
};

/**
 * _GET_SCENARIO_POINT_ENTITY
 * Note: The current name for this native is the old name of 0x295514F198EFD0CA
 * Old name for this native: _GET_ENTITY_SCENARIO_POINT_IS_ATTACHED_TO
 *
 * @param {number} scenario
 * @return {number}
 */
global.GetScenarioPointEntity = function (scenario) {
  return _in(0x7467165e, 0xe97d3c68, scenario, _r, _ri);
};

/**
 * _GET_SCENARIO_POINT_HEADING
 * Params: p1 is always true in R* Scripts
 *
 * @param {number} scenario
 * @param {boolean} p1
 * @return {number}
 */
global.GetScenarioPointHeading = function (scenario, p1) {
  return _in(0xb93ea718, 0x4baa85c3, scenario, p1, _r, _rf);
};

/**
 * _GET_SCENARIO_POINT_PED_IS_USING
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {number}
 */
global.GetScenarioPointPedIsUsing = function (ped, p1) {
  return _in(0xdf799335, 0x6f52359a, ped, p1, _r, _ri);
};

/**
 * _GET_SCENARIO_POINT_RADIUS
 *
 * @param {number} scenario
 * @return {number}
 */
global.GetScenarioPointRadius = function (scenario) {
  return _in(0x6718f403, 0x13a2b5a6, scenario, _r, _rf);
};

/**
 * _GET_SCENARIO_POINT_TYPE
 *
 * @param {number} scenario
 * @return {number}
 */
global.GetScenarioPointType = function (scenario) {
  return _in(0xa92450b5, 0xae687aaf, scenario, _r, _ri);
};

/**
 * _GET_SCENARIO_POINT_TYPE_PED_IS_USING
 *
 * @param {number} ped
 * @return {number}
 */
global.GetScenarioPointTypePedIsUsing = function (ped) {
  return _in(0x2d0571bb, 0x55879da2, ped, _r, _ri);
};

/**
 * _GET_SCRIPT_TASK_ACTION_TIME
 *
 * @param {number} ped
 * @param {number} task
 * @return {number}
 */
global.GetScriptTaskActionTime = function (ped, task) {
  return _in(0xa710dc5d, 0x25f8b942, ped, _ch(task), _r, _rf);
};

/**
 * _GET_TASK_FISHING
 * Fishing Research: https://pastebin.com/NmK5ZLVs
 * Only used in R* Scripts fishing_core and av_fishing_river
 *
 * @param {number} ped
 * @param {DataView} p1
 * @return {boolean}
 */
global.GetTaskFishing = function (ped, p1) {
  return _in(0xf3735acd, 0x11acd500, ped, p1, _r);
};

/**
 * _GET_TASK_MOVE_NETWORK_ID
 * Returns hash of the underlying move network def, see move_networks.xml
 * https://alloc8or.re/rdr3/doc/misc/move_networks.txt
 *
 * @param {number} ped
 * @return {number}
 */
global.GetTaskMoveNetworkId = function (ped) {
  return _in(0xcacc2f9d, 0x994504b7, ped, _r, _ri);
};

/**
 * _GET_TASK_MOVE_NETWORK_PHASE_FLOAT
 *
 * @param {number} ped
 * @param {string | number} phaseName
 * @return {number}
 */
global.GetTaskMoveNetworkPhaseFloat = function (ped, phaseName) {
  return _in(0x844ceee4, 0x28ea35b0, ped, _ts(phaseName), _r, _rf);
};

/**
 * _IS_HAT_BEING_PICKED_UP
 * Returns true while a hat is being picked up
 * _IS_A* - _IS_D*
 *
 * @param {number} hatObject
 * @return {boolean}
 */
global.IsHatBeingPickedUp = function (hatObject) {
  return _in(0x11cd066f, 0x54da0133, hatObject, _r);
};

/**
 * _IS_HAT_BEING_PICKED_UP_2
 * Returns true while a hat is being picked up. Similar to 0x11CD066F54DA0133
 * _IS_A* - _IS_D*
 *
 * @param {number} hatObject
 * @return {boolean}
 */
global.IsHatBeingPickedUp_2 = function (hatObject) {
  return _in(0x4eccc281, 0x5ca79ae2, hatObject, _r);
};

/**
 * _IS_PED_ARRESTING_ANY_PED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedArrestingAnyPed = function (ped) {
  return _in(0xa9cc7856, 0xd52dbd25, ped, _r);
};

/**
 * _IS_PED_DUELLING
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedDuelling = function (ped) {
  return _in(0xc8b29d18, 0x022ea2b7, ped, _r);
};

/**
 * _IS_PED_LEADING_HORSE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedLeadingHorse = function (ped) {
  return _in(0xefc4303d, 0xdc6e60d3, ped, _r);
};

/**
 * _IS_SCENARIO_GROUP_ENABLED_HASH
 *
 * @param {number} scenarioGroup
 * @return {boolean}
 */
global.IsScenarioGroupEnabledHash = function (scenarioGroup) {
  return _in(0xdcc37491, 0x3de6aaa6, _ch(scenarioGroup), _r);
};

/**
 * _IS_SCENARIO_POINT_ACTIVE
 *
 * @param {number} scenario
 * @return {boolean}
 */
global.IsScenarioPointActive = function (scenario) {
  return _in(0x0cc36d41, 0x56006509, scenario, _r);
};

/**
 * _IS_SCENARIO_POINT_FLAG_SET
 *
 * @param {number} scenario
 * @param {number} flag
 * @return {boolean}
 */
global.IsScenarioPointFlagSet = function (scenario, flag) {
  return _in(0x8569c38d, 0x2fb80650, scenario, flag, _r);
};

/**
 * _MAKE_OBJECT_CARRIABLE
 *
 * @param {number} object
 * @return {void}
 */
global.MakeObjectCarriable = function (object) {
  return _in(0x78b4567e, 0x18b54480, object);
};

/**
 * _PED_FISHINGROD_HOOK_ENTITY
 *
 * @param {number} ped
 * @param {number} entity
 * @return {void}
 */
global.PedFishingrodHookEntity = function (ped, entity) {
  return _in(0x1a52076d, 0x26e09004, ped, entity);
};

/**
 * _PED_FISHINGROD_HOOK_OBJECT
 * Used with 'P_BODYPARTARMFLOAT02X' model in fishing_core.c
 *
 * @param {number} ped
 * @param {number} object
 * @return {void}
 */
global.PedFishingrodHookObject = function (ped, object) {
  return _in(0xce71c2f9, 0xbaa3f975, ped, object);
};

/**
 * _PED_IS_IN_SCENARIO_BASE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.PedIsInScenarioBase = function (ped) {
  return _in(0x02ebbb39, 0x89b7e695, ped, _r);
};

/**
 * _REQUEST_HERB_COMPOSITE_ASSET
 * https://github.com/femga/rdr3_discoveries/tree/master/objects/composites
 *
 * @param {number} asset
 * @return {boolean}
 */
global.RequestHerbCompositeAsset = function (asset) {
  return _in(0x73f0d032, 0x7bfa0812, _ch(asset), _r);
};

/**
 * _RESET_SCENARIO_FOR_ENTITY
 *
 * @param {number} scenario
 * @param {number} entity
 * @return {void}
 */
global.ResetScenarioForEntity = function (scenario, entity) {
  return _in(0x2e20878f, 0xd208a68e, scenario, entity);
};

/**
 * _RESET_SCENARIO_SCRIPT
 *
 * @param {number} scenario
 * @return {void}
 */
global.ResetScenarioScript = function (scenario) {
  return _in(0x5a40040b, 0xb5ae3ea2, scenario);
};

/**
 * _SET_FISHING_BAIT
 * Baits: p_fishHook02x, p_baitBread01x, p_baitCorn01x, p_baitCheese01x, p_baitWorm01x, p_baitCricket01x, p_crawdad01x, p_finisheDragonfly01x, p_finisdFishlure01x, p_finishdCrawd01x, p_finisheDragonflyLegendary01x, p_finisdFishlureLegendary01x, p_finishdCrawdLegendary01x, p_lgoc_spinner_v4
 *
 * @param {number} ped
 * @param {string | number} bait
 * @param {boolean} withoutBuoy
 * @param {boolean} instantly
 * @return {void}
 */
global.SetFishingBait = function (ped, bait, withoutBuoy, instantly) {
  return _in(0x9b0c7fa0, 0x63e67629, ped, _ts(bait), withoutBuoy, instantly);
};

/**
 * _SET_HOGTIE_ESCAPE_TIMER
 * Sets the time it takes for a hogtied ped to escape
 * -1.0f for ped to never escape
 *
 * @param {number} ped
 * @param {number} time
 * @return {void}
 */
global.SetHogtieEscapeTimer = function (ped, time) {
  return _in(0xab591ae6, 0xb48b913e, ped, _fv(time));
};

/**
 * _SET_PED_CLEAR_AIMING_IN_THE_AIR
 *
 * @param {number} ped
 * @param {any} p1
 * @return {void}
 */
global.SetPedClearAimingInTheAir = function (ped, p1) {
  return _in(0x34c00101, 0x88d7c54a, ped, p1);
};

/**
 * _SET_PED_IGNORE_DEAD_BODIES
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedIgnoreDeadBodies = function (ped, toggle) {
  return _in(0x013a7ba5, 0x015c1372, ped, toggle);
};

/**
 * _SET_PED_PATH_LADDER_COST_MODIFIER
 * _SET_PED_PATH_P*
 *
 * @param {number} ped
 * @param {number} modifier
 * @return {void}
 */
global.SetPedPathLadderCostModifier = function (ped, modifier) {
  return _in(0x70f7a1ea, 0xb1ae3aa8, ped, _fv(modifier));
};

/**
 * _SET_PED_PATH_MAY_ENTER_DEEP_WATER
 *
 * @param {number} ped
 * @param {boolean} mayEnterDeepWater
 * @return {void}
 */
global.SetPedPathMayEnterDeepWater = function (ped, mayEnterDeepWater) {
  return _in(0x9de63896, 0xb176ea94, ped, mayEnterDeepWater);
};

/**
 * _SET_SCENARIO_CONTAINER_OPENING_STATE
 * Opens/closes containers: ChestDugUp
 *
 * @param {number} entity
 * @param {boolean} open
 * @return {void}
 */
global.SetScenarioContainerOpeningState = function (entity, open) {
  return _in(0x188f8071, 0xf244b9b8, entity, open);
};

/**
 * _SET_SCENARIO_GROUP_ENABLED_HASH
 *
 * @param {number} scenarioGroup
 * @param {boolean} toggle
 * @return {void}
 */
global.SetScenarioGroupEnabledHash = function (scenarioGroup, toggle) {
  return _in(0x9925eddb, 0x6eab88cd, _ch(scenarioGroup), toggle);
};

/**
 * _SET_SCENARIO_POINT_ACTIVE
 *
 * @param {number} scenario
 * @param {boolean} active
 * @return {void}
 */
global.SetScenarioPointActive = function (scenario, active) {
  return _in(0xeee48293, 0x04f93eee, scenario, active);
};

/**
 * _SET_SCENARIO_POINT_COORDS
 *
 * @param {number} scenario
 * @param {number} xPos
 * @param {number} yPos
 * @param {number} zPos
 * @param {boolean} p4
 * @return {void}
 */
global.SetScenarioPointCoords = function (scenario, xPos, yPos, zPos, p4) {
  return _in(0x2056ab38, 0xdf06825c, scenario, _fv(xPos), _fv(yPos), _fv(zPos), p4);
};

/**
 * _SET_SCENARIO_POINT_FLAG
 * flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CScenarioPointFlags__Flags
 *
 * @param {number} scenario
 * @param {number} flag
 * @param {boolean} value
 * @return {void}
 */
global.SetScenarioPointFlag = function (scenario, flag, value) {
  return _in(0x5af19b6c, 0xc2115d34, scenario, flag, value);
};

/**
 * _SET_SCENARIO_POINT_HEADING
 *
 * @param {number} scenario
 * @param {number} heading
 * @param {boolean} p2
 * @return {void}
 */
global.SetScenarioPointHeading = function (scenario, heading, p2) {
  return _in(0xd3a0da8f, 0x91612c6e, scenario, _fv(heading), p2);
};

/**
 * _SET_SCENARIO_POINT_RADIUS
 *
 * @param {number} scenario
 * @param {number} radius
 * @return {void}
 */
global.SetScenarioPointRadius = function (scenario, radius) {
  return _in(0xc47d9080, 0xa9a8856a, scenario, _fv(radius));
};

/**
 * _SET_SCENARIO_TYPE_ENABLED_HASH
 *
 * @param {number} scenarioType
 * @param {boolean} toggle
 * @return {void}
 */
global.SetScenarioTypeEnabledHash = function (scenarioType, toggle) {
  return _in(0xd00e50e6, 0x73802d71, _ch(scenarioType), toggle);
};

/**
 * _SET_TASK_FISHING
 * Only used in R* Scripts fishing_core and av_fishing_river
 *
 * @param {number} ped
 * @param {DataView} p1
 * @return {boolean}
 */
global.SetTaskFishing = function (ped, p1) {
  return _in(0xf3735acd, 0x11acd501, ped, p1, _r);
};

/**
 * _SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_2
 *
 * @param {number} ped
 * @param {string | number} signalName
 * @param {number} value
 * @return {void}
 */
global.SetTaskMoveNetworkSignalFloat_2 = function (ped, signalName, value) {
  return _in(0x099d4a85, 0x5d53b03b, ped, _ts(signalName), _fv(value));
};

/**
 * _SET_TASK_MOVE_NETWORK_SIGNAL_VECTOR
 *
 * @param {number} ped
 * @param {string | number} signalName
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.SetTaskMoveNetworkSignalVector = function (ped, signalName, x, y, z) {
  return _in(0x4662bfe0, 0x1938d98d, ped, _ts(signalName), _fv(x), _fv(y), _fv(z));
};

/**
 * _TASK_ANIMAL_BLEED_OUT
 *
 * @param {number} ped
 * @param {number} killer
 * @param {boolean} p2
 * @param {number} weaponHash
 * @param {number} p4
 * @param {number} p5
 * @return {void}
 */
global.TaskAnimalBleedOut = function (ped, killer, p2, weaponHash, p4, p5) {
  return _in(0x30a768c3, 0x0d385ec5, ped, killer, p2, _ch(weaponHash), p4, p5);
};

/**
 * _TASK_BOARD_VEHICLE
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.TaskBoardVehicle = function (ped, vehicle, p2, p3, p4, p5) {
  return _in(0xe53d17ad, 0x837cbf7c, ped, vehicle, p2, p3, p4, p5);
};

/**
 * _TASK_BOARD_VEHICLE_2
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {number} p3
 * @param {number} flags
 * @return {void}
 */
global.TaskBoardVehicle_2 = function (ped, p1, p2, p3, flags) {
  return _in(0xe41a09c8, 0xddff7aa4, ped, p1, p2, _fv(p3), flags);
};

/**
 * _TASK_CLIMB_2
 *
 * @param {number} ped
 * @param {number} heading
 * @return {void}
 */
global.TaskClimb_2 = function (ped, heading) {
  return _in(0xdf1d85bc, 0xaf60d537, ped, _fv(heading));
};

/**
 * _TASK_COMBAT_PED_3
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.TaskCombatPed_3 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xc624414f, 0xa748b9ba, p0, p1, p2, p3, p4, p5);
};

/**
 * _TASK_CUT_FREE_HOGTIED_TARGET_PED
 *
 * @param {number} ped
 * @param {number} targetPed
 * @return {void}
 */
global.TaskCutFreeHogtiedTargetPed = function (ped, targetPed) {
  return _in(0x81d16c4f, 0xf3a77adf, ped, targetPed);
};

/**
 * _TASK_CUT_FREE_HOGTIED_TARGET_PED_2
 *
 * @param {number} ped
 * @param {number} targetPed
 * @param {number} p2
 * @return {void}
 */
global.TaskCutFreeHogtiedTargetPed_2 = function (ped, targetPed, p2) {
  return _in(0x525421a5, 0x07216084, ped, targetPed, _fv(p2));
};

/**
 * _TASK_DISEMBARK_VEHICLE
 *
 * @param {any} p0
 * @param {number} vehicle
 * @param {number} p2
 * @param {any} p3
 * @param {number} p4
 * @param {any} p5
 * @return {void}
 */
global.TaskDisembarkVehicle = function (p0, vehicle, p2, p3, p4, p5) {
  return _in(0xa7c6854b, 0xb5a4192a, p0, vehicle, p2, p3, _fv(p4), p5);
};

/**
 * _TASK_EMOTE_OUTRO
 *
 * @param {number} ped
 * @return {void}
 */
global.TaskEmoteOutro = function (ped) {
  return _in(0xbdfeeb76, 0x00bcd938, ped);
};

/**
 * _TASK_EQUIP_HAT
 * _A*
 *
 * @param {number} hatObject
 * @param {number} ped
 * @return {void}
 */
global.TaskEquipHat = function (hatObject, ped) {
  return _in(0xaa0af602, 0x5160243a, hatObject, ped);
};

/**
 * _TASK_FLEE_FROM_COORD
 * fleeType: see TASK_FLEE_COORD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @return {void}
 */
global.TaskFleeFromCoord = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
  return _in(0x6879ff20, 0x8ed87f2a, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
};

/**
 * _TASK_FLEE_FROM_PED
 * fleeType: see TASK_FLEE_COORD
 *
 * @param {number} ped
 * @param {number} fleeFromTarget
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} distance
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {number} targetPed
 * @return {void}
 */
global.TaskFleeFromPed = function (ped, fleeFromTarget, x, y, z, distance, p6, p7, p8, targetPed) {
  return _in(0x7b74d8ee, 0xde9b5727, ped, fleeFromTarget, _fv(x), _fv(y), _fv(z), _fv(distance), p6, p7, _fv(p8), targetPed);
};

/**
 * _TASK_GUARD_ASSIGNED_DEFENSIVE_AREA_2
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.TaskGuardAssignedDefensiveArea_2 = function (ped, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0x1fc9b339, 0x76bacd6c, ped, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * _TASK_INTIMIDATED
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {boolean}
 */
global.TaskIntimidated = function (p0, p1, p2, p3, p4) {
  return _in(0x648b75d4, 0x4930d6bd, p0, p1, p2, p3, p4, _r);
};

/**
 * _TASK_INTIMIDATED_2
 *
 * @param {number} victim
 * @param {number} attacker
 * @param {number} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @param {boolean} everyFrame
 * @param {boolean} p6
 * @param {boolean} p7
 * @param {number} flag
 * @return {boolean}
 */
global.TaskIntimidated_2 = function (victim, attacker, p2, p3, p4, everyFrame, p6, p7, flag) {
  return _in(0x933acc1a, 0x1771a288, victim, attacker, p2, p3, p4, everyFrame, p6, p7, flag, _r);
};

/**
 * _TASK_ITEM_INTERACTION_2
 *
 * @param {number} ped
 * @param {number} propNameGxt
 * @param {number} prop
 * @param {number} propId
 * @param {number} itemInteractionState
 * @param {number} p5
 * @param {any} p6
 * @param {number} p7
 * @return {void}
 */
global.TaskItemInteraction_2 = function (ped, propNameGxt, prop, propId, itemInteractionState, p5, p6, p7) {
  return _in(0x72f52aa2, 0xd2b172cc, ped, _ch(propNameGxt), prop, _ch(propId), _ch(itemInteractionState), p5, p6, _fv(p7));
};

/**
 * _TASK_ITEM_INTERACTION_3
 * Params: p3, p4, p5, p6: 0, 0, 0, -1.0f in R* Scripts
 *
 * @param {number} ped
 * @param {number} item
 * @param {DataView} guid
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {number} p6
 * @return {void}
 */
global.TaskItemInteraction_3 = function (ped, item, guid, p3, p4, p5, p6) {
  return _in(0xd61d5e1a, 0xd9876deb, ped, _ch(item), guid, p3, p4, p5, _fv(p6));
};

/**
 * _TASK_JUMP_2
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} entity
 * @return {void}
 */
global.TaskJump_2 = function (ped, x, y, z, entity) {
  return _in(0x91083103, 0x137d7254, ped, _fv(x), _fv(y), _fv(z), entity);
};

/**
 * _TASK_PATROL_2
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.TaskPatrol_2 = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0x964b06c8, 0x8e4c86db, p0, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * _TASK_PERFORM_SEQUENCE_2
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TaskPerformSequence_2 = function (p0, p1, p2, p3) {
  return _in(0x4fc0af86, 0x9d6e309d, p0, p1, p2, p3);
};

/**
 * _TASK_PLAY_EMOTE
 * Similar to 0xB31A277C1AC7B7FF but checks if the ped's inventory contains the specified emote kit.
 *
 * @param {number} ped
 * @param {number} emoteType
 * @param {number} playbackMode
 * @param {number} emote
 * @param {boolean} isSecondaryTask
 * @param {boolean} canBreakOut
 * @param {boolean} disableEarlyOutAnimTag
 * @param {boolean} ignoreInvalidMainTask
 * @param {boolean} destroyProps
 * @return {void}
 */
global.TaskPlayEmote = function (ped, emoteType, playbackMode, emote, isSecondaryTask, canBreakOut, disableEarlyOutAnimTag, ignoreInvalidMainTask, destroyProps) {
  return _in(0x884e3436, 0xcc1f41dd, ped, emoteType, playbackMode, _ch(emote), isSecondaryTask, canBreakOut, disableEarlyOutAnimTag, ignoreInvalidMainTask, destroyProps);
};

/**
 * _TASK_PUT_PED_DIRECTLY_INTO_COVER_FROM_COORDS
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} fromX
 * @param {number} fromY
 * @param {number} fromZ
 * @param {number} timeout
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @param {any} p13
 * @param {any} p14
 * @param {any} p15
 * @param {any} p16
 * @param {any} p17
 * @return {void}
 */
global.TaskPutPedDirectlyIntoCoverFromCoords = function (ped, x, y, z, fromX, fromY, fromZ, timeout, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17) {
  return _in(0xdf8a5855, 0xb9f9a97b, ped, _fv(x), _fv(y), _fv(z), _fv(fromX), _fv(fromY), _fv(fromZ), timeout, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17);
};

/**
 * _TASK_START_SCENARIO_IN_PLACE_2
 * Takes scenario point handle instead of hash
 *
 * @param {number} ped
 * @param {any} p1
 * @param {string | number} p2
 * @param {number} p3
 * @param {boolean} p4
 * @param {number} p5
 * @param {boolean} p6
 * @return {void}
 */
global.TaskStartScenarioInPlace_2 = function (ped, p1, p2, p3, p4, p5, p6) {
  return _in(0xa917e39f, 0x2cefd215, ped, p1, _ts(p2), p3, p4, _fv(p5), p6);
};

/**
 * _TASK_THROW_PROJECTILE_2
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TaskThrowProjectile_2 = function (p0, p1, p2, p3) {
  return _in(0x7282356d, 0xff6b5a51, p0, p1, p2, p3);
};

/**
 * _TASK_USE_NEAREST_SCENARIO_TO_COORD
 *
 * @param {number} ped
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} distance
 * @param {number} duration
 * @param {boolean} p6
 * @param {boolean} p7
 * @param {boolean} p8
 * @param {boolean} p9
 * @return {void}
 */
global.TaskUseNearestScenarioToCoord = function (ped, x, y, z, distance, duration, p6, p7, p8, p9) {
  return _in(0x322bfdea, 0x666e2b0e, ped, _fv(x), _fv(y), _fv(z), _fv(distance), duration, p6, p7, p8, p9);
};

/**
 * _TASK_USE_SCENARIO_POINT_2
 *
 * @param {number} ped
 * @param {number} ped2
 * @param {any} p2
 * @param {string | number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {boolean} p7
 * @return {void}
 */
global.TaskUseScenarioPoint_2 = function (ped, ped2, p2, p3, p4, p5, p6, p7) {
  return _in(0x0f664144, 0x9dd86fbe, ped, ped2, p2, _ts(p3), p4, _ch(p5), _fv(p6), p7);
};

/**
 * _TASK_VEHICLE_DRIVE_TO_COORD_2
 *
 * @param {number} ped
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {void}
 */
global.TaskVehicleDriveToCoord_2 = function (ped, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0xf0108f01, 0xfb105da2, ped, p1, p2, p3, p4, p5, p6, p7, p8);
};

/**
 * _TASK_VEHICLE_DRIVE_TO_DESTINATION_2
 * Tasks vehicle towards owner
 *
 * @param {number} vehicle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} speed
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @return {void}
 */
global.TaskVehicleDriveToDestination_2 = function (vehicle, x, y, z, speed, p5, p6, p7, p8) {
  return _in(0x391073b9, 0xd3cce2ba, vehicle, _fv(x), _fv(y), _fv(z), _fv(speed), p5, p6, _fv(p7), _fv(p8));
};

/**
 * _TASK_VEHICLE_DRIVE_TO_POINT_2
 * Params: p4 = 3.f or 8.f, p5 = 0.25f, p6 = 0 in R* Scripts
 *
 * @param {number} vehicle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p4
 * @param {number} p5
 * @param {any} p6
 * @return {void}
 */
global.TaskVehicleDriveToPoint_2 = function (vehicle, x, y, z, p4, p5, p6) {
  return _in(0x6524a898, 0x1e8be7c9, vehicle, _fv(x), _fv(y), _fv(z), _fv(p4), _fv(p5), p6);
};

/**
 * _TASK_VEHICLE_FLEE_ON_CLEANUP
 * Vehicle Auto Drive (?)
 * p1/p2/p3: usually 1f, 1f, 0f or 0f, 0f, 0f
 * Speed: usually 8f
 * Types: 1148979456 (task with flee), 1148979587 (dismissing the vehicle)
 *
 * @param {number} vehicle
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} speed
 * @param {number} type
 * @return {void}
 */
global.TaskVehicleFleeOnCleanup = function (vehicle, p1, p2, p3, speed, type) {
  return _in(0x55cd5fdd, 0xd4335c1e, vehicle, _fv(p1), _fv(p2), _fv(p3), _fv(speed), _ch(type));
};

/**
 * _TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING_2
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @return {void}
 */
global.TaskVehicleFollowWaypointRecording_2 = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x041d17a9, 0xe221ae30, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
};

/**
 * ANALYTICS_PLAYTIME_FREEMODE_END
 *

 * @return {void}
 */
global.AnalyticsPlaytimeFreemodeEnd = function () {
  return _in(0x3180e991, 0xd4b8f248);
};

/**
 * ANALYTICS_PLAYTIME_FREEMODE_START
 *

 * @return {void}
 */
global.AnalyticsPlaytimeFreemodeStart = function () {
  return _in(0xe9f24081, 0xd84931b8);
};

/**
 * TELEMETRY_CAMP_DONATE
 *
 * @param {any} transactionId
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {number} slotId
 * @param {number} p6
 * @param {any} p7
 * @param {boolean} p8
 * @return {void}
 */
global.TelemetryCampDonate = function (transactionId, p1, p2, p3, p4, slotId, p6, p7, p8) {
  return _in(0xdf516e59, 0x8d966d06, transactionId, p1, p2, p3, p4, _ch(slotId), _ch(p6), p7, p8);
};

/**
 * TELEMETRY_PERSONAL_VEHICLE_MOUNT
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryPersonalVehicleMount = function (p0, p1, p2, p3) {
  return _in(0xff9052bc, 0x7a3b7d33, p0, p1, p2, p3);
};

/**
 * TELEMETRY_PLAYER_MENU_PIN
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryPlayerMenuPin = function (p0, p1, p2, p3) {
  return _in(0x076c5843, 0x371eb889, p0, p1, p2, p3);
};

/**
 * _0x6F5BC5C4EAB42B15
 * Note: this native was added in build 1491.50
 *
 * @param {number} linkId
 * @param {number} type
 * @param {string | number} contentId
 * @return {void}
 */
global.N_0x6F5BC5C4EAB42B15 = function (linkId, type, contentId) {
  return _in(0x6f5bc5c4, 0xeab42b15, linkId, type, _ts(contentId));
};

/**
 * _0xEC0BD8736DCAF841
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0xEC0BD8736DCAF841 = function (toggle) {
  return _in(0xec0bd873, 0x6dcaf841, toggle);
};

/**
 * _CLEAR_TELEMETRY_SHOP_UI
 *

 * @return {void}
 */
global.ClearTelemetryShopUi = function () {
  return _in(0x32d5898c, 0x4898cd95);
};

/**
 * _TELEMETRY_AMBIENT_VIGNETTE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.TelemetryAmbientVignette = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x3145044f, 0x3990d321, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _TELEMETRY_ANIMAL_SKINNED
 *
 * @param {number} type
 * @param {DataView} items
 * @return {void}
 */
global.TelemetryAnimalSkinned = function (type, items) {
  return _in(0x7581972a, 0xdf5d699a, _ch(type), items);
};

/**
 * _TELEMETRY_BOUNTY_TARGET
 *
 * @param {DataView} data
 * @return {void}
 */
global.TelemetryBountyTarget = function (data) {
  return _in(0x52fa31db, 0x8f3ad25d, data);
};

/**
 * _TELEMETRY_CAMP_CREATED
 *
 * @param {any} p0
 * @return {void}
 */
global.TelemetryCampCreated = function (p0) {
  return _in(0x565eaa72, 0x6b2ce3b7, p0);
};

/**
 * _TELEMETRY_CAMP_SUPPLIES
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.TelemetryCampSupplies = function (p0, p1, p2, p3, p4) {
  return _in(0x217f4776, 0x1376e16e, p0, p1, p2, p3, p4);
};

/**
 * _TELEMETRY_CHAR_CREATOR
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.TelemetryCharCreator = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x7207ad47, 0x1bc9278c, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _TELEMETRY_COLLECT
 *
 * @param {any} transactionId
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.TelemetryCollect = function (transactionId, p1, p2, p3, p4, p5, p6) {
  return _in(0xd6cb05dd, 0xaee43afd, transactionId, p1, p2, p3, p4, p5, p6);
};

/**
 * _TELEMETRY_COUPON
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.TelemetryCoupon = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x621d719c, 0x4836292b, p0, p1, p2, p3, p4, p5);
};

/**
 * _TELEMETRY_CRAFT_ITEM
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} quantity
 * @return {void}
 */
global.TelemetryCraftItem = function (p0, p1, p2, quantity) {
  return _in(0x78c2e029, 0xdb205a3a, p0, p1, p2, quantity);
};

/**
 * _TELEMETRY_CREATE_UUID
 * Works in MP only.
 *
 * @param {DataView} uuid
 * @return {boolean}
 */
global.TelemetryCreateUuid = function (uuid) {
  return _in(0xe692d336, 0xf8a2a97f, uuid, _r);
};

/**
 * _TELEMETRY_CUSTOM
 *
 * @param {DataView} args
 * @return {void}
 */
global.TelemetryCustom = function (args) {
  return _in(0x40914ccf, 0x2a1ab531, args);
};

/**
 * _TELEMETRY_DEFENSIVE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TelemetryDefensive = function (p0, p1, p2) {
  return _in(0xe57529d2, 0x3541d2dd, p0, p1, p2);
};

/**
 * _TELEMETRY_DISCOVERABLE
 *
 * @param {any} p0
 * @return {void}
 */
global.TelemetryDiscoverable = function (p0) {
  return _in(0xf5ead898, 0xef387e73, p0);
};

/**
 * _TELEMETRY_EMOTE_ADD_CATEGORY_TO_SAVE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {number} emote
 * @return {void}
 */
global.TelemetryEmoteAddCategoryToSave = function (p0, p1, emote) {
  return _in(0x2c24af8e, 0xeeef8a55, p0, p1, _ch(emote));
};

/**
 * _TELEMETRY_FAST_TRAVEL
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.TelemetryFastTravel = function (p0, p1, p2, p3, p4) {
  return _in(0x7cef4ac7, 0x9f7e7fad, p0, p1, p2, p3, p4);
};

/**
 * _TELEMETRY_FAVOR_EMOTE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TelemetryFavorEmote = function (p0, p1, p2) {
  return _in(0x16b23d4f, 0x7a1f50d9, p0, p1, p2);
};

/**
 * _TELEMETRY_GAME_PROGRESS
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.TelemetryGameProgress = function (p0, p1) {
  return _in(0x51ec204a, 0x6e5b5a1a, p0, p1);
};

/**
 * _TELEMETRY_GANG_SHARES
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryGangShares = function (p0, p1, p2, p3) {
  return _in(0xe6dc9b21, 0xac7a8729, p0, p1, p2, p3);
};

/**
 * _TELEMETRY_GOLD_STORE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryGoldStore = function (p0, p1, p2, p3) {
  return _in(0x536b6025, 0xe94ac48f, p0, p1, p2, p3);
};

/**
 * _TELEMETRY_GUN_LOCKER
 *

 * @return {void}
 */
global.TelemetryGunLocker = function () {
  return _in(0x415fe28e, 0xd44bff14);
};

/**
 * _TELEMETRY_GUN_LOCKER_WEAPON_REMOVED
 *
 * @param {number} p0
 * @return {void}
 */
global.TelemetryGunLockerWeaponRemoved = function (p0) {
  return _in(0x317d9c95, 0x60529cc2, _ch(p0));
};

/**
 * _TELEMETRY_GUN_LOCKER_WEAPON_STORED
 *
 * @param {number} p0
 * @return {void}
 */
global.TelemetryGunLockerWeaponStored = function (p0) {
  return _in(0xc3adf488, 0x0784fa9c, _ch(p0));
};

/**
 * _TELEMETRY_HERB_PICKED
 *
 * @param {number} herbType
 * @return {void}
 */
global.TelemetryHerbPicked = function (herbType) {
  return _in(0xae693ec3, 0xa178f6c2, _ch(herbType));
};

/**
 * _TELEMETRY_HONOR
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.TelemetryHonor = function (p0, p1) {
  return _in(0xe6b763c7, 0xf4902201, p0, p1);
};

/**
 * _TELEMETRY_HUB_NAVIGATION
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryHubNavigation = function (p0, p1, p2, p3) {
  return _in(0x25cc50ec, 0x1a6f3a96, p0, p1, p2, p3);
};

/**
 * _TELEMETRY_HUB_OFFERS
 *
 * @param {any} couponItem
 * @param {any} p1
 * @return {void}
 */
global.TelemetryHubOffers = function (couponItem, p1) {
  return _in(0x37aa2821, 0x63b0d2c4, couponItem, p1);
};

/**
 * _TELEMETRY_INTRO_SKIP
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TelemetryIntroSkip = function (p0, p1, p2) {
  return _in(0x1b554723, 0x799245f4, p0, p1, p2);
};

/**
 * _TELEMETRY_LOBBY_PROGRESSION
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryLobbyProgression = function (p0, p1, p2, p3) {
  return _in(0xecd67e9f, 0xa677cccf, p0, p1, p2, p3);
};

/**
 * _TELEMETRY_LOOT
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryLoot = function (p0, p1, p2, p3) {
  return _in(0xcf63ef77, 0xb0df0397, p0, p1, p2, p3);
};

/**
 * _TELEMETRY_MATCH_NOMINATION
 *
 * @param {DataView} args
 * @return {void}
 */
global.TelemetryMatchNomination = function (args) {
  return _in(0x330029e1, 0x21380ceb, args);
};

/**
 * _TELEMETRY_MATCH_OVER
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.TelemetryMatchOver = function (p0, p1, p2, p3, p4) {
  return _in(0xa2058154, 0x357726bb, p0, p1, p2, p3, p4);
};

/**
 * _TELEMETRY_MATCH_QUEUE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.TelemetryMatchQueue = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x4c08d2b6, 0xd8be17e4, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _TELEMETRY_MATCH_STARTED
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @return {void}
 */
global.TelemetryMatchStarted = function (p0, p1) {
  return _in(0xf620f47b, 0x4f4a78c4, p0, p1);
};

/**
 * _TELEMETRY_MATCH_VOTE
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @return {void}
 */
global.TelemetryMatchVote = function (p0, p1) {
  return _in(0xef3c68f5, 0x6bad7b69, p0, p1);
};

/**
 * _TELEMETRY_MENU_NAVIGATION
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryMenuNavigation = function (p0, p1, p2, p3) {
  return _in(0x3255d4d2, 0x082c6339, p0, p1, p2, p3);
};

/**
 * _TELEMETRY_MISSION_CHECKPOINT
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TelemetryMissionCheckpoint = function (p0, p1, p2) {
  return _in(0x8ec7890d, 0x446bd9c1, p0, p1, p2);
};

/**
 * _TELEMETRY_MISSION_FAILED_TO_LAUNCH
 * _TELEMETRY_C* - _TELEMETRY_G*
 *
 * @param {any} p0
 * @param {any} p1
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} reason
 * @return {void}
 */
global.TelemetryMissionFailedToLaunch = function (p0, p1, x, y, z, reason) {
  return _in(0x6571e432, 0x7390ec0b, p0, p1, _fv(x), _fv(y), _fv(z), reason);
};

/**
 * _TELEMETRY_MISSION_ILO_OPTION
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.TelemetryMissionIloOption = function (p0, p1) {
  return _in(0xea323f5e, 0x1a4da2f1, p0, p1);
};

/**
 * _TELEMETRY_MISSION_OVER
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.TelemetryMissionOver = function (p0, p1) {
  return _in(0xd894437e, 0x12c17aec, p0, p1);
};

/**
 * _TELEMETRY_MISSION_STARTED
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryMissionStarted = function (p0, p1, p2, p3) {
  return _in(0x15b0cc1b, 0x36f1de29, p0, p1, p2, p3);
};

/**
 * _TELEMETRY_MOONSHINE_BREW
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @return {void}
 */
global.TelemetryMoonshineBrew = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0xb5013efb, 0xb5516867, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
};

/**
 * _TELEMETRY_NET_CAMP
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.TelemetryNetCamp = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xa72773c3, 0x134f9a57, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _TELEMETRY_NOTORIETY
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryNotoriety = function (p0, p1, p2, p3) {
  return _in(0xe26970a7, 0xae0f28e9, p0, p1, p2, p3);
};

/**
 * _TELEMETRY_PARLEY_FEUD
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.TelemetryParleyFeud = function (p0, p1, p2, p3, p4) {
  return _in(0xf37a2149, 0xbc9a8a27, p0, p1, p2, p3, p4);
};

/**
 * _TELEMETRY_PERSONAL_VEHICLE_WAGON
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.TelemetryPersonalVehicleWagon = function (p0, p1, p2) {
  return _in(0xe67af24c, 0x5a3b6058, p0, p1, p2);
};

/**
 * _TELEMETRY_PHOTO
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryPhoto = function (p0, p1, p2, p3) {
  return _in(0xed22be4c, 0x5a399e63, p0, p1, p2, p3);
};

/**
 * _TELEMETRY_PHOTO_CAM
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @return {void}
 */
global.TelemetryPhotoCam = function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {
  return _in(0x0777d65e, 0xe8a17517, p0, p1, p2, p3, p4, p5, p6, p7, p8);
};

/**
 * _TELEMETRY_PLAYER_SPAWNED
 *
 * @param {number} ped
 * @return {void}
 */
global.TelemetryPlayerSpawned = function (ped) {
  return _in(0x5da4718d, 0xf897eb25, ped);
};

/**
 * _TELEMETRY_POKER_OVER
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @return {void}
 */
global.TelemetryPokerOver = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x8127c5aa, 0x05c5a210, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
};

/**
 * _TELEMETRY_PRISON
 *
 * @param {any} transactionId
 * @param {any} bountyAmount
 * @param {number} ped
 * @param {any} completionType
 * @param {any} jailTimeServed
 * @param {any} jailTimeLeft
 * @param {any} posseRole
 * @return {void}
 */
global.TelemetryPrison = function (transactionId, bountyAmount, ped, completionType, jailTimeServed, jailTimeLeft, posseRole) {
  return _in(0xb204bf9f, 0x30298d77, transactionId, bountyAmount, ped, completionType, jailTimeServed, jailTimeLeft, posseRole);
};

/**
 * _TELEMETRY_REGION
 *
 * @param {number} regionHash
 * @return {void}
 */
global.TelemetryRegion = function (regionHash) {
  return _in(0xcd6f8a03, 0x35d821f9, _ch(regionHash));
};

/**
 * _TELEMETRY_ROLE_BOUNTY
 *
 * @param {any} p0
 * @return {void}
 */
global.TelemetryRoleBounty = function (p0) {
  return _in(0xab43d1c8, 0x0b5e9500, p0);
};

/**
 * _TELEMETRY_ROLE_COLLECTOR
 *
 * @param {any} transactionId
 * @param {any} collectible
 * @param {any} category
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.TelemetryRoleCollector = function (transactionId, collectible, category, p3, p4, p5, p6) {
  return _in(0x4ac38dfd, 0x286dad14, transactionId, collectible, category, p3, p4, p5, p6);
};

/**
 * _TELEMETRY_ROLE_MOONSHINER
 *
 * @param {any} p0
 * @param {any} transactionId
 * @return {void}
 */
global.TelemetryRoleMoonshiner = function (p0, transactionId) {
  return _in(0x99d40c5d, 0x74bc88e9, p0, transactionId);
};

/**
 * _TELEMETRY_ROLE_NATURALIST
 *
 * @param {any} transactionId
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @return {void}
 */
global.TelemetryRoleNaturalist = function (transactionId, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x6fb9ea30, 0x8f302922, transactionId, p1, p2, p3, p4, p5, p6, p7, p8, p9);
};

/**
 * _TELEMETRY_ROLE_TOKEN_TRANSACTION
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.TelemetryRoleTokenTransaction = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x32c29395, 0x64d74bff, p0, p1, p2, p3, p4, p5);
};

/**
 * _TELEMETRY_ROLE_TRADER
 *
 * @param {any} p0
 * @param {any} transactionId
 * @return {void}
 */
global.TelemetryRoleTrader = function (p0, transactionId) {
  return _in(0x476038b5, 0xa0734c10, p0, transactionId);
};

/**
 * _TELEMETRY_RPG_GLOBAL_CALCULATE_ATTRIBUTE_CORE_DELTA
 * Creation of the metric is related to attribute filling, i. e. at camp fires, when the ped is resting.
 * _TELEMETRY_C* - _TELEMETRY_P*
 *

 * @return {void}
 */
global.TelemetryRpgGlobalCalculateAttributeCoreDelta = function () {
  return _in(0x7e002a36, 0xaefcfb55);
};

/**
 * _TELEMETRY_SAMPLE
 *
 * @param {any} transactionId
 * @param {any} animal
 * @param {any} p2
 * @param {any} bSampled
 * @param {boolean} bTranq
 * @return {void}
 */
global.TelemetrySample = function (transactionId, animal, p2, bSampled, bTranq) {
  return _in(0x61559675, 0xd23d8bd1, transactionId, animal, p2, bSampled, bTranq);
};

/**
 * _TELEMETRY_SET_IS_FLOW
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.TelemetrySetIsFlow = function (toggle) {
  return _in(0x9bee018a, 0x63fffad9, toggle);
};

/**
 * _TELEMETRY_SET_SHOP_FOR_TRANSACTION
 *
 * @param {number} transactionId
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.TelemetrySetShopForTransaction = function (transactionId, p1, p2) {
  return _in(0xca9e42f4, 0x37625a85, transactionId, _ch(p1), _ch(p2));
};

/**
 * _TELEMETRY_SHOP_CUTSCENE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.TelemetryShopCutscene = function (p0, p1, p2, p3) {
  return _in(0xb0b19b56, 0x697836f5, p0, p1, p2, p3);
};

/**
 * _TELEMETRY_SHOP_ENTRY
 *
 * @param {any} shopType
 * @param {any} shopRegion
 * @param {any} region
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.TelemetryShopEntry = function (shopType, shopRegion, region, p3, p4, p5) {
  return _in(0x775b2ed9, 0x44e44973, shopType, shopRegion, region, p3, p4, p5);
};

/**
 * _TELEMETRY_SHOP_EXIT
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.TelemetryShopExit = function (p0, p1) {
  return _in(0xf78e669f, 0xdc202e73, p0, p1);
};

/**
 * _TELEMETRY_SHOP_PURCHASE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.TelemetryShopPurchase = function (p0, p1, p2, p3, p4) {
  return _in(0x2a374e6f, 0x0075ee81, p0, p1, p2, p3, p4);
};

/**
 * _TELEMETRY_SHOP_SELL
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {number} centSalePrice
 * @return {void}
 */
global.TelemetryShopSell = function (p0, p1, p2, p3, centSalePrice) {
  return _in(0x9bd8a9d0, 0xa774a6f8, p0, p1, p2, p3, centSalePrice);
};

/**
 * _TELEMETRY_SLEEP
 *
 * @param {any} p0
 * @return {void}
 */
global.TelemetrySleep = function (p0) {
  return _in(0xf9f14080, 0xd80937bd, p0);
};

/**
 * _TELEMETRY_START_GUN_LOCKER_INTERACTION
 *

 * @return {void}
 */
global.TelemetryStartGunLockerInteraction = function () {
  return _in(0xf0d54e06, 0x51dd7e07);
};

/**
 * _TELEMETRY_TRIGGER_TRANSACTION_REQUEST
 * Returns false when transaction request is failing
 *
 * @param {DataView} requestId
 * @param {DataView} transactionId
 * @return {boolean}
 */
global.TelemetryTriggerTransactionRequest = function (requestId, transactionId) {
  return _in(0x80a02d9f, 0x948a8bca, requestId, transactionId, _r);
};

/**
 * _TRY_GET_TELEMETRY_ID_FROM_TRANSACTION_ID
 *
 * @param {DataView} transactionId
 * @param {DataView} requestId
 * @return {boolean}
 */
global.TryGetTelemetryIdFromTransactionId = function (transactionId, requestId) {
  return _in(0xf184b3ec, 0xe36219cf, transactionId, requestId, _r);
};

/**
 * DOES_STREAMED_TEXTURE_DICT_EXIST
 *
 * @param {string | number} textureDict
 * @return {boolean}
 */
global.DoesStreamedTextureDictExist = function (textureDict) {
  return _in(0x7332461f, 0xc59eb7ec, _ts(textureDict), _r);
};

/**
 * DOES_STREAMED_TXD_EXIST
 *
 * @param {number} txdHash
 * @return {boolean}
 */
global.DoesStreamedTxdExist = function (txdHash) {
  return _in(0xba0163b2, 0x77c2d2d0, _ch(txdHash), _r);
};

/**
 * HAS_STREAMED_TEXTURE_DICT_LOADED
 *
 * @param {string | number} textureDict
 * @return {boolean}
 */
global.HasStreamedTextureDictLoaded = function (textureDict) {
  return _in(0x54d69009, 0x29ccf162, _ts(textureDict), _r);
};

/**
 * HAS_STREAMED_TXD_LOADED
 *
 * @param {number} txdHash
 * @return {boolean}
 */
global.HasStreamedTxdLoaded = function (txdHash) {
  return _in(0xbe72591d, 0x1509ffe4, _ch(txdHash), _r);
};

/**
 * REQUEST_STREAMED_TEXTURE_DICT
 *
 * @param {string | number} textureDict
 * @param {boolean} p1
 * @return {void}
 */
global.RequestStreamedTextureDict = function (textureDict, p1) {
  return _in(0xc1ba29df, 0x5631b0f8, _ts(textureDict), p1);
};

/**
 * REQUEST_STREAMED_TXD
 *
 * @param {number} txdHash
 * @param {boolean} p1
 * @return {void}
 */
global.RequestStreamedTxd = function (txdHash, p1) {
  return _in(0xdb1bd07f, 0xb464584d, _ch(txdHash), p1);
};

/**
 * SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED
 *
 * @param {string | number} textureDict
 * @return {void}
 */
global.SetStreamedTextureDictAsNoLongerNeeded = function (textureDict) {
  return _in(0x4aca10a9, 0x1f66f1e2, _ts(textureDict));
};

/**
 * SET_STREAMED_TXD_AS_NO_LONGER_NEEDED
 *
 * @param {number} txdHash
 * @return {void}
 */
global.SetStreamedTxdAsNoLongerNeeded = function (txdHash) {
  return _in(0x8232f37d, 0xf762acb2, _ch(txdHash));
};

/**
 * CAN_LAUNCH_UIAPP_BY_HASH
 *
 * @param {number} appNameHash
 * @return {boolean}
 */
global.CanLaunchUiappByHash = function (appNameHash) {
  return _in(0xe555ec27, 0xd65ede80, _ch(appNameHash), _r);
};

/**
 * CAN_LAUNCH_UIAPP_BY_HASH_WITH_ENTRY
 *
 * @param {number} appNameHash
 * @param {number} entryHash
 * @return {boolean}
 */
global.CanLaunchUiappByHashWithEntry = function (appNameHash, entryHash) {
  return _in(0x16f47d43, 0x4b6086bf, _ch(appNameHash), _ch(entryHash), _r);
};

/**
 * IS_ANY_UIAPP_ACTIVE
 *

 * @return {boolean}
 */
global.IsAnyUiappActive = function () {
  return _in(0xac959ab9, 0x9aaf3d9f, _r);
};

/**
 * IS_ANY_UIAPP_RUNNING
 *

 * @return {boolean}
 */
global.IsAnyUiappRunning = function () {
  return _in(0xdb30bec7, 0xa7a5cbd3, _r);
};

/**
 * IS_UIAPP_ACTIVE_BY_HASH
 *
 * @param {number} appNameHash
 * @return {boolean}
 */
global.IsUiappActiveByHash = function (appNameHash) {
  return _in(0x25b7a020, 0x6bdfac76, _ch(appNameHash), _r);
};

/**
 * IS_UIAPP_RUNNING
 *
 * @param {string | number} appName
 * @return {boolean}
 */
global.IsUiappRunning = function (appName) {
  return _in(0xde4a9b35, 0xd028979f, _ts(appName), _r);
};

/**
 * IS_UIAPP_RUNNING_BY_HASH
 *
 * @param {number} appNameHash
 * @return {boolean}
 */
global.IsUiappRunningByHash = function (appNameHash) {
  return _in(0x4e511d09, 0x3a86ad49, _ch(appNameHash), _r);
};

/**
 * IS_UIAPP_TRANSITIONING_BY_HASH
 *
 * @param {number} appNameHash
 * @return {boolean}
 */
global.IsUiappTransitioningByHash = function (appNameHash) {
  return _in(0x42095b88, 0x6d30de66, _ch(appNameHash), _r);
};

/**
 * LAUNCH_UIAPP_BY_HASH
 *
 * @param {number} appNameHash
 * @return {number}
 */
global.LaunchUiappByHash = function (appNameHash) {
  return _in(0xc8fc7f4e, 0x4cf4f581, _ch(appNameHash), _r, _ri);
};

/**
 * LAUNCH_UIAPP_BY_HASH_WITH_ENTRY
 *
 * @param {number} appNameHash
 * @param {number} entryHash
 * @return {number}
 */
global.LaunchUiappByHashWithEntry = function (appNameHash, entryHash) {
  return _in(0xc1bcf31e, 0x975b3195, _ch(appNameHash), _ch(entryHash), _r, _ri);
};

/**
 * LAUNCH_UIAPP_WITH_ENTRY
 *
 * @param {string | number} appName
 * @param {string | number} entry
 * @return {number}
 */
global.LaunchUiappWithEntry = function (appName, entry) {
  return _in(0x7b2027ba, 0xc5c8ec89, _ts(appName), _ts(entry), _r, _ri);
};

/**
 * REQUEST_UIAPP_TRANSITION_BY_HASH
 *
 * @param {number} appNameHash
 * @param {number} transitionHash
 * @return {boolean}
 */
global.RequestUiappTransitionByHash = function (appNameHash, transitionHash) {
  return _in(0x7689cd25, 0x5655bfd7, _ch(appNameHash), _ch(transitionHash), _r);
};

/**
 * _CLOSE_ALL_UIAPPS
 *

 * @return {void}
 */
global.CloseAllUiapps = function () {
  return _in(0xad7b70f7, 0x230c5a12);
};

/**
 * _CLOSE_ALL_UIAPPS_IMMEDIATE
 *

 * @return {void}
 */
global.CloseAllUiappsImmediate = function () {
  return _in(0x12769eeb, 0x8dbd7a7b);
};

/**
 * _CLOSE_UIAPP
 *
 * @param {string | number} appName
 * @return {void}
 */
global.CloseUiapp = function (appName) {
  return _in(0x818c6ca9, 0xb659e8ec, _ts(appName));
};

/**
 * _CLOSE_UIAPP_BY_HASH
 *
 * @param {number} appNameHash
 * @return {void}
 */
global.CloseUiappByHash = function (appNameHash) {
  return _in(0x2ff10c9c, 0x3f92277e, _ch(appNameHash));
};

/**
 * _CLOSE_UIAPP_BY_HASH_IMMEDIATE
 *
 * @param {number} appNameHash
 * @return {void}
 */
global.CloseUiappByHashImmediate = function (appNameHash) {
  return _in(0x04428420, 0xa248a354, _ch(appNameHash));
};

/**
 * _CLOSE_UIAPP_IMMEDIATE
 *
 * @param {string | number} appName
 * @return {void}
 */
global.CloseUiappImmediate = function (appName) {
  return _in(0x30156354, 0x26d1b17c, _ts(appName));
};

/**
 * _GET_UIAPP_CURRENT_ACTIVITY_BY_HASH
 *
 * @param {number} appNameHash
 * @return {number}
 */
global.GetUiappCurrentActivityByHash = function (appNameHash) {
  return _in(0x96fd694f, 0xe5be55dc, _ch(appNameHash), _r, _ri);
};

/**
 * _BG_DISPLAY_TEXT
 * Note: you must use VAR_STRING
 *
 * @param {string | number} text
 * @param {number} x
 * @param {number} y
 * @return {void}
 */
global.BgDisplayText = function (text, x, y) {
  return _in(0x16794e04, 0x4c9efb58, _ts(text), _fv(x), _fv(y));
};

/**
 * _BG_SET_TEXT_COLOR
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/colours
 *
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 * @return {void}
 */
global.BgSetTextColor = function (red, green, blue, alpha) {
  return _in(0x16fa5ce4, 0x7f184f1e, red, green, blue, alpha);
};

/**
 * _BG_SET_TEXT_SCALE
 *
 * @param {number} scaleX
 * @param {number} scaleY
 * @return {void}
 */
global.BgSetTextScale = function (scaleX, scaleY) {
  return _in(0xa1253a3c, 0x870b6843, _fv(scaleX), _fv(scaleY));
};

/**
 * EVENTS_UI_GET_MESSAGE
 * eventData:
 * struct UI_SCRIPT_EVENT
 * {
 *   alignas(8) eUIScriptEventType eventType; // https://alloc8or.re/rdr3/doc/enums/eUIScriptEventType.txt
 *   alignas(8) int intParam;
 *   alignas(8) Hash hashParam;
 *   alignas(8) Hash datastoreParam;
 * };
 * 
 * Old name: _EVENT_MANAGER_GET_EVENT
 *
 * @param {number} hash
 * @param {DataView} eventData
 * @return {boolean}
 */
global.EventsUiGetMessage = function (hash, eventData) {
  return _in(0xe24e9572, 0x94241444, _ch(hash), eventData, _r);
};

/**
 * EVENTS_UI_IS_PENDING
 * Old name: _EVENT_MANAGER_IS_EVENT_PENDING
 *
 * @param {number} hash
 * @return {boolean}
 */
global.EventsUiIsPending = function (hash) {
  return _in(0x67ed5a79, 0x63f2f722, _ch(hash), _r);
};

/**
 * EVENTS_UI_PEEK_MESSAGE
 * eventData: see EVENTS_UI_GET_MESSAGE
 * 
 * Old name: _EVENT_MANAGER_PEEK_EVENT
 *
 * @param {number} hash
 * @param {DataView} eventData
 * @return {boolean}
 */
global.EventsUiPeekMessage = function (hash, eventData) {
  return _in(0x90237103, 0xf27f7937, _ch(hash), eventData, _r);
};

/**
 * EVENTS_UI_POP_MESSAGE
 * Old name: _EVENT_MANAGER_POP_EVENT
 *
 * @param {number} hash
 * @return {void}
 */
global.EventsUiPopMessage = function (hash) {
  return _in(0x8e8a2369, 0xf48ec839, _ch(hash));
};

/**
 * UI_FEED_CLEAR_CHANNEL
 * feedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIFeedChannel
 *
 * @param {number} feedChannel
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.UiFeedClearChannel = function (feedChannel, p1, p2) {
  return _in(0xdd1232b3, 0x32cbb9e7, feedChannel, p1, p2);
};

/**
 * UI_FEED_GET_CURRENT_MESSAGE
 * feedChannel: see UI_FEED_CLEAR_CHANNEL
 * Returns feedMessage
 *
 * @param {number} feedChannel
 * @return {number}
 */
global.UiFeedGetCurrentMessage = function (feedChannel) {
  return _in(0xc17f69e1, 0x418cd11f, feedChannel, _r, _ri);
};

/**
 * _0x0FD07141AD048AAE
 * Only used in R* SP Script beat_animal_attack
 * Returns feedMessage
 *
 * @param {DataView} p0
 * @param {boolean} p1
 * @return {number}
 */
global.N_0x0FD07141AD048AAE = function (p0, p1) {
  return _in(0x0fd07141, 0xad048aae, p0, p1, _r, _ri);
};

/**
 * _0x18D6869FBFFEC0F8
 * Only used in R* SP Scripts
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {number}
 */
global.N_0x18D6869FBFFEC0F8 = function (p0, p1, p2, p3) {
  return _in(0x18d6869f, 0xbffec0f8, p0, p1, p2, p3, _r, _ri);
};

/**
 * _0x4E88A65968A55C78
 * Returns feedMessage
 *
 * @param {DataView} p0
 * @param {boolean} p1
 * @return {number}
 */
global.N_0x4E88A65968A55C78 = function (p0, p1) {
  return _in(0x4e88a659, 0x68a55c78, p0, p1, _r, _ri);
};

/**
 * _0x6D85126F6CCF02C9
 *
 * @param {number} feedChannel
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0x6D85126F6CCF02C9 = function (feedChannel, p1, p2) {
  return _in(0x6d85126f, 0x6ccf02c9, feedChannel, p1, p2);
};

/**
 * _0xAFF5BE9BA496CE40
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {number} collectableCategory
 * @return {number}
 */
global.N_0xAFF5BE9BA496CE40 = function (p0, p1, p2, p3, collectableCategory) {
  return _in(0xaff5be9b, 0xa496ce40, p0, p1, p2, p3, _ch(collectableCategory), _r, _ri);
};

/**
 * _0xB7223B91CD6B7E07
 *
 * @param {number} feedChannel
 * @return {boolean}
 */
global.N_0xB7223B91CD6B7E07 = function (feedChannel) {
  return _in(0xb7223b91, 0xcd6b7e07, feedChannel, _r);
};

/**
 * _UI_FEED_CLEAR_ALL_CHANNELS
 * Hides Toast Notifications
 *

 * @return {void}
 */
global.UiFeedClearAllChannels = function () {
  return _in(0x6035e8fb, 0xca32ac5e);
};

/**
 * _UI_FEED_CLEAR_HELP_TEXT_FEED
 * Clears help text
 *
 * @param {number} feedMessage
 * @param {boolean} p1
 * @return {void}
 */
global.UiFeedClearHelpTextFeed = function (feedMessage, p1) {
  return _in(0x2f901291, 0xef177b02, feedMessage, p1);
};

/**
 * _UI_FEED_GET_MESSAGE_STATE
 * Returns messageState, see https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIMessageState
 *
 * @param {number} feedMessage
 * @return {number}
 */
global.UiFeedGetMessageState = function (feedMessage) {
  return _in(0x59fa6761, 0x77dbe4c9, feedMessage, _r, _ri);
};

/**
 * _UI_FEED_POST_FEED_TICKER
 * Display text on right of the screen, Example : https://pastebin.com/n1YmNe25
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiFeedPostFeedTicker = function (p0, p1, p2) {
  return _in(0xb2920b97, 0x60f0f36b, p0, p1, p2, _r, _ri);
};

/**
 * _UI_FEED_POST_GAME_UPDATE_SHARD
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiFeedPostGameUpdateShard = function (p0, p1, p2) {
  return _in(0x8d1249bd, 0x28791878, p0, p1, p2, _r, _ri);
};

/**
 * _UI_FEED_POST_HELP_TEXT
 * Example : https://pastebin.com/GvdBp8Dh
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiFeedPostHelpText = function (p0, p1, p2) {
  return _in(0x049d5c61, 0x5bd38bad, p0, p1, p2, _r, _ri);
};

/**
 * _UI_FEED_POST_LOCATION_SHARD
 * Example : https://pastebin.com/h1YzycuR
 *
 * @param {DataView} duration
 * @param {DataView} data
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {number}
 */
global.UiFeedPostLocationShard = function (duration, data, p2, p3) {
  return _in(0xd05590c1, 0xab38f068, duration, data, p2, p3, _r, _ri);
};

/**
 * _UI_FEED_POST_MISSION_NAME
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiFeedPostMissionName = function (p0, p1, p2) {
  return _in(0x2024f4f3, 0x33095fb1, p0, p1, p2, _r, _ri);
};

/**
 * _UI_FEED_POST_OBJECTIVE
 * Example : https://pastebin.com/13tuRa63
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiFeedPostObjective = function (p0, p1, p2) {
  return _in(0xcedbf17e, 0xfcc0e4a4, p0, p1, p2, _r, _ri);
};

/**
 * _UI_FEED_POST_ONE_TEXT_SHARD
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiFeedPostOneTextShard = function (p0, p1, p2) {
  return _in(0x860ddfe9, 0x7cc94df0, p0, p1, p2, _r, _ri);
};

/**
 * _UI_FEED_POST_RANKUP_TOAST
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {number} p2
 * @param {number} p3
 * @return {number}
 */
global.UiFeedPostRankupToast = function (p0, p1, p2, p3) {
  return _in(0x3f9fddba, 0x79117c69, p0, p1, p2, p3, _r, _ri);
};

/**
 * _UI_FEED_POST_RETICLE_MESSAGE
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiFeedPostReticleMessage = function (p0, p1, p2) {
  return _in(0x893128cd, 0xb4b81fbb, p0, p1, p2, _r, _ri);
};

/**
 * _UI_FEED_POST_SAMPLE_NOTIFICATION
 * Example : https://pastebin.com/kAtEMQTD
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {number} p2
 * @param {number} p3
 * @return {number}
 */
global.UiFeedPostSampleNotification = function (p0, p1, p2, p3) {
  return _in(0xc927890a, 0xa64e9661, p0, p1, p2, p3, _r, _ri);
};

/**
 * _UI_FEED_POST_SAMPLE_TOAST
 * Example : https://pastebin.com/YZMBkAmW
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {number}
 */
global.UiFeedPostSampleToast = function (p0, p1, p2, p3) {
  return _in(0x26e87218, 0x390e6729, p0, p1, p2, p3, _r, _ri);
};

/**
 * _UI_FEED_POST_SAMPLE_TOAST_RIGHT
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiFeedPostSampleToastRight = function (p0, p1, p2) {
  return _in(0xb249ebcb, 0x30dd88e0, p0, p1, p2, _r, _ri);
};

/**
 * _UI_FEED_POST_SAMPLE_TOAST_WITH_APP_LINK
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {number}
 */
global.UiFeedPostSampleToastWithAppLink = function (p0, p1, p2, p3, p4) {
  return _in(0x38838a64, 0x6fb30aae, p0, p1, p2, p3, p4, _r, _ri);
};

/**
 * _UI_FEED_POST_THREE_TEXT_SHARD
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {number}
 */
global.UiFeedPostThreeTextShard = function (p0, p1, p2, p3, p4) {
  return _in(0x02bcc0fe, 0x9eba3529, p0, p1, p2, p3, p4, _r, _ri);
};

/**
 * _UI_FEED_POST_TWO_TEXT_SHARD
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {number}
 */
global.UiFeedPostTwoTextShard = function (p0, p1, p2, p3) {
  return _in(0xa6f4216a, 0xb10eb08e, p0, p1, p2, p3, _r, _ri);
};

/**
 * _UI_FEED_POST_VOICE_CHAT_FEED
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiFeedPostVoiceChatFeed = function (p0, p1, p2) {
  return _in(0xc48152bc, 0x6b3e821c, p0, p1, p2, _r, _ri);
};

/**
 * _0x2A4765812202E671
 *

 * @return {any}
 */
global.N_0x2A4765812202E671 = function () {
  return _in(0x2a476581, 0x2202e671, _r);
};

/**
 * _0x763637F9B838B0A7
 *
 * @param {number} p0
 * @param {number} p1
 * @param {string | number} p2
 * @return {void}
 */
global.N_0x763637F9B838B0A7 = function (p0, p1, p2) {
  return _in(0x763637f9, 0xb838b0a7, p0, _ch(p1), _ts(p2));
};

/**
 * _0xA20398536B7F1134
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.N_0xA20398536B7F1134 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xa2039853, 0x6b7f1134, p0, p1, p2, p3, p4, p5);
};

/**
 * _0xA49D6D503E3EA847
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0xA49D6D503E3EA847 = function (p0, p1, p2, p3, p4) {
  return _in(0xa49d6d50, 0x3e3ea847, p0, p1, p2, p3, p4);
};

/**
 * _0xDA0A30153FCC0FFD
 *

 * @return {void}
 */
global.N_0xDA0A30153FCC0FFD = function () {
  return _in(0xda0a3015, 0x3fcc0ffd);
};

/**
 * _UILOG_ADD_ENTRY_HASH
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} p5
 * @param {number} p6
 * @param {any} p7
 * @return {void}
 */
global.UilogAddEntryHash = function (p0, p1, x, y, z, p5, p6, p7) {
  return _in(0x69d54799, 0x82355d8f, p0, p1, _fv(x), _fv(y), _fv(z), _ch(p5), _ch(p6), p7);
};

/**
 * _UILOG_ADD_ITEM_TO_TASK_LIST
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @return {void}
 */
global.UilogAddItemToTaskList = function (p0, p1, p2, p3, p4, p5, p6, p7) {
  return _in(0x49c63fdf, 0x69744a27, p0, p1, p2, p3, p4, p5, p6, p7);
};

/**
 * _UILOG_ADD_OR_UPDATE_OBJECTIVE
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {string | number} p3
 * @param {boolean} p4
 * @param {boolean} p5
 * @param {boolean} p6
 * @return {void}
 */
global.UilogAddOrUpdateObjective = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xb4316338, 0x8484cc87, p0, _ch(p1), _ch(p2), _ts(p3), p4, p5, p6);
};

/**
 * _UILOG_ADD_TOTAL_TAKE_ENTRY
 *
 * @param {number} p0
 * @param {number} p1
 * @param {string | number} p2
 * @param {string | number} p3
 * @param {number} p4
 * @return {void}
 */
global.UilogAddTotalTakeEntry = function (p0, p1, p2, p3, p4) {
  return _in(0x60c59968, 0xe8e87e6b, _ch(p0), _ch(p1), _ts(p2), _ts(p3), _ch(p4));
};

/**
 * _UILOG_CLEAR_ALL_ENTRIES
 *

 * @return {void}
 */
global.UilogClearAllEntries = function () {
  return _in(0xb95b4ea6, 0xb1edf035);
};

/**
 * _UILOG_CLEAR_CACHED_OBJECTIVE
 *

 * @return {void}
 */
global.UilogClearCachedObjective = function () {
  return _in(0xdff0d417, 0x277b41f8);
};

/**
 * _UILOG_CLEAR_HAS_DISPLAYED_CACHED_OBJECTIVE
 *

 * @return {void}
 */
global.UilogClearHasDisplayedCachedObjective = function () {
  return _in(0xa3108d69, 0x81a5cadb);
};

/**
 * _UILOG_GET_CACHED_OBJECTIVE
 *

 * @return {string | number}
 */
global.UilogGetCachedObjective = function () {
  return _in(0x15a4461b, 0xeb788096, _r, _s);
};

/**
 * _UILOG_HAS_DISPLAYED_CACHED_OBJECTIVE
 *

 * @return {boolean}
 */
global.UilogHasDisplayedCachedObjective = function () {
  return _in(0xcc48ffbb, 0x45b54f71, _r);
};

/**
 * _UILOG_IS_ENTRY_REGISTERED
 *
 * @param {number} p0
 * @param {number} p1
 * @return {boolean}
 */
global.UilogIsEntryRegistered = function (p0, p1) {
  return _in(0xb8188ccf, 0x52202475, p0, _ch(p1), _r);
};

/**
 * _UILOG_MARK_ALL_ENTRIES_AVAILABILITY
 *
 * @param {number} p0
 * @param {string | number} p1
 * @return {void}
 */
global.UilogMarkAllEntriesAvailability = function (p0, p1) {
  return _in(0x3920574c, 0xf0a2b7b6, p0, _ts(p1));
};

/**
 * _UILOG_MARK_ENTRY_AVAILABILITY
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} p2
 * @param {string | number} p3
 * @return {void}
 */
global.UilogMarkEntryAvailability = function (p0, p1, p2, p3) {
  return _in(0x13e8d7dd, 0x08543482, p0, _ch(p1), p2, _ts(p3));
};

/**
 * _UILOG_MARK_MISSION_COMPLETED
 *
 * @param {number} p0
 * @return {void}
 */
global.UilogMarkMissionCompleted = function (p0) {
  return _in(0xde31d66d, 0x1e54c471, _ch(p0));
};

/**
 * _UILOG_POST_NOTIFICATION
 *
 * @param {DataView} data
 * @return {number}
 */
global.UilogPostNotification = function (data) {
  return _in(0x49e58fe6, 0xef40b987, data, _r, _ri);
};

/**
 * _UILOG_PRINT_CACHED_OBJECTIVE
 *

 * @return {void}
 */
global.UilogPrintCachedObjective = function () {
  return _in(0xe9990552, 0xdec71600);
};

/**
 * _UILOG_REMOVE_ENTRY
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.UilogRemoveEntry = function (p0, p1) {
  return _in(0xd594a19b, 0xe09a75c6, p0, _ch(p1));
};

/**
 * _UILOG_SET_CACHED_OBJECTIVE
 *
 * @param {string | number} p0
 * @return {void}
 */
global.UilogSetCachedObjective = function (p0) {
  return _in(0xfa233f8f, 0xe190514c, _ts(p0));
};

/**
 * _UILOG_SET_DISPLAY_COMPLETION_RATING
 *
 * @param {number} logEntryType
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.UilogSetDisplayCompletionRating = function (logEntryType, p1, p2) {
  return _in(0xa3101379, 0x8fadcadc, logEntryType, _ch(p1), p2);
};

/**
 * _UILOG_SET_ENTRY_BRIEF_TEXTURE
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} texture
 * @param {number} textureDictionary
 * @return {void}
 */
global.UilogSetEntryBriefTexture = function (p0, p1, texture, textureDictionary) {
  return _in(0x69684d99, 0x36958d8f, p0, _ch(p1), _ch(texture), _ch(textureDictionary));
};

/**
 * _UILOG_SET_ENTRY_ICON_TEXTURE
 *
 * @param {number} p0
 * @param {number} p1
 * @param {number} icon
 * @param {number} iconDictionary
 * @return {void}
 */
global.UilogSetEntryIconTexture = function (p0, p1, icon, iconDictionary) {
  return _in(0x69654699, 0x34958d8f, p0, _ch(p1), _ch(icon), _ch(iconDictionary));
};

/**
 * _UILOG_SET_ENTRY_PINNED
 *
 * @param {number} p0
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.UilogSetEntryPinned = function (p0, p1, p2) {
  return _in(0x72a5cd21, 0x4b342568, p0, _ch(p1), p2);
};

/**
 * _UILOG_SET_HAS_DISPLAYED_CACHED_OBJECTIVE
 *

 * @return {void}
 */
global.UilogSetHasDisplayedCachedObjective = function () {
  return _in(0xa3108d69, 0x81a5cadc);
};

/**
 * _UILOG_SET_PENDING_DETAILS_ID
 *
 * @param {number} p0
 * @param {number} p1
 * @return {any}
 */
global.UilogSetPendingDetailsId = function (p0, p1) {
  return _in(0x136a027c, 0xf37b0a4f, p0, _ch(p1), _r);
};

/**
 * _UILOG_SET_TOTAL_TAKE_SUMMARY
 *
 * @param {string | number} p0
 * @param {string | number} p1
 * @return {void}
 */
global.UilogSetTotalTakeSummary = function (p0, p1) {
  return _in(0xd106b211, 0xef1b8f04, _ts(p0), _ts(p1));
};

/**
 * _UILOG_UPDATE_ENTRY_SUBHEADER
 *
 * @param {number} p0
 * @param {number} p1
 * @param {string | number} p2
 * @return {void}
 */
global.UilogUpdateEntrySubheader = function (p0, p1, p2) {
  return _in(0x80d65241, 0x90258c3e, p0, _ch(p1), _ts(p2));
};

/**
 * _UIPINNING_GET_TOOLTIP_TEXT
 *
 * @param {number} hash
 * @return {string | number}
 */
global.UipinningGetTooltipText = function (hash) {
  return _in(0x3138582e, 0x0a13bfab, _ch(hash), _r, _s);
};

/**
 * UI_STATE_MACHINE_CAN_REQUEST_TRANSITION
 *
 * @param {any} p0
 * @return {any}
 */
global.UiStateMachineCanRequestTransition = function (p0) {
  return _in(0xf7c180f5, 0x7f85d0b8, p0, _r);
};

/**
 * UI_STATE_MACHINE_CREATE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.UiStateMachineCreate = function (p0, p1) {
  return _in(0x4c6f2c4b, 0x7a03a266, p0, p1, _r);
};

/**
 * UI_STATE_MACHINE_DESTROY
 *
 * @param {any} p0
 * @return {void}
 */
global.UiStateMachineDestroy = function (p0) {
  return _in(0x4eb12221, 0x0a90e2d8, p0);
};

/**
 * UI_STATE_MACHINE_DESTROY_AND_CLEAR
 *
 * @param {DataView} p0
 * @return {void}
 */
global.UiStateMachineDestroyAndClear = function (p0) {
  return _in(0x2738d68d, 0x2b4e09e7, p0);
};

/**
 * UI_STATE_MACHINE_EXISTS
 *
 * @param {any} p0
 * @return {any}
 */
global.UiStateMachineExists = function (p0) {
  return _in(0x5d15569c, 0x0febf757, p0, _r);
};

/**
 * UI_STATE_MACHINE_REQUEST_EXIT
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.UiStateMachineRequestExit = function (p0, p1) {
  return _in(0x6b9fe4f0, 0xba521a19, p0, p1);
};

/**
 * UI_STATE_MACHINE_REQUEST_TRANSITION
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.UiStateMachineRequestTransition = function (p0, p1) {
  return _in(0x7ea9c354, 0x7e80350e, p0, p1, _r);
};

/**
 * _UIFLOWBLOCK_ENTER
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.UiflowblockEnter = function (p0, p1) {
  return _in(0x3b751972, 0x0c9dcb45, p0, p1, _r);
};

/**
 * _UIFLOWBLOCK_IS_LOADED
 *
 * @param {any} p0
 * @return {any}
 */
global.UiflowblockIsLoaded = function (p0) {
  return _in(0x10a93c05, 0x7b6bd944, p0, _r);
};

/**
 * _UIFLOWBLOCK_RELEASE
 *
 * @param {any} p0
 * @return {void}
 */
global.UiflowblockRelease = function (p0) {
  return _in(0xf320a77d, 0xd5f781df, p0);
};

/**
 * _UIFLOWBLOCK_REQUEST
 *
 * @param {any} p0
 * @return {any}
 */
global.UiflowblockRequest = function (p0) {
  return _in(0xc0081b34, 0xe395ce48, p0, _r);
};

/**
 * _UI_STATE_MACHINE_IS_EXITED
 *
 * @param {number} p0
 * @return {boolean}
 */
global.UiStateMachineIsExited = function (p0) {
  return _in(0x11e73195, 0xe735b25b, _ch(p0), _r);
};

/**
 * _UI_STICKY_FEED_CLEAR_MESSAGE
 *
 * @param {number} msgId
 * @return {void}
 */
global.UiStickyFeedClearMessage = function (msgId) {
  return _in(0x00a15b94, 0xcba4f76f, msgId);
};

/**
 * _UI_STICKY_FEED_CREATE_DEATH_FAIL_MESSAGE
 * Example: https://pastebin.com/JygJShNU
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiStickyFeedCreateDeathFailMessage = function (p0, p1, p2) {
  return _in(0x815c4065, 0xae6e6071, p0, p1, p2, _r, _ri);
};

/**
 * _UI_STICKY_FEED_CREATE_ERROR_MESSAGE
 * Example: https://pastebin.com/EJD7ytnz
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiStickyFeedCreateErrorMessage = function (p0, p1, p2) {
  return _in(0x9f2cc243, 0x9a04e7ba, p0, p1, p2, _r, _ri);
};

/**
 * _UI_STICKY_FEED_CREATE_WARNING_MESSAGE
 * Example: https://pastebin.com/6mLtee2S
 *
 * @param {DataView} p0
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {number}
 */
global.UiStickyFeedCreateWarningMessage = function (p0, p1, p2) {
  return _in(0x339e16b4, 0x1780fc35, p0, p1, p2, _r, _ri);
};

/**
 * _UI_STICKY_FEED_GET_MESSAGE_STATE
 * Returns state of sticky feed message, see 0x59FA676177DBE4C9
 *
 * @param {number} msgId
 * @return {number}
 */
global.UiStickyFeedGetMessageState = function (msgId) {
  return _in(0x07954320, 0xd77f6a3d, msgId, _r, _ri);
};

/**
 * _UI_STICKY_FEED_IS_ALERT_SCREEN_ACTIVE
 *

 * @return {boolean}
 */
global.UiStickyFeedIsAlertScreenActive = function () {
  return _in(0xf8806ec3, 0xff840fdc, _r);
};

/**
 * _UI_STICKY_FEED_IS_CHANNEL_ACTIVE
 * stickyFeedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIStickyFeedChannel
 *
 * @param {number} stickyFeedChannel
 * @return {boolean}
 */
global.UiStickyFeedIsChannelActive = function (stickyFeedChannel) {
  return _in(0xc5c395c6, 0x0b542a3c, stickyFeedChannel, _r);
};

/**
 * _UI_STICKY_FEED_UPDATE_MESSAGE
 * Seems to only update _UI_STICKY_FEED_CREATE_ERROR_MESSAGE(0x9F2CC2439A04E7BA) and _UI_STICKY_FEED_CREATE_DEATH_FAIL_MESSAGE(0x815C4065AE6E6071) message.
 * Example: https://pastebin.com/nDrJyWq2
 *
 * @param {number} msgId
 * @param {DataView} p1
 * @param {boolean} p2
 * @return {void}
 */
global.UiStickyFeedUpdateMessage = function (msgId, p1, p2) {
  return _in(0xbc6f454e, 0x310124da, msgId, p1, p2);
};

/**
 * _UITUTORIAL_GET_IS_THREAT_INDICATOR_CAPABLE_RADAR_SHOWN
 *

 * @return {boolean}
 */
global.UitutorialGetIsThreatIndicatorCapableRadarShown = function () {
  return _in(0x2cc24a2a, 0x7a1489c4, _r);
};

/**
 * _UITUTORIAL_GET_IS_THREAT_INDICATOR_ON
 *

 * @return {boolean}
 */
global.UitutorialGetIsThreatIndicatorOn = function () {
  return _in(0xfc2e0a5e, 0x9ed4e1b4, _r);
};

/**
 * _UITUTORIAL_SET_RPG_ICON_VISIBILITY
 * enum eRpgIcons
 * {
 *   ICON_STAMINA,
 *   ICON_STAMINA_CORE,
 *   ICON_DEADEYE,
 *   ICON_DEADEYE_CORE,
 *   ICON_HEALTH,
 *   ICON_HEALTH_CORE,
 *   ICON_HORSE_HEALTH,
 *   ICON_HORSE_HEALTH_CORE,
 *   ICON_HORSE_STAMINA,
 *   ICON_HORSE_STAMINA_CORE,
 *   ICON_HORSE_COURAGE,
 *   ICON_HORSE_COURAGE_CORE
 * };
 * 
 * enum eRpgIconVisibility
 * {
 *   ICON_VISIBILITY_WAIT_TO_HIDE,
 *   ICON_VISIBILITY_ALWAYS_SHOW,
 *   ICON_VISIBILITY_ALWAYS_HIDE,
 *   ICON_VISIBILITY_ALWAYS_BLINK
 * };
 *
 * @param {number} rpgIcon
 * @param {number} visibility
 * @return {void}
 */
global.UitutorialSetRpgIconVisibility = function (rpgIcon, visibility) {
  return _in(0xc116e6df, 0x68dce667, rpgIcon, visibility);
};

/**
 * UNLOCK_IS_UNLOCKED
 *
 * @param {number} unlockHash
 * @return {boolean}
 */
global.UnlockIsUnlocked = function (unlockHash) {
  return _in(0xc4b660c7, 0xb6040e75, _ch(unlockHash), _r);
};

/**
 * UNLOCK_IS_VISIBLE
 *
 * @param {number} unlockHash
 * @return {boolean}
 */
global.UnlockIsVisible = function (unlockHash) {
  return _in(0x8588a14b, 0x75af096b, _ch(unlockHash), _r);
};

/**
 * UNLOCK_SET_UNLOCKED
 *
 * @param {number} unlockHash
 * @param {boolean} toggle
 * @return {void}
 */
global.UnlockSetUnlocked = function (unlockHash, toggle) {
  return _in(0x1b7c5ada, 0x8a6910a0, _ch(unlockHash), toggle);
};

/**
 * UNLOCK_SET_VISIBLE
 *
 * @param {number} unlockHash
 * @param {boolean} toggle
 * @return {void}
 */
global.UnlockSetVisible = function (unlockHash, toggle) {
  return _in(0x46b901a8, 0xecdb5a61, _ch(unlockHash), toggle);
};

/**
 * _UNLOCK_GET_ITEM_ROLE_UNLOCK_INFO
 *
 * @param {number} unlockHash
 * @param {DataView} outData
 * @return {void}
 */
global.UnlockGetItemRoleUnlockInfo = function (unlockHash, outData) {
  return _in(0x7c1c2062, 0xcfad06fe, _ch(unlockHash), outData);
};

/**
 * _UNLOCK_IS_LOOTABLE
 *
 * @param {number} unlockHash
 * @return {boolean}
 */
global.UnlockIsLootable = function (unlockHash) {
  return _in(0x66bf197e, 0x066050de, _ch(unlockHash), _r);
};

/**
 * _UNLOCK_IS_NEW
 *
 * @param {number} unlockHash
 * @return {boolean}
 */
global.UnlockIsNew = function (unlockHash) {
  return _in(0x644166ba, 0x7aa49dea, _ch(unlockHash), _r);
};

/**
 * _UNLOCK_IS_UNLOCK_FLAG_SET
 *
 * @param {number} unlockHash
 * @param {number} flag
 * @return {boolean}
 */
global.UnlockIsUnlockFlagSet = function (unlockHash, flag) {
  return _in(0x6b636964, 0x7f26f09f, _ch(unlockHash), flag, _r);
};

/**
 * _UNLOCK_SET_NEW
 *
 * @param {number} unlockHash
 * @param {boolean} toggle
 * @return {void}
 */
global.UnlockSetNew = function (unlockHash, toggle) {
  return _in(0xa6d79c7a, 0xef870a99, _ch(unlockHash), toggle);
};

/**
 * ADD_ROAD_NODE_SPEED_ZONE
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @return {number}
 */
global.AddRoadNodeSpeedZone = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0x4c221bac, 0x54d735c3, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, _r, _ri);
};

/**
 * ARE_ANY_VEHICLE_SEATS_FREE
 * Returns false if every seat is occupied.
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.AreAnyVehicleSeatsFree = function (vehicle) {
  return _in(0xa0a42450, 0x5a1b6429, vehicle, _r);
};

/**
 * BRING_VEHICLE_TO_HALT
 * This native makes the vehicle stop immediately
 * 
 * distance defines how far it will travel until stopping.
 *
 * @param {number} vehicle
 * @param {number} distance
 * @param {number} duration
 * @param {boolean} unknown
 * @return {void}
 */
global.BringVehicleToHalt = function (vehicle, distance, duration, unknown) {
  return _in(0x260be8f0, 0x9e326a20, vehicle, _fv(distance), duration, unknown);
};

/**
 * CAN_ANCHOR_BOAT_HERE
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.CanAnchorBoatHere = function (vehicle) {
  return _in(0xc075176c, 0xfb8b4128, vehicle, _r);
};

/**
 * CAN_SHUFFLE_SEAT
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * @param {number} vehicle
 * @param {number} seatIndex
 * @return {boolean}
 */
global.CanShuffleSeat = function (vehicle, seatIndex) {
  return _in(0xf8b2d32a, 0x2231fd24, vehicle, seatIndex, _r);
};

/**
 * CLEAR_LAST_DRIVEN_VEHICLE
 *

 * @return {void}
 */
global.ClearLastDrivenVehicle = function () {
  return _in(0x0efc5dc6, 0x2e67609b);
};

/**
 * COPY_VEHICLE_DAMAGES
 * Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
 *
 * @param {number} sourceVehicle
 * @param {number} targetVehicle
 * @return {void}
 */
global.CopyVehicleDamages = function (sourceVehicle, targetVehicle) {
  return _in(0xdbc28a8c, 0x683cd80b, sourceVehicle, targetVehicle);
};

/**
 * CREATE_VEHICLE
 *
 * @param {number} modelHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {boolean} isNetwork
 * @param {boolean} bScriptHostVeh
 * @param {boolean} bDontAutoCreateDraftAnimals
 * @param {boolean} p8
 * @return {number}
 */
global.CreateVehicle = function (modelHash, x, y, z, heading, isNetwork, bScriptHostVeh, bDontAutoCreateDraftAnimals, p8) {
  return _in(0xaf35d0d2, 0x583051b0, _ch(modelHash), _fv(x), _fv(y), _fv(z), _fv(heading), isNetwork, bScriptHostVeh, bDontAutoCreateDraftAnimals, p8, _r, _ri);
};

/**
 * DELETE_ALL_TRAINS
 *

 * @return {void}
 */
global.DeleteAllTrains = function () {
  return _in(0xa3120a13, 0x85f17ff7);
};

/**
 * DELETE_MISSION_TRAIN
 *

 * @return {number}
 */
global.DeleteMissionTrain = function () {
  return _in(0x0d3630fb, 0x07e8b570, _i);
};

/**
 * DELETE_VEHICLE
 * Deletes a vehicle.
 * The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 * 
 * eg how to use:
 * SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 * DELETE_VEHICLE(&vehicle);
 * 
 * Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
 *

 * @return {number}
 */
global.DeleteVehicle = function () {
  return _in(0xe20a909d, 0x8c4a70f8, _i);
};

/**
 * DISABLE_VEHICLE_WEAPON
 *
 * @param {boolean} disabled
 * @param {number} weaponHash
 * @param {number} vehicle
 * @param {number} owner
 * @return {void}
 */
global.DisableVehicleWeapon = function (disabled, weaponHash, vehicle, owner) {
  return _in(0x94b1e71b, 0x144356a5, disabled, _ch(weaponHash), vehicle, owner);
};

/**
 * DOES_EXTRA_EXIST
 *
 * @param {number} vehicle
 * @param {number} extraId
 * @return {boolean}
 */
global.DoesExtraExist = function (vehicle, extraId) {
  return _in(0xaf5e7e9a, 0x7620ffb5, vehicle, extraId, _r);
};

/**
 * EXPLODE_VEHICLE
 * Explodes a selected vehicle.
 * 
 * Vehicle vehicle = Vehicle you want to explode.
 * BOOL isAudible = If explosion makes a sound.
 * BOOL isInvisible = If the explosion is invisible or not.
 * 
 * First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
 *
 * @param {number} vehicle
 * @param {boolean} isAudible
 * @param {boolean} isInvisible
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.ExplodeVehicle = function (vehicle, isAudible, isInvisible, p3, p4) {
  return _in(0x75dced9e, 0xec5769d7, vehicle, isAudible, isInvisible, p3, p4);
};

/**
 * FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE
 * Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.ForcePlaybackRecordedVehicleUpdate = function (vehicle, p1) {
  return _in(0x59eca796, 0x021b0539, vehicle, p1);
};

/**
 * GET_CLOSEST_VEHICLE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} modelHash
 * @param {number} flags
 * @return {number}
 */
global.GetClosestVehicle = function (x, y, z, radius, modelHash, flags) {
  return _in(0x52f45d03, 0x3645181b, _fv(x), _fv(y), _fv(z), _fv(radius), _ch(modelHash), flags, _r, _ri);
};

/**
 * GET_CURRENT_STATION_FOR_TRAIN
 * Returns p1 for 0xBA958F68031DDBFC (stationIndex)
 *
 * @param {number} train
 * @return {number}
 */
global.GetCurrentStationForTrain = function (train) {
  return _in(0x86fa6d8b, 0x48667d75, train, _r, _ri);
};

/**
 * GET_DRAFT_ANIMAL_COUNT
 *
 * @param {number} vehicle
 * @return {[boolean, number, number]}
 */
global.GetDraftAnimalCount = function (vehicle) {
  return _in(0xa19447d8, 0x3294e29f, vehicle, _i, _i, _r);
};

/**
 * GET_DRIVER_OF_VEHICLE
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetDriverOfVehicle = function (vehicle) {
  return _in(0x2963b5c1, 0x637e8a27, vehicle, _r, _ri);
};

/**
 * GET_LAST_DRIVEN_VEHICLE
 *

 * @return {number}
 */
global.GetLastDrivenVehicle = function () {
  return _in(0xa94f3e0a, 0xb9695e19, _r, _ri);
};

/**
 * GET_LAST_PED_IN_VEHICLE_SEAT
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * @param {number} vehicle
 * @param {number} seatIndex
 * @return {number}
 */
global.GetLastPedInVehicleSeat = function (vehicle, seatIndex) {
  return _in(0x74583b19, 0xfeeafda7, vehicle, seatIndex, _r, _ri);
};

/**
 * GET_PED_IN_VEHICLE_SEAT
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * @param {number} vehicle
 * @param {number} seatIndex
 * @return {number}
 */
global.GetPedInVehicleSeat = function (vehicle, seatIndex) {
  return _in(0xbb40dd22, 0x70b65366, vehicle, seatIndex, _r, _ri);
};

/**
 * GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME
 * This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
 * 
 * See REQUEST_VEHICLE_RECORDING
 *
 * @param {number} recording
 * @param {number} time
 * @param {string | number} script
 * @return {Vector3}
 */
global.GetPositionOfVehicleRecordingAtTime = function (recording, time, script) {
  return _in(0x1a00961a, 0x1be94e5e, recording, _fv(time), _ts(script), _r, _rv);
};

/**
 * GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME
 * This native does no interpolation between pathpoints. The same rotation will be returned for all times up to the next pathpoint in the recording.
 * 
 * See REQUEST_VEHICLE_RECORDING
 *
 * @param {number} recording
 * @param {number} time
 * @param {string | number} script
 * @return {Vector3}
 */
global.GetRotationOfVehicleRecordingAtTime = function (recording, time, script) {
  return _in(0x61787dd2, 0x8b8cc0d5, recording, _fv(time), _ts(script), _r, _rv);
};

/**
 * GET_TIME_POSITION_IN_RECORDING
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetTimePositionInRecording = function (vehicle) {
  return _in(0x233b51c7, 0x913fa031, vehicle, _r, _rf);
};

/**
 * GET_TRACK_INDEX_OF_TRAIN
 *
 * @param {number} train
 * @return {number}
 */
global.GetTrackIndexOfTrain = function (train) {
  return _in(0x865fec2f, 0xa899f29c, train, _r, _ri);
};

/**
 * GET_TRAIN_CARRIAGE
 *
 * @param {number} train
 * @param {number} trailerNumber
 * @return {number}
 */
global.GetTrainCarriage = function (train, trailerNumber) {
  return _in(0xd0fb093a, 0x4cdb932c, train, trailerNumber, _r, _ri);
};

/**
 * GET_VEHICLE_BODY_HEALTH
 * Seems related to vehicle health, like the one in IV.
 * Max 1000, min 0.
 * Vehicle does not necessarily explode or become undrivable at 0.
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleBodyHealth = function (vehicle) {
  return _in(0x42113b85, 0x7e33c16e, vehicle, _r, _rf);
};

/**
 * GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER
 *
 * @param {number} vehicle
 * @param {number} player
 * @return {boolean}
 */
global.GetVehicleDoorsLockedForPlayer = function (vehicle, player) {
  return _in(0xfa2cddfe, 0xb8bc898b, vehicle, player, _r);
};

/**
 * GET_VEHICLE_DOOR_LOCK_STATUS
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleDoorLockStatus = function (vehicle) {
  return _in(0xc867fd14, 0x4f2469d3, vehicle, _r, _ri);
};

/**
 * GET_VEHICLE_ENGINE_HEALTH
 * Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
 * 
 * Minimum: -4000
 * Maximum: 1000
 * 
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleEngineHealth = function (vehicle) {
  return _in(0x90dbffac, 0x43b22081, vehicle, _r, _rf);
};

/**
 * GET_VEHICLE_ESTIMATED_MAX_SPEED
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleEstimatedMaxSpeed = function (vehicle) {
  return _in(0xfe52f344, 0x91529f0b, vehicle, _r, _rf);
};

/**
 * GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleMaxNumberOfPassengers = function (vehicle) {
  return _in(0xa9c55f1c, 0x15e62e06, vehicle, _r, _ri);
};

/**
 * GET_VEHICLE_MODEL_NUMBER_OF_SEATS
 *
 * @param {number} modelHash
 * @return {number}
 */
global.GetVehicleModelNumberOfSeats = function (modelHash) {
  return _in(0x9a578736, 0xff3a17c3, _ch(modelHash), _r, _ri);
};

/**
 * GET_VEHICLE_NUMBER_OF_PASSENGERS
 * Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleNumberOfPassengers = function (vehicle) {
  return _in(0x59f3f165, 0x77cd79b2, vehicle, _r, _ri);
};

/**
 * GET_VEHICLE_PETROL_TANK_HEALTH
 * 1000 is max health
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehiclePetrolTankHealth = function (vehicle) {
  return _in(0x1e5a9b35, 0x6d5098be, vehicle, _r, _rf);
};

/**
 * GET_VEHICLE_TRAILER_VEHICLE
 * Gets the trailer of a vehicle and puts it into the trailer parameter.
 *
 * @param {number} vehicle
 * @return {[boolean, Vehicle]}
 */
global.GetVehicleTrailerVehicle = function (vehicle) {
  return _in(0xcf867a23, 0x9ec30741, vehicle, _i, _r);
};

/**
 * HAS_INSTANT_FILL_VEHICLE_POPULATION_FINISHED
 *

 * @return {boolean}
 */
global.HasInstantFillVehiclePopulationFinished = function () {
  return _in(0x2701d01d, 0x5e18fc31, _r);
};

/**
 * HAS_VEHICLE_ASSET_LOADED
 *
 * @param {number} vehicleAsset
 * @return {boolean}
 */
global.HasVehicleAssetLoaded = function (vehicleAsset) {
  return _in(0xb935f315, 0x4bc913c8, _ch(vehicleAsset), _r);
};

/**
 * HAS_VEHICLE_RECORDING_BEEN_LOADED
 * See REQUEST_VEHICLE_RECORDING
 *
 * @param {number} recording
 * @param {string | number} script
 * @return {boolean}
 */
global.HasVehicleRecordingBeenLoaded = function (recording, script) {
  return _in(0xba9325be, 0x372ab6ea, recording, _ts(script), _r);
};

/**
 * INSTANTLY_FILL_VEHICLE_POPULATION
 *

 * @return {void}
 */
global.InstantlyFillVehiclePopulation = function () {
  return _in(0x1ff00db4, 0x3026b12f);
};

/**
 * IS_ANY_VEHICLE_NEAR_POINT
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @return {boolean}
 */
global.IsAnyVehicleNearPoint = function (x, y, z, radius) {
  return _in(0x5698ba4f, 0xd04d39c4, _fv(x), _fv(y), _fv(z), _fv(radius), _r);
};

/**
 * IS_DRAFT_VEHICLE
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsDraftVehicle = function (vehicle) {
  return _in(0xea44e978, 0x49e9f3dd, vehicle, _r);
};

/**
 * IS_ENTRY_POINT_FOR_SEAT_CLEAR
 *
 * @param {number} ped
 * @param {number} vehicle
 * @param {number} seatIndex
 * @param {boolean} side
 * @param {boolean} onEnter
 * @return {boolean}
 */
global.IsEntryPointForSeatClear = function (ped, vehicle, seatIndex, side, onEnter) {
  return _in(0x80ddccb2, 0xf4a3eb57, ped, vehicle, seatIndex, side, onEnter, _r);
};

/**
 * IS_PLAYBACK_GOING_ON_FOR_VEHICLE
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsPlaybackGoingOnForVehicle = function (vehicle) {
  return _in(0x02774b3a, 0x9034278f, vehicle, _r);
};

/**
 * IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsPlaybackUsingAiGoingOnForVehicle = function (vehicle) {
  return _in(0x5a747260, 0x6ec5b7c1, vehicle, _r);
};

/**
 * IS_SEAT_WARP_ONLY
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * @param {number} vehicle
 * @param {number} seatIndex
 * @return {boolean}
 */
global.IsSeatWarpOnly = function (vehicle, seatIndex) {
  return _in(0x7892685b, 0xf6d9775e, vehicle, seatIndex, _r);
};

/**
 * IS_THIS_MODEL_A_BOAT
 *
 * @param {number} model
 * @return {boolean}
 */
global.IsThisModelABoat = function (model) {
  return _in(0x799cfc7c, 0x5b743b15, _ch(model), _r);
};

/**
 * IS_THIS_MODEL_A_TRAIN
 *
 * @param {number} model
 * @return {boolean}
 */
global.IsThisModelATrain = function (model) {
  return _in(0xfc08c8f8, 0xc1edf174, _ch(model), _r);
};

/**
 * IS_TRAIN_WAITING_AT_STATION
 *
 * @param {number} train
 * @return {boolean}
 */
global.IsTrainWaitingAtStation = function (train) {
  return _in(0xe887bd31, 0xd97793f6, train, _r);
};

/**
 * IS_VEHICLE_DOOR_FULLY_OPEN
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * @param {number} vehicle
 * @param {number} doorId
 * @return {boolean}
 */
global.IsVehicleDoorFullyOpen = function (vehicle, doorId) {
  return _in(0x7ae19114, 0x3c7a9107, vehicle, doorId, _r);
};

/**
 * IS_VEHICLE_DRIVEABLE
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {boolean}
 */
global.IsVehicleDriveable = function (vehicle, p1, p2) {
  return _in(0xb86d29b1, 0x0f627379, vehicle, p1, p2, _r);
};

/**
 * IS_VEHICLE_EXTRA_TURNED_ON
 *
 * @param {number} vehicle
 * @param {number} extraId
 * @return {boolean}
 */
global.IsVehicleExtraTurnedOn = function (vehicle, extraId) {
  return _in(0xfa9a55d9, 0xc4351625, vehicle, extraId, _r);
};

/**
 * IS_VEHICLE_IN_BURNOUT
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsVehicleInBurnout = function (vehicle) {
  return _in(0x3f5029a8, 0xfc060c48, vehicle, _r);
};

/**
 * IS_VEHICLE_MODEL
 *
 * @param {number} vehicle
 * @param {number} model
 * @return {boolean}
 */
global.IsVehicleModel = function (vehicle, model) {
  return _in(0x0045a54e, 0xc7a22455, vehicle, _ch(model), _r);
};

/**
 * IS_VEHICLE_ON_ALL_WHEELS
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsVehicleOnAllWheels = function (vehicle) {
  return _in(0x0d5d1195, 0x29654ee0, vehicle, _r);
};

/**
 * IS_VEHICLE_SEAT_FREE
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 * Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
 *
 * @param {number} vehicle
 * @param {number} seatIndex
 * @return {boolean}
 */
global.IsVehicleSeatFree = function (vehicle, seatIndex) {
  return _in(0xe052c1b1, 0xcaa4ece4, vehicle, seatIndex, _r);
};

/**
 * IS_VEHICLE_STOPPED
 * Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
 * 
 * For some vehicles it returns true if the current speed is <= 0.00039999999.
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsVehicleStopped = function (vehicle) {
  return _in(0x78c3311a, 0x73135241, vehicle, _r);
};

/**
 * IS_VEHICLE_STUCK_TIMER_UP
 * VEH_STUCK_ON_ROOF = 0,
 * VEH_STUCK_ON_SIDE,
 * VEH_STUCK_HUNG_UP,
 * VEH_STUCK_JAMMED
 *
 * @param {number} vehicle
 * @param {number} stuckType
 * @param {number} ms
 * @return {boolean}
 */
global.IsVehicleStuckTimerUp = function (vehicle, stuckType, ms) {
  return _in(0x1aba9753, 0x939503c5, vehicle, stuckType, ms, _r);
};

/**
 * IS_VEHICLE_VISIBLE
 * Requires a visibility tracker on the vehicle (TRACK_VEHICLE_VISIBILITY)
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsVehicleVisible = function (vehicle) {
  return _in(0x424910cd, 0x5de8c246, vehicle, _r);
};

/**
 * IS_VEHICLE_WINDOW_INTACT
 *
 * @param {number} vehicle
 * @param {number} windowIndex
 * @return {boolean}
 */
global.IsVehicleWindowIntact = function (vehicle, windowIndex) {
  return _in(0x0e7910a6, 0x3e05b12c, vehicle, windowIndex, _r);
};

/**
 * IS_VEHICLE_WRECKED
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsVehicleWrecked = function (vehicle) {
  return _in(0xddbea550, 0x6c848227, vehicle, _r);
};

/**
 * LOCK_DOORS_WHEN_NO_LONGER_NEEDED
 *
 * @param {number} vehicle
 * @return {void}
 */
global.LockDoorsWhenNoLongerNeeded = function (vehicle) {
  return _in(0x1ef36558, 0xfbde2daa, vehicle);
};

/**
 * MODIFY_VEHICLE_TOP_SPEED
 *
 * @param {number} vehicle
 * @param {number} value
 * @return {void}
 */
global.ModifyVehicleTopSpeed = function (vehicle, value) {
  return _in(0x35ad938c, 0x74cacd6a, vehicle, _fv(value));
};

/**
 * REMOVE_ROAD_NODE_SPEED_ZONE
 *
 * @param {number} speedzone
 * @return {boolean}
 */
global.RemoveRoadNodeSpeedZone = function (speedzone) {
  return _in(0xfe9ab335, 0x4ace6c9c, speedzone, _r);
};

/**
 * REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.RemoveVehiclesFromGeneratorsInArea = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xc619a446, 0x39bc0cb4, p0, p1, p2, p3, p4, p5);
};

/**
 * REMOVE_VEHICLE_ASSET
 *
 * @param {number} vehicleAsset
 * @return {void}
 */
global.RemoveVehicleAsset = function (vehicleAsset) {
  return _in(0x888a4e67, 0x5b38f5ad, _ch(vehicleAsset));
};

/**
 * REMOVE_VEHICLE_RECORDING
 * See REQUEST_VEHICLE_RECORDING
 *
 * @param {any} p0
 * @param {DataView} p1
 * @return {void}
 */
global.RemoveVehicleRecording = function (p0, p1) {
  return _in(0x139e3575, 0x5418f6aa, p0, p1);
};

/**
 * REMOVE_VEHICLE_WINDOW
 * windowIndex:
 * 0 = Front Right Window
 * 1 = Front Left Window
 * 2 = Back Right Window
 * 3 = Back Left Window
 *
 * @param {number} vehicle
 * @param {number} windowIndex
 * @return {void}
 */
global.RemoveVehicleWindow = function (vehicle, windowIndex) {
  return _in(0x745f15a2, 0x15f2ddf1, vehicle, windowIndex);
};

/**
 * REQUEST_VEHICLE_ASSET
 *
 * @param {number} vehicleHash
 * @param {number} vehicleAsset
 * @return {void}
 */
global.RequestVehicleAsset = function (vehicleHash, vehicleAsset) {
  return _in(0x81a15811, 0x460fab3a, _ch(vehicleHash), vehicleAsset);
};

/**
 * REQUEST_VEHICLE_HIGH_DETAIL_MODEL
 *
 * @param {number} vehicle
 * @return {void}
 */
global.RequestVehicleHighDetailModel = function (vehicle) {
  return _in(0x84b81ef7, 0x8bd22357, vehicle);
};

/**
 * REQUEST_VEHICLE_RECORDING
 * Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
 * For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" corresponds to a unique identifier within the recording streaming module.
 * (GTA) Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
 *
 * @param {number} recording
 * @param {string | number} script
 * @return {void}
 */
global.RequestVehicleRecording = function (recording, script) {
  return _in(0xc474cf16, 0xeda45dc9, recording, _ts(script));
};

/**
 * RESET_VEHICLE_STUCK_TIMER
 *
 * @param {number} vehicle
 * @param {number} nullAttributes
 * @return {void}
 */
global.ResetVehicleStuckTimer = function (vehicle, nullAttributes) {
  return _in(0x23298b46, 0x8f7d88b6, vehicle, nullAttributes);
};

/**
 * SET_ALLOW_VEHICLE_EXPLODES_ON_CONTACT
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetAllowVehicleExplodesOnContact = function (vehicle, p1) {
  return _in(0x8d3230a0, 0xed7de39f, vehicle, p1);
};

/**
 * SET_ALL_VEHICLE_GENERATORS_ACTIVE
 *

 * @return {void}
 */
global.SetAllVehicleGeneratorsActive = function () {
  return _in(0x3d596e6e, 0x88a02c24);
};

/**
 * SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {boolean} p6
 * @param {boolean} p7
 * @return {void}
 */
global.SetAllVehicleGeneratorsActiveInArea = function (x1, y1, z1, x2, y2, z2, p6, p7) {
  return _in(0xbbb134fb, 0x9d50c0cc, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), p6, p7);
};

/**
 * SET_BOAT_ANCHOR
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetBoatAnchor = function (vehicle, toggle) {
  return _in(0xaeab044f, 0x05b92659, vehicle, toggle);
};

/**
 * SET_BOAT_LOW_LOD_ANCHOR_DISTANCE
 * Value: mostly 99999.9f
 * 
 * Old name: _SET_BOAT_MOVEMENT_RESISTANCE
 *
 * @param {number} vehicle
 * @param {number} value
 * @return {void}
 */
global.SetBoatLowLodAnchorDistance = function (vehicle, value) {
  return _in(0xe3261532, 0x550d6a9f, vehicle, _fv(value));
};

/**
 * SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER
 * Old name: _SET_BOAT_FROZEN_WHEN_ANCHORED
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.SetBoatRemainsAnchoredWhilePlayerIsDriver = function (vehicle, p1, p2) {
  return _in(0x286771f3, 0x059a37a7, vehicle, p1, p2);
};

/**
 * SET_BOAT_SINKS_WHEN_WRECKED
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetBoatSinksWhenWrecked = function (vehicle, toggle) {
  return _in(0x62a6d317, 0xa011ea1d, vehicle, toggle);
};

/**
 * SET_BREAKABLE_VEHICLE_LOCKS_UNBREAKABLE
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetBreakableVehicleLocksUnbreakable = function (vehicle, toggle) {
  return _in(0xbc4735f4, 0x8cd983ef, vehicle, toggle);
};

/**
 * SET_DISABLE_RANDOM_TRAINS_THIS_FRAME
 * nullsub, doesn't do anything
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetDisableRandomTrainsThisFrame = function (toggle) {
  return _in(0xd4288603, 0xe8766ff7, toggle);
};

/**
 * SET_DISABLE_SUPERDUMMY
 * Old name: _SET_DISABLE_SUPERDUMMY_MODE
 *
 * @param {number} vehicle
 * @param {boolean} disable
 * @return {void}
 */
global.SetDisableSuperdummy = function (vehicle, disable) {
  return _in(0x1716d787, 0xd9b94202, vehicle, disable);
};

/**
 * SET_DISABLE_VEHICLE_ENGINE_FIRES
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetDisableVehicleEngineFires = function (vehicle, p1) {
  return _in(0xd146ee5f, 0x2b06b95e, vehicle, p1);
};

/**
 * SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetDisableVehiclePetrolTankDamage = function (vehicle, toggle) {
  return _in(0x5795fbe7, 0xa2001c14, vehicle, toggle);
};

/**
 * SET_DISABLE_VEHICLE_PETROL_TANK_FIRES
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetDisableVehiclePetrolTankFires = function (vehicle, toggle) {
  return _in(0xb70986ab, 0x19b04aff, vehicle, toggle);
};

/**
 * SET_DONT_ALLOW_PLAYER_TO_ENTER_VEHICLE_IF_LOCKED_FOR_PLAYER
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetDontAllowPlayerToEnterVehicleIfLockedForPlayer = function (vehicle, p1) {
  return _in(0x63dc1f22, 0xc903b709, vehicle, p1);
};

/**
 * SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF
 * doorId: see SET_VEHICLE_DOOR_SHUT
 * 
 * Old name: _SET_VEHICLE_DOOR_CAN_BREAK
 *
 * @param {number} vehicle
 * @param {number} doorId
 * @param {boolean} isBreakable
 * @return {void}
 */
global.SetDoorAllowedToBeBrokenOff = function (vehicle, doorId, isBreakable) {
  return _in(0x081fb9d6, 0x422f804c, vehicle, doorId, isBreakable);
};

/**
 * SET_ENABLE_VEHICLE_SLIPSTREAMING
 *
 * @param {boolean} p0
 * @return {void}
 */
global.SetEnableVehicleSlipstreaming = function (p0) {
  return _in(0x73f1e4f6, 0xdf26fe30, p0);
};

/**
 * SET_FORCE_HD_VEHICLE
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetForceHdVehicle = function (vehicle, toggle) {
  return _in(0x373cb128, 0x3308bd7b, vehicle, toggle);
};

/**
 * SET_FORCE_LOW_LOD_ANCHOR_MODE
 * Sets boat to be anchored on spawn, called together with SET_BOAT_ANCHOR and _SET_BOAT_ANCHOR_BUOYANCY_COEFFICIENT
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetForceLowLodAnchorMode = function (vehicle, p1) {
  return _in(0x75b49acd, 0x73617437, vehicle, p1);
};

/**
 * SET_FORCE_VEHICLE_ENGINE_DAMAGE_BY_BULLET
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetForceVehicleEngineDamageByBullet = function (vehicle, toggle) {
  return _in(0x7f8e2b13, 0x1e1dca6c, vehicle, toggle);
};

/**
 * SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED
 * flags = 0: DEFAULT; 1: KEEP_OLD_SPEED
 *
 * @param {number} flags
 * @return {number}
 */
global.SetMissionTrainAsNoLongerNeeded = function (flags) {
  return _in(0xbbe76483, 0x49b49be8, _i, flags);
};

/**
 * SET_MISSION_TRAIN_COORDS
 *
 * @param {number} train
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.SetMissionTrainCoords = function (train, x, y, z) {
  return _in(0x76327559, 0x62ab9922, train, _fv(x), _fv(y), _fv(z));
};

/**
 * SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetParkedVehicleDensityMultiplierThisFrame = function (multiplier) {
  return _in(0xfedfa976, 0x38d61d4a, _fv(multiplier));
};

/**
 * SET_PED_OWNS_VEHICLE
 *
 * @param {number} ped
 * @param {number} vehicle
 * @return {void}
 */
global.SetPedOwnsVehicle = function (ped, vehicle) {
  return _in(0x838c216c, 0x2b05a009, ped, vehicle);
};

/**
 * SET_PLAYBACK_SPEED
 *
 * @param {number} vehicle
 * @param {number} speed
 * @return {void}
 */
global.SetPlaybackSpeed = function (vehicle, speed) {
  return _in(0xd78084ee, 0xd4cd94c6, vehicle, _fv(speed));
};

/**
 * SET_RANDOM_BOATS
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetRandomBoats = function (toggle) {
  return _in(0xf44d446d, 0x4e36db87, toggle);
};

/**
 * SET_RANDOM_TRAINS
 *
 * @param {boolean} toggle
 * @return {void}
 */
global.SetRandomTrains = function (toggle) {
  return _in(0x1156c6ee, 0x7e82a98a, toggle);
};

/**
 * SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetRandomVehicleDensityMultiplierThisFrame = function (multiplier) {
  return _in(0x1f91d444, 0x90e1ea0c, _fv(multiplier));
};

/**
 * SET_TRAIN_CRUISE_SPEED
 *
 * @param {number} train
 * @param {number} speed
 * @return {void}
 */
global.SetTrainCruiseSpeed = function (train, speed) {
  return _in(0x01021eb2, 0xe96b793c, train, _fv(speed));
};

/**
 * SET_TRAIN_OFFSET_FROM_STATION
 *
 * @param {number} train
 * @param {number} offset
 * @return {void}
 */
global.SetTrainOffsetFromStation = function (train, offset) {
  return _in(0x8ec47dd4, 0x300bf063, train, _fv(offset));
};

/**
 * SET_TRAIN_SPEED
 *
 * @param {number} train
 * @param {number} speed
 * @return {void}
 */
global.SetTrainSpeed = function (train, speed) {
  return _in(0xdfba6bbf, 0xf7ccafbb, train, _fv(speed));
};

/**
 * SET_VEHICLE_AI_CAN_USE_EXCLUSIVE_SEATS
 * Used to be incorrectly named SET_VEHICLE_EXCLUSIVE_DRIVER
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleAiCanUseExclusiveSeats = function (vehicle, toggle) {
  return _in(0x0893dafb, 0xfa67110e, vehicle, toggle);
};

/**
 * SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleAllowHomingMissleLockon = function (vehicle, toggle) {
  return _in(0x1240e859, 0x6a8308b9, vehicle, toggle);
};

/**
 * SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON
 * Makes the vehicle accept no passengers.
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleAllowNoPassengersLockon = function (vehicle, toggle) {
  return _in(0xecb9e9bc, 0x887e8060, vehicle, toggle);
};

/**
 * SET_VEHICLE_AUTOMATICALLY_ATTACHES
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @param {any} p2
 * @return {any}
 */
global.SetVehicleAutomaticallyAttaches = function (vehicle, p1, p2) {
  return _in(0x50135495, 0x1cd942de, vehicle, p1, p2, _r);
};

/**
 * SET_VEHICLE_BODY_HEALTH
 *
 * @param {number} vehicle
 * @param {number} value
 * @return {void}
 */
global.SetVehicleBodyHealth = function (vehicle, value) {
  return _in(0x55ccaae4, 0xf28c67a0, vehicle, _fv(value));
};

/**
 * SET_VEHICLE_BROKEN_PARTS_DONT_AFFECT_AI_HANDLING
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetVehicleBrokenPartsDontAffectAiHandling = function (vehicle, p1) {
  return _in(0xcec4ca2c, 0xab8fa98c, vehicle, p1);
};

/**
 * SET_VEHICLE_CAN_BE_TARGETTED
 *
 * @param {number} vehicle
 * @param {boolean} state
 * @return {void}
 */
global.SetVehicleCanBeTargetted = function (vehicle, state) {
  return _in(0x05254ba0, 0xb44adc16, vehicle, state);
};

/**
 * SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleCanBeUsedByFleeingPeds = function (vehicle, toggle) {
  return _in(0xe4295251, 0x0f84afdb, vehicle, toggle);
};

/**
 * SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED
 *
 * @param {number} vehicle
 * @param {boolean} state
 * @return {void}
 */
global.SetVehicleCanBeVisiblyDamaged = function (vehicle, state) {
  return _in(0x4bf8131a, 0xe811541c, vehicle, state);
};

/**
 * SET_VEHICLE_CAN_BREAK
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleCanBreak = function (vehicle, toggle) {
  return _in(0xc5ed9d59, 0xb4646611, vehicle, toggle);
};

/**
 * SET_VEHICLE_CAN_EJECT_PASSENGERS_IF_LOCKED
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetVehicleCanEjectPassengersIfLocked = function (vehicle, p1) {
  return _in(0x065d03a9, 0xd6b2c6b5, vehicle, p1);
};

/**
 * SET_VEHICLE_DAMAGE
 * Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
 * 
 * Radius of effect damage applied in a sphere at impact location
 *
 * @param {number} vehicle
 * @param {number} xOffset
 * @param {number} yOffset
 * @param {number} zOffset
 * @param {number} damage
 * @param {number} radius
 * @param {boolean} p6
 * @return {void}
 */
global.SetVehicleDamage = function (vehicle, xOffset, yOffset, zOffset, damage, radius, p6) {
  return _in(0x1d7678f8, 0x1452bb41, vehicle, _fv(xOffset), _fv(yOffset), _fv(zOffset), _fv(damage), _fv(radius), p6);
};

/**
 * SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
 *
 * @param {number} multiplier
 * @return {void}
 */
global.SetVehicleDensityMultiplierThisFrame = function (multiplier) {
  return _in(0x606374eb, 0xfc27b133, _fv(multiplier));
};

/**
 * SET_VEHICLE_DIRT_LEVEL
 *
 * @param {number} vehicle
 * @param {number} dirtLevel
 * @return {void}
 */
global.SetVehicleDirtLevel = function (vehicle, dirtLevel) {
  return _in(0x758c3460, 0xee915d0a, vehicle, _fv(dirtLevel));
};

/**
 * SET_VEHICLE_DOORS_LOCKED
 *
 * @param {number} vehicle
 * @param {number} doorLockStatus
 * @return {void}
 */
global.SetVehicleDoorsLocked = function (vehicle, doorLockStatus) {
  return _in(0x96f78a6a, 0x075d55d9, vehicle, doorLockStatus);
};

/**
 * SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleDoorsLockedForAllPlayers = function (vehicle, toggle) {
  return _in(0x2381977d, 0xa948f8dc, vehicle, toggle);
};

/**
 * SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER
 *
 * @param {number} vehicle
 * @param {number} player
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleDoorsLockedForPlayer = function (vehicle, player, toggle) {
  return _in(0x359a8ea1, 0xfb8d6f0f, vehicle, player, toggle);
};

/**
 * SET_VEHICLE_DOORS_LOCKED_FOR_TEAM
 *
 * @param {number} vehicle
 * @param {number} team
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleDoorsLockedForTeam = function (vehicle, team, toggle) {
  return _in(0xe712bc97, 0x8770f105, vehicle, team, toggle);
};

/**
 * SET_VEHICLE_DOORS_SHUT
 * Closes all doors of a vehicle:
 *
 * @param {number} vehicle
 * @param {boolean} closeInstantly
 * @return {void}
 */
global.SetVehicleDoorsShut = function (vehicle, closeInstantly) {
  return _in(0xa4ffcd64, 0x5b11f25a, vehicle, closeInstantly);
};

/**
 * SET_VEHICLE_DOORS_TO_OPEN_AT_ANY_DISTANCE
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleDoorsToOpenAtAnyDistance = function (vehicle, toggle) {
  return _in(0x362cedd2, 0xa41e0747, vehicle, toggle);
};

/**
 * SET_VEHICLE_DOOR_BROKEN
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * @param {number} vehicle
 * @param {number} doorId
 * @param {boolean} deleteDoor
 * @return {void}
 */
global.SetVehicleDoorBroken = function (vehicle, doorId, deleteDoor) {
  return _in(0x9666cf20, 0xa1c6d780, vehicle, doorId, deleteDoor);
};

/**
 * SET_VEHICLE_DOOR_CONTROL
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * @param {number} vehicle
 * @param {number} doorId
 * @param {number} speed
 * @param {number} angle
 * @return {void}
 */
global.SetVehicleDoorControl = function (vehicle, doorId, speed, angle) {
  return _in(0xd57f10eb, 0xba814ecf, vehicle, doorId, speed, _fv(angle));
};

/**
 * SET_VEHICLE_DOOR_LATCHED
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * @param {number} vehicle
 * @param {number} doorId
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {void}
 */
global.SetVehicleDoorLatched = function (vehicle, doorId, p2, p3, p4) {
  return _in(0x06f8a202, 0xeb312a3c, vehicle, doorId, p2, p3, p4);
};

/**
 * SET_VEHICLE_DOOR_OPEN
 * doorId: see SET_VEHICLE_DOOR_SHUT
 * Can also be used on trains and its wagons
 *
 * @param {number} vehicle
 * @param {number} doorId
 * @param {boolean} loose
 * @param {boolean} openInstantly
 * @return {void}
 */
global.SetVehicleDoorOpen = function (vehicle, doorId, loose, openInstantly) {
  return _in(0x550ce392, 0xa4672412, vehicle, doorId, loose, openInstantly);
};

/**
 * SET_VEHICLE_DOOR_SHUT
 * doorId: enum eDoorId
 * {
 *   VEH_EXT_DOOR_INVALID_ID = -1,
 *   VEH_EXT_DOOR_DSIDE_F,
 *   VEH_EXT_DOOR_DSIDE_M,
 *   VEH_EXT_DOOR_DSIDE_M1,
 *   VEH_EXT_DOOR_DSIDE_M2,
 *   VEH_EXT_DOOR_DSIDE_R,
 *   VEH_EXT_DOOR_PSIDE_F,
 *   VEH_EXT_DOOR_PSIDE_M,
 *   VEH_EXT_DOOR_PSIDE_M1,
 *   VEH_EXT_DOOR_PSIDE_M2,
 *   VEH_EXT_DOOR_PSIDE_R,
 *   VEH_EXT_BONNET,
 *   VEH_EXT_BOOT
 * };
 *
 * @param {number} vehicle
 * @param {number} doorId
 * @param {boolean} closeInstantly
 * @return {void}
 */
global.SetVehicleDoorShut = function (vehicle, doorId, closeInstantly) {
  return _in(0x6a3c24b9, 0x1fd0ea09, vehicle, doorId, closeInstantly);
};

/**
 * SET_VEHICLE_ENGINE_CAN_DEGRADE
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleEngineCanDegrade = function (vehicle, toggle) {
  return _in(0x48e4c137, 0xa71c2688, vehicle, toggle);
};

/**
 * SET_VEHICLE_ENGINE_HEALTH
 * 1000 is max health
 * Begins leaking gas at around 650 health
 * -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
 * 
 * -------------------------
 * Minimum: -4000
 * Maximum: 1000
 * 
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 *
 * @param {number} vehicle
 * @param {number} health
 * @return {void}
 */
global.SetVehicleEngineHealth = function (vehicle, health) {
  return _in(0x8bdc5b99, 0x8b4654ef, vehicle, _fv(health));
};

/**
 * SET_VEHICLE_ENGINE_ON
 * Starts or stops the engine on the specified vehicle.
 * 
 * vehicle: The vehicle to start or stop the engine on.
 * value: true to turn the vehicle on; false to turn it off.
 * instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
 *
 * @param {number} vehicle
 * @param {boolean} value
 * @param {boolean} instantly
 * @return {void}
 */
global.SetVehicleEngineOn = function (vehicle, value, instantly) {
  return _in(0xb64cfa14, 0xcb9a2e78, vehicle, value, instantly);
};

/**
 * SET_VEHICLE_EXCLUSIVE_DRIVER
 * index: 0 - 1
 * 
 * Used to be incorrectly named _SET_VEHICLE_EXCLUSIVE_DRIVER_2
 *
 * @param {number} vehicle
 * @param {number} ped
 * @param {number} index
 * @return {void}
 */
global.SetVehicleExclusiveDriver = function (vehicle, ped, index) {
  return _in(0xc6b9bf12, 0x3b9463b6, vehicle, ped, index);
};

/**
 * SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE
 * Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleExplodesOnHighExplosionDamage = function (vehicle, toggle) {
  return _in(0xa402939c, 0x6761e1a3, vehicle, toggle);
};

/**
 * SET_VEHICLE_EXTRA
 * Note: only some vehicle have extras
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_extras.lua
 *
 * @param {number} vehicle
 * @param {number} extraId
 * @param {boolean} disable
 * @return {void}
 */
global.SetVehicleExtra = function (vehicle, extraId, disable) {
  return _in(0xbb6f8915, 0x0bc9d16b, vehicle, extraId, disable);
};

/**
 * SET_VEHICLE_FIXED
 * This fixes a vehicle.
 * If the vehicle's engine's broken then you cannot fix it with this native.
 *
 * @param {number} vehicle
 * @return {void}
 */
global.SetVehicleFixed = function (vehicle) {
  return _in(0x79811282, 0xa9d1ae56, vehicle);
};

/**
 * SET_VEHICLE_FORWARD_SPEED
 *
 * @param {number} vehicle
 * @param {number} speed
 * @return {void}
 */
global.SetVehicleForwardSpeed = function (vehicle, speed) {
  return _in(0xf9f92af4, 0x9f12f6e7, vehicle, _fv(speed));
};

/**
 * SET_VEHICLE_HANDBRAKE
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleHandbrake = function (vehicle, toggle) {
  return _in(0x91be51ae, 0xc4e99710, vehicle, toggle);
};

/**
 * SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER
 *
 * @param {number} vehicle
 * @param {boolean} owned
 * @return {void}
 */
global.SetVehicleHasBeenOwnedByPlayer = function (vehicle, owned) {
  return _in(0xbb5a3fa8, 0xed3979c5, vehicle, owned);
};

/**
 * SET_VEHICLE_HAS_STRONG_AXLES
 * if true, axles won't bend.
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleHasStrongAxles = function (vehicle, toggle) {
  return _in(0x252253c8, 0xa45aa1fc, vehicle, toggle);
};

/**
 * SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetVehicleHasUnbreakableLights = function (vehicle, p1) {
  return _in(0xc903855e, 0x028a05f2, vehicle, p1);
};

/**
 * SET_VEHICLE_INACTIVE_DURING_PLAYBACK
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleInactiveDuringPlayback = function (vehicle, toggle) {
  return _in(0x4ea71b4c, 0x9db3c3f1, vehicle, toggle);
};

/**
 * SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * @param {number} vehicle
 * @param {number} doorId
 * @param {number} doorLockStatus
 * @return {void}
 */
global.SetVehicleIndividualDoorsLocked = function (vehicle, doorId, doorLockStatus) {
  return _in(0xa9f1d751, 0x95cc40f6, vehicle, doorId, doorLockStatus);
};

/**
 * SET_VEHICLE_INFLUENCES_WANTED_LEVEL
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleInfluencesWantedLevel = function (vehicle, toggle) {
  return _in(0xc1842f40, 0xfd501da2, vehicle, toggle);
};

/**
 * SET_VEHICLE_IS_CONSIDERED_BY_PLAYER
 * Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleIsConsideredByPlayer = function (vehicle, toggle) {
  return _in(0x54800d38, 0x6c5825e5, vehicle, toggle);
};

/**
 * SET_VEHICLE_IS_STOLEN
 *
 * @param {number} vehicle
 * @param {boolean} isStolen
 * @return {void}
 */
global.SetVehicleIsStolen = function (vehicle, isStolen) {
  return _in(0x6c32fc81, 0xdff25c9a, vehicle, isStolen);
};

/**
 * SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleKeepEngineOnWhenAbandoned = function (vehicle, toggle) {
  return _in(0x1549ba7f, 0xe83a2383, vehicle, toggle);
};

/**
 * SET_VEHICLE_LIGHTS
 * Sets the vehicle's lights state.
 *
 * @param {number} vehicle
 * @param {number} state
 * @return {void}
 */
global.SetVehicleLights = function (vehicle, state) {
  return _in(0x629f0a0e, 0x952cae7d, vehicle, state);
};

/**
 * SET_VEHICLE_LIMIT_SPEED_WHEN_PLAYER_INACTIVE
 * _SET_VEHICLE_LI*
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetVehicleLimitSpeedWhenPlayerInactive = function (vehicle, p1) {
  return _in(0x8f75941c, 0x86eebfca, vehicle, p1);
};

/**
 * SET_VEHICLE_LOD_MULTIPLIER
 *
 * @param {number} vehicle
 * @param {number} multiplier
 * @return {void}
 */
global.SetVehicleLodMultiplier = function (vehicle, multiplier) {
  return _in(0x5f5e2b1b, 0x9eaecc0f, vehicle, _fv(multiplier));
};

/**
 * SET_VEHICLE_MAY_BE_USED_BY_GOTO_POINT_ANY_MEANS
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetVehicleMayBeUsedByGotoPointAnyMeans = function (vehicle, p1) {
  return _in(0x7549b9e8, 0x41940695, vehicle, p1);
};

/**
 * SET_VEHICLE_NOT_STEALABLE_AMBIENTLY
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetVehicleNotStealableAmbiently = function (vehicle, p1) {
  return _in(0x09c970ae, 0x59abf6b2, vehicle, p1);
};

/**
 * SET_VEHICLE_ON_GROUND_PROPERLY
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {boolean}
 */
global.SetVehicleOnGroundProperly = function (vehicle, p1) {
  return _in(0x72633325, 0x01e07f52, vehicle, p1, _r);
};

/**
 * SET_VEHICLE_PETROL_TANK_HEALTH
 * 1000 is max health
 *
 * @param {number} vehicle
 * @param {number} health
 * @return {void}
 */
global.SetVehiclePetrolTankHealth = function (vehicle, health) {
  return _in(0x6ab2918e, 0xe3bec94c, vehicle, _fv(health));
};

/**
 * SET_VEHICLE_PROVIDES_COVER
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleProvidesCover = function (vehicle, toggle) {
  return _in(0x65271247, 0x8f1721f4, vehicle, toggle);
};

/**
 * SET_VEHICLE_RESPECTS_LOCKS_WHEN_HAS_DRIVER
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetVehicleRespectsLocksWhenHasDriver = function (vehicle, p1) {
  return _in(0x33992a80, 0x8df1c1ba, vehicle, p1);
};

/**
 * SET_VEHICLE_SHOOT_AT_TARGET
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {void}
 */
global.SetVehicleShootAtTarget = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xb79be78c, 0x665b3e6d, p0, p1, p2, p3, p4, p5);
};

/**
 * SET_VEHICLE_STAYS_FROZEN_WHEN_CLEANED_UP
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleStaysFrozenWhenCleanedUp = function (vehicle, toggle) {
  return _in(0x23a3ab86, 0xe0807721, vehicle, toggle);
};

/**
 * SET_VEHICLE_STEER_BIAS
 * Locks the vehicle's steering to the desired angle, explained below.
 * 
 * Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
 * 
 * Steer bias:
 * -1.0 = full right
 * 0.0 = centered steering
 * 1.0 = full left
 *
 * @param {number} vehicle
 * @param {number} value
 * @return {void}
 */
global.SetVehicleSteerBias = function (vehicle, value) {
  return _in(0x84daae11, 0xe9ee4fc3, vehicle, _fv(value));
};

/**
 * SET_VEHICLE_STOP_INSTANTLY_WHEN_PLAYER_INACTIVE
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetVehicleStopInstantlyWhenPlayerInactive = function (vehicle, p1) {
  return _in(0xc84e1384, 0x48507567, vehicle, p1);
};

/**
 * SET_VEHICLE_STRONG
 * If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleStrong = function (vehicle, toggle) {
  return _in(0xab315515, 0xc9f8803d, vehicle, toggle);
};

/**
 * SET_VEHICLE_TYRES_CAN_BURST
 * Allows you to toggle bulletproof tires.
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleTyresCanBurst = function (vehicle, toggle) {
  return _in(0xebd0a4e9, 0x35106fe5, vehicle, toggle);
};

/**
 * SET_VEHICLE_UNDRIVEABLE
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleUndriveable = function (vehicle, toggle) {
  return _in(0x6e884bab, 0x713a2a94, vehicle, toggle);
};

/**
 * SET_VEHICLE_WHEELS_CAN_BREAK
 *
 * @param {number} vehicle
 * @param {boolean} enabled
 * @return {void}
 */
global.SetVehicleWheelsCanBreak = function (vehicle, enabled) {
  return _in(0x839137c4, 0x0275fb77, vehicle, enabled);
};

/**
 * SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.SetVehicleWheelsCanBreakOffWhenBlowUp = function (vehicle, toggle) {
  return _in(0xc462c793, 0x79abbcb1, vehicle, toggle);
};

/**
 * SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE
 * SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
 *
 * @param {number} vehicle
 * @param {number} time
 * @return {void}
 */
global.SkipTimeInPlaybackRecordedVehicle = function (vehicle, time) {
  return _in(0x5f5e6379, 0xc59efc56, vehicle, _fv(time));
};

/**
 * START_PLAYBACK_RECORDED_VEHICLE
 * p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).
 * 
 * See REQUEST_VEHICLE_RECORDING
 *
 * @param {number} vehicle
 * @param {number} recording
 * @param {string | number} script
 * @param {boolean} p3
 * @return {void}
 */
global.StartPlaybackRecordedVehicle = function (vehicle, recording, script, p3) {
  return _in(0x4932b84e, 0x3276508e, vehicle, recording, _ts(script), p3);
};

/**
 * START_VEHICLE_HORN
 * Sounds the horn for the specified vehicle.
 * 
 * vehicle: The vehicle to activate the horn for.
 * mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
 * duration: The duration to sound the horn, in milliseconds.
 * 
 * Note: If a player is in the vehicle, it will only sound briefly.
 *
 * @param {number} vehicle
 * @param {number} duration
 * @param {number} mode
 * @param {boolean} forever
 * @return {void}
 */
global.StartVehicleHorn = function (vehicle, duration, mode, forever) {
  return _in(0xb4e3bfc3, 0x9ca16057, vehicle, duration, _ch(mode), forever);
};

/**
 * STOP_BRINGING_VEHICLE_TO_HALT
 * Old name: _STOP_BRING_VEHICLE_TO_HALT
 *
 * @param {number} vehicle
 * @return {void}
 */
global.StopBringingVehicleToHalt = function (vehicle) {
  return _in(0x7c06330b, 0xfdda182e, vehicle);
};

/**
 * STOP_PLAYBACK_RECORDED_VEHICLE
 *
 * @param {number} vehicle
 * @return {void}
 */
global.StopPlaybackRecordedVehicle = function (vehicle) {
  return _in(0xbf9b4d62, 0x67e8c26d, vehicle);
};

/**
 * TRACK_VEHICLE_VISIBILITY
 *
 * @param {number} vehicle
 * @return {void}
 */
global.TrackVehicleVisibility = function (vehicle) {
  return _in(0x1f3969b1, 0x40dee157, vehicle);
};

/**
 * _0x012701ED938B85DE
 * Only used in SP Scripts.
 * Related to Vehicle Speed.
 *
 * @param {number} p0
 * @param {number} p1
 * @return {void}
 */
global.N_0x012701ED938B85DE = function (p0, p1) {
  return _in(0x012701ed, 0x938b85de, _fv(p0), _fv(p1));
};

/**
 * _0x0355FE37240E2C77
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0355FE37240E2C77 = function (p0, p1) {
  return _in(0x0355fe37, 0x240e2c77, p0, p1);
};

/**
 * _0x04F0579DBDD32F34
 * _SET_VEHICLE_*
 *
 * @param {number} vehicle
 * @return {void}
 */
global.N_0x04F0579DBDD32F34 = function (vehicle) {
  return _in(0x04f0579d, 0xbdd32f34, vehicle);
};

/**
 * _0x0516FAE561276EFC
 * Takes value returned from 0x45853F4E17D847D5
 *
 * @param {number} trackIndex
 * @return {boolean}
 */
global.N_0x0516FAE561276EFC = function (trackIndex) {
  return _in(0x0516fae5, 0x61276efc, trackIndex, _r);
};

/**
 * _0x06A09A6E0C6D2A84
 * _SET_TRAIN_*
 *
 * @param {number} train
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x06A09A6E0C6D2A84 = function (train, p1) {
  return _in(0x06a09a6e, 0x0c6d2a84, train, p1);
};

/**
 * _0x0794199B25E499E1
 * _SET_VEHICLE_S*
 *
 * @param {number} wagon
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x0794199B25E499E1 = function (wagon, p1) {
  return _in(0x0794199b, 0x25e499e1, wagon, p1);
};

/**
 * _0x07E2E21E799080A0
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x07E2E21E799080A0 = function (p0, p1) {
  return _in(0x07e2e21e, 0x799080a0, p0, p1);
};

/**
 * _0x09034479E6E3E269
 * _RESET_VEHICLE_*
 *
 * @param {number} train
 * @return {[any, number, number]}
 */
global.N_0x09034479E6E3E269 = function (train) {
  return _in(0x09034479, 0xe6e3e269, train, _i, _i, _r);
};

/**
 * _0x0BA4250D20007C2E
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x0BA4250D20007C2E = function (p0) {
  return _in(0x0ba4250d, 0x20007c2e, p0, _r);
};

/**
 * _0x0CD7914D17A970AB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x0CD7914D17A970AB = function (p0, p1) {
  return _in(0x0cd7914d, 0x17a970ab, p0, p1);
};

/**
 * _0x0D5FDF0D36FA10CD
 *
 * @param {number} trackIndex
 * @return {void}
 */
global.N_0x0D5FDF0D36FA10CD = function (trackIndex) {
  return _in(0x0d5fdf0d, 0x36fa10cd, trackIndex);
};

/**
 * _0x0E558D3A49D759D6
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x0E558D3A49D759D6 = function (p0, p1) {
  return _in(0x0e558d3a, 0x49d759d6, p0, p1, _r);
};

/**
 * _0x0F7F603BDE08C4D3
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x0F7F603BDE08C4D3 = function (p0) {
  return _in(0x0f7f603b, 0xde08c4d3, p0);
};

/**
 * _0x0FDDEE66E3465726
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x0FDDEE66E3465726 = function (p0) {
  return _in(0x0fddee66, 0xe3465726, p0, _r);
};

/**
 * _0x104D9A7B1C0D0783
 *
 * @param {number} vehicle
 * @param {number} p1
 * @return {void}
 */
global.N_0x104D9A7B1C0D0783 = function (vehicle, p1) {
  return _in(0x104d9a7b, 0x1c0d0783, vehicle, _fv(p1));
};

/**
 * _0x1121B07088ED3013
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x1121B07088ED3013 = function (p0) {
  return _in(0x1121b070, 0x88ed3013, p0, _r);
};

/**
 * _0x1180A2974D251B7B
 * Returns p1 for 0xBA958F68031DDBFC (stationIndex)
 * _GET_N* (NEAREST_STATION_FOR_TRAIN?)
 *
 * @param {number} train
 * @return {number}
 */
global.N_0x1180A2974D251B7B = function (train) {
  return _in(0x1180a297, 0x4d251b7b, train, _r, _ri);
};

/**
 * _0x12F6C6ED3EFF42DE
 * Params: coords = GET_ENTITY_VELOCITY
 * _SET_VELOCITY*
 *
 * @param {number} vehicle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.N_0x12F6C6ED3EFF42DE = function (vehicle, x, y, z) {
  return _in(0x12f6c6ed, 0x3eff42de, vehicle, _fv(x), _fv(y), _fv(z));
};

/**
 * _0x13C190302369308B
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x13C190302369308B = function (p0) {
  return _in(0x13c19030, 0x2369308b, p0, _r);
};

/**
 * _0x13EB275BF81636D1
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x13EB275BF81636D1 = function (p0, p1) {
  return _in(0x13eb275b, 0xf81636d1, p0, p1);
};

/**
 * _0x14DA8C4BC2CCD90A
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x14DA8C4BC2CCD90A = function (p0) {
  return _in(0x14da8c4b, 0xc2ccd90a, p0, _r);
};

/**
 * _0x15206E88FF7617DF
 *
 * @param {number} trackIndex
 * @param {number} p1
 * @return {void}
 */
global.N_0x15206E88FF7617DF = function (trackIndex, p1) {
  return _in(0x15206e88, 0xff7617df, trackIndex, _fv(p1));
};

/**
 * _0x15CC8C33D7FFCC4A
 *
 * @param {number} vehicle
 * @param {number} p1
 * @return {void}
 */
global.N_0x15CC8C33D7FFCC4A = function (vehicle, p1) {
  return _in(0x15cc8c33, 0xd7ffcc4a, vehicle, p1);
};

/**
 * _0x160C1B5AB48AB87C
 *
 * @param {number} train
 * @param {number} p1
 * @return {void}
 */
global.N_0x160C1B5AB48AB87C = function (train, p1) {
  return _in(0x160c1b5a, 0xb48ab87c, train, _fv(p1));
};

/**
 * _0x165BE2001E5E4B75
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x165BE2001E5E4B75 = function (p0) {
  return _in(0x165be200, 0x1e5e4b75, p0);
};

/**
 * _0x16B86A49E072AA85
 *

 * @return {void}
 */
global.N_0x16B86A49E072AA85 = function () {
  return _in(0x16b86a49, 0xe072aa85);
};

/**
 * _0x172E9DD35858DCD7
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x172E9DD35858DCD7 = function (p0) {
  return _in(0x172e9dd3, 0x5858dcd7, p0);
};

/**
 * _0x18714953CCED17D3
 * _ARE_ANY_VEHICLE_(WHEELS_DESTROYED?)*
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.N_0x18714953CCED17D3 = function (vehicle) {
  return _in(0x18714953, 0xcced17d3, vehicle, _r);
};

/**
 * _0x1A861F899EBBE17C
 *
 * @param {number} train
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x1A861F899EBBE17C = function (train, p1) {
  return _in(0x1a861f89, 0x9ebbe17c, train, p1);
};

/**
 * _0x1BFBAFCC6760FF02
 *
 * @param {number} train
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x1BFBAFCC6760FF02 = function (train, p1) {
  return _in(0x1bfbafcc, 0x6760ff02, train, p1);
};

/**
 * _0x2045429505158D1A
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x2045429505158D1A = function (p0) {
  return _in(0x20454295, 0x05158d1a, p0, _r);
};

/**
 * _0x2200AB13CBD10F4E
 *
 * @param {number} vehicle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} p4
 * @param {number} p5
 * @return {void}
 */
global.N_0x2200AB13CBD10F4E = function (vehicle, x, y, z, p4, p5) {
  return _in(0x2200ab13, 0xcbd10f4e, vehicle, _fv(x), _fv(y), _fv(z), p4, _fv(p5));
};

/**
 * _0x23F66C36F8E5EAAB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x23F66C36F8E5EAAB = function (p0, p1) {
  return _in(0x23f66c36, 0xf8e5eaab, p0, p1);
};

/**
 * _0x27E3F2B57209FA54
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x27E3F2B57209FA54 = function (p0, p1) {
  return _in(0x27e3f2b5, 0x7209fa54, p0, p1);
};

/**
 * _0x288CBB414C3C2FBB
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x288CBB414C3C2FBB = function (p0) {
  return _in(0x288cbb41, 0x4c3c2fbb, p0, _r);
};

/**
 * _0x2A7413168F6CD5A8
 *

 * @return {void}
 */
global.N_0x2A7413168F6CD5A8 = function () {
  return _in(0x2a741316, 0x8f6cd5a8);
};

/**
 * _0x2BB2B5BCF0DF8008
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x2BB2B5BCF0DF8008 = function (p0, p1) {
  return _in(0x2bb2b5bc, 0xf0df8008, p0, p1);
};

/**
 * _0x2C46D2A591D8C322
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x2C46D2A591D8C322 = function (p0, p1, p2) {
  return _in(0x2c46d2a5, 0x91d8c322, p0, p1, p2, _r);
};

/**
 * _0x3053064F909B5F42
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3053064F909B5F42 = function (p0, p1) {
  return _in(0x3053064f, 0x909b5f42, p0, p1);
};

/**
 * _0x3137EDC899E6DAE4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3137EDC899E6DAE4 = function (p0, p1) {
  return _in(0x3137edc8, 0x99e6dae4, p0, p1);
};

/**
 * _0x331CBD247FC5DAA8
 * Returns trackIndex
 *
 * @param {number} configHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} direction
 * @param {boolean} p5
 * @return {number}
 */
global.N_0x331CBD247FC5DAA8 = function (configHash, x, y, z, direction, p5) {
  return _in(0x331cbd24, 0x7fc5daa8, _ch(configHash), _fv(x), _fv(y), _fv(z), direction, p5, _r, _ri);
};

/**
 * _0x34BCF6209B9668A7
 *
 * @param {number} trackIndex
 * @param {any} p1
 * @return {void}
 */
global.N_0x34BCF6209B9668A7 = function (trackIndex, p1) {
  return _in(0x34bcf620, 0x9b9668a7, trackIndex, p1);
};

/**
 * _0x37D238BE69F7378A
 *
 * @param {number} trackIndex
 * @return {boolean}
 */
global.N_0x37D238BE69F7378A = function (trackIndex) {
  return _in(0x37d238be, 0x69f7378a, trackIndex, _r);
};

/**
 * _0x38E7DD70A242D5CB
 *
 * @param {number} trackIndex
 * @param {number} p1
 * @return {void}
 */
global.N_0x38E7DD70A242D5CB = function (trackIndex, p1) {
  return _in(0x38e7dd70, 0xa242d5cb, trackIndex, p1);
};

/**
 * _0x3ABFA128F5BF5A70
 * Called together with 0xE6C5E2125EB210C1 in R* Script medium_update
 *
 * @param {number} trainTrack
 * @param {number} junctionIndex
 * @param {boolean} enabled
 * @return {void}
 */
global.N_0x3ABFA128F5BF5A70 = function (trainTrack, junctionIndex, enabled) {
  return _in(0x3abfa128, 0xf5bf5a70, _ch(trainTrack), junctionIndex, enabled);
};

/**
 * _0x3D86997A86FEEF0D
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x3D86997A86FEEF0D = function (p0, p1) {
  return _in(0x3d86997a, 0x86feef0d, p0, p1);
};

/**
 * _0x41365DB586CD9E8E
 *
 * @param {number} trackIndex
 * @param {number} p1
 * @return {void}
 */
global.N_0x41365DB586CD9E8E = function (trackIndex, p1) {
  return _in(0x41365db5, 0x86cd9e8e, trackIndex, _fv(p1));
};

/**
 * _0x41F0B254DDF71473
 * _H*
 *
 * @param {number} wagon
 * @return {void}
 */
global.N_0x41F0B254DDF71473 = function (wagon) {
  return _in(0x41f0b254, 0xddf71473, wagon);
};

/**
 * _0x42404D57D621601A
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x42404D57D621601A = function (p0) {
  return _in(0x42404d57, 0xd621601a, p0, _r);
};

/**
 * _0x427C919E9809E370
 *
 * @param {number} trackIndex
 * @param {number} p1
 * @return {void}
 */
global.N_0x427C919E9809E370 = function (trackIndex, p1) {
  return _in(0x427c919e, 0x9809e370, trackIndex, p1);
};

/**
 * _0x485B05EF05B9AEE9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x485B05EF05B9AEE9 = function (p0, p1) {
  return _in(0x485b05ef, 0x05b9aee9, p0, p1);
};

/**
 * _0x4C05B42A8D937796
 *

 * @return {void}
 */
global.N_0x4C05B42A8D937796 = function () {
  return _in(0x4c05b42a, 0x8d937796);
};

/**
 * _0x4C60C333F9CCA2B6
 * Params: p1 usually true in R* Scripts
 * _SET_DRAFT_VEHICLE_*
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x4C60C333F9CCA2B6 = function (vehicle, p1) {
  return _in(0x4c60c333, 0xf9cca2b6, vehicle, p1);
};

/**
 * _0x51C7694E140FAE43
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x51C7694E140FAE43 = function (p0) {
  return _in(0x51c7694e, 0x140fae43, p0, _r);
};

/**
 * _0x5AADC7BBBB1BCEEB
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {void}
 */
global.N_0x5AADC7BBBB1BCEEB = function (p0, p1, p2, p3, p4) {
  return _in(0x5aadc7bb, 0xbb1bceeb, p0, p1, p2, p3, p4);
};

/**
 * _0x615B3B8E73634509
 *
 * @param {number} trackIndex
 * @param {number} p1
 * @return {void}
 */
global.N_0x615B3B8E73634509 = function (trackIndex, p1) {
  return _in(0x615b3b8e, 0x73634509, trackIndex, _fv(p1));
};

/**
 * _0x63509DDF102E08E8
 *
 * @param {number} trackIndex
 * @param {number} p1
 * @return {void}
 */
global.N_0x63509DDF102E08E8 = function (trackIndex, p1) {
  return _in(0x63509ddf, 0x102e08e8, trackIndex, p1);
};

/**
 * _0x6355602C02EDC6DF
 * Only used in R* Script beat_train_holdup: p1 = 1
 *
 * @param {number} entity
 * @param {any} p1
 * @return {void}
 */
global.N_0x6355602C02EDC6DF = function (entity, p1) {
  return _in(0x6355602c, 0x02edc6df, entity, p1);
};

/**
 * _0x6703872EC09BC158
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x6703872EC09BC158 = function (p0, p1) {
  return _in(0x6703872e, 0xc09bc158, p0, p1);
};

/**
 * _0x6835AFEA10E186F4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x6835AFEA10E186F4 = function (p0, p1) {
  return _in(0x6835afea, 0x10e186f4, p0, p1);
};

/**
 * _0x68830738A6BFB370
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x68830738A6BFB370 = function (p0, p1) {
  return _in(0x68830738, 0xa6bfb370, p0, p1);
};

/**
 * _0x697DF68F3A761A50
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x697DF68F3A761A50 = function (p0) {
  return _in(0x697df68f, 0x3a761a50, p0);
};

/**
 * _0x6B34BE961F639E21
 *
 * @param {number} trackIndex
 * @param {number} p1
 * @return {void}
 */
global.N_0x6B34BE961F639E21 = function (trackIndex, p1) {
  return _in(0x6b34be96, 0x1f639e21, trackIndex, p1);
};

/**
 * _0x6B53F4B811E583D2
 *
 * @param {number} vehicle
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0x6B53F4B811E583D2 = function (vehicle, toggle) {
  return _in(0x6b53f4b8, 0x11e583d2, vehicle, toggle);
};

/**
 * _0x6C87F49BFA181DB5
 * Returns trackIndex
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.N_0x6C87F49BFA181DB5 = function (x, y, z) {
  return _in(0x6c87f49b, 0xfa181db5, _fv(x), _fv(y), _fv(z), _r, _ri);
};

/**
 * _0x6DE072AC8A95FFC1
 * _SET_INSTANTLY_* - _SET_MISSION_TRAIN*
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x6DE072AC8A95FFC1 = function (vehicle, p1) {
  return _in(0x6de072ac, 0x8a95ffc1, vehicle, p1);
};

/**
 * _0x6EA1273D525427F4
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x6EA1273D525427F4 = function (p0, p1, p2) {
  return _in(0x6ea1273d, 0x525427f4, p0, p1, p2);
};

/**
 * _0x6FD7BDF10304363A
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x6FD7BDF10304363A = function (p0, p1) {
  return _in(0x6fd7bdf1, 0x0304363a, p0, p1);
};

/**
 * _0x703D4FB366DA4452
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x703D4FB366DA4452 = function (p0, p1) {
  return _in(0x703d4fb3, 0x66da4452, p0, p1);
};

/**
 * _0x718EB706B6E998A0
 *
 * @param {number} trackIndex
 * @return {void}
 */
global.N_0x718EB706B6E998A0 = function (trackIndex) {
  return _in(0x718eb706, 0xb6e998a0, trackIndex);
};

/**
 * _0x73118A3EE9C9B6DB
 * _SET_VEHICLE_WHEELS_*
 *
 * @param {number} wagon
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.N_0x73118A3EE9C9B6DB = function (wagon, p1, p2) {
  return _in(0x73118a3e, 0xe9c9b6db, wagon, p1, p2);
};

/**
 * _0x7408B5C66BA31ADB
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @return {void}
 */
global.N_0x7408B5C66BA31ADB = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
  return _in(0x7408b5c6, 0x6ba31adb, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
};

/**
 * _0x750D42C013F64AE7
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x750D42C013F64AE7 = function (p0, p1) {
  return _in(0x750d42c0, 0x13f64ae7, p0, p1);
};

/**
 * _0x762FDC4C19E5A981
 * Seems to be related while setting a (door) state of specific trains (midlandboxcar05x, privateboxcar01x, privateboxcar02x, midlandrefrigeratorCar, privateArmoured, armoredCar01x)
 *
 * @param {number} trainCarriage
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x762FDC4C19E5A981 = function (trainCarriage, p1) {
  return _in(0x762fdc4c, 0x19e5a981, trainCarriage, p1);
};

/**
 * _0x7840576C50A13DBA
 *
 * @param {number} train
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x7840576C50A13DBA = function (train, p1) {
  return _in(0x7840576c, 0x50a13dba, train, p1);
};

/**
 * _0x785639D89F8451AB
 *
 * @param {any} p0
 * @param {any} p1
 * @return {Vector3}
 */
global.N_0x785639D89F8451AB = function (p0, p1) {
  return _in(0x785639d8, 0x9f8451ab, p0, p1, _r, _rv);
};

/**
 * _0x7BE0746539DEF0C8
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x7BE0746539DEF0C8 = function (p0, p1) {
  return _in(0x7be07465, 0x39def0c8, p0, p1, _r);
};

/**
 * _0x8379E05871AD24E0
 *

 * @return {void}
 */
global.N_0x8379E05871AD24E0 = function () {
  return _in(0x8379e058, 0x71ad24e0);
};

/**
 * _0x850CE59DEC2028F3
 *
 * @param {number} vehicle
 * @param {any} p1
 * @return {void}
 */
global.N_0x850CE59DEC2028F3 = function (vehicle, p1) {
  return _in(0x850ce59d, 0xec2028f3, vehicle, p1);
};

/**
 * _0x873AAF600CC36DAC
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x873AAF600CC36DAC = function (p0) {
  return _in(0x873aaf60, 0x0cc36dac, p0);
};

/**
 * _0x877EA24EB1614495
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x877EA24EB1614495 = function (p0, p1, p2) {
  return _in(0x877ea24e, 0xb1614495, p0, p1, p2, _r);
};

/**
 * _0x87B974E54C71BA7B
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x87B974E54C71BA7B = function (vehicle, p1) {
  return _in(0x87b974e5, 0x4c71ba7b, vehicle, p1);
};

/**
 * _0x8878FF3EEE2868A9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x8878FF3EEE2868A9 = function (p0, p1) {
  return _in(0x8878ff3e, 0xee2868a9, p0, p1);
};

/**
 * _0x8DECD262602548B9
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x8DECD262602548B9 = function (p0, p1) {
  return _in(0x8decd262, 0x602548b9, p0, p1);
};

/**
 * _0x9868C0D0134855F7
 * nullsub, doesn't do anything
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9868C0D0134855F7 = function (p0) {
  return _in(0x9868c0d0, 0x134855f7, p0);
};

/**
 * _0x98A7598C579EE871
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x98A7598C579EE871 = function (p0, p1, p2) {
  return _in(0x98a7598c, 0x579ee871, p0, p1, p2);
};

/**
 * _0x9CC94A948EAF5372
 * _GET_P - _GET_T*
 *
 * @param {number} trackIndex
 * @param {number} stationIndex
 * @return {number}
 */
global.N_0x9CC94A948EAF5372 = function (trackIndex, stationIndex) {
  return _in(0x9cc94a94, 0x8eaf5372, trackIndex, stationIndex, _r, _ri);
};

/**
 * _0x9D12796EF4BF9EA9
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x9D12796EF4BF9EA9 = function (p0) {
  return _in(0x9d12796e, 0xf4bf9ea9, p0);
};

/**
 * _0x9E8711C81AA17876
 * Forcing high LOD buoyancy for vehicle: p1 = false
 * _SET_A*
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x9E8711C81AA17876 = function (vehicle, p1) {
  return _in(0x9e8711c8, 0x1aa17876, vehicle, p1);
};

/**
 * _0xA13028E22564A1BD
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xA13028E22564A1BD = function (p0, p1) {
  return _in(0xa13028e2, 0x2564a1bd, p0, p1);
};

/**
 * _0xA230A5DDE12ED374
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xA230A5DDE12ED374 = function (p0) {
  return _in(0xa230a5dd, 0xe12ed374, p0);
};

/**
 * _0xA72B1BF3857B94D7
 *
 * @param {number} train
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xA72B1BF3857B94D7 = function (train, p1) {
  return _in(0xa72b1bf3, 0x857b94d7, train, p1);
};

/**
 * _0xA7966807953A18EE
 *
 * @param {number} trackIndex
 * @param {number} p1
 * @return {void}
 */
global.N_0xA7966807953A18EE = function (trackIndex, p1) {
  return _in(0xa7966807, 0x953a18ee, trackIndex, _fv(p1));
};

/**
 * _0xA9E185D498B9AC67
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xA9E185D498B9AC67 = function (p0, p1) {
  return _in(0xa9e185d4, 0x98b9ac67, p0, p1, _r);
};

/**
 * _0xAE7E66A61E7C17A5
 * _SET_TRAIN_*
 *
 * @param {number} train
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xAE7E66A61E7C17A5 = function (train, p1) {
  return _in(0xae7e66a6, 0x1e7c17a5, train, p1);
};

/**
 * _0xB4241AD8F5AEE9ED
 *
 * @param {number} trackIndex
 * @return {boolean}
 */
global.N_0xB4241AD8F5AEE9ED = function (trackIndex) {
  return _in(0xb4241ad8, 0xf5aee9ed, trackIndex, _r);
};

/**
 * _0xB42C87521D1BDD2F
 *
 * @param {number} vehicle
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.N_0xB42C87521D1BDD2F = function (vehicle, x, y, z) {
  return _in(0xb42c8752, 0x1d1bdd2f, vehicle, _fv(x), _fv(y), _fv(z));
};

/**
 * _0xB961DD799A837BD7
 *

 * @return {void}
 */
global.N_0xB961DD799A837BD7 = function () {
  return _in(0xb961dd79, 0x9a837bd7);
};

/**
 * _0xC2E62678D602853C
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {void}
 */
global.N_0xC2E62678D602853C = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xc2e62678, 0xd602853c, p0, p1, p2, p3, p4, p5, p6);
};

/**
 * _0xC325A6BAA62CF8A2
 * Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xC325A6BAA62CF8A2 = function (vehicle, p1) {
  return _in(0xc325a6ba, 0xa62cf8a2, vehicle, p1);
};

/**
 * _0xC351394B932A6A50
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC351394B932A6A50 = function (p0) {
  return _in(0xc351394b, 0x932a6a50, p0);
};

/**
 * _0xC399CC89FBA05DA0
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xC399CC89FBA05DA0 = function (vehicle, p1) {
  return _in(0xc399cc89, 0xfba05da0, vehicle, p1);
};

/**
 * _0xC4A2C11FC0D41916
 * _SET_DRAFT_VEHICLE_(STOP?)*
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xC4A2C11FC0D41916 = function (vehicle, p1) {
  return _in(0xc4a2c11f, 0xc0d41916, vehicle, p1);
};

/**
 * _0xCACAB2B123BBDBD6
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xCACAB2B123BBDBD6 = function (p0, p1, p2) {
  return _in(0xcacab2b1, 0x23bbdbd6, p0, p1, p2, _r);
};

/**
 * _0xCAFF2C9747103C02
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0xCAFF2C9747103C02 = function (p0, p1, p2) {
  return _in(0xcaff2c97, 0x47103c02, p0, p1, p2, _r);
};

/**
 * _0xCBC7B6F9A56B79F6
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xCBC7B6F9A56B79F6 = function (p0, p1) {
  return _in(0xcbc7b6f9, 0xa56b79f6, p0, p1);
};

/**
 * _0xCBF88256E44D5D39
 * Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xCBF88256E44D5D39 = function (vehicle, p1) {
  return _in(0xcbf88256, 0xe44d5d39, vehicle, p1);
};

/**
 * _0xCEB1F1EED484A5B4
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xCEB1F1EED484A5B4 = function (p0, p1) {
  return _in(0xceb1f1ee, 0xd484a5b4, p0, p1);
};

/**
 * _0xCF342503CA4C8DF1
 *
 * @param {number} vehicle
 * @param {number} p1
 * @return {void}
 */
global.N_0xCF342503CA4C8DF1 = function (vehicle, p1) {
  return _in(0xcf342503, 0xca4c8df1, vehicle, _fv(p1));
};

/**
 * _0xCF9DA72002FC16BF
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xCF9DA72002FC16BF = function (p0, p1, p2) {
  return _in(0xcf9da720, 0x02fc16bf, p0, p1, p2);
};

/**
 * _0xD0116DF21E6C7B36
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xD0116DF21E6C7B36 = function (p0, p1) {
  return _in(0xd0116df2, 0x1e6c7b36, p0, p1, _r);
};

/**
 * _0xD0AABE5B9F8FA589
 *
 * @param {number} trackIndex
 * @param {number} p1
 * @return {void}
 */
global.N_0xD0AABE5B9F8FA589 = function (trackIndex, p1) {
  return _in(0xd0aabe5b, 0x9f8fa589, trackIndex, _fv(p1));
};

/**
 * _0xD0BA1853D76683C8
 *
 * @param {number} trackIndex
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {any} p4
 * @return {void}
 */
global.N_0xD0BA1853D76683C8 = function (trackIndex, x, y, z, p4) {
  return _in(0xd0ba1853, 0xd76683c8, trackIndex, _fv(x), _fv(y), _fv(z), p4);
};

/**
 * _0xD1DF5E54F4ACBE1A
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {any}
 */
global.N_0xD1DF5E54F4ACBE1A = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0xd1df5e54, 0xf4acbe1a, p0, p1, p2, p3, p4, p5, p6, _r);
};

/**
 * _0xD1EFA8D68BF5D63D
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xD1EFA8D68BF5D63D = function (p0, p1, p2, p3) {
  return _in(0xd1efa8d6, 0x8bf5d63d, p0, p1, p2, p3);
};

/**
 * _0xD21A3D421E7F09F7
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xD21A3D421E7F09F7 = function (p0, p1) {
  return _in(0xd21a3d42, 0x1e7f09f7, p0, p1);
};

/**
 * _0xD4907EF4334C7602
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xD4907EF4334C7602 = function (p0, p1) {
  return _in(0xd4907ef4, 0x334c7602, p0, p1);
};

/**
 * _0xD826690B5CF3BEFF
 *
 * @param {number} vehicle
 * @param {any} p1
 * @return {void}
 */
global.N_0xD826690B5CF3BEFF = function (vehicle, p1) {
  return _in(0xd826690b, 0x5cf3beff, vehicle, p1);
};

/**
 * _0xD9BF3ED8EFB67EA3
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {any}
 */
global.N_0xD9BF3ED8EFB67EA3 = function (p0, p1, p2, p3, p4) {
  return _in(0xd9bf3ed8, 0xefb67ea3, p0, p1, p2, p3, p4, _r);
};

/**
 * _0xDC0556D0F484ECAA
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xDC0556D0F484ECAA = function (p0) {
  return _in(0xdc0556d0, 0xf484ecaa, p0);
};

/**
 * _0xDC69F6913CCA0B99
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xDC69F6913CCA0B99 = function (p0, p1) {
  return _in(0xdc69f691, 0x3cca0b99, p0, p1);
};

/**
 * _0xDD100CE1EBBF37E3
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xDD100CE1EBBF37E3 = function (p0, p1) {
  return _in(0xdd100ce1, 0xebbf37e3, p0, p1);
};

/**
 * _0xDE8C5B9F65017FA1
 *
 * @param {number} train
 * @return {any}
 */
global.N_0xDE8C5B9F65017FA1 = function (train) {
  return _in(0xde8c5b9f, 0x65017fa1, train, _r);
};

/**
 * _0xE12F5ED49F44D40D
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE12F5ED49F44D40D = function (p0) {
  return _in(0xe12f5ed4, 0x9f44d40d, p0);
};

/**
 * _0xE1C0F8781BF130C2
 * Only used in R* SP Script rcm_abigail31: p1 = 5
 * _GET_VEHICLE_T* - _GET_VO*
 *
 * @param {number} wagon
 * @param {number} p1
 * @return {boolean}
 */
global.N_0xE1C0F8781BF130C2 = function (wagon, p1) {
  return _in(0xe1c0f878, 0x1bf130c2, wagon, p1, _r);
};

/**
 * _0xE682002DB1F30669
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE682002DB1F30669 = function (p0) {
  return _in(0xe682002d, 0xb1f30669, p0);
};

/**
 * _0xE6BD7DD3FD474415
 *
 * @param {number} train
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xE6BD7DD3FD474415 = function (train, p1) {
  return _in(0xe6bd7dd3, 0xfd474415, train, p1);
};

/**
 * _0xE777DDF3E78397E8
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xE777DDF3E78397E8 = function (p0) {
  return _in(0xe777ddf3, 0xe78397e8, p0, _r);
};

/**
 * _0xE78993FF9022C064
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xE78993FF9022C064 = function (p0) {
  return _in(0xe78993ff, 0x9022c064, p0);
};

/**
 * _0xEF28A614B4B264B8
 * _SET_TRAIN_*
 *
 * @param {number} train
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xEF28A614B4B264B8 = function (train, p1) {
  return _in(0xef28a614, 0xb4b264b8, train, p1);
};

/**
 * _0xF05DFAF1ADFEF2CD
 * _IS_* (related to CREATE_MISSION_TRAIN)
 *
 * @param {number} trainConfig
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} direction
 * @param {boolean} p5
 * @return {boolean}
 */
global.N_0xF05DFAF1ADFEF2CD = function (trainConfig, x, y, z, direction, p5) {
  return _in(0xf05dfaf1, 0xadfef2cd, _ch(trainConfig), _fv(x), _fv(y), _fv(z), direction, p5, _r);
};

/**
 * _0xF57DB8E83DCD8349
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xF57DB8E83DCD8349 = function (p0) {
  return _in(0xf57db8e8, 0x3dcd8349, p0, _r);
};

/**
 * _0xF5EA41C1408695FB
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {any}
 */
global.N_0xF5EA41C1408695FB = function (p0, p1, p2, p3) {
  return _in(0xf5ea41c1, 0x408695fb, p0, p1, p2, p3, _r);
};

/**
 * _0xF6E3D38869D0F7AD
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xF6E3D38869D0F7AD = function (p0) {
  return _in(0xf6e3d388, 0x69d0f7ad, p0);
};

/**
 * _0xF8F7DA13CFBD4532
 *
 * @param {number} trackIndex
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xF8F7DA13CFBD4532 = function (trackIndex, p1) {
  return _in(0xf8f7da13, 0xcfbd4532, trackIndex, p1);
};

/**
 * _0xFC4F15A7DDDC47B1
 * _SET_DRAFT_VEHICLE_*
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.N_0xFC4F15A7DDDC47B1 = function (vehicle, p1) {
  return _in(0xfc4f15a7, 0xdddc47b1, vehicle, p1);
};

/**
 * _0xFF2B1F59FB892F14
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xFF2B1F59FB892F14 = function (p0) {
  return _in(0xff2b1f59, 0xfb892f14, p0);
};

/**
 * _0xFFFE15B433300B8C
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xFFFE15B433300B8C = function (p0, p1, p2) {
  return _in(0xfffe15b4, 0x33300b8c, p0, p1, p2);
};

/**
 * _ADD_TRAIN_TEMPORARY_STOP
 *
 * @param {number} train
 * @param {number} trackIndex
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.AddTrainTemporaryStop = function (train, trackIndex, x, y, z) {
  return _in(0x41503629, 0xd1139abc, train, trackIndex, _fv(x), _fv(y), _fv(z));
};

/**
 * _ATTACH_DRAFT_VEHICLE_HARNESS_PED
 *
 * @param {number} mount
 * @param {number} draft
 * @param {number} harnessId
 * @return {boolean}
 */
global.AttachDraftVehicleHarnessPed = function (mount, draft, harnessId) {
  return _in(0x316cdb5b, 0x6e8f4110, mount, draft, harnessId, _r);
};

/**
 * _BREAK_OFF_DRAFT_WHEEL
 * Params: destroyingForce is usually 100f in R* Scripts
 * Similar to 0xD4F5EFB55769D272, _A*
 *
 * @param {number} vehicle
 * @param {number} wheelIndex
 * @param {number} destroyingForce
 * @return {void}
 */
global.BreakOffDraftWheel = function (vehicle, wheelIndex, destroyingForce) {
  return _in(0xc372b6a8, 0x8f6e4ad8, vehicle, wheelIndex, _fv(destroyingForce));
};

/**
 * _BREAK_OFF_VEHICLE_WHEEL
 * wheelIndex 0: left, wheelIndex 1: right, 4 & 5: unknown
 *
 * @param {number} vehicle
 * @param {number} wheelIndex
 * @return {number}
 */
global.BreakOffVehicleWheel = function (vehicle, wheelIndex) {
  return _in(0xd4f5efb5, 0x5769d272, vehicle, wheelIndex, _r, _ri);
};

/**
 * _CREATE_DRAFT_VEHICLE
 * Identical to CREATE_VEHICLE but allows to set draftAnimalPopGroup (see popgroups.#mt for DRAFT_HORSES_*)
 *
 * @param {number} modelHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} heading
 * @param {boolean} isNetwork
 * @param {boolean} bScriptHostVeh
 * @param {boolean} bDontAutoCreateDraftAnimals
 * @param {number} draftAnimalPopGroup
 * @param {boolean} p9
 * @return {number}
 */
global.CreateDraftVehicle = function (modelHash, x, y, z, heading, isNetwork, bScriptHostVeh, bDontAutoCreateDraftAnimals, draftAnimalPopGroup, p9) {
  return _in(0x214651fb, 0x1dfeba89, _ch(modelHash), _fv(x), _fv(y), _fv(z), _fv(heading), isNetwork, bScriptHostVeh, bDontAutoCreateDraftAnimals, _ch(draftAnimalPopGroup), p9, _r, _ri);
};

/**
 * _CREATE_MISSION_TRAIN
 * configHash: https://alloc8or.re/rdr3/doc/enums/eTrainConfig.txt
 * For more information, see trainconfigs.ymt
 * To make the train AI controlled, set conductor to true and set the speed once.
 *
 * @param {number} configHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} direction
 * @param {boolean} passengers
 * @param {boolean} p6
 * @param {boolean} conductor
 * @return {number}
 */
global.CreateMissionTrain = function (configHash, x, y, z, direction, passengers, p6, conductor) {
  return _in(0xc239dbd9, 0xa57d2a71, _ch(configHash), _fv(x), _fv(y), _fv(z), direction, passengers, p6, conductor, _r, _ri);
};

/**
 * _DELETE_VEHICLE_LANTERNS
 * Spawn without lanterns set
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.DeleteVehicleLanterns = function (vehicle) {
  return _in(0xe1a83d4a, 0x3b5d7938, vehicle, _r);
};

/**
 * _DETACH_DRAFT_VEHICLE_HARNESS_FROM_INDEX
 *
 * @param {number} draft
 * @param {number} harnessId
 * @return {boolean}
 */
global.DetachDraftVehicleHarnessFromIndex = function (draft, harnessId) {
  return _in(0x44029606, 0x66000e62, draft, harnessId, _r);
};

/**
 * _DETACH_DRAFT_VEHICLE_HARNESS_PED
 *
 * @param {number} draft
 * @param {number} ped
 * @return {boolean}
 */
global.DetachDraftVehicleHarnessPed = function (draft, ped) {
  return _in(0xb36d3ec7, 0x0963be60, draft, ped, _r);
};

/**
 * _DETACH_WAGON_ENTITY_FROM_TRAIN
 * Only used in train_robbery4 R* Script
 * _C* - _DEL*
 *
 * @param {number} entity
 * @return {void}
 */
global.DetachWagonEntityFromTrain = function (entity) {
  return _in(0x54cbdd6e, 0x1b4cb4df, entity);
};

/**
 * _DOES_TRAIN_EXIST_ON_TRACK
 *
 * @param {number} trackIndex
 * @return {boolean}
 */
global.DoesTrainExistOnTrack = function (trackIndex) {
  return _in(0xc29996a3, 0x37bdd099, trackIndex, _r);
};

/**
 * _FADE_AND_DESTROY_VEHICLE
 *

 * @return {number}
 */
global.FadeAndDestroyVehicle = function () {
  return _in(0x35dc1877, 0x312fba0f, _i);
};

/**
 * _GET_BREAKABLE_VEHICLE_LOCKS_STATE
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetBreakableVehicleLocksState = function (vehicle) {
  return _in(0xe015cf1f, 0x2c0959d8, vehicle, _r, _ri);
};

/**
 * _GET_BREAKABLE_VEHICLE_LOCK_OBJECT
 *
 * @param {number} vehicle
 * @param {number} index
 * @return {number}
 */
global.GetBreakableVehicleLockObject = function (vehicle, index) {
  return _in(0x58f2244c, 0x1286d09a, vehicle, index, _r, _ri);
};

/**
 * _GET_CHECKPOINT_TRAIN_SPAWN_LOCATION
 *
 * @param {number} trackIndex
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} distance
 * @param {boolean} direction
 * @return {Vector3}
 */
global.GetCheckpointTrainSpawnLocation = function (trackIndex, x, y, z, distance, direction) {
  return _in(0x35d30239, 0x7e524939, trackIndex, _fv(x), _fv(y), _fv(z), _fv(distance), direction, _r, _rv);
};

/**
 * _GET_CURRENT_TRACK_FOR_TRAIN
 * Returns p0 for 0xBA958F68031DDBFC (trackIndex)
 *
 * @param {number} train
 * @return {number}
 */
global.GetCurrentTrackForTrain = function (train) {
  return _in(0xaf787e08, 0x1ac4a8ee, train, _r, _ri);
};

/**
 * _GET_DRAFT_VEHICLE_DESIRED_SPEED
 * Returns rage::NumericLimits<float>::kMax (3.402823466e+38) if vehicle is not a valid vehicle of type VEHICLE_TYPE_DRAFT.
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetDraftVehicleDesiredSpeed = function (vehicle) {
  return _in(0xc6d7ddc8, 0x43176701, vehicle, _r, _rf);
};

/**
 * _GET_NEAREST_TRAIN_TRACK_POSITION
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {Vector3}
 */
global.GetNearestTrainTrackPosition = function (x, y, z) {
  return _in(0x6de03bcc, 0x15e81710, _fv(x), _fv(y), _fv(z), _r, _rv);
};

/**
 * _GET_NUM_BREAKABLE_VEHICLE_LOCK_OBJECTS
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetNumBreakableVehicleLockObjects = function (vehicle) {
  return _in(0x2fa86833, 0xe3617e2d, vehicle, _r, _ri);
};

/**
 * _GET_NUM_CARS_FROM_TRAIN_CONFIG
 * Returns amount for CAN_REGISTER_MISSION_VEHICLES
 *
 * @param {number} trainConfig
 * @return {number}
 */
global.GetNumCarsFromTrainConfig = function (trainConfig) {
  return _in(0x635423d5, 0x5ca84fc8, _ch(trainConfig), _r, _ri);
};

/**
 * _GET_NUM_DRAFT_VEHICLE_HARNESS_PED
 * Returns number of horses a wagon can have
 *
 * @param {number} modelHash
 * @return {number}
 */
global.GetNumDraftVehicleHarnessPed = function (modelHash) {
  return _in(0x5b1a26bb, 0x18e7d451, _ch(modelHash), _r, _ri);
};

/**
 * _GET_PED_IN_DRAFT_HARNESS
 * enum eDraftHarness
 * {
 *   DRAFT_HARNESS_LR,
 *   DRAFT_HARNESS_RR,
 *   DRAFT_HARNESS_LM,
 *   DRAFT_HARNESS_RM,
 *   DRAFT_HARNESS_LF,
 *   DRAFT_HARNESS_RF,
 *   DRAFT_HARNESS_COUNT
 * };
 *
 * @param {number} vehicle
 * @param {number} harnessId
 * @return {number}
 */
global.GetPedInDraftHarness = function (vehicle, harnessId) {
  return _in(0xa8ba0bae, 0x0173457b, vehicle, harnessId, _r, _ri);
};

/**
 * _GET_ROWING_OARS
 * Returns handles of boat paddles entities.
 *
 * @param {number} vehicle
 * @return {[Entity, Entity]}
 */
global.GetRowingOars = function (vehicle) {
  return _in(0xa6e210fb, 0x4283b767, vehicle, _i, _i);
};

/**
 * _GET_STATION_COORDS_FROM_TRAIN_STATION_DATA
 * Returns Coords of vStation
 * p0 - NET_TRAIN_MANAGER_GET_TRAIN_STATION_DATA
 * _GET_P* - _GET_T*
 *
 * @param {number} trackIndex
 * @param {number} stationIndex
 * @return {Vector3}
 */
global.GetStationCoordsFromTrainStationData = function (trackIndex, stationIndex) {
  return _in(0xba958f68, 0x031ddbfc, trackIndex, stationIndex, _r, _rv);
};

/**
 * _GET_TRACK_INDEX_FROM_COORDS
 * Returns trackIndex
 * _E* - _F*
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.GetTrackIndexFromCoords = function (x, y, z) {
  return _in(0x85d39f5e, 0x3b6d7eb0, _fv(x), _fv(y), _fv(z), _r, _ri);
};

/**
 * _GET_TRAIN_CAR
 * Returns train car, use GET_TRAIN_CARRIAGE when trailerNumber is bigger than 0
 *
 * @param {number} train
 * @return {number}
 */
global.GetTrainCar = function (train) {
  return _in(0x671a07c9, 0xa1cd50a5, train, _r, _ri);
};

/**
 * _GET_TRAIN_CARRIAGE_TRAILER_NUMBER
 * Returns iNumCars - to be used with GET_TRAIN_CARRIAGE (trailerNumber)
 * _C* (O, P, Q, R)
 *
 * @param {number} train
 * @return {number}
 */
global.GetTrainCarriageTrailerNumber = function (train) {
  return _in(0x60b7d1dc, 0xc312697d, train, _r, _ri);
};

/**
 * _GET_TRAIN_DIRECTION
 *
 * @param {number} train
 * @return {boolean}
 */
global.GetTrainDirection = function (train) {
  return _in(0x3c9628a8, 0x11cbd724, train, _r);
};

/**
 * _GET_TRAIN_DIRECTION_FROM_INDEX
 * https://i.imgur.com/1rHibjW.jpg
 *
 * @param {number} trackIndex
 * @return {boolean}
 */
global.GetTrainDirectionFromIndex = function (trackIndex) {
  return _in(0x67995318, 0xf5faa496, trackIndex, _r);
};

/**
 * _GET_TRAIN_MODEL_FROM_TRAIN_CONFIG_BY_CAR_INDEX
 * Returns modelHash
 *
 * @param {number} trainConfig
 * @param {number} trainCarIndex
 * @return {number}
 */
global.GetTrainModelFromTrainConfigByCarIndex = function (trainConfig, trainCarIndex) {
  return _in(0x8df5f6a1, 0x9f99f0d5, _ch(trainConfig), trainCarIndex, _r, _ri);
};

/**
 * _GET_TRAIN_POSITION_ON_TRACK
 *
 * @param {number} trackIndex
 * @return {Vector3}
 */
global.GetTrainPositionOnTrack = function (trackIndex) {
  return _in(0x1e8a9211, 0x12891651, trackIndex, _r, _rv);
};

/**
 * _GET_TRAIN_TRACK_FROM_TRAIN_VEHICLE
 * Returns trackIndex
 *
 * @param {number} train
 * @return {number}
 */
global.GetTrainTrackFromTrainVehicle = function (train) {
  return _in(0x45853f4e, 0x17d847d5, train, _r, _ri);
};

/**
 * _GET_TRAIN_TRACK_JUNCTION_AT_COORDS
 * Outputs junctionIndex, to be used with 0xE6C5E2125EB210C1
 *
 * @param {number} trainTrack
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {[boolean, number]}
 */
global.GetTrainTrackJunctionAtCoords = function (trainTrack, x, y, z) {
  return _in(0x86afc343, 0xcf7f0b34, _ch(trainTrack), _fv(x), _fv(y), _fv(z), _i, _r);
};

/**
 * _GET_TRAIN_VEHICLE_FROM_TRACK_INDEX
 * Returns train
 *
 * @param {number} trackIndex
 * @return {number}
 */
global.GetTrainVehicleFromTrackIndex = function (trackIndex) {
  return _in(0x6e585a61, 0x6abb8401, trackIndex, _r, _ri);
};

/**
 * _GET_VEHICLE_DOORS_LOCKED_FOR_TEAM
 *
 * @param {number} vehicle
 * @param {number} team
 * @return {boolean}
 */
global.GetVehicleDoorsLockedForTeam = function (vehicle, team) {
  return _in(0xdd1e1393, 0xd966d39a, vehicle, team, _r);
};

/**
 * _GET_VEHICLE_IS_PROP_SET_APPLIED
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.GetVehicleIsPropSetApplied = function (vehicle) {
  return _in(0xd798df5d, 0xb67b1659, vehicle, _r);
};

/**
 * _GET_VEHICLE_LIVERY
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleLivery = function (vehicle) {
  return _in(0xbb765b8f, 0xd49a796c, vehicle, _r, _ri);
};

/**
 * _GET_VEHICLE_OWNER
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleOwner = function (vehicle) {
  return _in(0xb7296793, 0x56a889ae, vehicle, _r, _ri);
};

/**
 * _GET_VEHICLE_TINT
 *
 * @param {number} vehicle
 * @return {number}
 */
global.GetVehicleTint = function (vehicle) {
  return _in(0xa44d65e6, 0xc624526f, vehicle, _r, _ri);
};

/**
 * _GET_VEHICLE_TURRET_SEAT
 *
 * @param {number} vehicle
 * @return {[boolean, number]}
 */
global.GetVehicleTurretSeat = function (vehicle) {
  return _in(0xff5791b7, 0x639c2a46, vehicle, _i, _r);
};

/**
 * _HAS_TRAIN_LOADED
 *
 * @param {number} train
 * @return {boolean}
 */
global.HasTrainLoaded = function (train) {
  return _in(0xbd3c4a2e, 0xd509205e, train, _r);
};

/**
 * _HIDE_HORSE_REINS
 *
 * @param {number} vehicle
 * @return {void}
 */
global.HideHorseReins = function (vehicle) {
  return _in(0x201b8ed4, 0xff7fe9f5, vehicle);
};

/**
 * _IS_BOAT_GROUNDED
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsBoatGrounded = function (vehicle) {
  return _in(0x30d86b2b, 0x7622d0eb, vehicle, _r);
};

/**
 * _IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE
 *
 * @param {number} ped
 * @param {number} vehicle
 * @return {[boolean, number]}
 */
global.IsPedExclusiveDriverOfVehicle = function (ped, vehicle) {
  return _in(0xb213d2a5, 0x60b2e48b, ped, vehicle, _i, _r);
};

/**
 * _IS_THIS_MODEL_A_DRAFT_VEHICLE
 *
 * @param {number} model
 * @return {boolean}
 */
global.IsThisModelADraftVehicle = function (model) {
  return _in(0xb9d5bdda, 0x88e1bb66, _ch(model), _r);
};

/**
 * _IS_VEHICLE_BROUGHT_TO_HALT
 * Only returns true if BRING_VEHICLE_TO_HALT is called on vehicle beforehand
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsVehicleBroughtToHalt = function (vehicle) {
  return _in(0x404527bc, 0x03da0e6c, vehicle, _r);
};

/**
 * _IS_VEHICLE_DOOR_BROKEN
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * @param {number} vehicle
 * @param {number} doorId
 * @return {boolean}
 */
global.IsVehicleDoorBroken = function (vehicle, doorId) {
  return _in(0xe979bb56, 0x02ad3402, vehicle, doorId, _r);
};

/**
 * _IS_VEHICLE_FADING_OUT
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsVehicleFadingOut = function (vehicle) {
  return _in(0x5136b284, 0xb67b35c7, vehicle, _r);
};

/**
 * _IS_VEHICLE_ON_FIRE
 *
 * @param {number} vehicle
 * @return {boolean}
 */
global.IsVehicleOnFire = function (vehicle) {
  return _in(0x0e3bf7ed, 0x4169ec43, vehicle, _r);
};

/**
 * _IS_VEHICLE_WHEEL_DESTROYED
 *
 * @param {number} vehicle
 * @param {number} wheel
 * @return {boolean}
 */
global.IsVehicleWheelDestroyed = function (vehicle, wheel) {
  return _in(0xcb2ca620, 0xc48bc875, vehicle, wheel, _r);
};

/**
 * _SET_ALL_JUNCTIONS_CLEARED
 *

 * @return {void}
 */
global.SetAllJunctionsCleared = function () {
  return _in(0x13839815, 0x3824e332);
};

/**
 * _SET_ALL_VEHICLE_GENERATORS_DISABLED_FOR_VOLUME
 *
 * @param {number} volume
 * @param {boolean} toggle
 * @return {void}
 */
global.SetAllVehicleGeneratorsDisabledForVolume = function (volume, toggle) {
  return _in(0x424ffcb9, 0xf0d2d4b5, volume, toggle);
};

/**
 * _SET_BALLOON_HOVER_STATE
 * Params: 1.0f will make balloon hover
 *
 * @param {number} balloon
 * @param {number} p1
 * @return {void}
 */
global.SetBalloonHoverState = function (balloon, p1) {
  return _in(0x7c9e45a4, 0xced2e8da, balloon, _fv(p1));
};

/**
 * _SET_BATCH_TARP_HEIGHT
 * Total height is calculated using: cargo ratio + pelt ratio (by pelt count)
 * Screenshot: https://imgur.com/a/nsomtiv
 *
 * @param {number} vehicle
 * @param {number} height
 * @param {boolean} immediately
 * @return {void}
 */
global.SetBatchTarpHeight = function (vehicle, height, immediately) {
  return _in(0x31f34338, 0x3f19c987, vehicle, _fv(height), immediately);
};

/**
 * _SET_DRAFT_ANIMAL_RANDOM_SEED
 *
 * @param {number} vehicle
 * @param {number} seed
 * @return {void}
 */
global.SetDraftAnimalRandomSeed = function (vehicle, seed) {
  return _in(0x8c6d9a39, 0x9126c194, vehicle, seed);
};

/**
 * _SET_DRAFT_VEHICLE_ALLOW_DRAFT_ANIMAL_AUTO_CREATION
 *
 * @param {number} vehicle
 * @param {boolean} allow
 * @return {void}
 */
global.SetDraftVehicleAllowDraftAnimalAutoCreation = function (vehicle, allow) {
  return _in(0x87344305, 0x778e5415, vehicle, allow);
};

/**
 * _SET_DRAFT_VEHICLE_ANIMALS_CAN_DETACH
 *
 * @param {number} draft
 * @param {boolean} canDetach
 * @return {void}
 */
global.SetDraftVehicleAnimalsCanDetach = function (draft, canDetach) {
  return _in(0x6090a031, 0xc69f384e, draft, canDetach);
};

/**
 * _SET_DRAFT_VEHICLE_DESIRED_SPEED
 *
 * @param {number} vehicle
 * @param {number} speed
 * @return {void}
 */
global.SetDraftVehicleDesiredSpeed = function (vehicle, speed) {
  return _in(0x0c3f0f7f, 0x92ca847c, vehicle, _fv(speed));
};

/**
 * _SET_DRAFT_VEHICLE_YOKE_CAN_BREAK
 *
 * @param {number} draft
 * @param {boolean} canBreak
 * @return {void}
 */
global.SetDraftVehicleYokeCanBreak = function (draft, canBreak) {
  return _in(0x226c6a4e, 0x3346d288, draft, canBreak);
};

/**
 * _SET_FORCE_COACH_ROBBERY_LOOT
 * Hashes: COACH2_BOOT_LOOT_ITEMS_COACHROB_RSC, COACH2_BOOT_LOOT_ITEMS_COACHROB, COACH2_MARY3
 *
 * @param {number} vehicle
 * @param {number} coachrobberyLoot
 * @return {void}
 */
global.SetForceCoachRobberyLoot = function (vehicle, coachrobberyLoot) {
  return _in(0xf489f94b, 0xfee12bb0, vehicle, _ch(coachrobberyLoot));
};

/**
 * _SET_FORCE_HIGH_LOD_VEHICLE
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.SetForceHighLodVehicle = function (vehicle, p1) {
  return _in(0x1098cda4, 0x77890165, vehicle, p1);
};

/**
 * _SET_HORSE_TRAFFIC_GROUPING_DISTRIBUTION
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.SetHorseTrafficGroupingDistribution = function (p0, p1, p2, p3) {
  return _in(0xf5ffb089, 0x76911b50, p0, p1, p2, p3);
};

/**
 * _SET_MISSION_TRAIN_WARP_TO_COORDS
 * Notice: BOOL p4 was wrongly named takePassengers (?)
 * Can be used to rotate the train by setting the BOOL direction
 *
 * @param {number} train
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} direction
 * @return {void}
 */
global.SetMissionTrainWarpToCoords = function (train, x, y, z, direction) {
  return _in(0xc9ea2689, 0x3c9e4024, train, _fv(x), _fv(y), _fv(z), direction);
};

/**
 * _SET_TRAIN_HALT
 *
 * @param {number} train
 * @return {void}
 */
global.SetTrainHalt = function (train) {
  return _in(0x3660bcab, 0x3a6bb734, train);
};

/**
 * _SET_TRAIN_LEAVE_STATION
 * Restarts the train
 *
 * @param {number} train
 * @return {void}
 */
global.SetTrainLeaveStation = function (train) {
  return _in(0x787e4347, 0x7746876f, train);
};

/**
 * _SET_TRAIN_MAX_SPEED
 * Maximum possible speed is 30.0 (108 km/h)
 *
 * @param {number} train
 * @param {number} speed
 * @return {void}
 */
global.SetTrainMaxSpeed = function (train, speed) {
  return _in(0x9f29999d, 0xfdf2aeb8, train, _fv(speed));
};

/**
 * _SET_TRAIN_STOPS_FOR_STATIONS
 *
 * @param {number} train
 * @param {boolean} toggle
 * @return {void}
 */
global.SetTrainStopsForStations = function (train, toggle) {
  return _in(0x4182c037, 0xaa1f0091, train, toggle);
};

/**
 * _SET_TRAIN_TRACK_JUNCTION_SWITCH
 * trainTrack: FREIGHT_GROUP, TRAINS3, BRAITHWAITES2_TRACK_CONFIG, TRAINS_OLD_WEST01, TRAINS_OLD_WEST03, TRAINS_NB1, TRAINS_INTERSECTION1_ANN
 *
 * @param {number} trainTrack
 * @param {number} junctionIndex
 * @param {boolean} enabled
 * @return {void}
 */
global.SetTrainTrackJunctionSwitch = function (trainTrack, junctionIndex, enabled) {
  return _in(0xe6c5e212, 0x5eb210c1, _ch(trainTrack), junctionIndex, enabled);
};

/**
 * _SET_VEHICLE_DETERIORATION
 *
 * @param {number} vehicle
 * @param {number} amount
 * @param {number} p2
 * @param {boolean} p3
 * @return {void}
 */
global.SetVehicleDeterioration = function (vehicle, amount, p2, p3) {
  return _in(0x8e5da070, 0xbad3279e, vehicle, _fv(amount), p2, p3);
};

/**
 * _SET_VEHICLE_DIRT_LEVEL_2
 * dirtLevel: 0.0 - 1.0
 *
 * @param {number} vehicle
 * @param {number} dirtLevel
 * @return {void}
 */
global.SetVehicleDirtLevel_2 = function (vehicle, dirtLevel) {
  return _in(0xbae0eedf, 0x93f05eaa, vehicle, _fv(dirtLevel));
};

/**
 * _SET_VEHICLE_IS_IN_HURRY
 *
 * @param {number} vehicle
 * @param {boolean} enabled
 * @return {void}
 */
global.SetVehicleIsInHurry = function (vehicle, enabled) {
  return _in(0xce153192, 0x7ad6c9f8, vehicle, enabled);
};

/**
 * _SET_VEHICLE_LIVERY
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_liveries.lua
 *
 * @param {number} vehicle
 * @param {number} liveryIndex
 * @return {void}
 */
global.SetVehicleLivery = function (vehicle, liveryIndex) {
  return _in(0xf89d82a0, 0x582e46ed, vehicle, liveryIndex);
};

/**
 * _SET_VEHICLE_LOD_LEVEL
 * Ranges from -1 to 2? (internal type is int8)
 * https://imgur.com/a/bPzHcft
 *
 * @param {number} vehicle
 * @param {number} lodLevel
 * @return {void}
 */
global.SetVehicleLodLevel = function (vehicle, lodLevel) {
  return _in(0x3fa7d7d1, 0xe0ea809e, vehicle, lodLevel);
};

/**
 * _SET_VEHICLE_MUD_LEVEL
 * mudLevel: 0.0 - 1.0
 *
 * @param {number} vehicle
 * @param {number} mudLevel
 * @return {void}
 */
global.SetVehicleMudLevel = function (vehicle, mudLevel) {
  return _in(0x4d15e497, 0x64cb328a, vehicle, _fv(mudLevel));
};

/**
 * _SET_VEHICLE_SNOW_LEVEL
 * snowLevel: 0.0 - 1.0
 *
 * @param {number} vehicle
 * @param {number} snowLevel
 * @return {void}
 */
global.SetVehicleSnowLevel = function (vehicle, snowLevel) {
  return _in(0x6f73efab, 0x11651d7f, vehicle, _fv(snowLevel));
};

/**
 * _SET_VEHICLE_TINT
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_tints.lua
 *
 * @param {number} vehicle
 * @param {number} tintId
 * @return {void}
 */
global.SetVehicleTint = function (vehicle, tintId) {
  return _in(0x8268b098, 0xf6fca4e2, vehicle, tintId);
};

/**
 * _SET_VEHICLE_WET_LEVEL
 * wetLevel: 0.0 - 1.0
 *
 * @param {number} vehicle
 * @param {number} wetLevel
 * @return {void}
 */
global.SetVehicleWetLevel = function (vehicle, wetLevel) {
  return _in(0x5aabb09f, 0x6fbd1f87, vehicle, _fv(wetLevel));
};

/**
 * _SHOW_HORSE_REINS
 *
 * @param {number} vehicle
 * @return {void}
 */
global.ShowHorseReins = function (vehicle) {
  return _in(0x41cda90e, 0xe3450921, vehicle);
};

/**
 * _TRIGGER_TRAIN_WHISTLE
 * whistleSequence: ACKNOWLEDGE, BACKING_UP, CROSSING, DANGER, MOVING, NEXT_STATION, PASSING, STOPPED
 * p2 = true seems to mute the sound
 *
 * @param {number} train
 * @param {string | number} whistleSequence
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {void}
 */
global.TriggerTrainWhistle = function (train, whistleSequence, p2, p3) {
  return _in(0xcfe122ec, 0x635cc2b2, train, _ts(whistleSequence), p2, p3);
};

/**
 * _0x08797A8C03868CB8
 *
 * @param {number} threshold
 * @return {void}
 */
global.N_0x08797A8C03868CB8 = function (threshold) {
  return _in(0x08797a8c, 0x03868cb8, _fv(threshold));
};

/**
 * _0x0DED260A1958A82E
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0x0DED260A1958A82E = function (player) {
  return _in(0x0ded260a, 0x1958a82e, player, _r);
};

/**
 * _0x1C38C3577901AF1F
 *

 * @return {void}
 */
global.N_0x1C38C3577901AF1F = function () {
  return _in(0x1c38c357, 0x7901af1f);
};

/**
 * _0x1FBF7F5BA7E4BE3A
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x1FBF7F5BA7E4BE3A = function (p0) {
  return _in(0x1fbf7f5b, 0xa7e4be3a, p0);
};

/**
 * _0x2F82CAB262C8AE26
 *
 * @param {number} player
 * @return {number}
 */
global.N_0x2F82CAB262C8AE26 = function (player) {
  return _in(0x2f82cab2, 0x62c8ae26, player, _r, _rf);
};

/**
 * _0x356135B9B10A2A82
 *
 * @param {DataView} gamerHandle
 * @return {boolean}
 */
global.N_0x356135B9B10A2A82 = function (gamerHandle) {
  return _in(0x356135b9, 0xb10a2a82, gamerHandle, _r);
};

/**
 * _0x4791899615D70FA2
 * Params: p1 = 2; p2 = 3 in R* Script net_main_offline
 *
 * @param {number} player
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0x4791899615D70FA2 = function (player, p1, p2) {
  return _in(0x47918996, 0x15d70fa2, player, p1, p2);
};

/**
 * _0x49623BCFC3A3D829
 *
 * @param {number} player
 * @param {boolean} muted
 * @return {boolean}
 */
global.N_0x49623BCFC3A3D829 = function (player, muted) {
  return _in(0x49623bcf, 0xc3a3d829, player, muted, _r);
};

/**
 * _0x58125B691F6827D5
 *
 * @param {number} proximity
 * @return {void}
 */
global.N_0x58125B691F6827D5 = function (proximity) {
  return _in(0x58125b69, 0x1f6827d5, _fv(proximity));
};

/**
 * _0x5CA7FB7D6DE49DCC
 *
 * @param {number} player
 * @return {number}
 */
global.N_0x5CA7FB7D6DE49DCC = function (player) {
  return _in(0x5ca7fb7d, 0x6de49dcc, player, _r, _rf);
};

/**
 * _0x767931C727DF2ED7
 * Returns p2 value of 0x4791899615D70FA2
 *
 * @param {number} player
 * @param {number} p1
 * @return {number}
 */
global.N_0x767931C727DF2ED7 = function (player, p1) {
  return _in(0x767931c7, 0x27df2ed7, player, p1, _r, _ri);
};

/**
 * _0x79F478FF5F9F4F05
 *
 * @param {boolean} enabled
 * @return {void}
 */
global.N_0x79F478FF5F9F4F05 = function (enabled) {
  return _in(0x79f478ff, 0x5f9f4f05, enabled);
};

/**
 * _0x8E462DB1EAA9C47C
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0x8E462DB1EAA9C47C = function (player) {
  return _in(0x8e462db1, 0xeaa9c47c, player, _r);
};

/**
 * _0x919AF2D93E9AA89D
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0x919AF2D93E9AA89D = function (player) {
  return _in(0x919af2d9, 0x3e9aa89d, player, _r);
};

/**
 * _0xAA35FD9ABAB490A3
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0xAA35FD9ABAB490A3 = function (player) {
  return _in(0xaa35fd9a, 0xbab490a3, player, _r);
};

/**
 * _0xB3E8841F6BDAF83E
 *

 * @return {void}
 */
global.N_0xB3E8841F6BDAF83E = function () {
  return _in(0xb3e8841f, 0x6bdaf83e);
};

/**
 * _0xB6E79850B759A30E
 *
 * @param {number} teamId
 * @param {boolean} allow
 * @return {void}
 */
global.N_0xB6E79850B759A30E = function (teamId, allow) {
  return _in(0xb6e79850, 0xb759a30e, teamId, allow);
};

/**
 * _0xB779F4FA19269AEC
 *
 * @param {boolean} flag
 * @return {void}
 */
global.N_0xB779F4FA19269AEC = function (flag) {
  return _in(0xb779f4fa, 0x19269aec, flag);
};

/**
 * _0xCCF71FCFA0070B1A
 *

 * @return {boolean}
 */
global.N_0xCCF71FCFA0070B1A = function () {
  return _in(0xccf71fcf, 0xa0070b1a, _r);
};

/**
 * _0xDB622ECD3DCBE078
 *
 * @param {number} player
 * @return {any}
 */
global.N_0xDB622ECD3DCBE078 = function (player) {
  return _in(0xdb622ecd, 0x3dcbe078, player, _r);
};

/**
 * _0xDC9B361CB7776673
 *
 * @param {number} player
 * @return {void}
 */
global.N_0xDC9B361CB7776673 = function (player) {
  return _in(0xdc9b361c, 0xb7776673, player);
};

/**
 * _0xEC8703E4536A9952
 *

 * @return {void}
 */
global.N_0xEC8703E4536A9952 = function () {
  return _in(0xec8703e4, 0x536a9952);
};

/**
 * _0xEF6F2A35FAAF2ED7
 *
 * @param {number} player
 * @return {boolean}
 */
global.N_0xEF6F2A35FAAF2ED7 = function (player) {
  return _in(0xef6f2a35, 0xfaaf2ed7, player, _r);
};

/**
 * _0xF8938CF3984092A5
 *
 * @param {number} player
 * @return {void}
 */
global.N_0xF8938CF3984092A5 = function (player) {
  return _in(0xf8938cf3, 0x984092a5, player);
};

/**
 * CREATE_VOLUME_AGGREGATE
 *

 * @return {number}
 */
global.CreateVolumeAggregate = function () {
  return _in(0x59f6f5c1, 0xd129f106, _r, _ri);
};

/**
 * CREATE_VOLUME_BOX
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @return {number}
 */
global.CreateVolumeBox = function (x, y, z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
  return _in(0xdf85637f, 0x22706891, _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ), _r, _ri);
};

/**
 * CREATE_VOLUME_CYLINDER
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @return {number}
 */
global.CreateVolumeCylinder = function (x, y, z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
  return _in(0x0522d477, 0x4b82e3e6, _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ), _r, _ri);
};

/**
 * CREATE_VOLUME_SPHERE
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @return {number}
 */
global.CreateVolumeSphere = function (x, y, z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
  return _in(0xb3fb80a3, 0x2bae3065, _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ), _r, _ri);
};

/**
 * DELETE_VOLUME
 *
 * @param {number} volume
 * @return {void}
 */
global.DeleteVolume = function (volume) {
  return _in(0x43f867ef, 0x5c463a53, volume);
};

/**
 * DOES_VOLUME_COLLIDE_WITH_ANY_VOLUME_LOCK
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {boolean} p4
 * @param {number} p5
 * @param {number} p6
 * @return {boolean}
 */
global.DoesVolumeCollideWithAnyVolumeLock = function (x, y, z, radius, p4, p5, p6) {
  return _in(0x39776917, 0x5a7dbb30, _fv(x), _fv(y), _fv(z), _fv(radius), p4, p5, p6, _r);
};

/**
 * DOES_VOLUME_EXIST
 *
 * @param {number} volume
 * @return {boolean}
 */
global.DoesVolumeExist = function (volume) {
  return _in(0x92a78d0b, 0xedb332a3, volume, _r);
};

/**
 * GET_VOLUME_COORDS
 *
 * @param {number} volume
 * @return {Vector3}
 */
global.GetVolumeCoords = function (volume) {
  return _in(0xf70f0001, 0x3a62f866, volume, _r, _rv);
};

/**
 * GET_VOLUME_LOCK_REQUEST_STATUS
 * enum eVolumeLockRequestStatus
 * {
 *   VOLUME_LOCK_REQUEST_STATUS_INVALID,
 *   VOLUME_LOCK_REQUEST_STATUS_READY,
 *   VOLUME_LOCK_REQUEST_STATUS_IN_PROGRESS,
 *   VOLUME_LOCK_REQUEST_STATUS_SUCCEEDED,
 *   VOLUME_LOCK_REQUEST_STATUS_FAILED
 * };
 *
 * @param {number} volLockRequestId
 * @return {number}
 */
global.GetVolumeLockRequestStatus = function (volLockRequestId) {
  return _in(0xb33a6043, 0x45f58202, volLockRequestId, _r, _ri);
};

/**
 * GET_VOLUME_ROTATION
 *
 * @param {number} volume
 * @return {Vector3}
 */
global.GetVolumeRotation = function (volume) {
  return _in(0x18675bc9, 0x14891122, volume, _r, _rv);
};

/**
 * GET_VOLUME_SCALE
 *
 * @param {number} volume
 * @return {Vector3}
 */
global.GetVolumeScale = function (volume) {
  return _in(0x3e2a25b2, 0x416dd67e, volume, _r, _rv);
};

/**
 * IS_POINT_IN_VOLUME
 * Old name: _IS_POSITION_INSIDE_VOLUME
 *
 * @param {number} volume
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {boolean}
 */
global.IsPointInVolume = function (volume, x, y, z) {
  return _in(0xf256a752, 0x10c5c0eb, volume, _fv(x), _fv(y), _fv(z), _r);
};

/**
 * IS_VOLUME_LOCK_REQUEST_VALID
 *
 * @param {number} volLockRequestId
 * @return {boolean}
 */
global.IsVolumeLockRequestValid = function (volLockRequestId) {
  return _in(0xa4a43593, 0x20345b34, volLockRequestId, _r);
};

/**
 * REQUEST_VOLUME_LOCK
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} p4
 * @param {number} p5
 * @return {number}
 */
global.RequestVolumeLock = function (x, y, z, radius, p4, p5) {
  return _in(0xf14bcef2, 0x90f869e1, _fv(x), _fv(y), _fv(z), _fv(radius), p4, p5, _r, _ri);
};

/**
 * REQUEST_VOLUME_LOCK_WITH_ARGS
 *
 * @param {DataView} args
 * @return {number}
 */
global.RequestVolumeLockWithArgs = function (args) {
  return _in(0x183c0b6c, 0xfeffcae4, args, _r, _ri);
};

/**
 * SET_VOLUME_COORDS
 *
 * @param {number} volume
 * @param {number} posX
 * @param {number} posY
 * @param {number} posZ
 * @return {boolean}
 */
global.SetVolumeCoords = function (volume, posX, posY, posZ) {
  return _in(0x541b8576, 0x615c33de, volume, _fv(posX), _fv(posY), _fv(posZ), _r);
};

/**
 * SET_VOLUME_OWNER_PERSISTENT_CHARACTER
 *
 * @param {number} volume
 * @param {number} persChar
 * @param {boolean} p2
 * @return {void}
 */
global.SetVolumeOwnerPersistentCharacter = function (volume, persChar, p2) {
  return _in(0xe2be6ffa, 0x4a13cbb0, volume, persChar, p2);
};

/**
 * SET_VOLUME_ROTATION
 *
 * @param {number} volume
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @return {boolean}
 */
global.SetVolumeRotation = function (volume, rotX, rotY, rotZ) {
  return _in(0xa07cf1b2, 0x1b56f041, volume, _fv(rotX), _fv(rotY), _fv(rotZ), _r);
};

/**
 * SET_VOLUME_SCALE
 *
 * @param {number} volume
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @return {boolean}
 */
global.SetVolumeScale = function (volume, scaleX, scaleY, scaleZ) {
  return _in(0xa46e98bd, 0xc407e23d, volume, _fv(scaleX), _fv(scaleY), _fv(scaleZ), _r);
};

/**
 * _0x128FC3A893BF853A
 * nullsub, doesn't do anything
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x128FC3A893BF853A = function (p0) {
  return _in(0x128fc3a8, 0x93bf853a, p0);
};

/**
 * _0x2B32B11520626229
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {any}
 */
global.N_0x2B32B11520626229 = function (p0, p1, p2, p3, p4) {
  return _in(0x2b32b115, 0x20626229, p0, p1, p2, p3, p4, _r);
};

/**
 * _0x351D71B8B72B858B
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x351D71B8B72B858B = function (p0) {
  return _in(0x351d71b8, 0xb72b858b, p0, _r);
};

/**
 * _0x3EFABB21E14A6BD1
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x3EFABB21E14A6BD1 = function (p0, p1, p2) {
  return _in(0x3efabb21, 0xe14a6bd1, p0, p1, p2);
};

/**
 * _0x40F769D31A00D5A0
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x40F769D31A00D5A0 = function (p0, p1) {
  return _in(0x40f769d3, 0x1a00d5a0, p0, p1, _r);
};

/**
 * _0x4A8FEFC43FD8AC9B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x4A8FEFC43FD8AC9B = function (p0, p1, p2) {
  return _in(0x4a8fefc4, 0x3fd8ac9b, p0, p1, p2);
};

/**
 * _0x51E52C9687FCDEEC
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @return {any}
 */
global.N_0x51E52C9687FCDEEC = function (p0, p1, p2, p3, p4, p5, p6) {
  return _in(0x51e52c96, 0x87fcdeec, p0, p1, p2, p3, p4, p5, p6, _r);
};

/**
 * _0x52572B331E693AED
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0x52572B331E693AED = function (p0, p1, p2) {
  return _in(0x52572b33, 0x1e693aed, p0, p1, p2);
};

/**
 * _0x53D05D60E5F5B40C
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0x53D05D60E5F5B40C = function (p0, p1, p2, p3) {
  return _in(0x53d05d60, 0xe5f5b40c, p0, p1, p2, p3);
};

/**
 * _0x695DAC2DB928F308
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x695DAC2DB928F308 = function (p0, p1) {
  return _in(0x695dac2d, 0xb928f308, p0, p1);
};

/**
 * _0x6D5F9E69BA1BE783
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x6D5F9E69BA1BE783 = function (p0) {
  return _in(0x6d5f9e69, 0xba1be783, p0);
};

/**
 * _0x748C5F51A18CB8F0
 * nullsub, doesn't do anything
 *
 * @param {boolean} p0
 * @return {void}
 */
global.N_0x748C5F51A18CB8F0 = function (p0) {
  return _in(0x748c5f51, 0xa18cb8f0, p0);
};

/**
 * _0x7FD78DFD0C5D7B9B
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x7FD78DFD0C5D7B9B = function (p0) {
  return _in(0x7fd78dfd, 0x0c5d7b9b, p0, _r);
};

/**
 * _0x870E9981ED27C815
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {any}
 */
global.N_0x870E9981ED27C815 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0x870e9981, 0xed27c815, p0, p1, p2, p3, p4, p5, _r);
};

/**
 * _0x998202B206872672
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x998202B206872672 = function (p0) {
  return _in(0x998202b2, 0x06872672, p0);
};

/**
 * _0xAA9EE2AAFC717623
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @return {any}
 */
global.N_0xAA9EE2AAFC717623 = function (p0, p1, p2, p3, p4, p5) {
  return _in(0xaa9ee2aa, 0xfc717623, p0, p1, p2, p3, p4, p5, _r);
};

/**
 * _0xAC355980681A7F89
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xAC355980681A7F89 = function (p0) {
  return _in(0xac355980, 0x681a7f89, p0);
};

/**
 * _0xB440F4E35393FC39
 *
 * @param {number} volume
 * @param {any} p1
 * @return {void}
 */
global.N_0xB440F4E35393FC39 = function (volume, p1) {
  return _in(0xb440f4e3, 0x5393fc39, volume, p1);
};

/**
 * _0xB469CFD9E065EB99
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xB469CFD9E065EB99 = function (p0, p1) {
  return _in(0xb469cfd9, 0xe065eb99, p0, p1);
};

/**
 * _0xC4019CF9AE8E931A
 *
 * @param {number} volLockRequestId
 * @return {Vector3}
 */
global.N_0xC4019CF9AE8E931A = function (volLockRequestId) {
  return _in(0xc4019cf9, 0xae8e931a, volLockRequestId, _r, _rv);
};

/**
 * _0xC61E2FD926DBB406
 *

 * @return {void}
 */
global.N_0xC61E2FD926DBB406 = function () {
  return _in(0xc61e2fd9, 0x26dbb406);
};

/**
 * _0xCA5C90D40665D5CE
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xCA5C90D40665D5CE = function (p0, p1) {
  return _in(0xca5c90d4, 0x0665d5ce, p0, p1, _r);
};

/**
 * _0xD460135C98940274
 *
 * @param {number} volume
 * @param {any} p1
 * @return {void}
 */
global.N_0xD460135C98940274 = function (volume, p1) {
  return _in(0xd460135c, 0x98940274, volume, p1);
};

/**
 * _0xD4FA73FE628FEC63
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xD4FA73FE628FEC63 = function (p0, p1) {
  return _in(0xd4fa73fe, 0x628fec63, p0, p1);
};

/**
 * _0xD52DF30355EA7C8E
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xD52DF30355EA7C8E = function (p0, p1, p2) {
  return _in(0xd52df303, 0x55ea7c8e, p0, p1, p2);
};

/**
 * _0xD882C5B3991575B7
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @return {Vector3}
 */
global.N_0xD882C5B3991575B7 = function (p0, p1, p2, p3, p4) {
  return _in(0xd882c5b3, 0x991575b7, p0, p1, p2, p3, p4, _r, _rv);
};

/**
 * _0xEBA87B9273835CF3
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xEBA87B9273835CF3 = function (p0, p1) {
  return _in(0xeba87b92, 0x73835cf3, p0, p1);
};

/**
 * _0xEE1D6FF54CAF7714
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xEE1D6FF54CAF7714 = function (p0, p1) {
  return _in(0xee1d6ff5, 0x4caf7714, p0, p1, _r);
};

/**
 * _0xF3A2FBA5985C8CD5
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @return {void}
 */
global.N_0xF3A2FBA5985C8CD5 = function (p0, p1, p2, p3) {
  return _in(0xf3a2fba5, 0x985c8cd5, p0, p1, p2, p3);
};

/**
 * _0xF6CE6F9C3897804E
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xF6CE6F9C3897804E = function (p0) {
  return _in(0xf6ce6f9c, 0x3897804e, p0, _r);
};

/**
 * _0xF6F5447D418DAA82
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xF6F5447D418DAA82 = function (p0) {
  return _in(0xf6f5447d, 0x418daa82, p0, _r);
};

/**
 * _0xFA15C9A320E707B0
 * nullsub, doesn't do anything
 *

 * @return {void}
 */
global.N_0xFA15C9A320E707B0 = function () {
  return _in(0xfa15c9a3, 0x20e707b0);
};

/**
 * _ADD_BOUNDS_TO_AGGREGATE_VOLUME
 * _ADD_R* - _ADD_V(OLUME?)*
 *
 * @param {number} volume
 * @param {number} aggregate
 * @return {void}
 */
global.AddBoundsToAggregateVolume = function (volume, aggregate) {
  return _in(0x6e0d3c3f, 0x828da773, volume, aggregate);
};

/**
 * _ADD_BOX_VOLUME_TO_VOLUME_AGGREGATE
 *
 * @param {number} aggregate
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {number} p9
 * @return {void}
 */
global.AddBoxVolumeToVolumeAggregate = function (aggregate, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x39816f6f, 0x94f385ad, aggregate, _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _fv(p8), _fv(p9));
};

/**
 * _ADD_CYLINDER_VOLUME_TO_VOLUME_AGGREGATE
 *
 * @param {number} aggregate
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {number} p9
 * @return {void}
 */
global.AddCylinderVolumeToVolumeAggregate = function (aggregate, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0xbce668aa, 0xf83608be, aggregate, _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _fv(p8), _fv(p9));
};

/**
 * _ADD_ENTRY_VOLUME_LOCK
 *
 * @param {DataView} args
 * @return {boolean}
 */
global.AddEntryVolumeLock = function (args) {
  return _in(0x58d3803f, 0xa639a3bb, args, _r);
};

/**
 * _ADD_SPHERE_VOLUME_TO_VOLUME_AGGREGATE
 *
 * @param {number} aggregate
 * @param {number} p1
 * @param {number} p2
 * @param {number} p3
 * @param {number} p4
 * @param {number} p5
 * @param {number} p6
 * @param {number} p7
 * @param {number} p8
 * @param {number} p9
 * @return {void}
 */
global.AddSphereVolumeToVolumeAggregate = function (aggregate, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
  return _in(0x5b7d7bf3, 0x6d2de18b, aggregate, _fv(p1), _fv(p2), _fv(p3), _fv(p4), _fv(p5), _fv(p6), _fv(p7), _fv(p8), _fv(p9));
};

/**
 * _ADD_VOLUME_TO_VOLUME_AGGREGATE
 *
 * @param {number} aggregate
 * @param {number} typeHash
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @return {void}
 */
global.AddVolumeToVolumeAggregate = function (aggregate, typeHash, x, y, z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
  return _in(0x12fcaa23, 0xf2320422, aggregate, _ch(typeHash), _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ));
};

/**
 * _CREATE_ANTI_GRIEF_VOLUME
 *
 * @param {number} volumeType
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @return {number}
 */
global.CreateAntiGriefVolume = function (volumeType, x, y, z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
  return _in(0x0eb78c2b, 0x156635b1, _ch(volumeType), _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ), _r, _ri);
};

/**
 * _CREATE_SPEED_VOLUME
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @param {any} p13
 * @param {any} p14
 * @return {number}
 */
global.CreateSpeedVolume = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
  return _in(0xbbe768e3, 0xae76e07c, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, _r, _ri);
};

/**
 * _CREATE_VOLUME_AGGREGATE_WITH_CUSTOM_NAME
 *
 * @param {string | number} name
 * @return {number}
 */
global.CreateVolumeAggregateWithCustomName = function (name) {
  return _in(0x5d580de6, 0x398bb162, _ts(name), _r, _ri);
};

/**
 * _CREATE_VOLUME_BOX_WITH_CUSTOM_NAME
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @param {string | number} name
 * @return {number}
 */
global.CreateVolumeBoxWithCustomName = function (x, y, z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name) {
  return _in(0xf68485c7, 0x495d848e, _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ), _ts(name), _r, _ri);
};

/**
 * _CREATE_VOLUME_BY_HASH
 *
 * @param {number} volumeType
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @return {number}
 */
global.CreateVolumeByHash = function (volumeType, x, y, z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
  return _in(0x502022fa, 0x1af9dc86, _ch(volumeType), _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ), _r, _ri);
};

/**
 * _CREATE_VOLUME_BY_HASH_WITH_CUSTOM_NAME
 *
 * @param {number} volumeType
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @param {string | number} name
 * @return {number}
 */
global.CreateVolumeByHashWithCustomName = function (volumeType, x, y, z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name) {
  return _in(0x1f85e4ac, 0x774a201e, _ch(volumeType), _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ), _ts(name), _r, _ri);
};

/**
 * _CREATE_VOLUME_CYLINDER_WITH_CUSTOM_NAME
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @param {string | number} name
 * @return {number}
 */
global.CreateVolumeCylinderWithCustomName = function (x, y, z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name) {
  return _in(0xdf1e350e, 0xddf06e59, _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ), _ts(name), _r, _ri);
};

/**
 * _CREATE_VOLUME_LOCK
 * Params: p5 is always 0
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} flag
 * @param {any} p5
 * @return {number}
 */
global.CreateVolumeLock = function (x, y, z, radius, flag, p5) {
  return _in(0x00bbf7ce, 0xae8c666a, _fv(x), _fv(y), _fv(z), _fv(radius), flag, p5, _r, _ri);
};

/**
 * _CREATE_VOLUME_LOCK_ATTACHED_TO_ENTITY
 * Params: p3 is always 0
 *
 * @param {number} entity
 * @param {number} radius
 * @param {number} flag
 * @param {any} p3
 * @return {number}
 */
global.CreateVolumeLockAttachedToEntity = function (entity, radius, flag, p3) {
  return _in(0xf383e96c, 0x4904df0c, entity, _fv(radius), flag, p3, _r, _ri);
};

/**
 * _CREATE_VOLUME_SPHERE_WITH_CUSTOM_NAME
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} rotX
 * @param {number} rotY
 * @param {number} rotZ
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} scaleZ
 * @param {string | number} name
 * @return {number}
 */
global.CreateVolumeSphereWithCustomName = function (x, y, z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name) {
  return _in(0x10157bc3, 0x247ff3ba, _fv(x), _fv(y), _fv(z), _fv(rotX), _fv(rotY), _fv(rotZ), _fv(scaleX), _fv(scaleY), _fv(scaleZ), _ts(name), _r, _ri);
};

/**
 * _CREATE_WALK_AND_TALK_VOLUME
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @param {any} p3
 * @param {any} p4
 * @param {any} p5
 * @param {any} p6
 * @param {any} p7
 * @param {any} p8
 * @param {any} p9
 * @param {any} p10
 * @param {any} p11
 * @param {any} p12
 * @return {number}
 */
global.CreateWalkAndTalkVolume = function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12) {
  return _in(0xfd0e389c, 0xd44434b6, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, _r, _ri);
};

/**
 * _FIND_VOLUME_LOCK_REQUEST_ID_WITH_ARGS
 *
 * @param {DataView} args
 * @return {number}
 */
global.FindVolumeLockRequestIdWithArgs = function (args) {
  return _in(0x77a6e4ad, 0x0c496f81, args, _r, _ri);
};

/**
 * _GET_VOLUME_BOUNDS
 *
 * @param {number} volume
 * @return {[Vector3, Vector3]}
 */
global.GetVolumeBounds = function (volume) {
  return _in(0x5737199a, 0xf2dc609f, volume, _v, _v);
};

/**
 * _GET_VOLUME_RELATIONSHIP
 * Returns relationshipGroup Hash
 *
 * @param {number} volume
 * @return {number}
 */
global.GetVolumeRelationship = function (volume) {
  return _in(0x666c2f53, 0xabefc952, volume, _r, _ri);
};

/**
 * _IS_AGGREGATE_VOLUME
 *
 * @param {number} volume
 * @return {boolean}
 */
global.IsAggregateVolume = function (volume) {
  return _in(0xfeff01b5, 0x725bcd22, volume, _r);
};

/**
 * _IS_POINT_NEAR_VOLUME_LOCK_CENTER
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} radius
 * @param {number} p4
 * @param {number} p5
 * @param {number} flags
 * @return {boolean}
 */
global.IsPointNearVolumeLockCenter = function (x, y, z, radius, p4, p5, flags) {
  return _in(0x769bb762, 0x6b8cdb06, _fv(x), _fv(y), _fv(z), _fv(radius), p4, p5, flags, _r);
};

/**
 * _IS_VOLUME_LOCK_REQUEST_VALID_2
 *
 * @param {number} volLockRequestId
 * @return {boolean}
 */
global.IsVolumeLockRequestValid_2 = function (volLockRequestId) {
  return _in(0xf6a8a652, 0xa6b186cd, volLockRequestId, _r);
};

/**
 * _MODIFY_VOLUME_LOCK_LOCATION
 *
 * @param {number} volLock
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {void}
 */
global.ModifyVolumeLockLocation = function (volLock, x, y, z) {
  return _in(0xec43c2ff, 0xb70e3f30, volLock, _fv(x), _fv(y), _fv(z));
};

/**
 * _RELEASE_LOCK_VOLUME
 *
 * @param {number} volLockRequestId
 * @return {void}
 */
global.ReleaseLockVolume = function (volLockRequestId) {
  return _in(0xfdfecc6e, 0xe4491e11, volLockRequestId);
};

/**
 * _REMOVE_BOUNDS_FROM_AGGREGATE_VOLUME
 * _REMOVE_E* - _REMOVE_R*
 *
 * @param {number} volume
 * @param {number} aggregate
 * @return {void}
 */
global.RemoveBoundsFromAggregateVolume = function (volume, aggregate) {
  return _in(0xf92fa889, 0x0dececf6, volume, aggregate);
};

/**
 * _SET_ANTI_GRIEF_VOLUME_BLOCKS_HORSE
 *
 * @param {number} volume
 * @param {boolean} toggle
 * @return {void}
 */
global.SetAntiGriefVolumeBlocksHorse = function (volume, toggle) {
  return _in(0xbe551c2c, 0xc421185d, volume, toggle);
};

/**
 * _SET_ANTI_GRIEF_VOLUME_BLOCKS_PLAYER
 *
 * @param {number} volume
 * @param {boolean} toggle
 * @return {void}
 */
global.SetAntiGriefVolumeBlocksPlayer = function (volume, toggle) {
  return _in(0x5b23dff8, 0xe0948bb2, volume, toggle);
};

/**
 * _SET_VOLUME_RELATIONSHIP
 *
 * @param {number} volume
 * @param {number} relationshipGroup
 * @return {void}
 */
global.SetVolumeRelationship = function (volume, relationshipGroup) {
  return _in(0xfd010a21, 0x54b40676, volume, _ch(relationshipGroup));
};

/**
 * DISABLE_WATER_LOOKUP
 * Must be called every frame to take full effect.
 *

 * @return {void}
 */
global.DisableWaterLookup = function () {
  return _in(0x754616ec, 0x6965d1fb);
};

/**
 * ENABLE_WATER_LOOKUP
 *

 * @return {void}
 */
global.EnableWaterLookup = function () {
  return _in(0x754616ec, 0x6965d1bf);
};

/**
 * GET_WATER_HEIGHT
 * Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If that is set to one it will fail. Likely not the only issue but part of it.
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {[boolean, number]}
 */
global.GetWaterHeight = function (x, y, z) {
  return _in(0xfca8b23f, 0x28813f69, _fv(x), _fv(y), _fv(z), _f, _r);
};

/**
 * GET_WATER_HEIGHT_NO_WAVES
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {[boolean, number]}
 */
global.GetWaterHeightNoWaves = function (x, y, z) {
  return _in(0xdcf3690a, 0xa262c03f, _fv(x), _fv(y), _fv(z), _f, _r);
};

/**
 * REMOVE_EXTRA_CALMING_QUAD
 * Only used in rcm_crackpot1 R* Script: p0 = 0
 *
 * @param {number} index
 * @return {void}
 */
global.RemoveExtraCalmingQuad = function (index) {
  return _in(0x4bef8dd7, 0x5af6c71c, index);
};

/**
 * TEST_PROBE_AGAINST_ALL_WATER
 * enum eScriptWaterTestResult
 * {
 *   SCRIPT_WATER_TEST_RESULT_NONE,
 *   SCRIPT_WATER_TEST_RESULT_WATER,
 *   SCRIPT_WATER_TEST_RESULT_BLOCKED,
 * };
 *
 * @param {number} x1
 * @param {number} y1
 * @param {number} z1
 * @param {number} x2
 * @param {number} y2
 * @param {number} z2
 * @param {number} flags
 * @return {[number, Vector3]}
 */
global.TestProbeAgainstAllWater = function (x1, y1, z1, x2, y2, z2, flags) {
  return _in(0x8974647e, 0xd222ea5f, _fv(x1), _fv(y1), _fv(z1), _fv(x2), _fv(y2), _fv(z2), flags, _v, _r, _ri);
};

/**
 * TEST_VERTICAL_PROBE_AGAINST_ALL_WATER
 * Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If it's set to 1 (Guarma) it will fail.
 * 
 * See TEST_PROBE_AGAINST_ALL_WATER.
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} flags
 * @return {[number, number]}
 */
global.TestVerticalProbeAgainstAllWater = function (x, y, z, flags) {
  return _in(0x2b3451fa, 0x1e3142e2, _fv(x), _fv(y), _fv(z), flags, _f, _r, _ri);
};

/**
 * _0x09A1C7DFDCE54FBC
 * Called together with REMOVE_EXTRA_CALMING_QUAD in rcm_crackpot1 R* Script: p0 = 0
 * _REMOVE_*
 *
 * @param {number} p0
 * @return {void}
 */
global.N_0x09A1C7DFDCE54FBC = function (p0) {
  return _in(0x09a1c7df, 0xdce54fbc, p0);
};

/**
 * _0x0DCEC6A92E497E17
 * Only used in native_son1 R* Script: p1 = 1
 *
 * @param {number} entity
 * @param {number} p1
 * @return {void}
 */
global.N_0x0DCEC6A92E497E17 = function (entity, p1) {
  return _in(0x0dcec6a9, 0x2e497e17, entity, p1);
};

/**
 * _0xA33F5069B0CB89B8
 * Only used in fishing_core R* Script
 *

 * @return {void}
 */
global.N_0xA33F5069B0CB89B8 = function () {
  return _in(0xa33f5069, 0xb0cb89b8);
};

/**
 * _0xB34A6009A0DB80B8
 * Used in bounty1, fanale3, sean1 R* Scripts
 *
 * @param {number} entity
 * @return {void}
 */
global.N_0xB34A6009A0DB80B8 = function (entity) {
  return _in(0xb34a6009, 0xa0db80b8, entity);
};

/**
 * _0xE8126623008372AA
 * Only used in fussar1 / train_robbery2 R* Script
 *

 * @return {void}
 */
global.N_0xE8126623008372AA = function () {
  return _in(0xe8126623, 0x008372aa);
};

/**
 * _0xF0FBF193F1F5C0EA
 * Only used in fishing_core R* Script
 *
 * @param {number} ped
 * @return {void}
 */
global.N_0xF0FBF193F1F5C0EA = function (ped) {
  return _in(0xf0fbf193, 0xf1f5c0ea, ped);
};

/**
 * _GET_WORLD_WATER_TYPE
 *

 * @return {number}
 */
global.GetWorldWaterType = function () {
  return _in(0x189739a7, 0x631c1867, _r, _ri);
};

/**
 * _RESET_GUARMA_WATER_STATE
 * Only used in guama1 / guama3 R* Script
 * _REQUEST_* or _RESET_*
 *

 * @return {void}
 */
global.ResetGuarmaWaterState = function () {
  return _in(0xc63540ae, 0xf8384769);
};

/**
 * _SET_OCEAN_GUARMA_WATER_QUADRANT
 * Only used in R* Script guama1 this native allows to modify the ocean water in the guarma island. wave direction accepts 0, 1 and 2 values.
 *
 * @param {number} wavesHeight
 * @param {number} p1
 * @param {number} waveDirection
 * @param {number} p3
 * @param {number} waveAmmount
 * @param {number} p5
 * @param {number} waveSpeed
 * @param {number} wavesStrength
 * @param {number} p8
 * @return {void}
 */
global.SetOceanGuarmaWaterQuadrant = function (wavesHeight, p1, waveDirection, p3, waveAmmount, p5, waveSpeed, wavesStrength, p8) {
  return _in(0xc63540ae, 0xf8384732, _fv(wavesHeight), _fv(p1), waveDirection, _fv(p3), _fv(waveAmmount), _fv(p5), _fv(waveSpeed), _fv(wavesStrength), p8);
};

/**
 * _SET_WORLD_WATER_TYPE
 * 0 = World
 * 1 = Guarma
 *
 * @param {number} waterType
 * @return {void}
 */
global.SetWorldWaterType = function (waterType) {
  return _in(0xe8770ee0, 0x2aee45c2, waterType);
};

/**
 * GET_ALLOW_DUAL_WIELD
 *
 * @param {number} ped
 * @return {boolean}
 */
global.GetAllowDualWield = function (ped) {
  return _in(0x918990bd, 0x9ce08582, ped, _r);
};

/**
 * GET_AMMO_IN_CLIP
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @return {[boolean, number]}
 */
global.GetAmmoInClip = function (ped, weaponHash) {
  return _in(0x2e120224, 0x8937775c, ped, _i, _ch(weaponHash), _r);
};

/**
 * GET_AMMO_IN_PED_WEAPON
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @return {number}
 */
global.GetAmmoInPedWeapon = function (ped, weaponHash) {
  return _in(0x015a5221, 0x36d7f951, ped, _ch(weaponHash), _r, _ri);
};

/**
 * GET_BEST_PED_SHORTARM_GUID
 *
 * @param {number} ped
 * @param {DataView} outGuid
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {void}
 */
global.GetBestPedShortarmGuid = function (ped, outGuid, p2, p3) {
  return _in(0xf52bd94b, 0x47ccf736, ped, outGuid, p2, p3);
};

/**
 * GET_BEST_PED_WEAPON
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {number}
 */
global.GetBestPedWeapon = function (ped, p1, p2) {
  return _in(0x8483e98e, 0x8b888ae2, ped, p1, p2, _r, _ri);
};

/**
 * GET_CURRENT_PED_VEHICLE_WEAPON
 *
 * @param {number} ped
 * @return {[boolean, number]}
 */
global.GetCurrentPedVehicleWeapon = function (ped) {
  return _in(0x1017582b, 0xcd3832dc, ped, _i, _r);
};

/**
 * GET_CURRENT_PED_WEAPON
 * attachPoint: see SET_CURRENT_PED_WEAPON
 *
 * @param {number} ped
 * @param {boolean} p2
 * @param {number} attachPoint
 * @param {boolean} p4
 * @return {[boolean, number]}
 */
global.GetCurrentPedWeapon = function (ped, p2, attachPoint, p4) {
  return _in(0x3a87e44b, 0xb9a01d54, ped, _i, p2, attachPoint, p4, _r);
};

/**
 * GET_CURRENT_PED_WEAPON_ENTITY_INDEX
 * Returns weaponObject, attachPoint: see SET_CURRENT_PED_WEAPON
 *
 * @param {number} ped
 * @param {number} attachPoint
 * @return {number}
 */
global.GetCurrentPedWeaponEntityIndex = function (ped, attachPoint) {
  return _in(0x3b390a93, 0x9af0b5fc, ped, attachPoint, _r, _ri);
};

/**
 * GET_MAX_AMMO
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @return {[boolean, number]}
 */
global.GetMaxAmmo = function (ped, weaponHash) {
  return _in(0xdc16122c, 0x7a20c933, ped, _i, _ch(weaponHash), _r);
};

/**
 * GET_MAX_AMMO_IN_CLIP
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {boolean} p2
 * @return {number}
 */
global.GetMaxAmmoInClip = function (ped, weaponHash, p2) {
  return _in(0xa38dcffc, 0xea8962fa, ped, _ch(weaponHash), p2, _r, _ri);
};

/**
 * GET_PED_AMMO_BY_TYPE
 *
 * @param {number} ped
 * @param {number} ammoType
 * @return {number}
 */
global.GetPedAmmoByType = function (ped, ammoType) {
  return _in(0x39d22031, 0x557946c1, ped, _ch(ammoType), _r, _ri);
};

/**
 * GET_PED_AMMO_TYPE_FROM_WEAPON
 * Returns the current ammo type of the specified ped's specified weapon.
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @return {number}
 */
global.GetPedAmmoTypeFromWeapon = function (ped, weaponHash) {
  return _in(0x7fead38b, 0x326b9f74, ped, _ch(weaponHash), _r, _ri);
};

/**
 * GET_PED_BACKUP_WEAPON
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {number}
 */
global.GetPedBackupWeapon = function (ped, p1) {
  return _in(0xc71fe230, 0xa513c30f, ped, p1, _r, _ri);
};

/**
 * GET_PED_LAST_WEAPON_IMPACT_COORD
 *
 * @param {number} ped
 * @return {[boolean, Vector3]}
 */
global.GetPedLastWeaponImpactCoord = function (ped) {
  return _in(0x6c4d0409, 0xba1a2bc2, ped, _v, _r);
};

/**
 * GET_PED_WEAPON_GUID_AT_ATTACH_POINT
 *
 * @param {number} ped
 * @param {number} attachPoint
 * @param {DataView} weaponGuid
 * @return {boolean}
 */
global.GetPedWeaponGuidAtAttachPoint = function (ped, attachPoint, weaponGuid) {
  return _in(0x6929e221, 0x58e52265, ped, attachPoint, weaponGuid, _r);
};

/**
 * GET_WEAPONTYPE_GROUP
 *
 * @param {number} weaponHash
 * @return {number}
 */
global.GetWeapontypeGroup = function (weaponHash) {
  return _in(0xedca14ca, 0x5199ff25, _ch(weaponHash), _r, _ri);
};

/**
 * GET_WEAPON_CLIP_SIZE
 *
 * @param {number} weaponHash
 * @return {number}
 */
global.GetWeaponClipSize = function (weaponHash) {
  return _in(0xd3750ccc, 0x00635fc2, _ch(weaponHash), _r, _ri);
};

/**
 * GET_WEAPON_DEGRADATION
 * 0.0: good condition, 1.0: poor condition
 *
 * @param {number} weaponObject
 * @return {number}
 */
global.GetWeaponDegradation = function (weaponObject) {
  return _in(0x0d78e109, 0x7f89e637, weaponObject, _r, _rf);
};

/**
 * GET_WEAPON_PERMANENT_DEGRADATION
 * Related to rust of weapons
 *
 * @param {number} weaponObject
 * @return {number}
 */
global.GetWeaponPermanentDegradation = function (weaponObject) {
  return _in(0xd56e5f33, 0x6c675efa, weaponObject, _r, _rf);
};

/**
 * GIVE_DELAYED_WEAPON_TO_PED
 * addReason: see _ADD_AMMO_TO_PED
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} ammoCount
 * @param {boolean} p3
 * @param {number} addReason
 * @return {void}
 */
global.GiveDelayedWeaponToPed = function (ped, weaponHash, ammoCount, p3, addReason) {
  return _in(0xb282dc6e, 0xbd803c75, ped, _ch(weaponHash), ammoCount, p3, _ch(addReason));
};

/**
 * GIVE_WEAPON_TO_PED
 * Gives the ped the weapon.
 * List: https://github.com/femga/rdr3_discoveries/blob/master/weapons/weapons.lua
 * 
 * Params: p7 is 0.5f, and p8 is 1.0f. p11 and p12 are both 0 in R* Scripts
 * attachPoint: see SET_CURRENT_PED_WEAPON
 * addReason: see _ADD_AMMO_TO_PED
 * permanentDegradation: default 0.5, any higher than 0 it will automatically make the weapon worn, you can also adjust the value to change the weapons maximum cleanliness
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} ammoCount
 * @param {boolean} bForceInHand
 * @param {boolean} bForceInHolster
 * @param {number} attachPoint
 * @param {boolean} bAllowMultipleCopies
 * @param {number} p7
 * @param {number} p8
 * @param {number} addReason
 * @param {boolean} bIgnoreUnlocks
 * @param {number} permanentDegradation
 * @param {boolean} p12
 * @return {number}
 */
global.GiveWeaponToPed = function (ped, weaponHash, ammoCount, bForceInHand, bForceInHolster, attachPoint, bAllowMultipleCopies, p7, p8, addReason, bIgnoreUnlocks, permanentDegradation, p12) {
  return _in(0x5e3bddbc, 0xb83f3d84, ped, _ch(weaponHash), ammoCount, bForceInHand, bForceInHolster, attachPoint, bAllowMultipleCopies, _fv(p7), _fv(p8), _ch(addReason), bIgnoreUnlocks, _fv(permanentDegradation), p12, _r, _ri);
};

/**
 * GIVE_WEAPON_TO_PED_WITH_OPTIONS
 *
 * @param {number} ped
 * @param {DataView} data
 * @param {DataView} outData
 * @return {boolean}
 */
global.GiveWeaponToPedWithOptions = function (ped, data, outData) {
  return _in(0xbe7e42b0, 0x7fd317ac, ped, data, outData, _r);
};

/**
 * HAS_PED_GOT_WEAPON
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} p2
 * @param {boolean} p3
 * @return {boolean}
 */
global.HasPedGotWeapon = function (ped, weaponHash, p2, p3) {
  return _in(0x8decb02f, 0x88f428bc, ped, _ch(weaponHash), p2, p3, _r);
};

/**
 * HAS_WEAPON_GOT_WEAPON_COMPONENT
 *
 * @param {number} weapon
 * @param {number} addonHash
 * @return {boolean}
 */
global.HasWeaponGotWeaponComponent = function (weapon, addonHash) {
  return _in(0x76a18844, 0xe743bf91, weapon, _ch(addonHash), _r);
};

/**
 * HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE
 * Hides the ped's weapon during a cutscene.
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.HidePedWeaponForScriptedCutscene = function (ped, toggle) {
  return _in(0x6f6981d2, 0x253c208f, ped, toggle);
};

/**
 * IS_PED_ARMED
 *
 * @param {number} ped
 * @param {number} flags
 * @return {boolean}
 */
global.IsPedArmed = function (ped, flags) {
  return _in(0xcb690f68, 0x0a3ea971, ped, flags, _r);
};

/**
 * IS_PED_CARRYING_WEAPON
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsPedCarryingWeapon = function (ped, weaponHash) {
  return _in(0xf29a186e, 0xd428b552, ped, _ch(weaponHash), _r);
};

/**
 * IS_PED_WEAPON_READY_TO_SHOOT
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedWeaponReadyToShoot = function (ped) {
  return _in(0xb80ca294, 0xf2f26749, ped, _r);
};

/**
 * IS_WEAPON_A_GUN
 * Returns true if CWeaponInfoFlags::Flags::Gun is set.
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponAGun = function (weaponHash) {
  return _in(0x705be297, 0xeebdb95d, _ch(weaponHash), _r);
};

/**
 * IS_WEAPON_BOW
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponBow = function (weaponHash) {
  return _in(0xc4dec3ca, 0x8c365a5d, _ch(weaponHash), _r);
};

/**
 * IS_WEAPON_MELEE_WEAPON
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponMeleeWeapon = function (weaponHash) {
  return _in(0x959383dc, 0xd42040da, _ch(weaponHash), _r);
};

/**
 * IS_WEAPON_PISTOL
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponPistol = function (weaponHash) {
  return _in(0xddc64f5e, 0x31eedab6, _ch(weaponHash), _r);
};

/**
 * IS_WEAPON_REPEATER
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponRepeater = function (weaponHash) {
  return _in(0xddb2578e, 0x95ef7138, _ch(weaponHash), _r);
};

/**
 * IS_WEAPON_REVOLVER
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponRevolver = function (weaponHash) {
  return _in(0xc212f1d0, 0x5a8232bb, _ch(weaponHash), _r);
};

/**
 * IS_WEAPON_RIFLE
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponRifle = function (weaponHash) {
  return _in(0x0a82317b, 0x7ebfc420, _ch(weaponHash), _r);
};

/**
 * IS_WEAPON_SHOTGUN
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponShotgun = function (weaponHash) {
  return _in(0xc7538617, 0x4ece95d5, _ch(weaponHash), _r);
};

/**
 * IS_WEAPON_VALID
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponValid = function (weaponHash) {
  return _in(0x937c7116, 0x5cf334b3, _ch(weaponHash), _r);
};

/**
 * MAKE_PED_DROP_WEAPON
 * Old name: _DROP_CURRENT_PED_WEAPON
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {number} attachPoint
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {number}
 */
global.MakePedDropWeapon = function (ped, p1, attachPoint, p3, p4) {
  return _in(0xcef4c65d, 0xe502d367, ped, p1, attachPoint, p3, p4, _r, _ri);
};

/**
 * REMOVE_ALL_PED_WEAPONS
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @return {void}
 */
global.RemoveAllPedWeapons = function (ped, p1, p2) {
  return _in(0xf25df915, 0xfa38c5f3, ped, p1, p2);
};

/**
 * REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT
 *
 * @param {number} weaponObject
 * @param {number} component
 * @return {void}
 */
global.RemoveWeaponComponentFromWeaponObject = function (weaponObject, component) {
  return _in(0xf7d82b0d, 0x66777611, weaponObject, _ch(component));
};

/**
 * REMOVE_WEAPON_FROM_PED
 * removeReason:
 * enum eRemoveItemReason : Hash
 * {
 *   REMOVE_REASON_CLIENT_PURGED = 0x4A4E94DC,
 *   REMOVE_REASON_COALESCE = 0x2ABE393E,
 *   REMOVE_REASON_DEBUG = 0xA07362E6,
 *   REMOVE_REASON_DEFAULT = 0xF77DE93D,
 *   REMOVE_REASON_DELETE_CHARACTER = 0x20AFBDE9,
 *   REMOVE_REASON_DROPPED = 0xEC7FB5D5,
 *   REMOVE_REASON_DUPLICATE = 0x19047132,
 *   REMOVE_REASON_GIFTED_INCORRECTLY = 0x9C4E3829,
 *   REMOVE_REASON_GIVEN = 0xAD5377D4,
 *   REMOVE_REASON_INSUFFICIENT_INVENTORY = 0x518D1AAE,
 *   REMOVE_REASON_ITEM_DOES_NOT_EXIST = 0xEAD5D889,
 *   REMOVE_REASON_LOADOUT = 0x1B94E3BA,
 *   REMOVE_REASON_SET_AMOUNT = 0x19D5CFA5,
 *   REMOVE_REASON_SOLD = 0x76C4B482,
 *   REMOVE_REASON_USED = 0x2188E0A3,
 *   REMOVE_REASON_USE_FAILED = 0x671F9EAD
 * };
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {boolean} p2
 * @param {number} removeReason
 * @return {void}
 */
global.RemoveWeaponFromPed = function (ped, weaponHash, p2, removeReason) {
  return _in(0x4899cb08, 0x8edf59b8, ped, _ch(weaponHash), p2, _ch(removeReason));
};

/**
 * SET_ALLOW_ANY_WEAPON_DROP
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetAllowAnyWeaponDrop = function (ped, toggle) {
  return _in(0x78030c78, 0x67d8b9b6, ped, toggle);
};

/**
 * SET_AMMO_IN_CLIP
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} ammo
 * @return {boolean}
 */
global.SetAmmoInClip = function (ped, weaponHash, ammo) {
  return _in(0xdcd2a934, 0xd65cb497, ped, _ch(weaponHash), ammo, _r);
};

/**
 * SET_CURRENT_PED_VEHICLE_WEAPON
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @return {boolean}
 */
global.SetCurrentPedVehicleWeapon = function (ped, weaponHash) {
  return _in(0x75c55983, 0xc2c39daa, ped, _ch(weaponHash), _r);
};

/**
 * SET_CURRENT_PED_WEAPON
 * attachPoint:
 * enum eWeaponAttachPoint
 * {
 *   WEAPON_ATTACH_POINT_INVALID = -1,
 *   WEAPON_ATTACH_POINT_HAND_PRIMARY = 0,
 *   WEAPON_ATTACH_POINT_HAND_SECONDARY = 1,
 *   WEAPON_ATTACH_POINT_PISTOL_R = 2,
 *   MAX_HAND_WEAPON_ATTACH_POINTS = 2,
 *   WEAPON_ATTACH_POINT_PISTOL_L = 3,
 *   WEAPON_ATTACH_POINT_KNIFE = 4,
 *   WEAPON_ATTACH_POINT_LASSO = 5,
 *   WEAPON_ATTACH_POINT_THROWER = 6,
 *   WEAPON_ATTACH_POINT_BOW = 7,
 *   WEAPON_ATTACH_POINT_BOW_ALTERNATE = 8,
 *   WEAPON_ATTACH_POINT_RIFLE = 9,
 *   WEAPON_ATTACH_POINT_RIFLE_ALTERNATE = 10,
 *   WEAPON_ATTACH_POINT_LANTERN = 11,
 *   WEAPON_ATTACH_POINT_TEMP_LANTERN = 12,
 *   WEAPON_ATTACH_POINT_MELEE = 13,
 *   MAX_SYNCED_WEAPON_ATTACH_POINTS = 13,
 *   WEAPON_ATTACH_POINT_HIP = 14,
 *   WEAPON_ATTACH_POINT_BOOT = 15,
 *   WEAPON_ATTACH_POINT_BACK = 16,
 *   WEAPON_ATTACH_POINT_FRONT = 17,
 *   WEAPON_ATTACH_POINT_SHOULDERSLING = 18,
 *   WEAPON_ATTACH_POINT_LEFTBREAST = 19,
 *   WEAPON_ATTACH_POINT_RIGHTBREAST = 20,
 *   WEAPON_ATTACH_POINT_LEFTARMPIT = 21,
 *   WEAPON_ATTACH_POINT_RIGHTARMPIT = 22,
 *   WEAPON_ATTACH_POINT_LEFTARMPIT_RIFLE = 23,
 *   WEAPON_ATTACH_POINT_SATCHEL = 24,
 *   WEAPON_ATTACH_POINT_LEFTARMPIT_BOW = 25,
 *   WEAPON_ATTACH_POINT_RIGHT_HAND_EXTRA = 26,
 *   WEAPON_ATTACH_POINT_LEFT_HAND_EXTRA = 27,
 *   WEAPON_ATTACH_POINT_RIGHT_HAND_AUX = 28,
 *   MAX_WEAPON_ATTACH_POINTS = 29
 * };
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {boolean} equipNow
 * @param {number} attachPoint
 * @param {boolean} p4
 * @param {boolean} p5
 * @return {void}
 */
global.SetCurrentPedWeapon = function (ped, weaponHash, equipNow, attachPoint, p4, p5) {
  return _in(0xadf692b2, 0x54977c0c, ped, _ch(weaponHash), equipNow, attachPoint, p4, p5);
};

/**
 * SET_CURRENT_PED_WEAPON_BY_GUID
 * Equips a weapon from a weaponItem, similar to GIVE_WEAPON_TO_PED
 *
 * @param {number} ped
 * @param {DataView} weaponUid
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {boolean} p4
 * @param {boolean} p5
 * @return {void}
 */
global.SetCurrentPedWeaponByGuid = function (ped, weaponUid, p2, p3, p4, p5) {
  return _in(0x12fb95fe, 0x3d579238, ped, weaponUid, p2, p3, p4, p5);
};

/**
 * SET_INSTANTLY_EQUIP_WEAPON_PICKUPS
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetInstantlyEquipWeaponPickups = function (ped, toggle) {
  return _in(0x739b9c6d, 0x0e7f7f93, ped, toggle);
};

/**
 * SET_PED_AMMO
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} ammo
 * @return {void}
 */
global.SetPedAmmo = function (ped, weaponHash, ammo) {
  return _in(0x14e56bc5, 0xb5db6a19, ped, _ch(weaponHash), ammo);
};

/**
 * SET_PED_AMMO_BY_TYPE
 *
 * @param {number} ped
 * @param {number} ammoType
 * @param {number} ammo
 * @return {void}
 */
global.SetPedAmmoByType = function (ped, ammoType, ammo) {
  return _in(0x5fd1e1f0, 0x11e76d7e, ped, _ch(ammoType), ammo);
};

/**
 * SET_PED_AMMO_TO_DROP
 *
 * @param {number} ped
 * @param {number} p1
 * @param {number} p2
 * @return {void}
 */
global.SetPedAmmoToDrop = function (ped, p1, p2) {
  return _in(0xa4efef94, 0x40a5b0ef, ped, p1, p2);
};

/**
 * SET_PED_CURRENT_WEAPON_VISIBLE
 *
 * @param {number} ped
 * @param {boolean} visible
 * @param {boolean} deselectWeapon
 * @param {boolean} p3
 * @param {boolean} p4
 * @return {void}
 */
global.SetPedCurrentWeaponVisible = function (ped, visible, deselectWeapon, p3, p4) {
  return _in(0x0725a4cc, 0xfded9a70, ped, visible, deselectWeapon, p3, p4);
};

/**
 * SET_PED_DROPS_INVENTORY_WEAPON
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} xOffset
 * @param {number} yOffset
 * @param {number} zOffset
 * @param {number} ammoCount
 * @return {void}
 */
global.SetPedDropsInventoryWeapon = function (ped, weaponHash, xOffset, yOffset, zOffset, ammoCount) {
  return _in(0x208a1888, 0x007fc0e6, ped, _ch(weaponHash), _fv(xOffset), _fv(yOffset), _fv(zOffset), ammoCount);
};

/**
 * SET_PED_DROPS_WEAPONS_WHEN_DEAD
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedDropsWeaponsWhenDead = function (ped, toggle) {
  return _in(0x476ae72c, 0x1d19d1a8, ped, toggle);
};

/**
 * SET_PED_INFINITE_AMMO
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @param {number} weaponHash
 * @return {void}
 */
global.SetPedInfiniteAmmo = function (ped, toggle, weaponHash) {
  return _in(0x3edcb050, 0x5123623b, ped, toggle, _ch(weaponHash));
};

/**
 * SET_PLAYER_PED_QUICK_SWAP_WEAPON_BY_GUID
 *
 * @param {number} ped
 * @param {DataView} guidPrimary
 * @param {DataView} guidSecondary
 * @return {void}
 */
global.SetPlayerPedQuickSwapWeaponByGuid = function (ped, guidPrimary, guidSecondary) {
  return _in(0xec1f85da, 0x51d3d6c4, ped, guidPrimary, guidSecondary);
};

/**
 * SET_VEHICLE_WEAPON_HEADING
 *
 * @param {number} vehicle
 * @param {number} seatIndex
 * @param {number} heading
 * @param {boolean} p3
 * @return {void}
 */
global.SetVehicleWeaponHeading = function (vehicle, seatIndex, heading, p3) {
  return _in(0x194d877f, 0xc5597b7d, vehicle, seatIndex, _fv(heading), p3);
};

/**
 * SHOULD_WEAPON_BE_DISCARDED_WHEN_SWAPPED
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.ShouldWeaponBeDiscardedWhenSwapped = function (weaponHash) {
  return _in(0x2c83212a, 0x7aa51d3d, _ch(weaponHash), _r);
};

/**
 * _0x000FA7A4A8443AF7
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x000FA7A4A8443AF7 = function (p0) {
  return _in(0x000fa7a4, 0xa8443af7, p0);
};

/**
 * _0x07E1C35F0078C3F9
 * Seems to return true if the passed weapon is some sort of non-lethal melee weapon.
 * Weapon must currently be held/equipped by the ped.
 *
 * @param {number} ped
 * @param {number} weapon
 * @return {boolean}
 */
global.N_0x07E1C35F0078C3F9 = function (ped, weapon) {
  return _in(0x07e1c35f, 0x0078c3f9, ped, _ch(weapon), _r);
};

/**
 * _0x0DE0944ECCB3DF5D
 * _GET_D* - _GET_L*
 *
 * @param {number} ped
 * @return {boolean}
 */
global.N_0x0DE0944ECCB3DF5D = function (ped) {
  return _in(0x0de0944e, 0xccb3df5d, ped, _r);
};

/**
 * _0x14FF0C2545527F9B
 * Puts the gun visibly in your horse's holster without having to be close to the horse. Use 0xE9BD19F8121ADE3E before using this native
 * _A* or _B*
 *
 * @param {number} horse
 * @param {number} weaponHash
 * @param {number} ped
 * @return {void}
 */
global.N_0x14FF0C2545527F9B = function (horse, weaponHash, ped) {
  return _in(0x14ff0c25, 0x45527f9b, horse, _ch(weaponHash), ped);
};

/**
 * _0x16D9841A85FA627E
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0x16D9841A85FA627E = function (ped, toggle) {
  return _in(0x16d9841a, 0x85fa627e, ped, toggle);
};

/**
 * _0x183CE355115B6E75
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x183CE355115B6E75 = function (p0, p1) {
  return _in(0x183ce355, 0x115b6e75, p0, p1);
};

/**
 * _0x23BF601A42F329A0
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x23BF601A42F329A0 = function (p0) {
  return _in(0x23bf601a, 0x42f329a0, p0, _r);
};

/**
 * _0x2EBF70E1D8C06683
 * _SET_A* - _SET_B*
 *
 * @param {number} ped
 * @param {number} p1
 * @return {void}
 */
global.N_0x2EBF70E1D8C06683 = function (ped, p1) {
  return _in(0x2ebf70e1, 0xd8c06683, ped, _ch(p1));
};

/**
 * _0x3799EFCC3C8CD5E1
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x3799EFCC3C8CD5E1 = function (p0) {
  return _in(0x3799efcc, 0x3c8cd5e1, p0, _r);
};

/**
 * _0x404514D231DB27A0
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x404514D231DB27A0 = function (p0, p1) {
  return _in(0x404514d2, 0x31db27a0, p0, p1);
};

/**
 * _0x431240A58484D5D0
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0x431240A58484D5D0 = function (ped, toggle) {
  return _in(0x431240a5, 0x8484d5d0, ped, toggle);
};

/**
 * _0x44C8F4908F1B2622
 *
 * @param {number} ped
 * @param {number} ammoHash
 * @return {boolean}
 */
global.N_0x44C8F4908F1B2622 = function (ped, ammoHash) {
  return _in(0x44c8f490, 0x8f1b2622, ped, _ch(ammoHash), _r);
};

/**
 * _0x457B16951AD77C1B
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x457B16951AD77C1B = function (p0) {
  return _in(0x457b1695, 0x1ad77c1b, p0);
};

/**
 * _0x45E57FDD531C9477
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0x45E57FDD531C9477 = function (ped, toggle) {
  return _in(0x45e57fdd, 0x531c9477, ped, toggle);
};

/**
 * _0x46D42883E873C1D7
 * _GET_NUM_*
 *
 * @param {number} ped
 * @return {any}
 */
global.N_0x46D42883E873C1D7 = function (ped) {
  return _in(0x46d42883, 0xe873c1d7, ped, _r);
};

/**
 * _0x4820A6939D7CEF28
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x4820A6939D7CEF28 = function (p0, p1) {
  return _in(0x4820a693, 0x9d7cef28, p0, p1);
};

/**
 * _0x4823F13A21F51964
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x4823F13A21F51964 = function (p0, p1) {
  return _in(0x4823f13a, 0x21f51964, p0, p1, _r);
};

/**
 * _0x486C96A0DCD2BC92
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x486C96A0DCD2BC92 = function (p0, p1) {
  return _in(0x486c96a0, 0xdcd2bc92, p0, p1, _r);
};

/**
 * _0x495A04CAEC263AF8
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x495A04CAEC263AF8 = function (p0, p1) {
  return _in(0x495a04ca, 0xec263af8, p0, p1, _r);
};

/**
 * _0x58425FCA3D3A2D15
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0x58425FCA3D3A2D15 = function (p0) {
  return _in(0x58425fca, 0x3d3a2d15, p0, _r);
};

/**
 * _0x5A695BD328586B44
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x5A695BD328586B44 = function (p0, p1) {
  return _in(0x5a695bd3, 0x28586b44, p0, p1, _r);
};

/**
 * _0x5B235F24472F2C3B
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x5B235F24472F2C3B = function (p0, p1) {
  return _in(0x5b235f24, 0x472f2c3b, p0, p1, _r);
};

/**
 * _0x63B83A526329AFBC
 * Only used in R* Script fme_escaped_convicts, p0 = 0
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x63B83A526329AFBC = function (p0) {
  return _in(0x63b83a52, 0x6329afbc, p0);
};

/**
 * _0x641351E9AD103890
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x641351E9AD103890 = function (p0, p1) {
  return _in(0x641351e9, 0xad103890, p0, p1);
};

/**
 * _0x65DC4AC5B96614CB
 * Returns attachPoint
 *
 * @param {number} weaponHash
 * @return {number}
 */
global.N_0x65DC4AC5B96614CB = function (weaponHash) {
  return _in(0x65dc4ac5, 0xb96614cb, _ch(weaponHash), _r, _ri);
};

/**
 * _0x74C2365FDD1BB48F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x74C2365FDD1BB48F = function (p0, p1) {
  return _in(0x74c2365f, 0xdd1bb48f, p0, p1);
};

/**
 * _0x74C8000FDD1BB111
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x74C8000FDD1BB111 = function (p0, p1) {
  return _in(0x74c8000f, 0xdd1bb111, p0, p1, _r);
};

/**
 * _0x74C8000FDD1BB222
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x74C8000FDD1BB222 = function (p0, p1) {
  return _in(0x74c8000f, 0xdd1bb222, p0, p1, _r);
};

/**
 * _0x74C9080FDD1BB48E
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x74C9080FDD1BB48E = function (p0, p1) {
  return _in(0x74c9080f, 0xdd1bb48e, p0, p1);
};

/**
 * _0x74C9080FDD1BB48F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0x74C9080FDD1BB48F = function (p0, p1) {
  return _in(0x74c9080f, 0xdd1bb48f, p0, p1);
};

/**
 * _0x74C90AAACC1DD48F
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0x74C90AAACC1DD48F = function (p0) {
  return _in(0x74c90aaa, 0xcc1dd48f, p0);
};

/**
 * _0x80BB243789008A82
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x80BB243789008A82 = function (p0, p1) {
  return _in(0x80bb2437, 0x89008a82, p0, p1, _r);
};

/**
 * _0x8A779706DA5CA3DD
 * Only used in R* SP Scripts native_son2, native_son3 and smuggler2
 * Params: p2 = -1
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {number} p2
 * @return {void}
 */
global.N_0x8A779706DA5CA3DD = function (ped, p1, p2) {
  return _in(0x8a779706, 0xda5ca3dd, ped, p1, p2);
};

/**
 * _0x9409C62504A8F9E9
 * Only used in R* SP Script guama3
 *
 * @param {number} vehicle
 * @param {boolean} p1
 * @return {void}
 */
global.N_0x9409C62504A8F9E9 = function (vehicle, p1) {
  return _in(0x9409c625, 0x04a8f9e9, vehicle, p1);
};

/**
 * _0x95CA12E2C68043E5
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0x95CA12E2C68043E5 = function (p0, p1) {
  return _in(0x95ca12e2, 0xc68043e5, p0, p1, _r);
};

/**
 * _0x9CCA3131E6B53C68
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {any}
 */
global.N_0x9CCA3131E6B53C68 = function (p0, p1, p2) {
  return _in(0x9cca3131, 0xe6b53c68, p0, p1, p2, _r);
};

/**
 * _0x9EEFD670F10656D7
 * Returns weaponHash
 *
 * @param {number} weaponCollection
 * @param {number} weaponGroup
 * @return {number}
 */
global.N_0x9EEFD670F10656D7 = function (weaponCollection, weaponGroup) {
  return _in(0x9eefd670, 0xf10656d7, _ch(weaponCollection), _ch(weaponGroup), _r, _ri);
};

/**
 * _0x9F0E1892C7F228A8
 *
 * @param {boolean} p0
 * @return {any}
 */
global.N_0x9F0E1892C7F228A8 = function (p0) {
  return _in(0x9f0e1892, 0xc7f228a8, p0, _r);
};

/**
 * _0xA2091482ED42EF85
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xA2091482ED42EF85 = function (p0, p1) {
  return _in(0xa2091482, 0xed42ef85, p0, p1, _r);
};

/**
 * _0xA3716A77DCF17424
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xA3716A77DCF17424 = function (p0, p1, p2) {
  return _in(0xa3716a77, 0xdcf17424, p0, p1, p2);
};

/**
 * _0xA769D753922B031B
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xA769D753922B031B = function (p0, p1, p2) {
  return _in(0xa769d753, 0x922b031b, p0, p1, p2);
};

/**
 * _0xABC18A28BAD4B46F
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xABC18A28BAD4B46F = function (p0, p1) {
  return _in(0xabc18a28, 0xbad4b46f, p0, p1, _r);
};

/**
 * _0xAFFD0CCF31F469B8
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xAFFD0CCF31F469B8 = function (p0) {
  return _in(0xaffd0ccf, 0x31f469b8, p0, _r);
};

/**
 * _0xB0FB9B196A3D13F0
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xB0FB9B196A3D13F0 = function (p0, p1, p2) {
  return _in(0xb0fb9b19, 0x6a3d13f0, p0, p1, p2);
};

/**
 * _0xB832F1A686B9B810
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xB832F1A686B9B810 = function (p0, p1, p2) {
  return _in(0xb832f1a6, 0x86b9b810, p0, p1, p2);
};

/**
 * _0xBC9444F2FF94A9C0
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xBC9444F2FF94A9C0 = function (p0) {
  return _in(0xbc9444f2, 0xff94a9c0, p0, _r);
};

/**
 * _0xBFCA7AFABF9D7967
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xBFCA7AFABF9D7967 = function (p0, p1) {
  return _in(0xbfca7afa, 0xbf9d7967, p0, p1, _r);
};

/**
 * _0xC5899C4CD2E2495D
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xC5899C4CD2E2495D = function (p0) {
  return _in(0xc5899c4c, 0xd2e2495d, p0);
};

/**
 * _0xD2209866B0CB72EA
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xD2209866B0CB72EA = function (p0, p1) {
  return _in(0xd2209866, 0xb0cb72ea, p0, p1, _r);
};

/**
 * _0xD4C6E24D955FF061
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xD4C6E24D955FF061 = function (p0) {
  return _in(0xd4c6e24d, 0x955ff061, p0);
};

/**
 * _0xD53846B9C931C181
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xD53846B9C931C181 = function (p0, p1, p2) {
  return _in(0xd53846b9, 0xc931c181, p0, p1, p2);
};

/**
 * _0xD63B4BA3A02A99E0
 *
 * @param {any} p0
 * @param {any} p1
 * @return {void}
 */
global.N_0xD63B4BA3A02A99E0 = function (p0, p1) {
  return _in(0xd63b4ba3, 0xa02a99e0, p0, p1);
};

/**
 * _0xE9B3FEC825668291
 *
 * @param {any} p0
 * @param {any} p1
 * @param {any} p2
 * @return {void}
 */
global.N_0xE9B3FEC825668291 = function (p0, p1, p2) {
  return _in(0xe9b3fec8, 0x25668291, p0, p1, p2);
};

/**
 * _0xEA522F991E120D45
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xEA522F991E120D45 = function (p0) {
  return _in(0xea522f99, 0x1e120d45, p0, _r);
};

/**
 * _0xEC97101A8F311282
 *
 * @param {any} p0
 * @return {any}
 */
global.N_0xEC97101A8F311282 = function (p0) {
  return _in(0xec97101a, 0x8f311282, p0, _r);
};

/**
 * _0xECBB26529A737EF6
 *
 * @param {any} p0
 * @return {void}
 */
global.N_0xECBB26529A737EF6 = function (p0) {
  return _in(0xecbb2652, 0x9a737ef6, p0);
};

/**
 * _0xF08D8FEB455F2C8C
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.N_0xF08D8FEB455F2C8C = function (ped, toggle) {
  return _in(0xf08d8feb, 0x455f2c8c, ped, toggle);
};

/**
 * _0xF252A85B8F3F8C58
 *
 * @param {number} weaponCollection
 * @param {number} dualwieldVariant
 * @return {boolean}
 */
global.N_0xF252A85B8F3F8C58 = function (weaponCollection, dualwieldVariant) {
  return _in(0xf252a85b, 0x8f3f8c58, _ch(weaponCollection), _ch(dualwieldVariant), _r);
};

/**
 * _0xF2F585411E748B9C
 *
 * @param {any} p0
 * @param {any} p1
 * @return {any}
 */
global.N_0xF2F585411E748B9C = function (p0, p1) {
  return _in(0xf2f58541, 0x1e748b9c, p0, p1, _r);
};

/**
 * _0xF8204EF17410BF43
 * Returns weaponHash
 *
 * @param {number} weaponGroupHash
 * @param {number} p1
 * @param {number} p2
 * @param {any} p3
 * @return {number}
 */
global.N_0xF8204EF17410BF43 = function (weaponGroupHash, p1, p2, p3) {
  return _in(0xf8204ef1, 0x7410bf43, _ch(weaponGroupHash), _fv(p1), _fv(p2), p3, _r, _ri);
};

/**
 * _ADD_AMMO_TO_PED
 * addReason:
 * enum eAddItemReason : Hash
 * {
 *   ADD_REASON_AWARDS = 0xB784AD1E,
 *   ADD_REASON_CREATE_CHARACTER = 0xE2C4FF71,
 *   ADD_REASON_DEBUG = 0x5C05C64D,
 *   ADD_REASON_DEFAULT = 0x2CD419DC,
 *   ADD_REASON_GET_INVENTORY = 0xD8188685,
 *   ADD_REASON_INCENTIVE = 0x8ADC2E95,
 *   ADD_REASON_LOADOUT = 0xCA3454E6,
 *   ADD_REASON_LOAD_SAVEGAME = 0x56212906,
 *   ADD_REASON_LOOTED = 0xCA806A55,
 *   ADD_REASON_MELEE = 0x7B9BDCE7,
 *   ADD_REASON_MP_MISSION = 0xEC0E0194,
 *   ADD_REASON_NOTIFICATION = 0xC56292D2,
 *   ADD_REASON_PICKUP = 0x1A770E22,
 *   ADD_REASON_PURCHASED = 0x4A6726C9,
 *   ADD_REASON_SET_AMOUNT = 0x4504731E,
 *   ADD_REASON_SYNCING = 0x8D4B4FF4,
 *   ADD_REASON_USE_FAILED = 0xD385B670
 * };
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} amount
 * @param {number} addReason
 * @return {void}
 */
global.AddAmmoToPed = function (ped, weaponHash, amount, addReason) {
  return _in(0xb190bca3, 0xf4042f95, ped, _ch(weaponHash), amount, _ch(addReason));
};

/**
 * _ADD_AMMO_TO_PED_BY_TYPE
 * addReason: see _ADD_AMMO_TO_PED
 *
 * @param {number} ped
 * @param {number} ammoType
 * @param {number} amount
 * @param {number} addReason
 * @return {void}
 */
global.AddAmmoToPedByType = function (ped, ammoType, amount, addReason) {
  return _in(0x106a811c, 0x6d3035f3, ped, _ch(ammoType), amount, _ch(addReason));
};

/**
 * _CLEAR_PED_LAST_WEAPON_DAMAGE
 *
 * @param {number} ped
 * @return {void}
 */
global.ClearPedLastWeaponDamage = function (ped) {
  return _in(0x087d8f4b, 0xc65f68e4, ped);
};

/**
 * _CREATE_WEAPON_OBJECT
 *
 * @param {number} weaponHash
 * @param {number} ammoCount
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {boolean} showWorldModel
 * @param {number} scale
 * @return {number}
 */
global.CreateWeaponObject = function (weaponHash, ammoCount, x, y, z, showWorldModel, scale) {
  return _in(0x9888652b, 0x8ba77f73, _ch(weaponHash), ammoCount, _fv(x), _fv(y), _fv(z), showWorldModel, _fv(scale), _r, _ri);
};

/**
 * _DISABLE_AMMO_TYPE_FOR_PED
 *
 * @param {number} ped
 * @param {number} ammoHash
 * @return {void}
 */
global.DisableAmmoTypeForPed = function (ped, ammoHash) {
  return _in(0xaa5a5220, 0x4e077883, ped, _ch(ammoHash));
};

/**
 * _DISABLE_AMMO_TYPE_FOR_PED_WEAPON
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} ammoHash
 * @return {void}
 */
global.DisableAmmoTypeForPedWeapon = function (ped, weaponHash, ammoHash) {
  return _in(0xf0d728ee, 0xa3c99775, ped, _ch(weaponHash), _ch(ammoHash));
};

/**
 * _ENABLE_AMMO_TYPE_FOR_PED
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @return {void}
 */
global.EnableAmmoTypeForPed = function (ped, weaponHash) {
  return _in(0x3b7b7908, 0xb7adfb4b, ped, _ch(weaponHash));
};

/**
 * _ENABLE_AMMO_TYPE_FOR_PED_WEAPON
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} ammoHash
 * @return {void}
 */
global.EnableAmmoTypeForPedWeapon = function (ped, weaponHash, ammoHash) {
  return _in(0x23fb9fac, 0xa28779c1, ped, _ch(weaponHash), _ch(ammoHash));
};

/**
 * _ENABLE_WEAPON_RESTORE
 *
 * @param {number} ped
 * @return {boolean}
 */
global.EnableWeaponRestore = function (ped) {
  return _in(0xc3953558, 0x43be134b, ped, _r);
};

/**
 * _GET_AMMO_IN_CLIP_BY_INVENTORY_UID
 *
 * @param {number} ped
 * @param {DataView} inventoryUid
 * @return {[boolean, number]}
 */
global.GetAmmoInClipByInventoryUid = function (ped, inventoryUid) {
  return _in(0x678f0085, 0x8980f516, ped, _i, inventoryUid, _r);
};

/**
 * _GET_AMMO_TYPE_FOR_WEAPON
 *
 * @param {number} weaponHash
 * @return {number}
 */
global.GetAmmoTypeForWeapon = function (weaponHash) {
  return _in(0x5c2ea6c4, 0x4f515f34, _ch(weaponHash), _r, _ri);
};

/**
 * _GET_BEST_PED_WEAPON_IN_GROUP
 * If near your horse when called, weapons stored on your horse will be considered
 * Returns weaponHash
 *
 * @param {number} ped
 * @param {number} weaponGroup
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {number}
 */
global.GetBestPedWeaponInGroup = function (ped, weaponGroup, p2, p3) {
  return _in(0x9f67929d, 0x98e7c6e8, ped, _ch(weaponGroup), p2, p3, _r, _ri);
};

/**
 * _GET_BEST_PED_WEAPON_IN_INVENTORY
 *
 * @param {number} ped
 * @param {any} p1
 * @param {DataView} guidPrimary
 * @return {any}
 */
global.GetBestPedWeaponInInventory = function (ped, p1, guidPrimary) {
  return _in(0x7b985006, 0x14c8e8b8, ped, p1, guidPrimary, _r);
};

/**
 * _GET_CAN_TWIRL_WEAPON
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.GetCanTwirlWeapon = function (weaponHash) {
  return _in(0x6554ecce, 0x226f2a2a, _ch(weaponHash), _r);
};

/**
 * _GET_CORRECT_KIT_EMOTE_TWIRL_GUN
 * _GET_BEST_* - _GET_CLOSEST_*
 *
 * @param {number} ped
 * @param {DataView} weaponGuid
 * @return {boolean}
 */
global.GetCorrectKitEmoteTwirlGun = function (ped, weaponGuid) {
  return _in(0xcd356b42, 0xc57bfe01, ped, weaponGuid, _r);
};

/**
 * _GET_CURRENT_AMMO_TYPE_FROM_GUID
 * Returns ammoHash
 *
 * @param {number} ped
 * @param {DataView} weaponGuid
 * @return {number}
 */
global.GetCurrentAmmoTypeFromGuid = function (ped, weaponGuid) {
  return _in(0xaf9d167a, 0x5656d6a6, ped, weaponGuid, _r, _ri);
};

/**
 * _GET_CURRENT_PED_WEAPON_AMMO_TYPE
 * Returns ammoHash from weaponObject (Returned by 0x6CA484C9A7377E4F)
 *
 * @param {number} ped
 * @param {number} weaponObject
 * @return {number}
 */
global.GetCurrentPedWeaponAmmoType = function (ped, weaponObject) {
  return _in(0x7e7b19a4, 0x355fee13, ped, weaponObject, _r, _ri);
};

/**
 * _GET_DEFAULT_PED_WEAPON_COLLECTION
 * Returns weaponCollection Hash
 * Example: RE_POLICECHASE_MALES_01: Carbine Repeater + Knife, LO_AGRO_PED
 *
 * @param {number} pedModel
 * @return {number}
 */
global.GetDefaultPedWeaponCollection = function (pedModel) {
  return _in(0xd42514c1, 0x82121c23, _ch(pedModel), _r, _ri);
};

/**
 * _GET_DEFAULT_UNARMED_WEAPON_HASH
 * Returns the ped's default unarmed weapon hash as defined in CPedModelInfo (DefaultUnarmedWeapon).
 * Falls back to WEAPON_UNARMED if the ped doesn't have a valid model info pointer, or 0 if the ped doesn't exist.
 *
 * @param {number} ped
 * @return {number}
 */
global.GetDefaultUnarmedWeaponHash = function (ped) {
  return _in(0x08ff1099, 0xed2e6e21, ped, _r, _ri);
};

/**
 * _GET_MAX_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON
 *
 * @param {number} ped
 * @return {number}
 */
global.GetMaxLockonDistanceOfCurrentPedWeapon = function (ped) {
  return _in(0x79b1a6e7, 0x80266db0, ped, _r, _rf);
};

/**
 * _GET_PED_CURRENT_HELD_WEAPON
 * Returns eCurrentHeldWeapon
 * _GET_R* - _GET_T*
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedCurrentHeldWeapon = function (ped) {
  return _in(0x8425c5f0, 0x57012dab, ped, _r, _ri);
};

/**
 * _GET_PED_GUN_SPINNING_EQUIPPED_KIT_EMOTE_TWIRL
 * Returns emote Hash
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedGunSpinningEquippedKitEmoteTwirl = function (ped) {
  return _in(0x2c4fec3d, 0x0efa9fc0, ped, _r, _ri);
};

/**
 * _GET_PED_GUN_SPINNING_HASH_FROM_WEAPON_EMOTE_VARIATION
 * Returns iSpinHash / iVariationSpin
 *
 * @param {number} ped
 * @param {number} weaponEmoteVariation
 * @return {number}
 */
global.GetPedGunSpinningHashFromWeaponEmoteVariation = function (ped, weaponEmoteVariation) {
  return _in(0xf3b1620b, 0x920d1708, ped, weaponEmoteVariation, _r, _ri);
};

/**
 * _GET_PED_HOGTIE_WEAPON
 *
 * @param {number} ped
 * @return {number}
 */
global.GetPedHogtieWeapon = function (ped) {
  return _in(0x90eb1cb1, 0x89923587, ped, _r, _ri);
};

/**
 * _GET_PED_WEAPON_IN_SLOT
 * slotHash is usually just the weaponHash name, but WEAPON_* is replaced with SLOT_*
 *
 * @param {number} ped
 * @param {number} slotHash
 * @return {number}
 */
global.GetPedWeaponInSlot = function (ped, slotHash) {
  return _in(0xdbc4b552, 0xb2ae9a83, ped, _ch(slotHash), _r, _ri);
};

/**
 * _GET_PED_WEAPON_OBJECT
 * _GET_M* - _GET_PED_A*
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {number}
 */
global.GetPedWeaponObject = function (ped, p1) {
  return _in(0x6ca484c9, 0xa7377e4f, ped, p1, _r, _ri);
};

/**
 * _GET_PED_WORST_WEAPON
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @return {number}
 */
global.GetPedWorstWeapon = function (ped, p1, p2, p3) {
  return _in(0xda37a053, 0xc1522f5d, ped, p1, p2, p3, _r, _ri);
};

/**
 * _GET_PLAYER_PED_QUICK_SWAP_WEAPON_BY_GUID
 * Outputs cached guids
 *
 * @param {number} ped
 * @param {DataView} guidPrimary
 * @param {DataView} guidSecondary
 * @return {void}
 */
global.GetPlayerPedQuickSwapWeaponByGuid = function (ped, guidPrimary, guidSecondary) {
  return _in(0xb7e52a05, 0x8b07c7e2, ped, guidPrimary, guidSecondary);
};

/**
 * _GET_WEAPONTYPE_MODEL
 * Gets the model hash from the weapon hash.
 *
 * @param {number} weaponHash
 * @return {number}
 */
global.GetWeapontypeModel = function (weaponHash) {
  return _in(0xf70825eb, 0x340e7d15, _ch(weaponHash), _r, _ri);
};

/**
 * _GET_WEAPONTYPE_SLOT
 * Returns hash where WEAPON_ is replaced with SLOT_
 *
 * @param {number} weaponHash
 * @return {number}
 */
global.GetWeapontypeSlot = function (weaponHash) {
  return _in(0x46f032b8, 0xddf46cde, _ch(weaponHash), _r, _ri);
};

/**
 * _GET_WEAPON_ATTACH_POINT
 * Returns WeaponAttachPoint
 *
 * @param {number} ped
 * @param {number} attachPoint
 * @return {number}
 */
global.GetWeaponAttachPoint = function (ped, attachPoint) {
  return _in(0xcad4fe93, 0x98820d24, ped, attachPoint, _r, _ri);
};

/**
 * _GET_WEAPON_COMPONENT_TYPE_MODEL
 *
 * @param {number} componentHash
 * @return {number}
 */
global.GetWeaponComponentTypeModel = function (componentHash) {
  return _in(0x59de0344, 0x2b6c9598, _ch(componentHash), _r, _ri);
};

/**
 * _GET_WEAPON_DAMAGE
 * Related to weapon visual damage, not actual damage.
 *
 * @param {number} weaponObject
 * @return {number}
 */
global.GetWeaponDamage = function (weaponObject) {
  return _in(0x904103d5, 0xd2333977, weaponObject, _r, _rf);
};

/**
 * _GET_WEAPON_DIRT
 *
 * @param {number} weaponObject
 * @return {number}
 */
global.GetWeaponDirt = function (weaponObject) {
  return _in(0x810e8ae9, 0xafea7e54, weaponObject, _r, _rf);
};

/**
 * _GET_WEAPON_EMOTE_VARIATION
 * Returns weaponEmoteVariation
 * 
 * WEAPON_EMOTE_VARIATION_INVALID = -2,
 * WEAPON_EMOTE_VARIATION_BASE,
 * WEAPON_EMOTE_VARIATION_A,
 * WEAPON_EMOTE_VARIATION_B,
 * WEAPON_EMOTE_VARIATION_C,
 * WEAPON_EMOTE_VARIATION_D,
 * WEAPON_EMOTE_VARIATION_PREVIEW,
 * WEAPON_EMOTE_NUM_VARIATIONS
 *
 * @param {number} ped
 * @param {number} variation
 * @return {number}
 */
global.GetWeaponEmoteVariation = function (ped, variation) {
  return _in(0x86147d05, 0xfa831d3a, ped, variation, _r, _ri);
};

/**
 * _GET_WEAPON_GUN_SPINNING_WEAPON_EMOTE_TRICK_TYPE_HASH
 * Returns iSpinHash
 *
 * @param {number} emote
 * @param {number} weaponEmoteTrickType
 * @return {number}
 */
global.GetWeaponGunSpinningWeaponEmoteTrickTypeHash = function (emote, weaponEmoteTrickType) {
  return _in(0xf4601c12, 0x03b1a78d, _ch(emote), weaponEmoteTrickType, _r, _ri);
};

/**
 * _GET_WEAPON_NAME
 * Returns "WNS_INVALID" if the weapon is invalid/doesn't exist.
 *
 * @param {number} weaponHash
 * @return {string | number}
 */
global.GetWeaponName = function (weaponHash) {
  return _in(0x89cf5ff3, 0xd363311e, _ch(weaponHash), _r, _s);
};

/**
 * _GET_WEAPON_NAME_2
 *
 * @param {number} weaponHash
 * @return {string | number}
 */
global.GetWeaponName_2 = function (weaponHash) {
  return _in(0x6d3ac616, 0x94a791c5, _ch(weaponHash), _r, _s);
};

/**
 * _GET_WEAPON_NAME_WITH_PERMANENT_DEGRADATION
 *
 * @param {number} weaponHash
 * @param {number} permanentDegradationLevel
 * @return {string | number}
 */
global.GetWeaponNameWithPermanentDegradation = function (weaponHash, permanentDegradationLevel) {
  return _in(0x7a56d66c, 0x78d8ef8e, _ch(weaponHash), _fv(permanentDegradationLevel), _r, _s);
};

/**
 * _GET_WEAPON_OBJECT_FROM_PED
 * Detaches the weapon from the ped and actually removes the ped's weapon
 *
 * @param {number} ped
 * @param {boolean} p1
 * @return {number}
 */
global.GetWeaponObjectFromPed = function (ped, p1) {
  return _in(0xc6a6789b, 0xb405d11c, ped, p1, _r, _ri);
};

/**
 * _GET_WEAPON_SCALE
 *
 * @param {number} weaponObject
 * @return {number}
 */
global.GetWeaponScale = function (weaponObject) {
  return _in(0x22084ca6, 0x99219624, weaponObject, _r, _rf);
};

/**
 * _GET_WEAPON_SOOT
 *
 * @param {number} weaponObject
 * @return {number}
 */
global.GetWeaponSoot = function (weaponObject) {
  return _in(0x4bf66f88, 0x78f67663, weaponObject, _r, _rf);
};

/**
 * _GET_WEAPON_STAT_ID
 *
 * @param {number} weaponHash
 * @return {number}
 */
global.GetWeaponStatId = function (weaponHash) {
  return _in(0x8ec44ae8, 0xdecff841, _ch(weaponHash), _r, _ri);
};

/**
 * _GET_WEAPON_TYPE_FROM_AMMO_TYPE
 *
 * @param {number} ammoType
 * @return {number}
 */
global.GetWeaponTypeFromAmmoType = function (ammoType) {
  return _in(0x7aa043f6, 0xc41d151e, _ch(ammoType), _r, _ri);
};

/**
 * _GET_WEAPON_UNLOCK
 *
 * @param {number} weaponHash
 * @return {number}
 */
global.GetWeaponUnlock = function (weaponHash) {
  return _in(0x865f3629, 0x9079fb75, _ch(weaponHash), _r, _ri);
};

/**
 * _GIVE_WEAPON_COLLECTION_TO_PED
 *
 * @param {number} ped
 * @param {number} weaponCollection
 * @return {void}
 */
global.GiveWeaponCollectionToPed = function (ped, weaponCollection) {
  return _in(0x899a04af, 0xcc725d04, ped, _ch(weaponCollection));
};

/**
 * _GIVE_WEAPON_COMPONENT_TO_ENTITY
 * entity can be a ped or weapon object.
 *
 * @param {number} entity
 * @param {number} componentHash
 * @param {number} weaponHash
 * @param {boolean} p3
 * @return {void}
 */
global.GiveWeaponComponentToEntity = function (entity, componentHash, weaponHash, p3) {
  return _in(0x74c9090f, 0xdd1bb48e, entity, _ch(componentHash), _ch(weaponHash), p3);
};

/**
 * _GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT
 *
 * @param {number} ped
 * @param {number} componentHash
 * @param {boolean} p3
 * @return {number}
 */
global.GiveWeaponComponentToWeaponObject = function (ped, componentHash, p3) {
  return _in(0x1a47699e, 0x8d533e8f, _i, ped, _ch(componentHash), p3);
};

/**
 * _HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON
 *
 * @param {number} entity
 * @param {number} weaponName
 * @param {number} weaponType
 * @return {boolean}
 */
global.HasEntityBeenDamagedByWeapon = function (entity, weaponName, weaponType) {
  return _in(0xdcf06d0c, 0xdff68424, entity, _ch(weaponName), weaponType, _r);
};

/**
 * _HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON_RECENTLY
 *
 * @param {number} entity
 * @param {number} weaponHash
 * @param {number} ms
 * @return {boolean}
 */
global.HasEntityBeenDamagedByWeaponRecently = function (entity, weaponHash, ms) {
  return _in(0x9e2d5d6b, 0xc97a5f1e, entity, _ch(weaponHash), ms, _r);
};

/**
 * _HAS_PED_GOT_WEAPON_COMPONENT
 *
 * @param {number} ped
 * @param {number} componentHash
 * @param {number} weaponHash
 * @return {boolean}
 */
global.HasPedGotWeaponComponent = function (ped, componentHash, weaponHash) {
  return _in(0xbbc67a6f, 0x965c688a, ped, _ch(componentHash), _ch(weaponHash), _r);
};

/**
 * _HAS_WEAPON_ASSET_LOADED
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.HasWeaponAssetLoaded = function (weaponHash) {
  return _in(0xff07cf46, 0x5f48b830, _ch(weaponHash), _r);
};

/**
 * _HIDE_PED_WEAPONS
 * Unequip current weapon and set current weapon to WEAPON_UNARMED.
 * p0 usually 2 in R* scripts. Doesn't seem to have any effect if changed....
 * immediately: if true it will instantly switch to unarmed
 *
 * @param {number} ped
 * @param {number} p0
 * @param {boolean} immediately
 * @return {void}
 */
global.HidePedWeapons = function (ped, p0, immediately) {
  return _in(0xfccc886e, 0xde3c63ec, ped, p0, immediately);
};

/**
 * _HOLSTER_PED_WEAPONS
 *
 * @param {number} ped
 * @param {boolean} p1
 * @param {boolean} p2
 * @param {boolean} p3
 * @param {boolean} immediately
 * @return {void}
 */
global.HolsterPedWeapons = function (ped, p1, p2, p3, immediately) {
  return _in(0x94a3c1b8, 0x04d291ec, ped, p1, p2, p3, immediately);
};

/**
 * _IS_AMMO_SILENT
 *
 * @param {number} ammoHash
 * @return {boolean}
 */
global.IsAmmoSilent = function (ammoHash) {
  return _in(0xd2866cba, 0x797e872e, _ch(ammoHash), _r);
};

/**
 * _IS_AMMO_SILENT_2
 *
 * @param {number} ammoHash
 * @return {boolean}
 */
global.IsAmmoSilent_2 = function (ammoHash) {
  return _in(0x7efacc58, 0x9b98c488, _ch(ammoHash), _r);
};

/**
 * _IS_AMMO_TYPE_VALID_FOR_WEAPON
 *
 * @param {number} weaponHash
 * @param {number} ammoHash
 * @return {boolean}
 */
global.IsAmmoTypeValidForWeapon = function (weaponHash, ammoHash) {
  return _in(0xc570b881, 0x754df609, _ch(weaponHash), _ch(ammoHash), _r);
};

/**
 * _IS_AMMO_VALID
 *
 * @param {number} ammoHash
 * @return {boolean}
 */
global.IsAmmoValid = function (ammoHash) {
  return _in(0x1f7977c9, 0x101f807f, _ch(ammoHash), _r);
};

/**
 * _IS_PED_CURRENT_WEAPON_HOLSTERED
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsPedCurrentWeaponHolstered = function (ped) {
  return _in(0xbdd9c235, 0xd8d1052e, ped, _r);
};

/**
 * _IS_TARGET_PED_CONSTRAINED_BY_PED_USING_BOLAS
 *
 * @param {number} ped
 * @param {number} targetPed
 * @return {boolean}
 */
global.IsTargetPedConstrainedByPedUsingBolas = function (ped, targetPed) {
  return _in(0x8d50f432, 0x98ab9545, ped, targetPed, _r);
};

/**
 * _IS_WEAPON_BINOCULARS
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponBinoculars = function (weaponHash) {
  return _in(0xc853230e, 0x76a152df, _ch(weaponHash), _r);
};

/**
 * _IS_WEAPON_HOLSTER_STATE_CHANGING
 * Returns true if the ped is currently holstering or unholstering a weapon
 *
 * @param {number} ped
 * @return {boolean}
 */
global.IsWeaponHolsterStateChanging = function (ped) {
  return _in(0x2387d6e9, 0xc6b478aa, ped, _r);
};

/**
 * _IS_WEAPON_KIT
 * Returns true when the weapon passed is either a lasso, the camera or the binoculars
 * _IS_WEAPON_M* - _IS_WEAPON_P*
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponKit = function (weaponHash) {
  return _in(0x6abad7b0, 0xa854f8fb, _ch(weaponHash), _r);
};

/**
 * _IS_WEAPON_KIT_2
 * Returns true when the weapon passed is either the fishingrod, a lasso, the camera or the binoculars
 * _IS_WEAPON_M* - _IS_WEAPON_P*
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponKit_2 = function (weaponHash) {
  return _in(0x49e40483, 0x948af062, _ch(weaponHash), _r);
};

/**
 * _IS_WEAPON_KNIFE
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponKnife = function (weaponHash) {
  return _in(0x792e3ef7, 0x6c911959, _ch(weaponHash), _r);
};

/**
 * _IS_WEAPON_LANTERN
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponLantern = function (weaponHash) {
  return _in(0x79407d33, 0x328286c6, _ch(weaponHash), _r);
};

/**
 * _IS_WEAPON_LASSO
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponLasso = function (weaponHash) {
  return _in(0x6e4e1a82, 0x081eabed, _ch(weaponHash), _r);
};

/**
 * _IS_WEAPON_ONE_HANDED
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponOneHanded = function (weaponHash) {
  return _in(0xd955fee4, 0xb87afa07, _ch(weaponHash), _r);
};

/**
 * _IS_WEAPON_SILENT
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponSilent = function (weaponHash) {
  return _in(0x5809dbca, 0x0a37c82b, _ch(weaponHash), _r);
};

/**
 * _IS_WEAPON_SNIPER
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponSniper = function (weaponHash) {
  return _in(0x6ad66548, 0x840472e5, _ch(weaponHash), _r);
};

/**
 * _IS_WEAPON_THROWABLE
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponThrowable = function (weaponHash) {
  return _in(0x30e7c16b, 0x12da8211, _ch(weaponHash), _r);
};

/**
 * _IS_WEAPON_TORCH
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponTorch = function (weaponHash) {
  return _in(0x506f1de1, 0xbfc75304, _ch(weaponHash), _r);
};

/**
 * _IS_WEAPON_TWO_HANDED
 *
 * @param {number} weaponHash
 * @return {boolean}
 */
global.IsWeaponTwoHanded = function (weaponHash) {
  return _in(0x0556e9d2, 0xecf39d01, _ch(weaponHash), _r);
};

/**
 * _LISTEN_PROJECTILE_HIT_EVENTS
 *
 * @param {boolean} listen
 * @return {void}
 */
global.ListenProjectileHitEvents = function (listen) {
  return _in(0xda5d3f2c, 0x6dd5b5d4, listen);
};

/**
 * _MAKE_PED_RELOAD
 *
 * @param {number} ped
 * @return {any}
 */
global.MakePedReload = function (ped) {
  return _in(0x79e1e511, 0xff7efb13, ped, _r);
};

/**
 * _REFILL_AMMO_IN_CLIP
 *
 * @param {number} ped
 * @param {DataView} clipInventoryUid
 * @param {number} p2
 * @return {any}
 */
global.RefillAmmoInClip = function (ped, clipInventoryUid, p2) {
  return _in(0xdf4a3404, 0xd022adde, ped, clipInventoryUid, p2, _r);
};

/**
 * _REFILL_AMMO_IN_CURRENT_PED_WEAPON
 *
 * @param {number} ped
 * @return {any}
 */
global.RefillAmmoInCurrentPedWeapon = function (ped) {
  return _in(0x0a2ab7b7, 0xabc055f4, ped, _r);
};

/**
 * _REMOVE_ALL_PED_AMMO
 *
 * @param {number} ped
 * @return {void}
 */
global.RemoveAllPedAmmo = function (ped) {
  return _in(0x1b83c0de, 0xebcbb214, ped);
};

/**
 * _REMOVE_AMMO_FROM_PED
 * removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
 * 
 * removeReason: see REMOVE_WEAPON_FROM_PED
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} amount
 * @param {number} removeReason
 * @return {void}
 */
global.RemoveAmmoFromPed = function (ped, weaponHash, amount, removeReason) {
  return _in(0xf4823c81, 0x3cb8277d, ped, _ch(weaponHash), amount, _ch(removeReason));
};

/**
 * _REMOVE_AMMO_FROM_PED_BY_TYPE
 * removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
 * 
 * removeReason: see REMOVE_WEAPON_FROM_PED
 *
 * @param {number} ped
 * @param {number} ammoHash
 * @param {number} amount
 * @param {number} removeReason
 * @return {void}
 */
global.RemoveAmmoFromPedByType = function (ped, ammoHash, amount, removeReason) {
  return _in(0xb6cfec32, 0xe3742779, ped, _ch(ammoHash), amount, _ch(removeReason));
};

/**
 * _REMOVE_WEAPON_ASSET
 *
 * @param {number} weaponHash
 * @return {void}
 */
global.RemoveWeaponAsset = function (weaponHash) {
  return _in(0xc3896d03, 0xe2852236, _ch(weaponHash));
};

/**
 * _REMOVE_WEAPON_COMPONENT_FROM_PED
 *
 * @param {number} ped
 * @param {number} componentHash
 * @param {number} weaponHash
 * @return {void}
 */
global.RemoveWeaponComponentFromPed = function (ped, componentHash, weaponHash) {
  return _in(0x19f70c4d, 0x80494ff8, ped, _ch(componentHash), _ch(weaponHash));
};

/**
 * _REMOVE_WEAPON_FROM_PED_BY_GUID
 *
 * @param {number} ped
 * @param {DataView} weaponGuid
 * @param {number} removeReason
 * @return {void}
 */
global.RemoveWeaponFromPedByGuid = function (ped, weaponGuid, removeReason) {
  return _in(0x51c3b715, 0x91811485, ped, weaponGuid, _ch(removeReason));
};

/**
 * _REQUEST_WEAPON_ASSET
 *
 * @param {number} weaponHash
 * @param {number} p1
 * @param {boolean} p2
 * @return {void}
 */
global.RequestWeaponAsset = function (weaponHash, p1, p2) {
  return _in(0x72d4cb5d, 0xb927009c, _ch(weaponHash), p1, p2);
};

/**
 * _SEND_WEAPON_TO_INVENTORY
 * Appears to just send specified weapon to your horse holster without having to be close
 * However, the weapon is not visible on the horse holster, but you can reach the weapon on the weapon wheel
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @return {void}
 */
global.SendWeaponToInventory = function (ped, weaponHash) {
  return _in(0xe9bd19f8, 0x121ade3e, ped, _ch(weaponHash));
};

/**
 * _SET_ACTIVE_GUN_SPINNING_EQUIP_KIT_EMOTE_TWIRL
 * emote hashes: KIT_EMOTE_TWIRL_GUN, KIT_EMOTE_TWIRL_GUN_LEFT_HOLSTER, KIT_EMOTE_TWIRL_GUN_DUAL, 0 (to unequip)
 *
 * @param {number} ped
 * @param {number} emote
 * @return {void}
 */
global.SetActiveGunSpinningEquipKitEmoteTwirl = function (ped, emote) {
  return _in(0xcbcfff80, 0x5f1b4596, ped, _ch(emote));
};

/**
 * _SET_ACTIVE_GUN_SPINNING_KIT_EMOTE_TWIRL
 * spinHash can be -1, 0 to disable
 *
 * @param {number} ped
 * @param {number} weaponEmoteTrickType
 * @param {number} spin
 * @return {void}
 */
global.SetActiveGunSpinningKitEmoteTwirl = function (ped, weaponEmoteTrickType, spin) {
  return _in(0x01f661bb, 0x9c71b465, ped, weaponEmoteTrickType, _ch(spin));
};

/**
 * _SET_ALLOW_DUAL_WIELD
 *
 * @param {number} ped
 * @param {boolean} allow
 * @return {void}
 */
global.SetAllowDualWield = function (ped, allow) {
  return _in(0x83b8d50e, 0xb9446bba, ped, allow);
};

/**
 * _SET_AMMO_IN_TURRET
 * turretHash: WEAPON_TURRET_MAXIUM, WEAPON_TURRET_GATLING, WEAPON_TURRET_CANNON, WEAPON_TURRET_REVOLVING_CANNON
 *
 * @param {number} vehicle
 * @param {number} turretHash
 * @param {number} ammo
 * @return {void}
 */
global.SetAmmoInTurret = function (vehicle, turretHash, ammo) {
  return _in(0xbdda0c29, 0x0c228159, vehicle, _ch(turretHash), ammo);
};

/**
 * _SET_AMMO_TYPE_FOR_PED_WEAPON
 *
 * @param {number} ped
 * @param {number} weaponHash
 * @param {number} ammoHash
 * @return {void}
 */
global.SetAmmoTypeForPedWeapon = function (ped, weaponHash, ammoHash) {
  return _in(0xcc9c4393, 0x523833e2, ped, _ch(weaponHash), _ch(ammoHash));
};

/**
 * _SET_AMMO_TYPE_FOR_PED_WEAPON_INVENTORY
 *
 * @param {number} ped
 * @param {DataView} weaponInventoryUid
 * @param {number} ammoHash
 * @return {void}
 */
global.SetAmmoTypeForPedWeaponInventory = function (ped, weaponInventoryUid, ammoHash) {
  return _in(0xebe46b50, 0x1bc3fbcf, ped, weaponInventoryUid, _ch(ammoHash));
};

/**
 * _SET_FORCE_AUTO_EQUIP
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetForceAutoEquip = function (ped, toggle) {
  return _in(0xbe711b14, 0xa159e84f, ped, toggle);
};

/**
 * _SET_FORCE_CURRENT_WEAPON_INTO_COCKED_STATE
 *
 * @param {number} ped
 * @param {number} attachPoint
 * @return {void}
 */
global.SetForceCurrentWeaponIntoCockedState = function (ped, attachPoint) {
  return _in(0x5230d3f6, 0xee56cfe6, ped, attachPoint);
};

/**
 * _SET_GUN_SPINNING_INVENTORY_SLOT_ID_ACTIVATE
 * _STOP_* - _TEST_*
 *
 * @param {number} ped
 * @param {number} emoteType
 * @return {void}
 */
global.SetGunSpinningInventorySlotIdActivate = function (ped, emoteType) {
  return _in(0x408cf580, 0xc5e96d49, ped, emoteType);
};

/**
 * _SET_PED_ALL_WEAPONS_VISIBILITY
 *
 * @param {number} ped
 * @param {boolean} visible
 * @return {void}
 */
global.SetPedAllWeaponsVisibility = function (ped, visible) {
  return _in(0x4f806a6c, 0xfed89468, ped, visible);
};

/**
 * _SET_PED_INFINITE_AMMO_CLIP
 *
 * @param {number} ped
 * @param {boolean} toggle
 * @return {void}
 */
global.SetPedInfiniteAmmoClip = function (ped, toggle) {
  return _in(0xfbaa1e06, 0xb6bca741, ped, toggle);
};

/**
 * _SET_PED_WEAPON_ATTACH_POINT_VISIBILITY
 * attachPoint: see SET_CURRENT_PED_WEAPON
 *
 * @param {number} ped
 * @param {number} attachPoint
 * @param {boolean} visible
 * @return {void}
 */
global.SetPedWeaponAttachPointVisibility = function (ped, attachPoint, visible) {
  return _in(0x67e21acc, 0x5c0c970c, ped, attachPoint, visible);
};

/**
 * _SET_VEHICLE_WEAPON_HEADING_LIMITS
 *
 * @param {number} vehicle
 * @param {number} p1
 * @param {number} minHeading
 * @param {number} maxHeading
 * @return {void}
 */
global.SetVehicleWeaponHeadingLimits = function (vehicle, p1, minHeading, maxHeading) {
  return _in(0x56cb3b43, 0x05a4f7ce, vehicle, p1, _fv(minHeading), _fv(maxHeading));
};

/**
 * _SET_VEHICLE_WEAPON_HEADING_LIMITS_2
 *
 * @param {number} vehicle
 * @param {number} p1
 * @param {number} minHeading
 * @param {number} maxHeading
 * @return {any}
 */
global.SetVehicleWeaponHeadingLimits_2 = function (vehicle, p1, minHeading, maxHeading) {
  return _in(0xbf5987e1, 0xcde63501, vehicle, p1, _fv(minHeading), _fv(maxHeading), _r);
};

/**
 * _SET_WEAPON_DAMAGE
 * Related to weapon visual damage, not actual damage.
 *
 * @param {number} weaponObject
 * @param {number} level
 * @param {boolean} p2
 * @return {void}
 */
global.SetWeaponDamage = function (weaponObject, level, p2) {
  return _in(0xe2206012, 0x1602493b, weaponObject, _fv(level), p2);
};

/**
 * _SET_WEAPON_DEGRADATION
 *
 * @param {number} weaponObject
 * @param {number} level
 * @return {void}
 */
global.SetWeaponDegradation = function (weaponObject, level) {
  return _in(0xa7a57e89, 0xe965d839, weaponObject, _fv(level));
};

/**
 * _SET_WEAPON_DIRT
 *
 * @param {number} weaponObject
 * @param {number} level
 * @param {boolean} p2
 * @return {void}
 */
global.SetWeaponDirt = function (weaponObject, level, p2) {
  return _in(0x812ce61d, 0xebcab948, weaponObject, _fv(level), p2);
};

/**
 * _SET_WEAPON_LEVEL_THRESHOLD
 * every other level will have the max value of (brokeLevel - threshold)
 *
 * @param {number} weaponObject
 * @param {number} threshold
 * @return {void}
 */
global.SetWeaponLevelThreshold = function (weaponObject, threshold) {
  return _in(0xd4071efc, 0x83794b2f, weaponObject, _fv(threshold));
};

/**
 * _SET_WEAPON_SCALE
 *
 * @param {number} weaponObject
 * @param {number} scale
 * @return {void}
 */
global.SetWeaponScale = function (weaponObject, scale) {
  return _in(0xc3544ad0, 0x522e69b4, weaponObject, _fv(scale));
};

/**
 * _SET_WEAPON_SOOT
 *
 * @param {number} weaponObject
 * @param {number} level
 * @param {boolean} p2
 * @return {void}
 */
global.SetWeaponSoot = function (weaponObject, level, p2) {
  return _in(0xa9ef4ad1, 0x0bdddb57, weaponObject, _fv(level), p2);
};

/**
 * _GET_MAP_ZONE_AT_COORDS
 * Returns name hash, see common:/data/levels/rdr3/mapzones.meta
 * 
 * type (-1 matches any type):
 * class CMapZone
 * {
 * public:
 *   enum class Type
 *   {
 *     STATE,
 *     TOWN,
 *     LAKE,
 *     RIVER,
 *     OIL_SPILL,
 *     SWAMP,
 *     OCEAN,
 *     CREEK,
 *     POND,
 *     GLACIER,
 *     DISTRICT,
 *     TEXT_PRINTED,
 *     TEXT_WRITTEN
 *   };
 * };
 * 
 * https://github.com/femga/rdr3_discoveries/tree/master/zones & https://alloc8or.re/rdr3/doc/enums/CMapZone__Type.txt
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} type
 * @return {number}
 */
global.GetMapZoneAtCoords = function (x, y, z, type) {
  return _in(0x43ad8fc0, 0x2b429d33, _fv(x), _fv(y), _fv(z), type, _r, _ri);
};

/**
 * _GET_WATER_MAP_ZONE_AT_COORDS
 * Returns the zone's name hash if its type matches one of the following:
 * - LAKE
 * - RIVER
 * - OIL_SPILL
 * - SWAMP
 * - OCEAN
 * - CREEK
 * - POND
 * - GLACIER
 *
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
global.GetWaterMapZoneAtCoords = function (x, y, z) {
  return _in(0x5ba7a68a, 0x346a5a91, _fv(x), _fv(y), _fv(z), _r, _ri);
};

/**
 * _REPORT_PLAYER_BAD_SPORT_BEHAVIOR
 * nullsub, doesn't do anything
 * however it is being used in tty scripts: [NET_BAD_SPORT_REPORT_PLAYER] Detected bad sport behavior from Player
 * badSportBehavior: BS_QUITTER = 0, BS_VEHICLE_DESTRUCTION = 1, BS_VOTED_OUT = 2
 *
 * @param {DataView} gamerHandle
 * @param {number} badSportBehaviorType
 * @return {void}
 */
global.ReportPlayerBadSportBehavior = function (gamerHandle, badSportBehaviorType) {
  return _in(0xc31c44c4, 0x3b48fde3, gamerHandle, badSportBehaviorType);
};